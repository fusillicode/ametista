<?xml version="1.0" encoding="UTF-8"?>
<AST xmlns:node="http://nikic.github.com/PHPParser/XML/node" xmlns:subNode="http://nikic.github.com/PHPParser/XML/subNode" xmlns:attribute="http://nikic.github.com/PHPParser/XML/attribute" xmlns:scalar="http://nikic.github.com/PHPParser/XML/scalar">
 <scalar:array>
  <node:Stmt_Class>
   <attribute:comments>
    <scalar:array>
     <comment isDocComment="false" line="2">/*
* 2007-2013 PrestaShop
*
* NOTICE OF LICENSE
*
* This source file is subject to the Open Software License (OSL 3.0)
* that is bundled with this package in the file LICENSE.txt.
* It is also available through the world-wide-web at this URL:
* http://opensource.org/licenses/osl-3.0.php
* If you did not receive a copy of the license and are unable to
* obtain it through the world-wide-web, please send an email
* to license@prestashop.com so we can send you a copy immediately.
*
* DISCLAIMER
*
* Do not edit or add to this file if you wish to upgrade PrestaShop to newer
* versions in the future. If you wish to customize PrestaShop for your
* needs please refer to http://www.prestashop.com for more information.
*
*  @author PrestaShop SA &lt;contact@prestashop.com&gt;
*  @copyright  2007-2013 PrestaShop SA
*  @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
*  International Registered Trademark &amp; Property of PrestaShop SA
*/</comment>
    </scalar:array>
   </attribute:comments>
   <attribute:startLine>
    <scalar:int>27</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>1070</scalar:int>
   </attribute:endLine>
   <subNode:type>
    <scalar:int>0</scalar:int>
   </subNode:type>
   <subNode:extends>
    <scalar:null/>
   </subNode:extends>
   <subNode:implements>
    <scalar:array/>
   </subNode:implements>
   <subNode:stmts>
    <scalar:array>
     <node:Stmt_ClassMethod>
      <attribute:startLine>
       <scalar:int>29</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>32</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>29</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>29</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>ip</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>31</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>31</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>31</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>31</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>31</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>31</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>31</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>31</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>31</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>31</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>#^-?[0-9]+$#</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>31</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>31</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Cast_String>
                <attribute:startLine>
                 <scalar:int>31</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>31</scalar:int>
                </attribute:endLine>
                <subNode:expr>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>31</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>31</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>ip</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:expr>
               </node:Expr_Cast_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isIp2Long</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:startLine>
       <scalar:int>34</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>37</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>36</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>36</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>36</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>36</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>36</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>36</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>true</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isAnything</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="39">/**
	 * Check for e-mail validity
	 *
	 * @param string $email e-mail address to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>45</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>48</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>45</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>45</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>email</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>47</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>47</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanAnd>
           <attribute:startLine>
            <scalar:int>47</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>47</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_BooleanNot>
             <attribute:startLine>
              <scalar:int>47</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>47</scalar:int>
             </attribute:endLine>
             <subNode:expr>
              <node:Expr_Empty>
               <attribute:startLine>
                <scalar:int>47</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>47</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>47</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>47</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>email</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:expr>
              </node:Expr_Empty>
             </subNode:expr>
            </node:Expr_BooleanNot>
           </subNode:left>
           <subNode:right>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>47</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>47</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>47</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>47</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>preg_match</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>47</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>47</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_StaticCall>
                  <attribute:startLine>
                   <scalar:int>47</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>47</scalar:int>
                  </attribute:endLine>
                  <subNode:class>
                   <node:Name_FullyQualified>
                    <attribute:startLine>
                     <scalar:int>47</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>47</scalar:int>
                    </attribute:endLine>
                    <subNode:parts>
                     <scalar:array>
                      <scalar:string>Tools</scalar:string>
                     </scalar:array>
                    </subNode:parts>
                   </node:Name_FullyQualified>
                  </subNode:class>
                  <subNode:name>
                   <scalar:string>cleanNonUnicodeSupport</scalar:string>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>47</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>47</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>47</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>47</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>/^[a-z\p{L}0-9!#$%&amp;'*+\/=?^`{}|~_-]+[.a-z\p{L}0-9!#$%&amp;'*+\/=?^`{}|~_-]*@[a-z\p{L}0-9]+[._a-z\p{L}0-9-]*\.[a-z0-9]+$/ui</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_StaticCall>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>47</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>47</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>47</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>47</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>email</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:right>
          </node:Expr_BooleanAnd>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isEmail</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="50">/**
	 * Check for module URL validity
	 *
	 * @param string $url module URL to validate
	 * @param array $errors Reference array for catching errors
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>57</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>74</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>57</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>57</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>url</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>57</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>57</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>errors</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:true/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>59</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>69</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>60</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>60</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_ArrayDimFetch>
              <attribute:startLine>
               <scalar:int>60</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>60</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>60</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>60</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>errors</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:dim>
               <scalar:null/>
              </subNode:dim>
             </node:Expr_ArrayDimFetch>
            </subNode:var>
            <subNode:expr>
             <node:Expr_StaticCall>
              <attribute:startLine>
               <scalar:int>60</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>60</scalar:int>
              </attribute:endLine>
              <subNode:class>
               <node:Name_FullyQualified>
                <attribute:startLine>
                 <scalar:int>60</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>60</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>Tools</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name_FullyQualified>
              </subNode:class>
              <subNode:name>
               <scalar:string>displayError</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>60</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>60</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>60</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>60</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>Please specify module URL</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_StaticCall>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array>
           <node:Stmt_ElseIf>
            <attribute:startLine>
             <scalar:int>61</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>62</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Expr_BooleanAnd>
              <attribute:startLine>
               <scalar:int>61</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>61</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_BooleanAnd>
                <attribute:startLine>
                 <scalar:int>61</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>61</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Expr_BooleanAnd>
                  <attribute:startLine>
                   <scalar:int>61</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>61</scalar:int>
                  </attribute:endLine>
                  <subNode:left>
                   <node:Expr_NotEqual>
                    <attribute:startLine>
                     <scalar:int>61</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>61</scalar:int>
                    </attribute:endLine>
                    <subNode:left>
                     <node:Expr_FuncCall>
                      <attribute:startLine>
                       <scalar:int>61</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>61</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <node:Name>
                        <attribute:startLine>
                         <scalar:int>61</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>61</scalar:int>
                        </attribute:endLine>
                        <subNode:parts>
                         <scalar:array>
                          <scalar:string>substr</scalar:string>
                         </scalar:array>
                        </subNode:parts>
                       </node:Name>
                      </subNode:name>
                      <subNode:args>
                       <scalar:array>
                        <node:Arg>
                         <attribute:startLine>
                          <scalar:int>61</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>61</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>61</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>61</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>url</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:value>
                         <subNode:byRef>
                          <scalar:false/>
                         </subNode:byRef>
                        </node:Arg>
                        <node:Arg>
                         <attribute:startLine>
                          <scalar:int>61</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>61</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <node:Expr_UnaryMinus>
                           <attribute:startLine>
                            <scalar:int>61</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>61</scalar:int>
                           </attribute:endLine>
                           <subNode:expr>
                            <node:Scalar_LNumber>
                             <attribute:startLine>
                              <scalar:int>61</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>61</scalar:int>
                             </attribute:endLine>
                             <subNode:value>
                              <scalar:int>4</scalar:int>
                             </subNode:value>
                            </node:Scalar_LNumber>
                           </subNode:expr>
                          </node:Expr_UnaryMinus>
                         </subNode:value>
                         <subNode:byRef>
                          <scalar:false/>
                         </subNode:byRef>
                        </node:Arg>
                       </scalar:array>
                      </subNode:args>
                     </node:Expr_FuncCall>
                    </subNode:left>
                    <subNode:right>
                     <node:Scalar_String>
                      <attribute:startLine>
                       <scalar:int>61</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>61</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <scalar:string>.tar</scalar:string>
                      </subNode:value>
                     </node:Scalar_String>
                    </subNode:right>
                   </node:Expr_NotEqual>
                  </subNode:left>
                  <subNode:right>
                   <node:Expr_NotEqual>
                    <attribute:startLine>
                     <scalar:int>61</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>61</scalar:int>
                    </attribute:endLine>
                    <subNode:left>
                     <node:Expr_FuncCall>
                      <attribute:startLine>
                       <scalar:int>61</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>61</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <node:Name>
                        <attribute:startLine>
                         <scalar:int>61</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>61</scalar:int>
                        </attribute:endLine>
                        <subNode:parts>
                         <scalar:array>
                          <scalar:string>substr</scalar:string>
                         </scalar:array>
                        </subNode:parts>
                       </node:Name>
                      </subNode:name>
                      <subNode:args>
                       <scalar:array>
                        <node:Arg>
                         <attribute:startLine>
                          <scalar:int>61</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>61</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>61</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>61</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>url</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:value>
                         <subNode:byRef>
                          <scalar:false/>
                         </subNode:byRef>
                        </node:Arg>
                        <node:Arg>
                         <attribute:startLine>
                          <scalar:int>61</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>61</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <node:Expr_UnaryMinus>
                           <attribute:startLine>
                            <scalar:int>61</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>61</scalar:int>
                           </attribute:endLine>
                           <subNode:expr>
                            <node:Scalar_LNumber>
                             <attribute:startLine>
                              <scalar:int>61</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>61</scalar:int>
                             </attribute:endLine>
                             <subNode:value>
                              <scalar:int>4</scalar:int>
                             </subNode:value>
                            </node:Scalar_LNumber>
                           </subNode:expr>
                          </node:Expr_UnaryMinus>
                         </subNode:value>
                         <subNode:byRef>
                          <scalar:false/>
                         </subNode:byRef>
                        </node:Arg>
                       </scalar:array>
                      </subNode:args>
                     </node:Expr_FuncCall>
                    </subNode:left>
                    <subNode:right>
                     <node:Scalar_String>
                      <attribute:startLine>
                       <scalar:int>61</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>61</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <scalar:string>.zip</scalar:string>
                      </subNode:value>
                     </node:Scalar_String>
                    </subNode:right>
                   </node:Expr_NotEqual>
                  </subNode:right>
                 </node:Expr_BooleanAnd>
                </subNode:left>
                <subNode:right>
                 <node:Expr_NotEqual>
                  <attribute:startLine>
                   <scalar:int>61</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>61</scalar:int>
                  </attribute:endLine>
                  <subNode:left>
                   <node:Expr_FuncCall>
                    <attribute:startLine>
                     <scalar:int>61</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>61</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <node:Name>
                      <attribute:startLine>
                       <scalar:int>61</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>61</scalar:int>
                      </attribute:endLine>
                      <subNode:parts>
                       <scalar:array>
                        <scalar:string>substr</scalar:string>
                       </scalar:array>
                      </subNode:parts>
                     </node:Name>
                    </subNode:name>
                    <subNode:args>
                     <scalar:array>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>61</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>61</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>61</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>61</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>url</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>61</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>61</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_UnaryMinus>
                         <attribute:startLine>
                          <scalar:int>61</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>61</scalar:int>
                         </attribute:endLine>
                         <subNode:expr>
                          <node:Scalar_LNumber>
                           <attribute:startLine>
                            <scalar:int>61</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>61</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <scalar:int>4</scalar:int>
                           </subNode:value>
                          </node:Scalar_LNumber>
                         </subNode:expr>
                        </node:Expr_UnaryMinus>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                     </scalar:array>
                    </subNode:args>
                   </node:Expr_FuncCall>
                  </subNode:left>
                  <subNode:right>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>61</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>61</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>.tgz</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:right>
                 </node:Expr_NotEqual>
                </subNode:right>
               </node:Expr_BooleanAnd>
              </subNode:left>
              <subNode:right>
               <node:Expr_NotEqual>
                <attribute:startLine>
                 <scalar:int>61</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>61</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Expr_FuncCall>
                  <attribute:startLine>
                   <scalar:int>61</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>61</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <node:Name>
                    <attribute:startLine>
                     <scalar:int>61</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>61</scalar:int>
                    </attribute:endLine>
                    <subNode:parts>
                     <scalar:array>
                      <scalar:string>substr</scalar:string>
                     </scalar:array>
                    </subNode:parts>
                   </node:Name>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>61</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>61</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>61</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>61</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>url</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>61</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>61</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Expr_UnaryMinus>
                       <attribute:startLine>
                        <scalar:int>61</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>61</scalar:int>
                       </attribute:endLine>
                       <subNode:expr>
                        <node:Scalar_LNumber>
                         <attribute:startLine>
                          <scalar:int>61</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>61</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:int>7</scalar:int>
                         </subNode:value>
                        </node:Scalar_LNumber>
                       </subNode:expr>
                      </node:Expr_UnaryMinus>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_FuncCall>
                </subNode:left>
                <subNode:right>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>61</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>61</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>.tar.gz</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:right>
               </node:Expr_NotEqual>
              </subNode:right>
             </node:Expr_BooleanAnd>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>62</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>62</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_ArrayDimFetch>
                 <attribute:startLine>
                  <scalar:int>62</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>62</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>62</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>62</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>errors</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:dim>
                  <scalar:null/>
                 </subNode:dim>
                </node:Expr_ArrayDimFetch>
               </subNode:var>
               <subNode:expr>
                <node:Expr_StaticCall>
                 <attribute:startLine>
                  <scalar:int>62</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>62</scalar:int>
                 </attribute:endLine>
                 <subNode:class>
                  <node:Name_FullyQualified>
                   <attribute:startLine>
                    <scalar:int>62</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>62</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>Tools</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name_FullyQualified>
                 </subNode:class>
                 <subNode:name>
                  <scalar:string>displayError</scalar:string>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>62</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>62</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Scalar_String>
                      <attribute:startLine>
                       <scalar:int>62</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>62</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <scalar:string>Unknown archive type</scalar:string>
                      </subNode:value>
                     </node:Scalar_String>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_StaticCall>
               </subNode:expr>
              </node:Expr_Assign>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_ElseIf>
          </scalar:array>
         </subNode:elseifs>
         <subNode:else>
          <node:Stmt_Else>
           <attribute:startLine>
            <scalar:int>63</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>69</scalar:int>
           </attribute:endLine>
           <subNode:stmts>
            <scalar:array>
             <node:Stmt_If>
              <attribute:startLine>
               <scalar:int>65</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>66</scalar:int>
              </attribute:endLine>
              <subNode:stmts>
               <scalar:array>
                <node:Expr_Assign>
                 <attribute:startLine>
                  <scalar:int>66</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>66</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>66</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>66</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>url</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:expr>
                  <node:Expr_Concat>
                   <attribute:startLine>
                    <scalar:int>66</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>66</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>66</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>66</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>http://</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:left>
                   <subNode:right>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>66</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>66</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>url</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:right>
                  </node:Expr_Concat>
                 </subNode:expr>
                </node:Expr_Assign>
               </scalar:array>
              </subNode:stmts>
              <subNode:elseifs>
               <scalar:array/>
              </subNode:elseifs>
              <subNode:else>
               <scalar:null/>
              </subNode:else>
              <subNode:cond>
               <node:Expr_Identical>
                <attribute:startLine>
                 <scalar:int>65</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>65</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Expr_FuncCall>
                  <attribute:startLine>
                   <scalar:int>65</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>65</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <node:Name>
                    <attribute:startLine>
                     <scalar:int>65</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>65</scalar:int>
                    </attribute:endLine>
                    <subNode:parts>
                     <scalar:array>
                      <scalar:string>strpos</scalar:string>
                     </scalar:array>
                    </subNode:parts>
                   </node:Name>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>65</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>65</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>65</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>65</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>url</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>65</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>65</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>65</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>65</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>http</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_FuncCall>
                </subNode:left>
                <subNode:right>
                 <node:Expr_ConstFetch>
                  <attribute:startLine>
                   <scalar:int>65</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>65</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <node:Name>
                    <attribute:startLine>
                     <scalar:int>65</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>65</scalar:int>
                    </attribute:endLine>
                    <subNode:parts>
                     <scalar:array>
                      <scalar:string>false</scalar:string>
                     </scalar:array>
                    </subNode:parts>
                   </node:Name>
                  </subNode:name>
                 </node:Expr_ConstFetch>
                </subNode:right>
               </node:Expr_Identical>
              </subNode:cond>
             </node:Stmt_If>
             <node:Stmt_If>
              <attribute:startLine>
               <scalar:int>67</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>68</scalar:int>
              </attribute:endLine>
              <subNode:stmts>
               <scalar:array>
                <node:Expr_Assign>
                 <attribute:startLine>
                  <scalar:int>68</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>68</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_ArrayDimFetch>
                   <attribute:startLine>
                    <scalar:int>68</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>68</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>68</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>68</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>errors</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:dim>
                    <scalar:null/>
                   </subNode:dim>
                  </node:Expr_ArrayDimFetch>
                 </subNode:var>
                 <subNode:expr>
                  <node:Expr_StaticCall>
                   <attribute:startLine>
                    <scalar:int>68</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>68</scalar:int>
                   </attribute:endLine>
                   <subNode:class>
                    <node:Name_FullyQualified>
                     <attribute:startLine>
                      <scalar:int>68</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>68</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>Tools</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name_FullyQualified>
                   </subNode:class>
                   <subNode:name>
                    <scalar:string>displayError</scalar:string>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>68</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>68</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Scalar_String>
                        <attribute:startLine>
                         <scalar:int>68</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>68</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <scalar:string>Invalid URL</scalar:string>
                        </subNode:value>
                       </node:Scalar_String>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                    </scalar:array>
                   </subNode:args>
                  </node:Expr_StaticCall>
                 </subNode:expr>
                </node:Expr_Assign>
               </scalar:array>
              </subNode:stmts>
              <subNode:elseifs>
               <scalar:array/>
              </subNode:elseifs>
              <subNode:else>
               <scalar:null/>
              </subNode:else>
              <subNode:cond>
               <node:Expr_BooleanNot>
                <attribute:startLine>
                 <scalar:int>67</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>67</scalar:int>
                </attribute:endLine>
                <subNode:expr>
                 <node:Expr_FuncCall>
                  <attribute:startLine>
                   <scalar:int>67</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>67</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <node:Name>
                    <attribute:startLine>
                     <scalar:int>67</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>67</scalar:int>
                    </attribute:endLine>
                    <subNode:parts>
                     <scalar:array>
                      <scalar:string>is_array</scalar:string>
                     </scalar:array>
                    </subNode:parts>
                   </node:Name>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>67</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>67</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Expr_ErrorSuppress>
                       <attribute:startLine>
                        <scalar:int>67</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>67</scalar:int>
                       </attribute:endLine>
                       <subNode:expr>
                        <node:Expr_FuncCall>
                         <attribute:startLine>
                          <scalar:int>67</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>67</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <node:Name>
                           <attribute:startLine>
                            <scalar:int>67</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>67</scalar:int>
                           </attribute:endLine>
                           <subNode:parts>
                            <scalar:array>
                             <scalar:string>get_headers</scalar:string>
                            </scalar:array>
                           </subNode:parts>
                          </node:Name>
                         </subNode:name>
                         <subNode:args>
                          <scalar:array>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>67</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>67</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_Variable>
                              <attribute:startLine>
                               <scalar:int>67</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>67</scalar:int>
                              </attribute:endLine>
                              <subNode:name>
                               <scalar:string>url</scalar:string>
                              </subNode:name>
                             </node:Expr_Variable>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                          </scalar:array>
                         </subNode:args>
                        </node:Expr_FuncCall>
                       </subNode:expr>
                      </node:Expr_ErrorSuppress>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_FuncCall>
                </subNode:expr>
               </node:Expr_BooleanNot>
              </subNode:cond>
             </node:Stmt_If>
            </scalar:array>
           </subNode:stmts>
          </node:Stmt_Else>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanOr>
           <attribute:startLine>
            <scalar:int>59</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>59</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_BooleanNot>
             <attribute:startLine>
              <scalar:int>59</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>59</scalar:int>
             </attribute:endLine>
             <subNode:expr>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>59</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>59</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>url</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:expr>
            </node:Expr_BooleanNot>
           </subNode:left>
           <subNode:right>
            <node:Expr_Equal>
             <attribute:startLine>
              <scalar:int>59</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>59</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>59</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>59</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>url</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:left>
             <subNode:right>
              <node:Scalar_String>
               <attribute:startLine>
                <scalar:int>59</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>59</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <scalar:string>http://</scalar:string>
               </subNode:value>
              </node:Scalar_String>
             </subNode:right>
            </node:Expr_Equal>
           </subNode:right>
          </node:Expr_BooleanOr>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>70</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>71</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>71</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>71</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_ConstFetch>
              <attribute:startLine>
               <scalar:int>71</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>71</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>71</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>71</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>true</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
             </node:Expr_ConstFetch>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>70</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>70</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>70</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>70</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>70</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>70</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>count</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>70</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>70</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>70</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>70</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>errors</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>72</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>72</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>72</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>72</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>72</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>72</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>false</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isModuleUrl</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="76">/**
	 * Check for MD5 string validity
	 *
	 * @param string $md5 MD5 string to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>82</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>85</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>82</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>82</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>md5</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>84</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>84</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>84</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>84</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>84</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>84</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>84</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>84</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>84</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>84</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[a-f0-9A-F]{32}$/</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>84</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>84</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>84</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>84</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>md5</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isMd5</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="87">/**
	 * Check for SHA1 string validity
	 *
	 * @param string $sha1 SHA1 string to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>93</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>96</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>93</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>93</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>sha1</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>95</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>95</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>95</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>95</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>95</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>95</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>95</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>95</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>95</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>95</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[a-fA-F0-9]{40}$/</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>95</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>95</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>95</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>95</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>sha1</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isSha1</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="98">/**
	 * Check for a float number validity
	 *
	 * @param float $float Float number to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>104</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>107</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>104</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>104</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>float</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>106</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>106</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Equal>
           <attribute:startLine>
            <scalar:int>106</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>106</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>106</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>106</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>106</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>106</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>strval</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>106</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>106</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Cast_Double>
                  <attribute:startLine>
                   <scalar:int>106</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>106</scalar:int>
                  </attribute:endLine>
                  <subNode:expr>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>106</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>106</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>float</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:expr>
                 </node:Expr_Cast_Double>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:left>
           <subNode:right>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>106</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>106</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>106</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>106</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>strval</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>106</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>106</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>106</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>106</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>float</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:right>
          </node:Expr_Equal>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isFloat</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:startLine>
       <scalar:int>109</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>112</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>109</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>109</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>float</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>111</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>111</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanAnd>
           <attribute:startLine>
            <scalar:int>111</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>111</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Equal>
             <attribute:startLine>
              <scalar:int>111</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>111</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_FuncCall>
               <attribute:startLine>
                <scalar:int>111</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>111</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>111</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>111</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>strval</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>111</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>111</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Cast_Double>
                    <attribute:startLine>
                     <scalar:int>111</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>111</scalar:int>
                    </attribute:endLine>
                    <subNode:expr>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>111</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>111</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>float</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:expr>
                   </node:Expr_Cast_Double>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_FuncCall>
             </subNode:left>
             <subNode:right>
              <node:Expr_FuncCall>
               <attribute:startLine>
                <scalar:int>111</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>111</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>111</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>111</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>strval</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>111</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>111</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>111</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>111</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>float</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_FuncCall>
             </subNode:right>
            </node:Expr_Equal>
           </subNode:left>
           <subNode:right>
            <node:Expr_GreaterOrEqual>
             <attribute:startLine>
              <scalar:int>111</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>111</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>111</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>111</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>float</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:left>
             <subNode:right>
              <node:Scalar_LNumber>
               <attribute:startLine>
                <scalar:int>111</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>111</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <scalar:int>0</scalar:int>
               </subNode:value>
              </node:Scalar_LNumber>
             </subNode:right>
            </node:Expr_GreaterOrEqual>
           </subNode:right>
          </node:Expr_BooleanAnd>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isUnsignedFloat</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="114">/**
	 * Check for a float number validity
	 *
	 * @param float $float Float number to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>120</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>123</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>120</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>120</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>float</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>122</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>122</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanOr>
           <attribute:startLine>
            <scalar:int>122</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>122</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Empty>
             <attribute:startLine>
              <scalar:int>122</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>122</scalar:int>
             </attribute:endLine>
             <subNode:expr>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>122</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>122</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>float</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:expr>
            </node:Expr_Empty>
           </subNode:left>
           <subNode:right>
            <node:Expr_StaticCall>
             <attribute:startLine>
              <scalar:int>122</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>122</scalar:int>
             </attribute:endLine>
             <subNode:class>
              <node:Name_FullyQualified>
               <attribute:startLine>
                <scalar:int>122</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>122</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>Validate</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name_FullyQualified>
             </subNode:class>
             <subNode:name>
              <scalar:string>isFloat</scalar:string>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>122</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>122</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>122</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>122</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>float</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_StaticCall>
           </subNode:right>
          </node:Expr_BooleanOr>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isOptFloat</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="125">/**
	 * Check for a carrier name validity
	 *
	 * @param string $name Carrier name to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>131</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>134</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>131</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>131</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>name</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>133</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>133</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanOr>
           <attribute:startLine>
            <scalar:int>133</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>133</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Empty>
             <attribute:startLine>
              <scalar:int>133</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>133</scalar:int>
             </attribute:endLine>
             <subNode:expr>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>133</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>133</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>name</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:expr>
            </node:Expr_Empty>
           </subNode:left>
           <subNode:right>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>133</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>133</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>133</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>133</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>preg_match</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>133</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>133</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_StaticCall>
                  <attribute:startLine>
                   <scalar:int>133</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>133</scalar:int>
                  </attribute:endLine>
                  <subNode:class>
                   <node:Name_FullyQualified>
                    <attribute:startLine>
                     <scalar:int>133</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>133</scalar:int>
                    </attribute:endLine>
                    <subNode:parts>
                     <scalar:array>
                      <scalar:string>Tools</scalar:string>
                     </scalar:array>
                    </subNode:parts>
                   </node:Name_FullyQualified>
                  </subNode:class>
                  <subNode:name>
                   <scalar:string>cleanNonUnicodeSupport</scalar:string>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>133</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>133</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>133</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>133</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>/^[^&lt;&gt;;=#{}]*$/u</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_StaticCall>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>133</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>133</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>133</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>133</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>name</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:right>
          </node:Expr_BooleanOr>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isCarrierName</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="136">/**
	 * Check for an image size validity
	 *
	 * @param string $size Image size to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>142</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>145</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>142</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>142</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>size</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>144</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>144</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>144</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>144</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>144</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>144</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>144</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>144</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>144</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>144</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[0-9]{1,4}$/</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>144</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>144</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>144</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>144</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>size</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isImageSize</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="147">/**
	 * Check for name validity
	 *
	 * @param string $name Name to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>153</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>156</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>153</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>153</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>name</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>155</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>155</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>155</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>155</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>155</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>155</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>155</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>155</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_StaticCall>
                <attribute:startLine>
                 <scalar:int>155</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>155</scalar:int>
                </attribute:endLine>
                <subNode:class>
                 <node:Name_FullyQualified>
                  <attribute:startLine>
                   <scalar:int>155</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>155</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>Tools</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name_FullyQualified>
                </subNode:class>
                <subNode:name>
                 <scalar:string>cleanNonUnicodeSupport</scalar:string>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>155</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>155</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>155</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>155</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>/^[^0-9!&lt;&gt;,;?=+()@#&quot;°{}_$%:]*$/u</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_StaticCall>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>155</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>155</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>155</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>155</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>155</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>155</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>stripslashes</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>155</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>155</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>155</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>155</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>name</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isName</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="158">/**
	 * Check for hook name validity
	 *
	 * @param string $hook Hook name to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>164</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>167</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>164</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>164</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>hook</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>166</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>166</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>166</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>166</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>166</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>166</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>166</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>166</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>166</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>166</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[a-zA-Z0-9_-]+$/</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>166</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>166</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>166</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>166</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>hook</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isHookName</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="169">/**
	 * Check for sender name validity
	 *
	 * @param string $mail_name Sender name to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>175</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>178</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>175</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>175</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>mail_name</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>177</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>177</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanAnd>
           <attribute:startLine>
            <scalar:int>177</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>177</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>177</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>177</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>177</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>177</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>is_string</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>177</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>177</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>177</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>177</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>mail_name</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:left>
           <subNode:right>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>177</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>177</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>177</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>177</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>preg_match</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>177</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>177</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_StaticCall>
                  <attribute:startLine>
                   <scalar:int>177</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>177</scalar:int>
                  </attribute:endLine>
                  <subNode:class>
                   <node:Name_FullyQualified>
                    <attribute:startLine>
                     <scalar:int>177</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>177</scalar:int>
                    </attribute:endLine>
                    <subNode:parts>
                     <scalar:array>
                      <scalar:string>Tools</scalar:string>
                     </scalar:array>
                    </subNode:parts>
                   </node:Name_FullyQualified>
                  </subNode:class>
                  <subNode:name>
                   <scalar:string>cleanNonUnicodeSupport</scalar:string>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>177</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>177</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>177</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>177</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>/^[^&lt;&gt;;=#{}]*$/u</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_StaticCall>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>177</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>177</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>177</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>177</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>mail_name</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:right>
          </node:Expr_BooleanAnd>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isMailName</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="180">/**
	 * Check for e-mail subject validity
	 *
	 * @param string $mail_subject e-mail subject to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>186</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>189</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>186</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>186</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>mail_subject</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>188</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>188</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>188</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>188</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>188</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>188</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>188</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>188</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_StaticCall>
                <attribute:startLine>
                 <scalar:int>188</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>188</scalar:int>
                </attribute:endLine>
                <subNode:class>
                 <node:Name_FullyQualified>
                  <attribute:startLine>
                   <scalar:int>188</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>188</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>Tools</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name_FullyQualified>
                </subNode:class>
                <subNode:name>
                 <scalar:string>cleanNonUnicodeSupport</scalar:string>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>188</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>188</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>188</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>188</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>/^[^&lt;&gt;]*$/u</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_StaticCall>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>188</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>188</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>188</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>188</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>mail_subject</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isMailSubject</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="191">/**
	 * Check for module name validity
	 *
	 * @param string $module_name Module name to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>197</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>200</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>197</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>197</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>module_name</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>199</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>199</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanAnd>
           <attribute:startLine>
            <scalar:int>199</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>199</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>199</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>199</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>199</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>199</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>is_string</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>199</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>199</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>199</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>199</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>module_name</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:left>
           <subNode:right>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>199</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>199</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>199</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>199</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>preg_match</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>199</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>199</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>199</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>199</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>/^[a-zA-Z0-9_-]+$/</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>199</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>199</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>199</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>199</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>module_name</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:right>
          </node:Expr_BooleanAnd>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isModuleName</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="202">/**
	 * Check for template name validity
	 *
	 * @param string $tpl_name Template name to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>208</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>211</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>208</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>208</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>tpl_name</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>210</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>210</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>210</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>210</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>210</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>210</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>210</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>210</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>210</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>210</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[a-zA-Z0-9_-]+$/</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>210</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>210</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>210</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>210</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>tpl_name</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isTplName</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="213">/**
	 * Check for image type name validity
	 *
	 * @param string $type Image type name to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>219</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>222</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>219</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>219</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>type</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>221</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>221</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>221</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>221</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>221</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>221</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>221</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>221</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>221</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>221</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[a-zA-Z0-9_ -]+$/</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>221</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>221</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>221</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>221</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>type</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isImageTypeName</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="224">/**
	 * Check for price validity
	 *
	 * @param string $price Price to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>230</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>233</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>230</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>230</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>price</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>232</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>232</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>232</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>232</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>232</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>232</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>232</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>232</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>232</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>232</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[0-9]{1,10}(\.[0-9]{1,9})?$/</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>232</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>232</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>232</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>232</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>232</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>232</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>sprintf</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>232</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>232</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>232</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>232</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>%f</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>232</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>232</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>232</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>232</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>price</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isPrice</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="235">/**
	* Check for price validity (including negative price)
	*
	* @param string $price Price to validate
	* @return boolean Validity is ok or not
	*/</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>241</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>244</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>241</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>241</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>price</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>243</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>243</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>243</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>243</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>243</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>243</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>243</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>243</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>243</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>243</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[-]?[0-9]{1,10}(\.[0-9]{1,9})?$/</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>243</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>243</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>243</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>243</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>243</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>243</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>sprintf</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>243</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>243</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>243</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>243</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>%f</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>243</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>243</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>243</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>243</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>price</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isNegativePrice</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="246">/**
	 * Check for language code (ISO) validity
	 *
	 * @param string $iso_code Language code (ISO) to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>252</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>255</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>252</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>252</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>iso_code</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>254</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>254</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>254</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>254</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>254</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>254</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>254</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>254</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>254</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>254</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[a-zA-Z]{2,3}$/</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>254</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>254</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>254</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>254</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>iso_code</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isLanguageIsoCode</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:startLine>
       <scalar:int>257</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>260</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>257</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>257</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>s</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>259</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>259</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>259</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>259</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>259</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>259</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>259</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>259</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>259</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>259</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[a-zA-Z]{2}(-[a-zA-Z]{2})?$/</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>259</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>259</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>259</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>259</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>s</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isLanguageCode</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:startLine>
       <scalar:int>262</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>265</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>262</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>262</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>iso_code</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>264</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>264</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>264</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>264</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>264</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>264</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>264</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>264</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>264</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>264</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[a-zA-Z0-9]{1,4}((-)[a-zA-Z0-9]{1,4})?$/</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>264</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>264</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>264</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>264</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>iso_code</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isStateIsoCode</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:startLine>
       <scalar:int>267</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>270</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>267</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>267</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>iso_code</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>269</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>269</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>269</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>269</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>269</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>269</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>269</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>269</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>269</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>269</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[0-9]{2,3}$/</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>269</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>269</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>269</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>269</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>iso_code</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isNumericIsoCode</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="272">/**
	 * Check for voucher name validity
	 *
	 * @param string $voucher voucher to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>278</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>281</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>278</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>278</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>voucher</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>280</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>280</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>280</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>280</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>280</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>280</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>280</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>280</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>280</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>280</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[^!&lt;&gt;,;?=+()@&quot;°{}_$%:]{3,32}$/u</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>280</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>280</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>280</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>280</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>voucher</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isDiscountName</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="283">/**
	 * Check for product or category name validity
	 *
	 * @param string $name Product or category name to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>289</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>292</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>289</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>289</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>name</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>291</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>291</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>291</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>291</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>291</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>291</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>291</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>291</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>291</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>291</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[^&lt;&gt;;=#{}]*$/u</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>291</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>291</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>291</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>291</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>name</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isCatalogName</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="294">/**
	 * Check for a message validity
	 *
	 * @param string $message Message to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>300</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>303</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>300</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>300</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>message</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>302</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>302</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>302</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>302</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>302</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>302</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>302</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>302</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>preg_match</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>302</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>302</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>302</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>302</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>/[&lt;&gt;{}]/i</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>302</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>302</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>302</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>302</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>message</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isMessage</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="305">/**
	 * Check for a country name validity
	 *
	 * @param string $name Country name to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>311</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>314</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>311</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>311</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>name</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>313</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>313</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>313</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>313</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>313</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>313</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>313</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>313</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>313</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>313</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[a-zA-Z -]+$/</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>313</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>313</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>313</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>313</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>name</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isCountryName</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="316">/**
	 * Check for a link (url-rewriting only) validity
	 *
	 * @param string $link Link to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>322</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>327</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>322</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>322</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>link</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>324</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>325</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>325</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>325</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>325</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>325</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>325</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>325</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>preg_match</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>325</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>325</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>325</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>325</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>/^[_a-zA-Z0-9\-\pL]+$/u</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>325</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>325</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>325</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>325</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>link</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_StaticCall>
           <attribute:startLine>
            <scalar:int>324</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>324</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>324</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>324</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Configuration</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
           <subNode:name>
            <scalar:string>get</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>324</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>324</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>324</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>324</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>PS_ALLOW_ACCENTED_CHARS_URL</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_StaticCall>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>326</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>326</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>326</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>326</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>326</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>326</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>326</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>326</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>326</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>326</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[_a-zA-Z0-9\-]+$/</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>326</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>326</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>326</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>326</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>link</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isLinkRewrite</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="329">/**
	 * Check for a route pattern validity
	 *
	 * @param string $pattern to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>335</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>340</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>335</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>335</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>pattern</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>337</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>338</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>338</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>338</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>338</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>338</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>338</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>338</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>preg_match</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>338</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>338</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>338</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>338</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>/^[_a-zA-Z0-9\(\)\.{}:\/\-\pL]+$/u</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>338</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>338</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>338</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>338</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>pattern</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_StaticCall>
           <attribute:startLine>
            <scalar:int>337</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>337</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>337</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>337</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Configuration</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
           <subNode:name>
            <scalar:string>get</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>337</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>337</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>337</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>337</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>PS_ALLOW_ACCENTED_CHARS_URL</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_StaticCall>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>339</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>339</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>339</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>339</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>339</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>339</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>339</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>339</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>339</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>339</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[_a-zA-Z0-9\(\)\.{}:\/\-]+$/</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>339</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>339</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>339</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>339</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>pattern</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isRoutePattern</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="342">/**
	 * Check for a postal address validity
	 *
	 * @param string $address Address to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>348</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>351</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>348</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>348</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>address</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>350</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>350</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanOr>
           <attribute:startLine>
            <scalar:int>350</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>350</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Empty>
             <attribute:startLine>
              <scalar:int>350</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>350</scalar:int>
             </attribute:endLine>
             <subNode:expr>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>350</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>350</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>address</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:expr>
            </node:Expr_Empty>
           </subNode:left>
           <subNode:right>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>350</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>350</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>350</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>350</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>preg_match</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>350</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>350</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>350</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>350</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>/^[^!&lt;&gt;?=+@{}_$%]*$/u</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>350</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>350</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>350</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>350</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>address</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:right>
          </node:Expr_BooleanOr>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isAddress</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="353">/**
	 * Check for city name validity
	 *
	 * @param string $city City name to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>359</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>362</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>359</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>359</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>city</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>361</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>361</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>361</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>361</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>361</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>361</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>361</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>361</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>361</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>361</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[^!&lt;&gt;;?=+@#&quot;°{}_$%]*$/u</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>361</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>361</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>361</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>361</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>city</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isCityName</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="364">/**
	 * Check for search query validity
	 *
	 * @param string $search Query to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>370</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>373</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>370</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>370</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>search</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>372</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>372</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>372</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>372</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>372</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>372</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>372</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>372</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>372</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>372</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[^&lt;&gt;;=#{}]{0,64}$/u</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>372</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>372</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>372</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>372</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>search</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isValidSearch</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="375">/**
	 * Check for standard name validity
	 *
	 * @param string $name Name to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>381</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>384</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>381</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>381</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>name</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>383</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>383</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanOr>
           <attribute:startLine>
            <scalar:int>383</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>383</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Empty>
             <attribute:startLine>
              <scalar:int>383</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>383</scalar:int>
             </attribute:endLine>
             <subNode:expr>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>383</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>383</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>name</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:expr>
            </node:Expr_Empty>
           </subNode:left>
           <subNode:right>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>383</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>383</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>383</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>383</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>preg_match</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>383</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>383</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>383</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>383</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>/^[^&lt;&gt;={}]*$/u</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>383</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>383</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>383</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>383</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>name</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:right>
          </node:Expr_BooleanOr>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isGenericName</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="386">/**
	 * Check for HTML field validity (no XSS please !)
	 *
	 * @param string $html HTML field to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>392</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>409</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>392</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>392</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>html</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>392</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>392</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>allow_iframe</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>392</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>392</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>392</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>392</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>false</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>394</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>394</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>394</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>394</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>events</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>394</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>394</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>onmousedown|onmousemove|onmmouseup|onmouseover|onmouseout|onload|onunload|onfocus|onblur|onchange</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_AssignConcat>
         <attribute:startLine>
          <scalar:int>395</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>395</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>395</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>395</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>events</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>395</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>395</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>|onsubmit|ondblclick|onclick|onkeydown|onkeyup|onkeypress|onmouseenter|onmouseleave|onerror|onselect|onreset|onabort|ondragdrop|onresize|onactivate|onafterprint|onmoveend</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:expr>
        </node:Expr_AssignConcat>
        <node:Expr_AssignConcat>
         <attribute:startLine>
          <scalar:int>396</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>396</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>396</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>396</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>events</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>396</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>396</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>|onafterupdate|onbeforeactivate|onbeforecopy|onbeforecut|onbeforedeactivate|onbeforeeditfocus|onbeforepaste|onbeforeprint|onbeforeunload|onbeforeupdate|onmove</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:expr>
        </node:Expr_AssignConcat>
        <node:Expr_AssignConcat>
         <attribute:startLine>
          <scalar:int>397</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>397</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>397</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>397</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>events</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>397</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>397</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>|onbounce|oncellchange|oncontextmenu|oncontrolselect|oncopy|oncut|ondataavailable|ondatasetchanged|ondatasetcomplete|ondeactivate|ondrag|ondragend|ondragenter|onmousewheel</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:expr>
        </node:Expr_AssignConcat>
        <node:Expr_AssignConcat>
         <attribute:startLine>
          <scalar:int>398</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>398</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>398</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>398</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>events</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>398</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>398</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>|ondragleave|ondragover|ondragstart|ondrop|onerrorupdate|onfilterchange|onfinish|onfocusin|onfocusout|onhashchange|onhelp|oninput|onlosecapture|onmessage|onmouseup|onmovestart</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:expr>
        </node:Expr_AssignConcat>
        <node:Expr_AssignConcat>
         <attribute:startLine>
          <scalar:int>399</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>399</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>399</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>399</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>events</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>399</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>399</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>|onoffline|ononline|onpaste|onpropertychange|onreadystatechange|onresizeend|onresizestart|onrowenter|onrowexit|onrowsdelete|onrowsinserted|onscroll|onsearch|onselectionchange</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:expr>
        </node:Expr_AssignConcat>
        <node:Expr_AssignConcat>
         <attribute:startLine>
          <scalar:int>400</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>400</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>400</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>400</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>events</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>400</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>400</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>|onselectstart|onstart|onstop</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:expr>
        </node:Expr_AssignConcat>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>402</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>403</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>403</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>403</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_ConstFetch>
              <attribute:startLine>
               <scalar:int>403</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>403</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>403</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>403</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>false</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
             </node:Expr_ConstFetch>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanOr>
           <attribute:startLine>
            <scalar:int>402</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>402</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_BooleanOr>
             <attribute:startLine>
              <scalar:int>402</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>402</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_FuncCall>
               <attribute:startLine>
                <scalar:int>402</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>402</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>402</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>402</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>preg_match</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>402</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>402</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>402</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>402</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>/&lt;[\s]*script/ims</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>402</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>402</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>402</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>402</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>html</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_FuncCall>
             </subNode:left>
             <subNode:right>
              <node:Expr_FuncCall>
               <attribute:startLine>
                <scalar:int>402</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>402</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>402</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>402</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>preg_match</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>402</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>402</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Concat>
                    <attribute:startLine>
                     <scalar:int>402</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>402</scalar:int>
                    </attribute:endLine>
                    <subNode:left>
                     <node:Expr_Concat>
                      <attribute:startLine>
                       <scalar:int>402</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>402</scalar:int>
                      </attribute:endLine>
                      <subNode:left>
                       <node:Scalar_String>
                        <attribute:startLine>
                         <scalar:int>402</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>402</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <scalar:string>/(</scalar:string>
                        </subNode:value>
                       </node:Scalar_String>
                      </subNode:left>
                      <subNode:right>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>402</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>402</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>events</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:right>
                     </node:Expr_Concat>
                    </subNode:left>
                    <subNode:right>
                     <node:Scalar_String>
                      <attribute:startLine>
                       <scalar:int>402</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>402</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <scalar:string>)[\s]*=/ims</scalar:string>
                      </subNode:value>
                     </node:Scalar_String>
                    </subNode:right>
                   </node:Expr_Concat>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>402</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>402</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>402</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>402</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>html</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_FuncCall>
             </subNode:right>
            </node:Expr_BooleanOr>
           </subNode:left>
           <subNode:right>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>402</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>402</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>402</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>402</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>preg_match</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>402</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>402</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>402</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>402</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>/.*script\:/ims</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>402</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>402</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>402</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>402</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>html</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:right>
          </node:Expr_BooleanOr>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>405</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>406</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>406</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>406</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_ConstFetch>
              <attribute:startLine>
               <scalar:int>406</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>406</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>406</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>406</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>false</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
             </node:Expr_ConstFetch>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanAnd>
           <attribute:startLine>
            <scalar:int>405</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>405</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_BooleanNot>
             <attribute:startLine>
              <scalar:int>405</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>405</scalar:int>
             </attribute:endLine>
             <subNode:expr>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>405</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>405</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>allow_iframe</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:expr>
            </node:Expr_BooleanNot>
           </subNode:left>
           <subNode:right>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>405</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>405</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>405</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>405</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>preg_match</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>405</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>405</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>405</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>405</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>/&lt;[\s]*(i?frame|form|input|embed|object)/ims</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>405</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>405</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>405</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>405</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>html</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:right>
          </node:Expr_BooleanAnd>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>408</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>408</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>408</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>408</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>408</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>408</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>true</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isCleanHtml</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="411">/**
	 * Check for product reference validity
	 *
	 * @param string $reference Product reference to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>417</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>420</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>417</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>417</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>reference</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>419</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>419</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>419</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>419</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>419</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>419</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>419</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>419</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>419</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>419</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[^&lt;&gt;;={}]*$/u</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>419</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>419</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>419</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>419</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>reference</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isReference</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="422">/**
	 * Check for password validity
	 *
	 * @param string $passwd Password to validate
	 * @param int $size
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>429</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>432</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>429</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>429</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>passwd</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>429</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>429</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>size</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>429</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>429</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>5</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>431</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>431</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanAnd>
           <attribute:startLine>
            <scalar:int>431</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>431</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_GreaterOrEqual>
             <attribute:startLine>
              <scalar:int>431</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>431</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_StaticCall>
               <attribute:startLine>
                <scalar:int>431</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>431</scalar:int>
               </attribute:endLine>
               <subNode:class>
                <node:Name_FullyQualified>
                 <attribute:startLine>
                  <scalar:int>431</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>431</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>Tools</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name_FullyQualified>
               </subNode:class>
               <subNode:name>
                <scalar:string>strlen</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>431</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>431</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>431</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>431</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>passwd</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_StaticCall>
             </subNode:left>
             <subNode:right>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>431</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>431</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>size</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:right>
            </node:Expr_GreaterOrEqual>
           </subNode:left>
           <subNode:right>
            <node:Expr_Smaller>
             <attribute:startLine>
              <scalar:int>431</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>431</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_StaticCall>
               <attribute:startLine>
                <scalar:int>431</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>431</scalar:int>
               </attribute:endLine>
               <subNode:class>
                <node:Name_FullyQualified>
                 <attribute:startLine>
                  <scalar:int>431</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>431</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>Tools</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name_FullyQualified>
               </subNode:class>
               <subNode:name>
                <scalar:string>strlen</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>431</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>431</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>431</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>431</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>passwd</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_StaticCall>
             </subNode:left>
             <subNode:right>
              <node:Scalar_LNumber>
               <attribute:startLine>
                <scalar:int>431</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>431</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <scalar:int>255</scalar:int>
               </subNode:value>
              </node:Scalar_LNumber>
             </subNode:right>
            </node:Expr_Smaller>
           </subNode:right>
          </node:Expr_BooleanAnd>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isPasswd</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:startLine>
       <scalar:int>434</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>437</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>434</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>434</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>passwd</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>436</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>436</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_StaticCall>
           <attribute:startLine>
            <scalar:int>436</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>436</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>436</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>436</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Validate</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
           <subNode:name>
            <scalar:string>isPasswd</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>436</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>436</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>436</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>436</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>passwd</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>436</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>436</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_LNumber>
                <attribute:startLine>
                 <scalar:int>436</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>436</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:int>8</scalar:int>
                </subNode:value>
               </node:Scalar_LNumber>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_StaticCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isPasswdAdmin</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="439">/**
	 * Check for configuration key validity
	 *
	 * @param string $config_name Configuration key to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>445</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>448</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>445</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>445</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>config_name</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>447</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>447</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>447</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>447</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>447</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>447</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>447</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>447</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>447</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>447</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[a-zA-Z_0-9-]+$/</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>447</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>447</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>447</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>447</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>config_name</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isConfigName</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="450">/**
	 * Check date formats like http://php.net/manual/en/function.date.php
	 *
	 * @param string $date_format date format to check
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>456</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>461</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>456</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>456</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>date_format</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:comments>
          <scalar:array>
           <comment isDocComment="false" line="458">// We can't really check if this is valid or not, because this is a string and you can write whatever you want in it.
</comment>
           <comment isDocComment="false" line="459">// That's why only &lt; et &gt; are forbidden (HTML)
</comment>
          </scalar:array>
         </attribute:comments>
         <attribute:startLine>
          <scalar:int>460</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>460</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>460</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>460</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>460</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>460</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>460</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>460</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>460</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>460</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[^&lt;&gt;]+$/</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>460</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>460</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>460</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>460</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>date_format</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isPhpDateFormat</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="463">/**
	 * Check for date format
	 *
	 * @param string $date Date to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>469</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>472</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>469</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>469</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>date</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>471</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>471</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Cast_Bool>
           <attribute:startLine>
            <scalar:int>471</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>471</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>471</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>471</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>471</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>471</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>preg_match</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>471</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>471</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>471</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>471</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>/^([0-9]{4})-((0?[0-9])|(1[0-2]))-((0?[0-9])|([1-2][0-9])|(3[01]))( [0-9]{2}:[0-9]{2}:[0-9]{2})?$/</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>471</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>471</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>471</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>471</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>date</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:expr>
          </node:Expr_Cast_Bool>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isDateFormat</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="474">/**
	 * Check for date validity
	 *
	 * @param string $date Date to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>480</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>485</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>480</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>480</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>date</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>482</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>483</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>483</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>483</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_ConstFetch>
              <attribute:startLine>
               <scalar:int>483</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>483</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>483</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>483</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>false</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
             </node:Expr_ConstFetch>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>482</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>482</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>482</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>482</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>482</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>482</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>preg_match</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>482</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>482</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>482</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>482</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>/^([0-9]{4})-((?:0?[0-9])|(?:1[0-2]))-((?:0?[0-9])|(?:[1-2][0-9])|(?:3[01]))( [0-9]{2}:[0-9]{2}:[0-9]{2})?$/</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>482</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>482</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>482</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>482</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>date</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>482</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>482</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>482</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>482</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>matches</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>484</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>484</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>484</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>484</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>484</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>484</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>checkdate</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>484</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>484</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Cast_Int>
                <attribute:startLine>
                 <scalar:int>484</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>484</scalar:int>
                </attribute:endLine>
                <subNode:expr>
                 <node:Expr_ArrayDimFetch>
                  <attribute:startLine>
                   <scalar:int>484</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>484</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>484</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>484</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>matches</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:dim>
                   <node:Scalar_LNumber>
                    <attribute:startLine>
                     <scalar:int>484</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>484</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:int>2</scalar:int>
                    </subNode:value>
                   </node:Scalar_LNumber>
                  </subNode:dim>
                 </node:Expr_ArrayDimFetch>
                </subNode:expr>
               </node:Expr_Cast_Int>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>484</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>484</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Cast_Int>
                <attribute:startLine>
                 <scalar:int>484</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>484</scalar:int>
                </attribute:endLine>
                <subNode:expr>
                 <node:Expr_ArrayDimFetch>
                  <attribute:startLine>
                   <scalar:int>484</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>484</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>484</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>484</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>matches</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:dim>
                   <node:Scalar_LNumber>
                    <attribute:startLine>
                     <scalar:int>484</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>484</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:int>3</scalar:int>
                    </subNode:value>
                   </node:Scalar_LNumber>
                  </subNode:dim>
                 </node:Expr_ArrayDimFetch>
                </subNode:expr>
               </node:Expr_Cast_Int>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>484</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>484</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Cast_Int>
                <attribute:startLine>
                 <scalar:int>484</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>484</scalar:int>
                </attribute:endLine>
                <subNode:expr>
                 <node:Expr_ArrayDimFetch>
                  <attribute:startLine>
                   <scalar:int>484</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>484</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>484</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>484</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>matches</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:dim>
                   <node:Scalar_LNumber>
                    <attribute:startLine>
                     <scalar:int>484</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>484</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:int>1</scalar:int>
                    </subNode:value>
                   </node:Scalar_LNumber>
                  </subNode:dim>
                 </node:Expr_ArrayDimFetch>
                </subNode:expr>
               </node:Expr_Cast_Int>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isDate</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="487">/**
	 * Check for birthDate validity
	 *
	 * @param string $date birthdate to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>493</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>504</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>493</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>493</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>date</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>495</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>496</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>496</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>496</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_ConstFetch>
              <attribute:startLine>
               <scalar:int>496</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>496</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>496</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>496</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>true</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
             </node:Expr_ConstFetch>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanOr>
           <attribute:startLine>
            <scalar:int>495</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>495</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Empty>
             <attribute:startLine>
              <scalar:int>495</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>495</scalar:int>
             </attribute:endLine>
             <subNode:expr>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>495</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>495</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>date</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:expr>
            </node:Expr_Empty>
           </subNode:left>
           <subNode:right>
            <node:Expr_Equal>
             <attribute:startLine>
              <scalar:int>495</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>495</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>495</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>495</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>date</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:left>
             <subNode:right>
              <node:Scalar_String>
               <attribute:startLine>
                <scalar:int>495</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>495</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <scalar:string>0000-00-00</scalar:string>
               </subNode:value>
              </node:Scalar_String>
             </subNode:right>
            </node:Expr_Equal>
           </subNode:right>
          </node:Expr_BooleanOr>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>497</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>502</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>499</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>500</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_Return>
               <attribute:startLine>
                <scalar:int>500</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>500</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_ConstFetch>
                 <attribute:startLine>
                  <scalar:int>500</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>500</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>500</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>500</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>false</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                </node:Expr_ConstFetch>
               </subNode:expr>
              </node:Stmt_Return>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_BooleanAnd>
              <attribute:startLine>
               <scalar:int>499</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>499</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_BooleanAnd>
                <attribute:startLine>
                 <scalar:int>499</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>499</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Expr_Greater>
                  <attribute:startLine>
                   <scalar:int>499</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>499</scalar:int>
                  </attribute:endLine>
                  <subNode:left>
                   <node:Expr_ArrayDimFetch>
                    <attribute:startLine>
                     <scalar:int>499</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>499</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>499</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>499</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>birth_date</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:dim>
                     <node:Scalar_LNumber>
                      <attribute:startLine>
                       <scalar:int>499</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>499</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <scalar:int>1</scalar:int>
                      </subNode:value>
                     </node:Scalar_LNumber>
                    </subNode:dim>
                   </node:Expr_ArrayDimFetch>
                  </subNode:left>
                  <subNode:right>
                   <node:Expr_FuncCall>
                    <attribute:startLine>
                     <scalar:int>499</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>499</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <node:Name>
                      <attribute:startLine>
                       <scalar:int>499</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>499</scalar:int>
                      </attribute:endLine>
                      <subNode:parts>
                       <scalar:array>
                        <scalar:string>date</scalar:string>
                       </scalar:array>
                      </subNode:parts>
                     </node:Name>
                    </subNode:name>
                    <subNode:args>
                     <scalar:array>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>499</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>499</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>499</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>499</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>Y</scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                     </scalar:array>
                    </subNode:args>
                   </node:Expr_FuncCall>
                  </subNode:right>
                 </node:Expr_Greater>
                </subNode:left>
                <subNode:right>
                 <node:Expr_Greater>
                  <attribute:startLine>
                   <scalar:int>499</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>499</scalar:int>
                  </attribute:endLine>
                  <subNode:left>
                   <node:Expr_ArrayDimFetch>
                    <attribute:startLine>
                     <scalar:int>499</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>499</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>499</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>499</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>birth_date</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:dim>
                     <node:Scalar_LNumber>
                      <attribute:startLine>
                       <scalar:int>499</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>499</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <scalar:int>2</scalar:int>
                      </subNode:value>
                     </node:Scalar_LNumber>
                    </subNode:dim>
                   </node:Expr_ArrayDimFetch>
                  </subNode:left>
                  <subNode:right>
                   <node:Expr_FuncCall>
                    <attribute:startLine>
                     <scalar:int>499</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>499</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <node:Name>
                      <attribute:startLine>
                       <scalar:int>499</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>499</scalar:int>
                      </attribute:endLine>
                      <subNode:parts>
                       <scalar:array>
                        <scalar:string>date</scalar:string>
                       </scalar:array>
                      </subNode:parts>
                     </node:Name>
                    </subNode:name>
                    <subNode:args>
                     <scalar:array>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>499</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>499</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>499</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>499</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>m</scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                     </scalar:array>
                    </subNode:args>
                   </node:Expr_FuncCall>
                  </subNode:right>
                 </node:Expr_Greater>
                </subNode:right>
               </node:Expr_BooleanAnd>
              </subNode:left>
              <subNode:right>
               <node:Expr_Greater>
                <attribute:startLine>
                 <scalar:int>499</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>499</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Expr_ArrayDimFetch>
                  <attribute:startLine>
                   <scalar:int>499</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>499</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>499</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>499</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>birth_date</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:dim>
                   <node:Scalar_LNumber>
                    <attribute:startLine>
                     <scalar:int>499</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>499</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:int>3</scalar:int>
                    </subNode:value>
                   </node:Scalar_LNumber>
                  </subNode:dim>
                 </node:Expr_ArrayDimFetch>
                </subNode:left>
                <subNode:right>
                 <node:Expr_FuncCall>
                  <attribute:startLine>
                   <scalar:int>499</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>499</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <node:Name>
                    <attribute:startLine>
                     <scalar:int>499</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>499</scalar:int>
                    </attribute:endLine>
                    <subNode:parts>
                     <scalar:array>
                      <scalar:string>date</scalar:string>
                     </scalar:array>
                    </subNode:parts>
                   </node:Name>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>499</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>499</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>499</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>499</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>d</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_FuncCall>
                </subNode:right>
               </node:Expr_Greater>
              </subNode:right>
             </node:Expr_BooleanAnd>
            </subNode:cond>
           </node:Stmt_If>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>501</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>501</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_ConstFetch>
              <attribute:startLine>
               <scalar:int>501</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>501</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>501</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>501</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>true</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
             </node:Expr_ConstFetch>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>497</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>497</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>497</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>497</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>497</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>497</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>497</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>497</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^([0-9]{4})-((?:0?[1-9])|(?:1[0-2]))-((?:0?[1-9])|(?:[1-2][0-9])|(?:3[01]))([0-9]{2}:[0-9]{2}:[0-9]{2})?$/</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>497</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>497</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>497</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>497</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>date</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>497</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>497</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>497</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>497</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>birth_date</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>503</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>503</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>503</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>503</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>503</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>503</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>false</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isBirthDate</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="506">/**
	 * Check for boolean validity
	 *
	 * @param boolean $bool Boolean to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>512</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>515</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>512</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>512</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>bool</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>514</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>514</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanOr>
           <attribute:startLine>
            <scalar:int>514</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>514</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_BooleanOr>
             <attribute:startLine>
              <scalar:int>514</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>514</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_Identical>
               <attribute:startLine>
                <scalar:int>514</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>514</scalar:int>
               </attribute:endLine>
               <subNode:left>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>514</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>514</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>bool</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:left>
               <subNode:right>
                <node:Expr_ConstFetch>
                 <attribute:startLine>
                  <scalar:int>514</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>514</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>514</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>514</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>null</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                </node:Expr_ConstFetch>
               </subNode:right>
              </node:Expr_Identical>
             </subNode:left>
             <subNode:right>
              <node:Expr_FuncCall>
               <attribute:startLine>
                <scalar:int>514</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>514</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>514</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>514</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>is_bool</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>514</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>514</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>514</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>514</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>bool</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_FuncCall>
             </subNode:right>
            </node:Expr_BooleanOr>
           </subNode:left>
           <subNode:right>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>514</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>514</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>514</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>514</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>preg_match</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>514</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>514</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>514</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>514</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>/^0|1$/</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>514</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>514</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>514</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>514</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>bool</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:right>
          </node:Expr_BooleanOr>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isBool</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="517">/**
	 * Check for phone number validity
	 *
	 * @param string $number Phone number to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>523</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>526</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>523</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>523</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>number</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>525</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>525</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>525</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>525</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>525</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>525</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>525</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>525</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>525</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>525</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[+0-9. ()-]*$/</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>525</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>525</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>525</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>525</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>number</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isPhoneNumber</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="528">/**
	 * Check for barcode validity (EAN-13)
	 *
	 * @param string $ean13 Barcode to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>534</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>537</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>534</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>534</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>ean13</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>536</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>536</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanOr>
           <attribute:startLine>
            <scalar:int>536</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>536</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_BooleanNot>
             <attribute:startLine>
              <scalar:int>536</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>536</scalar:int>
             </attribute:endLine>
             <subNode:expr>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>536</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>536</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>ean13</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:expr>
            </node:Expr_BooleanNot>
           </subNode:left>
           <subNode:right>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>536</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>536</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>536</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>536</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>preg_match</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>536</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>536</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>536</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>536</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>/^[0-9]{0,13}$/</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>536</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>536</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>536</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>536</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>ean13</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:right>
          </node:Expr_BooleanOr>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isEan13</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="539">/**
	 * Check for barcode validity (UPC)
	 *
	 * @param string $upc Barcode to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>545</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>548</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>545</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>545</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>upc</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>547</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>547</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanOr>
           <attribute:startLine>
            <scalar:int>547</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>547</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_BooleanNot>
             <attribute:startLine>
              <scalar:int>547</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>547</scalar:int>
             </attribute:endLine>
             <subNode:expr>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>547</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>547</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>upc</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:expr>
            </node:Expr_BooleanNot>
           </subNode:left>
           <subNode:right>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>547</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>547</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>547</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>547</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>preg_match</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>547</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>547</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>547</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>547</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>/^[0-9]{0,12}$/</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>547</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>547</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>547</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>547</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>upc</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:right>
          </node:Expr_BooleanOr>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isUpc</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="550">/**
	 * Check for postal code validity
	 *
	 * @param string $postcode Postal code to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>556</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>559</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>556</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>556</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>postcode</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>558</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>558</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanOr>
           <attribute:startLine>
            <scalar:int>558</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>558</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Empty>
             <attribute:startLine>
              <scalar:int>558</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>558</scalar:int>
             </attribute:endLine>
             <subNode:expr>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>558</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>558</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>postcode</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:expr>
            </node:Expr_Empty>
           </subNode:left>
           <subNode:right>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>558</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>558</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>558</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>558</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>preg_match</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>558</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>558</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>558</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>558</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>/^[a-zA-Z 0-9-]+$/</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>558</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>558</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>558</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>558</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>postcode</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:right>
          </node:Expr_BooleanOr>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isPostCode</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="561">/**
	 * Check for zip code format validity
	 *
	 * @param string $zip_code zip code format to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>567</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>572</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>567</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>567</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>zip_code</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>569</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>570</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>570</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>570</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>570</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>570</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>570</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>570</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>preg_match</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>570</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>570</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>570</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>570</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>/^[NLCnlc 0-9-]+$/</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>570</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>570</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>570</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>570</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>zip_code</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>569</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>569</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Empty>
             <attribute:startLine>
              <scalar:int>569</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>569</scalar:int>
             </attribute:endLine>
             <subNode:expr>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>569</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>569</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>zip_code</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:expr>
            </node:Expr_Empty>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>571</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>571</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>571</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>571</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>571</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>571</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>true</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isZipCodeFormat</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="574">/**
	 * Check for table or identifier validity
	 * Mostly used in database for ordering : ASC / DESC
	 *
	 * @param string $way Keyword to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>581</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>584</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>581</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>581</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>way</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>583</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>583</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BitwiseOr>
           <attribute:startLine>
            <scalar:int>583</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>583</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_BitwiseOr>
             <attribute:startLine>
              <scalar:int>583</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>583</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_BitwiseOr>
               <attribute:startLine>
                <scalar:int>583</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>583</scalar:int>
               </attribute:endLine>
               <subNode:left>
                <node:Expr_Identical>
                 <attribute:startLine>
                  <scalar:int>583</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>583</scalar:int>
                 </attribute:endLine>
                 <subNode:left>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>583</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>583</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>way</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:left>
                 <subNode:right>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>583</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>583</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>ASC</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:right>
                </node:Expr_Identical>
               </subNode:left>
               <subNode:right>
                <node:Expr_Identical>
                 <attribute:startLine>
                  <scalar:int>583</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>583</scalar:int>
                 </attribute:endLine>
                 <subNode:left>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>583</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>583</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>way</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:left>
                 <subNode:right>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>583</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>583</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>DESC</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:right>
                </node:Expr_Identical>
               </subNode:right>
              </node:Expr_BitwiseOr>
             </subNode:left>
             <subNode:right>
              <node:Expr_Identical>
               <attribute:startLine>
                <scalar:int>583</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>583</scalar:int>
               </attribute:endLine>
               <subNode:left>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>583</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>583</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>way</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:left>
               <subNode:right>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>583</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>583</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>asc</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:right>
              </node:Expr_Identical>
             </subNode:right>
            </node:Expr_BitwiseOr>
           </subNode:left>
           <subNode:right>
            <node:Expr_Identical>
             <attribute:startLine>
              <scalar:int>583</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>583</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>583</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>583</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>way</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:left>
             <subNode:right>
              <node:Scalar_String>
               <attribute:startLine>
                <scalar:int>583</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>583</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <scalar:string>desc</scalar:string>
               </subNode:value>
              </node:Scalar_String>
             </subNode:right>
            </node:Expr_Identical>
           </subNode:right>
          </node:Expr_BitwiseOr>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isOrderWay</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="586">/**
	 * Check for table or identifier validity
	 * Mostly used in database for ordering : ORDER BY field
	 *
	 * @param string $order Field to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>593</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>596</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>593</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>593</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>order</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>595</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>595</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>595</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>595</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>595</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>595</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>595</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>595</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>595</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>595</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[a-zA-Z0-9.!_-]+$/</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>595</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>595</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>595</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>595</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>order</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isOrderBy</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="598">/**
	 * Check for table or identifier validity
	 * Mostly used in database for table names and id_table
	 *
	 * @param string $table Table/identifier to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>605</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>608</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>605</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>605</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>table</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>607</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>607</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>607</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>607</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>607</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>607</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>607</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>607</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>607</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>607</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[a-zA-Z0-9_-]+$/</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>607</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>607</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>607</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>607</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>table</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isTableOrIdentifier</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="610">/**
	 * @deprecated 1.5.0 You should not use list like this, please use an array when you build a SQL query
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>613</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>619</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_StaticCall>
         <attribute:startLine>
          <scalar:int>615</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>615</scalar:int>
         </attribute:endLine>
         <subNode:class>
          <node:Name_FullyQualified>
           <attribute:startLine>
            <scalar:int>615</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>615</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>Tools</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name_FullyQualified>
         </subNode:class>
         <subNode:name>
          <scalar:string>displayAsDeprecated</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array/>
         </subNode:args>
        </node:Expr_StaticCall>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>616</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>616</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>616</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>616</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>616</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>616</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>true</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isValuesList</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="621">/**
	 * Check for tags list validity
	 *
	 * @param string $list List to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>627</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>630</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>627</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>627</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>list</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>629</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>629</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>629</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>629</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>629</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>629</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>629</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>629</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>629</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>629</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[^!&lt;&gt;;?=+#&quot;°{}_$%]*$/u</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>629</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>629</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>629</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>629</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>list</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isTagsList</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="632">/**
	 * Check for product visibility
	 *
	 * @param string $s visibility to check
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>638</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>641</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>638</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>638</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>s</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>640</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>640</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>640</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>640</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>640</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>640</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>640</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>640</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>640</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>640</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^both|catalog|search|none$/i</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>640</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>640</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>640</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>640</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>s</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isProductVisibility</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="643">/**
	 * Check for an integer validity
	 *
	 * @param integer $value Integer to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>649</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>652</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>649</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>649</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>value</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>651</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>651</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanOr>
           <attribute:startLine>
            <scalar:int>651</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>651</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Identical>
             <attribute:startLine>
              <scalar:int>651</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>651</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_Cast_String>
               <attribute:startLine>
                <scalar:int>651</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>651</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_Cast_Int>
                 <attribute:startLine>
                  <scalar:int>651</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>651</scalar:int>
                 </attribute:endLine>
                 <subNode:expr>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>651</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>651</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>value</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:expr>
                </node:Expr_Cast_Int>
               </subNode:expr>
              </node:Expr_Cast_String>
             </subNode:left>
             <subNode:right>
              <node:Expr_Cast_String>
               <attribute:startLine>
                <scalar:int>651</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>651</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>651</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>651</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>value</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:expr>
              </node:Expr_Cast_String>
             </subNode:right>
            </node:Expr_Identical>
           </subNode:left>
           <subNode:right>
            <node:Expr_Identical>
             <attribute:startLine>
              <scalar:int>651</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>651</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>651</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>651</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>value</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:left>
             <subNode:right>
              <node:Expr_ConstFetch>
               <attribute:startLine>
                <scalar:int>651</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>651</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>651</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>651</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>false</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
              </node:Expr_ConstFetch>
             </subNode:right>
            </node:Expr_Identical>
           </subNode:right>
          </node:Expr_BooleanOr>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isInt</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="654">/**
	 * Check for an integer validity (unsigned)
	 *
	 * @param integer $value Integer to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>660</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>663</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>660</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>660</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>value</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>662</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>662</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanAnd>
           <attribute:startLine>
            <scalar:int>662</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>662</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_BooleanAnd>
             <attribute:startLine>
              <scalar:int>662</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>662</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_FuncCall>
               <attribute:startLine>
                <scalar:int>662</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>662</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>662</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>662</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>preg_match</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>662</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>662</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>662</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>662</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>#^[0-9]+$#</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>662</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>662</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Cast_String>
                    <attribute:startLine>
                     <scalar:int>662</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>662</scalar:int>
                    </attribute:endLine>
                    <subNode:expr>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>662</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>662</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>value</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:expr>
                   </node:Expr_Cast_String>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_FuncCall>
             </subNode:left>
             <subNode:right>
              <node:Expr_Smaller>
               <attribute:startLine>
                <scalar:int>662</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>662</scalar:int>
               </attribute:endLine>
               <subNode:left>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>662</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>662</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>value</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:left>
               <subNode:right>
                <node:Scalar_LNumber>
                 <attribute:startLine>
                  <scalar:int>662</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>662</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:int>4294967296</scalar:int>
                 </subNode:value>
                </node:Scalar_LNumber>
               </subNode:right>
              </node:Expr_Smaller>
             </subNode:right>
            </node:Expr_BooleanAnd>
           </subNode:left>
           <subNode:right>
            <node:Expr_GreaterOrEqual>
             <attribute:startLine>
              <scalar:int>662</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>662</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>662</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>662</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>value</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:left>
             <subNode:right>
              <node:Scalar_LNumber>
               <attribute:startLine>
                <scalar:int>662</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>662</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <scalar:int>0</scalar:int>
               </subNode:value>
              </node:Scalar_LNumber>
             </subNode:right>
            </node:Expr_GreaterOrEqual>
           </subNode:right>
          </node:Expr_BooleanAnd>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isUnsignedInt</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="665">/**
	 * Check for an percentage validity (between 0 and 100)
	 *
	 * @param float $value Float to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>671</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>674</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>671</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>671</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>value</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>673</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>673</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanAnd>
           <attribute:startLine>
            <scalar:int>673</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>673</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_BooleanAnd>
             <attribute:startLine>
              <scalar:int>673</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>673</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_StaticCall>
               <attribute:startLine>
                <scalar:int>673</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>673</scalar:int>
               </attribute:endLine>
               <subNode:class>
                <node:Name_FullyQualified>
                 <attribute:startLine>
                  <scalar:int>673</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>673</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>Validate</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name_FullyQualified>
               </subNode:class>
               <subNode:name>
                <scalar:string>isFloat</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>673</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>673</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>673</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>673</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>value</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_StaticCall>
             </subNode:left>
             <subNode:right>
              <node:Expr_GreaterOrEqual>
               <attribute:startLine>
                <scalar:int>673</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>673</scalar:int>
               </attribute:endLine>
               <subNode:left>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>673</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>673</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>value</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:left>
               <subNode:right>
                <node:Scalar_LNumber>
                 <attribute:startLine>
                  <scalar:int>673</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>673</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:int>0</scalar:int>
                 </subNode:value>
                </node:Scalar_LNumber>
               </subNode:right>
              </node:Expr_GreaterOrEqual>
             </subNode:right>
            </node:Expr_BooleanAnd>
           </subNode:left>
           <subNode:right>
            <node:Expr_SmallerOrEqual>
             <attribute:startLine>
              <scalar:int>673</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>673</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>673</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>673</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>value</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:left>
             <subNode:right>
              <node:Scalar_LNumber>
               <attribute:startLine>
                <scalar:int>673</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>673</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <scalar:int>100</scalar:int>
               </subNode:value>
              </node:Scalar_LNumber>
             </subNode:right>
            </node:Expr_SmallerOrEqual>
           </subNode:right>
          </node:Expr_BooleanAnd>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isPercentage</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="676">/**
	 * Check for an integer validity (unsigned)
	 * Mostly used in database for auto-increment
	 *
	 * @param integer $id Integer to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>683</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>686</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>683</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>683</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>id</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>685</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>685</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_StaticCall>
           <attribute:startLine>
            <scalar:int>685</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>685</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>685</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>685</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Validate</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
           <subNode:name>
            <scalar:string>isUnsignedInt</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>685</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>685</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>685</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>685</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>id</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_StaticCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isUnsignedId</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:startLine>
       <scalar:int>688</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>691</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>688</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>688</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>id</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>690</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>690</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanOr>
           <attribute:startLine>
            <scalar:int>690</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>690</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Identical>
             <attribute:startLine>
              <scalar:int>690</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>690</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>690</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>690</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>id</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:left>
             <subNode:right>
              <node:Expr_ConstFetch>
               <attribute:startLine>
                <scalar:int>690</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>690</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>690</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>690</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>null</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
              </node:Expr_ConstFetch>
             </subNode:right>
            </node:Expr_Identical>
           </subNode:left>
           <subNode:right>
            <node:Expr_StaticCall>
             <attribute:startLine>
              <scalar:int>690</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>690</scalar:int>
             </attribute:endLine>
             <subNode:class>
              <node:Name_FullyQualified>
               <attribute:startLine>
                <scalar:int>690</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>690</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>Validate</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name_FullyQualified>
             </subNode:class>
             <subNode:name>
              <scalar:string>isUnsignedId</scalar:string>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>690</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>690</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>690</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>690</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>id</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_StaticCall>
           </subNode:right>
          </node:Expr_BooleanOr>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isNullOrUnsignedId</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="693">/**
	 * Check object validity
	 *
	 * @param object $object Object to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>699</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>702</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>699</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>699</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>object</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>701</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>701</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanAnd>
           <attribute:startLine>
            <scalar:int>701</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>701</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>701</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>701</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>701</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>701</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>is_object</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>701</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>701</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>701</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>701</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>object</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:left>
           <subNode:right>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>701</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>701</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>701</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>701</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>object</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>id</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:right>
          </node:Expr_BooleanAnd>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isLoadedObject</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="704">/**
	 * Check object validity
	 *
	 * @param integer $object Object to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>710</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>713</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>710</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>710</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>color</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>712</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>712</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>712</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>712</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>712</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>712</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>712</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>712</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>712</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>712</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^(#[0-9a-fA-F]{6}|[a-zA-Z0-9-]*)$/</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>712</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>712</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>712</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>712</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>color</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isColor</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="715">/**
	 * Check url validity (disallowed empty string)
	 *
	 * @param string $url Url to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>721</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>724</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>721</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>721</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>url</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>723</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>723</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>723</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>723</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>723</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>723</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>723</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>723</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>723</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>723</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[~:#,%&amp;_=\(\)\.\? \+\-@\/a-zA-Z0-9]+$/</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>723</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>723</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>723</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>723</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>url</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isUrl</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="726">/**
	 * Check tracking number validity (disallowed empty string)
	 *
	 * @param string $tracking_number Tracking number to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>732</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>735</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>732</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>732</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>tracking_number</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>734</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>734</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>734</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>734</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>734</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>734</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>734</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>734</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>734</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>734</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[~:#,%&amp;_=\(\)\[\]\.\? \+\-@\/a-zA-Z0-9]+$/</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>734</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>734</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>734</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>734</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>tracking_number</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isTrackingNumber</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="737">/**
	 * Check url validity (allowed empty string)
	 *
	 * @param string $url Url to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>743</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>746</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>743</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>743</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>url</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>745</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>745</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanOr>
           <attribute:startLine>
            <scalar:int>745</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>745</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Empty>
             <attribute:startLine>
              <scalar:int>745</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>745</scalar:int>
             </attribute:endLine>
             <subNode:expr>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>745</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>745</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>url</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:expr>
            </node:Expr_Empty>
           </subNode:left>
           <subNode:right>
            <node:Expr_StaticCall>
             <attribute:startLine>
              <scalar:int>745</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>745</scalar:int>
             </attribute:endLine>
             <subNode:class>
              <node:Name_FullyQualified>
               <attribute:startLine>
                <scalar:int>745</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>745</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>Validate</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name_FullyQualified>
             </subNode:class>
             <subNode:name>
              <scalar:string>isUrl</scalar:string>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>745</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>745</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>745</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>745</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>url</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_StaticCall>
           </subNode:right>
          </node:Expr_BooleanOr>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isUrlOrEmpty</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="748">/**
	 * Check if URL is absolute
	 *
	 * @param string $url URL to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>754</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>759</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>754</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>754</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>url</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>756</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>757</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>757</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>757</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>757</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>757</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>757</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>757</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>preg_match</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>757</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>757</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>757</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>757</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>/^https?:\/\/[~:#,%&amp;_=\(\)\[\]\.\? \+\-@\/a-zA-Z0-9]+$/</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>757</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>757</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>757</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>757</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>url</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>756</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>756</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Empty>
             <attribute:startLine>
              <scalar:int>756</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>756</scalar:int>
             </attribute:endLine>
             <subNode:expr>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>756</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>756</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>url</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:expr>
            </node:Expr_Empty>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>758</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>758</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>758</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>758</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>758</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>758</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>true</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isAbsoluteUrl</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:startLine>
       <scalar:int>761</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>764</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>761</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>761</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>engine</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>763</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>763</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>763</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>763</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>763</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>763</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>in_array</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>763</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>763</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>763</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>763</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>engine</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>763</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>763</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Array>
                <attribute:startLine>
                 <scalar:int>763</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>763</scalar:int>
                </attribute:endLine>
                <subNode:items>
                 <scalar:array>
                  <node:Expr_ArrayItem>
                   <attribute:startLine>
                    <scalar:int>763</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>763</scalar:int>
                   </attribute:endLine>
                   <subNode:key>
                    <scalar:null/>
                   </subNode:key>
                   <subNode:value>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>763</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>763</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>InnoDB</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Expr_ArrayItem>
                  <node:Expr_ArrayItem>
                   <attribute:startLine>
                    <scalar:int>763</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>763</scalar:int>
                   </attribute:endLine>
                   <subNode:key>
                    <scalar:null/>
                   </subNode:key>
                   <subNode:value>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>763</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>763</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>MyISAM</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Expr_ArrayItem>
                 </scalar:array>
                </subNode:items>
               </node:Expr_Array>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isMySQLEngine</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:startLine>
       <scalar:int>766</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>769</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>766</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>766</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>data</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>768</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>768</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>768</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>768</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>768</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>768</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>768</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>768</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>768</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>768</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[a-z0-9\._-]+$/ui</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>768</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>768</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>768</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>768</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>data</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isUnixName</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:startLine>
       <scalar:int>771</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>775</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>771</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>771</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>data</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:comments>
          <scalar:array>
           <comment isDocComment="false" line="773">// Even if &quot;-&quot; is theorically allowed, it will be considered a syntax error if you do not add backquotes (`) around the table name
</comment>
          </scalar:array>
         </attribute:comments>
         <attribute:startLine>
          <scalar:int>774</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>774</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>774</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>774</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>774</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>774</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>774</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>774</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>774</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>774</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[a-z0-9_]+$/ui</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>774</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>774</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>774</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>774</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>data</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isTablePrefix</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="777">/**
	 * Check for standard name file validity
	 *
	 * @param string $name Name to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>783</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>786</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>783</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>783</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>name</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>785</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>785</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>785</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>785</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>785</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>785</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>785</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>785</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>785</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>785</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[a-zA-Z0-9_.-]+$/</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>785</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>785</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>785</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>785</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>name</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isFileName</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="788">/**
	 * Check for standard name directory validity 
	 * 
	 * @param string $dir Directory to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>794</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>797</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>794</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>794</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>dir</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>796</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>796</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Cast_Bool>
           <attribute:startLine>
            <scalar:int>796</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>796</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>796</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>796</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>796</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>796</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>preg_match</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>796</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>796</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>796</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>796</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>/^[a-zA-Z0-9_.-]*$/</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>796</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>796</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>796</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>796</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>dir</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:expr>
          </node:Expr_Cast_Bool>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isDirName</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="799">/**
	 * Check for admin panel tab name validity
	 *
	 * @param string $name Name to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>805</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>808</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>805</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>805</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>name</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>807</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>807</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>807</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>807</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>807</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>807</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>807</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>807</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>807</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>807</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[a-zA-Z0-9_-]*$/</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>807</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>807</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>807</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>807</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>name</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isTabName</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:startLine>
       <scalar:int>810</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>813</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>810</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>810</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>unit</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>812</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>812</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BitwiseAnd>
           <attribute:startLine>
            <scalar:int>812</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>812</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_StaticCall>
             <attribute:startLine>
              <scalar:int>812</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>812</scalar:int>
             </attribute:endLine>
             <subNode:class>
              <node:Name_FullyQualified>
               <attribute:startLine>
                <scalar:int>812</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>812</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>Validate</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name_FullyQualified>
             </subNode:class>
             <subNode:name>
              <scalar:string>isGenericName</scalar:string>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>812</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>812</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>812</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>812</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>unit</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_StaticCall>
           </subNode:left>
           <subNode:right>
            <node:Expr_Smaller>
             <attribute:startLine>
              <scalar:int>812</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>812</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_StaticCall>
               <attribute:startLine>
                <scalar:int>812</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>812</scalar:int>
               </attribute:endLine>
               <subNode:class>
                <node:Name_FullyQualified>
                 <attribute:startLine>
                  <scalar:int>812</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>812</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>Tools</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name_FullyQualified>
               </subNode:class>
               <subNode:name>
                <scalar:string>strlen</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>812</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>812</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>812</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>812</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>unit</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_StaticCall>
             </subNode:left>
             <subNode:right>
              <node:Scalar_LNumber>
               <attribute:startLine>
                <scalar:int>812</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>812</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <scalar:int>5</scalar:int>
               </subNode:value>
              </node:Scalar_LNumber>
             </subNode:right>
            </node:Expr_Smaller>
           </subNode:right>
          </node:Expr_BitwiseAnd>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isWeightUnit</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:startLine>
       <scalar:int>815</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>818</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>815</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>815</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>unit</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>817</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>817</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BitwiseAnd>
           <attribute:startLine>
            <scalar:int>817</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>817</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_StaticCall>
             <attribute:startLine>
              <scalar:int>817</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>817</scalar:int>
             </attribute:endLine>
             <subNode:class>
              <node:Name_FullyQualified>
               <attribute:startLine>
                <scalar:int>817</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>817</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>Validate</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name_FullyQualified>
             </subNode:class>
             <subNode:name>
              <scalar:string>isGenericName</scalar:string>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>817</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>817</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>817</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>817</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>unit</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_StaticCall>
           </subNode:left>
           <subNode:right>
            <node:Expr_Smaller>
             <attribute:startLine>
              <scalar:int>817</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>817</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_StaticCall>
               <attribute:startLine>
                <scalar:int>817</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>817</scalar:int>
               </attribute:endLine>
               <subNode:class>
                <node:Name_FullyQualified>
                 <attribute:startLine>
                  <scalar:int>817</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>817</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>Tools</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name_FullyQualified>
               </subNode:class>
               <subNode:name>
                <scalar:string>strlen</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>817</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>817</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>817</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>817</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>unit</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_StaticCall>
             </subNode:left>
             <subNode:right>
              <node:Scalar_LNumber>
               <attribute:startLine>
                <scalar:int>817</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>817</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <scalar:int>5</scalar:int>
               </subNode:value>
              </node:Scalar_LNumber>
             </subNode:right>
            </node:Expr_Smaller>
           </subNode:right>
          </node:Expr_BitwiseAnd>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isDistanceUnit</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:startLine>
       <scalar:int>820</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>823</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>820</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>820</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>domain</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>822</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>822</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>822</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>822</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>822</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>822</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>822</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>822</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>822</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>822</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[a-zA-Z0-9-_]*$/</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>822</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>822</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>822</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>822</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>domain</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isSubDomainName</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:startLine>
       <scalar:int>825</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>828</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>825</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>825</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>text</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>827</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>827</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>827</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>827</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>827</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>827</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>827</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>827</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>827</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>827</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^([^&lt;&gt;{}]|&lt;br \/&gt;)*$/i</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>827</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>827</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>827</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>827</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>text</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isVoucherDescription</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="830">/**
	 * Check if the value is a sort direction value (DESC/ASC)
	 *
	 * @param char $value
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>836</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>839</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>836</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>836</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>value</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>838</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>838</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanAnd>
           <attribute:startLine>
            <scalar:int>838</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>838</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_NotIdentical>
             <attribute:startLine>
              <scalar:int>838</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>838</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>838</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>838</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>value</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:left>
             <subNode:right>
              <node:Expr_ConstFetch>
               <attribute:startLine>
                <scalar:int>838</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>838</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>838</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>838</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>null</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
              </node:Expr_ConstFetch>
             </subNode:right>
            </node:Expr_NotIdentical>
           </subNode:left>
           <subNode:right>
            <node:Expr_BooleanOr>
             <attribute:startLine>
              <scalar:int>838</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>838</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_Identical>
               <attribute:startLine>
                <scalar:int>838</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>838</scalar:int>
               </attribute:endLine>
               <subNode:left>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>838</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>838</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>value</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:left>
               <subNode:right>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>838</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>838</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>ASC</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:right>
              </node:Expr_Identical>
             </subNode:left>
             <subNode:right>
              <node:Expr_Identical>
               <attribute:startLine>
                <scalar:int>838</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>838</scalar:int>
               </attribute:endLine>
               <subNode:left>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>838</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>838</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>value</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:left>
               <subNode:right>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>838</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>838</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>DESC</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:right>
              </node:Expr_Identical>
             </subNode:right>
            </node:Expr_BooleanOr>
           </subNode:right>
          </node:Expr_BooleanAnd>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isSortDirection</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="841">/**
	 * Customization fields' label validity
	 *
	 * @param string $label
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>847</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>850</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>847</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>847</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>label</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>849</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>849</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>849</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>849</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>849</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>849</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>849</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>849</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>849</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>849</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[^{}&lt;&gt;]*$/u</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>849</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>849</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>849</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>849</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>label</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isLabel</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="852">/**
	 * Price display method validity
	 *
	 * @param integer $data Data to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>858</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>861</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>858</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>858</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>data</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>860</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>860</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanOr>
           <attribute:startLine>
            <scalar:int>860</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>860</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Equal>
             <attribute:startLine>
              <scalar:int>860</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>860</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>860</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>860</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>data</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:left>
             <subNode:right>
              <node:Expr_ConstFetch>
               <attribute:startLine>
                <scalar:int>860</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>860</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>860</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>860</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>PS_TAX_EXC</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
              </node:Expr_ConstFetch>
             </subNode:right>
            </node:Expr_Equal>
           </subNode:left>
           <subNode:right>
            <node:Expr_Equal>
             <attribute:startLine>
              <scalar:int>860</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>860</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>860</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>860</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>data</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:left>
             <subNode:right>
              <node:Expr_ConstFetch>
               <attribute:startLine>
                <scalar:int>860</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>860</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>860</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>860</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>PS_TAX_INC</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
              </node:Expr_ConstFetch>
             </subNode:right>
            </node:Expr_Equal>
           </subNode:right>
          </node:Expr_BooleanOr>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isPriceDisplayMethod</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="863">/**
	 * @param string $dni to validate
	 * @return bool
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>867</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>870</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>867</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>867</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>dni</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>869</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>869</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanOr>
           <attribute:startLine>
            <scalar:int>869</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>869</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Empty>
             <attribute:startLine>
              <scalar:int>869</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>869</scalar:int>
             </attribute:endLine>
             <subNode:expr>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>869</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>869</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>dni</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:expr>
            </node:Expr_Empty>
           </subNode:left>
           <subNode:right>
            <node:Expr_Cast_Bool>
             <attribute:startLine>
              <scalar:int>869</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>869</scalar:int>
             </attribute:endLine>
             <subNode:expr>
              <node:Expr_FuncCall>
               <attribute:startLine>
                <scalar:int>869</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>869</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>869</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>869</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>preg_match</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>869</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>869</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>869</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>869</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>/^[0-9A-Za-z-.]{1,16}$/U</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>869</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>869</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>869</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>869</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>dni</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_FuncCall>
             </subNode:expr>
            </node:Expr_Cast_Bool>
           </subNode:right>
          </node:Expr_BooleanOr>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isDniLite</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="872">/**
	 * Check if $data is a PrestaShop cookie object
	 *
	 * @param mixed $data to validate
	 * @return bool
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>878</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>881</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>878</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>878</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>data</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>880</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>880</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanAnd>
           <attribute:startLine>
            <scalar:int>880</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>880</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>880</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>880</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>880</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>880</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>is_object</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>880</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>880</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>880</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>880</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>data</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:left>
           <subNode:right>
            <node:Expr_Equal>
             <attribute:startLine>
              <scalar:int>880</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>880</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_FuncCall>
               <attribute:startLine>
                <scalar:int>880</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>880</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>880</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>880</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>get_class</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>880</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>880</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>880</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>880</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>data</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_FuncCall>
             </subNode:left>
             <subNode:right>
              <node:Scalar_String>
               <attribute:startLine>
                <scalar:int>880</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>880</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <scalar:string>Cookie</scalar:string>
               </subNode:value>
              </node:Scalar_String>
             </subNode:right>
            </node:Expr_Equal>
           </subNode:right>
          </node:Expr_BooleanAnd>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isCookie</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="883">/**
	 * Price display method validity
	 *
	 * @param string $data Data to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>889</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>892</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>889</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>889</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>data</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>891</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>891</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>891</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>891</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>891</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>891</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>is_string</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>891</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>891</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>891</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>891</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>data</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isString</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="894">/**
	 * Check if the data is a reduction type (amout or percentage)
	 *
	 * @param string $data Data to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>900</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>903</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>900</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>900</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>data</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>902</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>902</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanOr>
           <attribute:startLine>
            <scalar:int>902</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>902</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Identical>
             <attribute:startLine>
              <scalar:int>902</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>902</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>902</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>902</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>data</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:left>
             <subNode:right>
              <node:Scalar_String>
               <attribute:startLine>
                <scalar:int>902</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>902</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <scalar:string>amount</scalar:string>
               </subNode:value>
              </node:Scalar_String>
             </subNode:right>
            </node:Expr_Identical>
           </subNode:left>
           <subNode:right>
            <node:Expr_Identical>
             <attribute:startLine>
              <scalar:int>902</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>902</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>902</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>902</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>data</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:left>
             <subNode:right>
              <node:Scalar_String>
               <attribute:startLine>
                <scalar:int>902</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>902</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <scalar:string>percentage</scalar:string>
               </subNode:value>
              </node:Scalar_String>
             </subNode:right>
            </node:Expr_Identical>
           </subNode:right>
          </node:Expr_BooleanOr>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isReductionType</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="905">/**
	 * Check for bool_id
	 *
	 * @param string $ids
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>911</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>914</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>911</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>911</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>ids</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>913</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>913</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Cast_Bool>
           <attribute:startLine>
            <scalar:int>913</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>913</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>913</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>913</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>913</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>913</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>preg_match</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>913</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>913</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>913</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>913</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>#^[01]_[0-9]+$#</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>913</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>913</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>913</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>913</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>ids</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:expr>
          </node:Expr_Cast_Bool>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isBoolId</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="916">/**
	 * @deprecated 1.5.0 Use Validate::isBoolId()
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>919</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>923</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>919</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>919</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>ids</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_StaticCall>
         <attribute:startLine>
          <scalar:int>921</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>921</scalar:int>
         </attribute:endLine>
         <subNode:class>
          <node:Name_FullyQualified>
           <attribute:startLine>
            <scalar:int>921</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>921</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>Tools</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name_FullyQualified>
         </subNode:class>
         <subNode:name>
          <scalar:string>displayAsDeprecated</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array/>
         </subNode:args>
        </node:Expr_StaticCall>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>922</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>922</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_StaticCall>
           <attribute:startLine>
            <scalar:int>922</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>922</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>922</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>922</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Validate</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
           <subNode:name>
            <scalar:string>isBoolId</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>922</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>922</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>922</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>922</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>ids</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_StaticCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isBool_Id</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="925">/**
	 * Check the localization pack part selected
	 *
	 * @param string $data Localization pack to check
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>931</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>934</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>931</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>931</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>data</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>933</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>933</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanOr>
           <attribute:startLine>
            <scalar:int>933</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>933</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_BooleanOr>
             <attribute:startLine>
              <scalar:int>933</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>933</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_BooleanOr>
               <attribute:startLine>
                <scalar:int>933</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>933</scalar:int>
               </attribute:endLine>
               <subNode:left>
                <node:Expr_BooleanOr>
                 <attribute:startLine>
                  <scalar:int>933</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>933</scalar:int>
                 </attribute:endLine>
                 <subNode:left>
                  <node:Expr_Identical>
                   <attribute:startLine>
                    <scalar:int>933</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>933</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>933</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>933</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>data</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:left>
                   <subNode:right>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>933</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>933</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>states</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:right>
                  </node:Expr_Identical>
                 </subNode:left>
                 <subNode:right>
                  <node:Expr_Identical>
                   <attribute:startLine>
                    <scalar:int>933</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>933</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>933</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>933</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>data</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:left>
                   <subNode:right>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>933</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>933</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>taxes</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:right>
                  </node:Expr_Identical>
                 </subNode:right>
                </node:Expr_BooleanOr>
               </subNode:left>
               <subNode:right>
                <node:Expr_Identical>
                 <attribute:startLine>
                  <scalar:int>933</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>933</scalar:int>
                 </attribute:endLine>
                 <subNode:left>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>933</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>933</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>data</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:left>
                 <subNode:right>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>933</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>933</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>currencies</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:right>
                </node:Expr_Identical>
               </subNode:right>
              </node:Expr_BooleanOr>
             </subNode:left>
             <subNode:right>
              <node:Expr_Identical>
               <attribute:startLine>
                <scalar:int>933</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>933</scalar:int>
               </attribute:endLine>
               <subNode:left>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>933</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>933</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>data</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:left>
               <subNode:right>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>933</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>933</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>languages</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:right>
              </node:Expr_Identical>
             </subNode:right>
            </node:Expr_BooleanOr>
           </subNode:left>
           <subNode:right>
            <node:Expr_Identical>
             <attribute:startLine>
              <scalar:int>933</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>933</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>933</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>933</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>data</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:left>
             <subNode:right>
              <node:Scalar_String>
               <attribute:startLine>
                <scalar:int>933</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>933</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <scalar:string>units</scalar:string>
               </subNode:value>
              </node:Scalar_String>
             </subNode:right>
            </node:Expr_Identical>
           </subNode:right>
          </node:Expr_BooleanOr>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isLocalizationPackSelection</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="936">/**
	 * Check for PHP serialized data
	 *
	 * @param string $data Serialized data to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>942</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>945</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>942</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>942</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>data</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>944</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>944</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanOr>
           <attribute:startLine>
            <scalar:int>944</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>944</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Identical>
             <attribute:startLine>
              <scalar:int>944</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>944</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>944</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>944</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>data</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:left>
             <subNode:right>
              <node:Expr_ConstFetch>
               <attribute:startLine>
                <scalar:int>944</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>944</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>944</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>944</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>null</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
              </node:Expr_ConstFetch>
             </subNode:right>
            </node:Expr_Identical>
           </subNode:left>
           <subNode:right>
            <node:Expr_BooleanAnd>
             <attribute:startLine>
              <scalar:int>944</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>944</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_FuncCall>
               <attribute:startLine>
                <scalar:int>944</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>944</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>944</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>944</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>is_string</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>944</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>944</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>944</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>944</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>data</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_FuncCall>
             </subNode:left>
             <subNode:right>
              <node:Expr_FuncCall>
               <attribute:startLine>
                <scalar:int>944</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>944</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>944</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>944</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>preg_match</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>944</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>944</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>944</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>944</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>/^a:[0-9]+:{.*;}$/s</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>944</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>944</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>944</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>944</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>data</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_FuncCall>
             </subNode:right>
            </node:Expr_BooleanAnd>
           </subNode:right>
          </node:Expr_BooleanOr>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isSerializedArray</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="947">/**
	 * Check for Latitude/Longitude
	 *
	 * @param string $data Coordinate to validate
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>953</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>956</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>953</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>953</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>data</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>955</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>955</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanOr>
           <attribute:startLine>
            <scalar:int>955</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>955</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Identical>
             <attribute:startLine>
              <scalar:int>955</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>955</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>955</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>955</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>data</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:left>
             <subNode:right>
              <node:Expr_ConstFetch>
               <attribute:startLine>
                <scalar:int>955</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>955</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>955</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>955</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>null</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
              </node:Expr_ConstFetch>
             </subNode:right>
            </node:Expr_Identical>
           </subNode:left>
           <subNode:right>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>955</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>955</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>955</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>955</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>preg_match</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>955</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>955</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>955</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>955</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>/^\-?[0-9]{1,8}\.[0-9]{1,8}$/s</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>955</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>955</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>955</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>955</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>data</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:right>
          </node:Expr_BooleanOr>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isCoordinate</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="958">/**
	 * Check for Language Iso Code
	 *
	 * @param string $iso_code
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>964</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>967</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>964</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>964</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>iso_code</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>966</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>966</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Cast_Bool>
           <attribute:startLine>
            <scalar:int>966</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>966</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>966</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>966</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>966</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>966</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>preg_match</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>966</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>966</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>966</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>966</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>/^[a-zA-Z]{2,3}$/s</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>966</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>966</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>966</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>966</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>iso_code</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:expr>
          </node:Expr_Cast_Bool>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isLangIsoCode</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="969">/**
	 * Check for Language File Name
	 *
	 * @param string $file_name
	 * @return boolean Validity is ok or not
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>975</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>978</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>975</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>975</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>file_name</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>977</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>977</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Cast_Bool>
           <attribute:startLine>
            <scalar:int>977</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>977</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>977</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>977</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>977</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>977</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>preg_match</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>977</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>977</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>977</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>977</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>/^[a-zA-Z]{2,3}\.gzip$/s</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>977</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>977</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>977</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>977</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>file_name</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:expr>
          </node:Expr_Cast_Bool>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isLanguageFileName</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="980">/**
	 *
	 * @param array $ids
	 * @return boolean return true if the array contain only unsigned int value
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>985</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>992</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>985</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>985</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>ids</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>987</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>990</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Foreach>
            <attribute:startLine>
             <scalar:int>988</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>990</scalar:int>
            </attribute:endLine>
            <subNode:keyVar>
             <scalar:null/>
            </subNode:keyVar>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_If>
               <attribute:startLine>
                <scalar:int>989</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>990</scalar:int>
               </attribute:endLine>
               <subNode:stmts>
                <scalar:array>
                 <node:Stmt_Return>
                  <attribute:startLine>
                   <scalar:int>990</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>990</scalar:int>
                  </attribute:endLine>
                  <subNode:expr>
                   <node:Expr_ConstFetch>
                    <attribute:startLine>
                     <scalar:int>990</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>990</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <node:Name>
                      <attribute:startLine>
                       <scalar:int>990</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>990</scalar:int>
                      </attribute:endLine>
                      <subNode:parts>
                       <scalar:array>
                        <scalar:string>false</scalar:string>
                       </scalar:array>
                      </subNode:parts>
                     </node:Name>
                    </subNode:name>
                   </node:Expr_ConstFetch>
                  </subNode:expr>
                 </node:Stmt_Return>
                </scalar:array>
               </subNode:stmts>
               <subNode:elseifs>
                <scalar:array/>
               </subNode:elseifs>
               <subNode:else>
                <scalar:null/>
               </subNode:else>
               <subNode:cond>
                <node:Expr_BooleanOr>
                 <attribute:startLine>
                  <scalar:int>989</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>989</scalar:int>
                 </attribute:endLine>
                 <subNode:left>
                  <node:Expr_Equal>
                   <attribute:startLine>
                    <scalar:int>989</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>989</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>989</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>989</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>id</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:left>
                   <subNode:right>
                    <node:Scalar_LNumber>
                     <attribute:startLine>
                      <scalar:int>989</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>989</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:int>0</scalar:int>
                     </subNode:value>
                    </node:Scalar_LNumber>
                   </subNode:right>
                  </node:Expr_Equal>
                 </subNode:left>
                 <subNode:right>
                  <node:Expr_BooleanNot>
                   <attribute:startLine>
                    <scalar:int>989</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>989</scalar:int>
                   </attribute:endLine>
                   <subNode:expr>
                    <node:Expr_StaticCall>
                     <attribute:startLine>
                      <scalar:int>989</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>989</scalar:int>
                     </attribute:endLine>
                     <subNode:class>
                      <node:Name_FullyQualified>
                       <attribute:startLine>
                        <scalar:int>989</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>989</scalar:int>
                       </attribute:endLine>
                       <subNode:parts>
                        <scalar:array>
                         <scalar:string>Validate</scalar:string>
                        </scalar:array>
                       </subNode:parts>
                      </node:Name_FullyQualified>
                     </subNode:class>
                     <subNode:name>
                      <scalar:string>isUnsignedInt</scalar:string>
                     </subNode:name>
                     <subNode:args>
                      <scalar:array>
                       <node:Arg>
                        <attribute:startLine>
                         <scalar:int>989</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>989</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>989</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>989</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>id</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:value>
                        <subNode:byRef>
                         <scalar:false/>
                        </subNode:byRef>
                       </node:Arg>
                      </scalar:array>
                     </subNode:args>
                    </node:Expr_StaticCall>
                   </subNode:expr>
                  </node:Expr_BooleanNot>
                 </subNode:right>
                </node:Expr_BooleanOr>
               </subNode:cond>
              </node:Stmt_If>
             </scalar:array>
            </subNode:stmts>
            <subNode:expr>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>988</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>988</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>ids</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:expr>
            <subNode:valueVar>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>988</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>988</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>id</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:valueVar>
           </node:Stmt_Foreach>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>987</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>987</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>987</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>987</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>count</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>987</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>987</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>987</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>987</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>ids</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>991</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>991</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>991</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>991</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>991</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>991</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>true</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isArrayWithIds</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="994">/**
	 *
	 * @param array $zones
	 * @return boolean return true if array contain all value required for an image map zone
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>999</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>1015</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>999</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>999</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>zones</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Foreach>
         <attribute:startLine>
          <scalar:int>1001</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>1013</scalar:int>
         </attribute:endLine>
         <subNode:keyVar>
          <scalar:null/>
         </subNode:keyVar>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>1003</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>1004</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_Return>
               <attribute:startLine>
                <scalar:int>1004</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>1004</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_ConstFetch>
                 <attribute:startLine>
                  <scalar:int>1004</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>1004</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>1004</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>1004</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>false</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                </node:Expr_ConstFetch>
               </subNode:expr>
              </node:Stmt_Return>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_BooleanOr>
              <attribute:startLine>
               <scalar:int>1003</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>1003</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_BooleanNot>
                <attribute:startLine>
                 <scalar:int>1003</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>1003</scalar:int>
                </attribute:endLine>
                <subNode:expr>
                 <node:Expr_Isset>
                  <attribute:startLine>
                   <scalar:int>1003</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>1003</scalar:int>
                  </attribute:endLine>
                  <subNode:vars>
                   <scalar:array>
                    <node:Expr_ArrayDimFetch>
                     <attribute:startLine>
                      <scalar:int>1003</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>1003</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>1003</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>1003</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>zone</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:dim>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>1003</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>1003</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>x1</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:dim>
                    </node:Expr_ArrayDimFetch>
                   </scalar:array>
                  </subNode:vars>
                 </node:Expr_Isset>
                </subNode:expr>
               </node:Expr_BooleanNot>
              </subNode:left>
              <subNode:right>
               <node:Expr_BooleanNot>
                <attribute:startLine>
                 <scalar:int>1003</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>1003</scalar:int>
                </attribute:endLine>
                <subNode:expr>
                 <node:Expr_StaticCall>
                  <attribute:startLine>
                   <scalar:int>1003</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>1003</scalar:int>
                  </attribute:endLine>
                  <subNode:class>
                   <node:Name_FullyQualified>
                    <attribute:startLine>
                     <scalar:int>1003</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>1003</scalar:int>
                    </attribute:endLine>
                    <subNode:parts>
                     <scalar:array>
                      <scalar:string>Validate</scalar:string>
                     </scalar:array>
                    </subNode:parts>
                   </node:Name_FullyQualified>
                  </subNode:class>
                  <subNode:name>
                   <scalar:string>isUnsignedInt</scalar:string>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>1003</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>1003</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Expr_ArrayDimFetch>
                       <attribute:startLine>
                        <scalar:int>1003</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>1003</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>1003</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>1003</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>zone</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:dim>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>1003</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>1003</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>x1</scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:dim>
                      </node:Expr_ArrayDimFetch>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_StaticCall>
                </subNode:expr>
               </node:Expr_BooleanNot>
              </subNode:right>
             </node:Expr_BooleanOr>
            </subNode:cond>
           </node:Stmt_If>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>1005</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>1006</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_Return>
               <attribute:startLine>
                <scalar:int>1006</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>1006</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_ConstFetch>
                 <attribute:startLine>
                  <scalar:int>1006</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>1006</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>1006</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>1006</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>false</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                </node:Expr_ConstFetch>
               </subNode:expr>
              </node:Stmt_Return>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_BooleanOr>
              <attribute:startLine>
               <scalar:int>1005</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>1005</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_BooleanNot>
                <attribute:startLine>
                 <scalar:int>1005</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>1005</scalar:int>
                </attribute:endLine>
                <subNode:expr>
                 <node:Expr_Isset>
                  <attribute:startLine>
                   <scalar:int>1005</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>1005</scalar:int>
                  </attribute:endLine>
                  <subNode:vars>
                   <scalar:array>
                    <node:Expr_ArrayDimFetch>
                     <attribute:startLine>
                      <scalar:int>1005</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>1005</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>1005</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>1005</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>zone</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:dim>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>1005</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>1005</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>y1</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:dim>
                    </node:Expr_ArrayDimFetch>
                   </scalar:array>
                  </subNode:vars>
                 </node:Expr_Isset>
                </subNode:expr>
               </node:Expr_BooleanNot>
              </subNode:left>
              <subNode:right>
               <node:Expr_BooleanNot>
                <attribute:startLine>
                 <scalar:int>1005</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>1005</scalar:int>
                </attribute:endLine>
                <subNode:expr>
                 <node:Expr_StaticCall>
                  <attribute:startLine>
                   <scalar:int>1005</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>1005</scalar:int>
                  </attribute:endLine>
                  <subNode:class>
                   <node:Name_FullyQualified>
                    <attribute:startLine>
                     <scalar:int>1005</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>1005</scalar:int>
                    </attribute:endLine>
                    <subNode:parts>
                     <scalar:array>
                      <scalar:string>Validate</scalar:string>
                     </scalar:array>
                    </subNode:parts>
                   </node:Name_FullyQualified>
                  </subNode:class>
                  <subNode:name>
                   <scalar:string>isUnsignedInt</scalar:string>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>1005</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>1005</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Expr_ArrayDimFetch>
                       <attribute:startLine>
                        <scalar:int>1005</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>1005</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>1005</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>1005</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>zone</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:dim>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>1005</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>1005</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>y1</scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:dim>
                      </node:Expr_ArrayDimFetch>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_StaticCall>
                </subNode:expr>
               </node:Expr_BooleanNot>
              </subNode:right>
             </node:Expr_BooleanOr>
            </subNode:cond>
           </node:Stmt_If>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>1007</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>1008</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_Return>
               <attribute:startLine>
                <scalar:int>1008</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>1008</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_ConstFetch>
                 <attribute:startLine>
                  <scalar:int>1008</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>1008</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>1008</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>1008</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>false</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                </node:Expr_ConstFetch>
               </subNode:expr>
              </node:Stmt_Return>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_BooleanOr>
              <attribute:startLine>
               <scalar:int>1007</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>1007</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_BooleanNot>
                <attribute:startLine>
                 <scalar:int>1007</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>1007</scalar:int>
                </attribute:endLine>
                <subNode:expr>
                 <node:Expr_Isset>
                  <attribute:startLine>
                   <scalar:int>1007</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>1007</scalar:int>
                  </attribute:endLine>
                  <subNode:vars>
                   <scalar:array>
                    <node:Expr_ArrayDimFetch>
                     <attribute:startLine>
                      <scalar:int>1007</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>1007</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>1007</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>1007</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>zone</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:dim>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>1007</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>1007</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>width</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:dim>
                    </node:Expr_ArrayDimFetch>
                   </scalar:array>
                  </subNode:vars>
                 </node:Expr_Isset>
                </subNode:expr>
               </node:Expr_BooleanNot>
              </subNode:left>
              <subNode:right>
               <node:Expr_BooleanNot>
                <attribute:startLine>
                 <scalar:int>1007</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>1007</scalar:int>
                </attribute:endLine>
                <subNode:expr>
                 <node:Expr_StaticCall>
                  <attribute:startLine>
                   <scalar:int>1007</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>1007</scalar:int>
                  </attribute:endLine>
                  <subNode:class>
                   <node:Name_FullyQualified>
                    <attribute:startLine>
                     <scalar:int>1007</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>1007</scalar:int>
                    </attribute:endLine>
                    <subNode:parts>
                     <scalar:array>
                      <scalar:string>Validate</scalar:string>
                     </scalar:array>
                    </subNode:parts>
                   </node:Name_FullyQualified>
                  </subNode:class>
                  <subNode:name>
                   <scalar:string>isUnsignedInt</scalar:string>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>1007</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>1007</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Expr_ArrayDimFetch>
                       <attribute:startLine>
                        <scalar:int>1007</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>1007</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>1007</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>1007</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>zone</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:dim>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>1007</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>1007</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>width</scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:dim>
                      </node:Expr_ArrayDimFetch>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_StaticCall>
                </subNode:expr>
               </node:Expr_BooleanNot>
              </subNode:right>
             </node:Expr_BooleanOr>
            </subNode:cond>
           </node:Stmt_If>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>1009</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>1010</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_Return>
               <attribute:startLine>
                <scalar:int>1010</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>1010</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_ConstFetch>
                 <attribute:startLine>
                  <scalar:int>1010</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>1010</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>1010</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>1010</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>false</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                </node:Expr_ConstFetch>
               </subNode:expr>
              </node:Stmt_Return>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_BooleanOr>
              <attribute:startLine>
               <scalar:int>1009</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>1009</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_BooleanNot>
                <attribute:startLine>
                 <scalar:int>1009</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>1009</scalar:int>
                </attribute:endLine>
                <subNode:expr>
                 <node:Expr_Isset>
                  <attribute:startLine>
                   <scalar:int>1009</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>1009</scalar:int>
                  </attribute:endLine>
                  <subNode:vars>
                   <scalar:array>
                    <node:Expr_ArrayDimFetch>
                     <attribute:startLine>
                      <scalar:int>1009</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>1009</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>1009</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>1009</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>zone</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:dim>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>1009</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>1009</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>height</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:dim>
                    </node:Expr_ArrayDimFetch>
                   </scalar:array>
                  </subNode:vars>
                 </node:Expr_Isset>
                </subNode:expr>
               </node:Expr_BooleanNot>
              </subNode:left>
              <subNode:right>
               <node:Expr_BooleanNot>
                <attribute:startLine>
                 <scalar:int>1009</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>1009</scalar:int>
                </attribute:endLine>
                <subNode:expr>
                 <node:Expr_StaticCall>
                  <attribute:startLine>
                   <scalar:int>1009</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>1009</scalar:int>
                  </attribute:endLine>
                  <subNode:class>
                   <node:Name_FullyQualified>
                    <attribute:startLine>
                     <scalar:int>1009</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>1009</scalar:int>
                    </attribute:endLine>
                    <subNode:parts>
                     <scalar:array>
                      <scalar:string>Validate</scalar:string>
                     </scalar:array>
                    </subNode:parts>
                   </node:Name_FullyQualified>
                  </subNode:class>
                  <subNode:name>
                   <scalar:string>isUnsignedInt</scalar:string>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>1009</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>1009</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Expr_ArrayDimFetch>
                       <attribute:startLine>
                        <scalar:int>1009</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>1009</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>1009</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>1009</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>zone</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:dim>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>1009</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>1009</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>height</scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:dim>
                      </node:Expr_ArrayDimFetch>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_StaticCall>
                </subNode:expr>
               </node:Expr_BooleanNot>
              </subNode:right>
             </node:Expr_BooleanOr>
            </subNode:cond>
           </node:Stmt_If>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>1011</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>1012</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_Return>
               <attribute:startLine>
                <scalar:int>1012</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>1012</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_ConstFetch>
                 <attribute:startLine>
                  <scalar:int>1012</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>1012</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>1012</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>1012</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>false</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                </node:Expr_ConstFetch>
               </subNode:expr>
              </node:Stmt_Return>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_BooleanOr>
              <attribute:startLine>
               <scalar:int>1011</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>1011</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_BooleanNot>
                <attribute:startLine>
                 <scalar:int>1011</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>1011</scalar:int>
                </attribute:endLine>
                <subNode:expr>
                 <node:Expr_Isset>
                  <attribute:startLine>
                   <scalar:int>1011</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>1011</scalar:int>
                  </attribute:endLine>
                  <subNode:vars>
                   <scalar:array>
                    <node:Expr_ArrayDimFetch>
                     <attribute:startLine>
                      <scalar:int>1011</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>1011</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>1011</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>1011</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>zone</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:dim>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>1011</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>1011</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>id_product</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:dim>
                    </node:Expr_ArrayDimFetch>
                   </scalar:array>
                  </subNode:vars>
                 </node:Expr_Isset>
                </subNode:expr>
               </node:Expr_BooleanNot>
              </subNode:left>
              <subNode:right>
               <node:Expr_BooleanNot>
                <attribute:startLine>
                 <scalar:int>1011</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>1011</scalar:int>
                </attribute:endLine>
                <subNode:expr>
                 <node:Expr_StaticCall>
                  <attribute:startLine>
                   <scalar:int>1011</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>1011</scalar:int>
                  </attribute:endLine>
                  <subNode:class>
                   <node:Name_FullyQualified>
                    <attribute:startLine>
                     <scalar:int>1011</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>1011</scalar:int>
                    </attribute:endLine>
                    <subNode:parts>
                     <scalar:array>
                      <scalar:string>Validate</scalar:string>
                     </scalar:array>
                    </subNode:parts>
                   </node:Name_FullyQualified>
                  </subNode:class>
                  <subNode:name>
                   <scalar:string>isUnsignedInt</scalar:string>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>1011</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>1011</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Expr_ArrayDimFetch>
                       <attribute:startLine>
                        <scalar:int>1011</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>1011</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>1011</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>1011</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>zone</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:dim>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>1011</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>1011</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>id_product</scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:dim>
                      </node:Expr_ArrayDimFetch>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_StaticCall>
                </subNode:expr>
               </node:Expr_BooleanNot>
              </subNode:right>
             </node:Expr_BooleanOr>
            </subNode:cond>
           </node:Stmt_If>
          </scalar:array>
         </subNode:stmts>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>1001</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>1001</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>zones</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
         <subNode:valueVar>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>1001</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>1001</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>zone</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:valueVar>
        </node:Stmt_Foreach>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>1014</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>1014</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>1014</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>1014</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>1014</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>1014</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>true</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isSceneZones</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="1017">/**
	 *
	 * @param array $stock_management
	 * @return boolean return true if is a valide stock management
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>1022</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>1027</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>1022</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>1022</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>stock_management</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>1024</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>1025</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>1025</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>1025</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_ConstFetch>
              <attribute:startLine>
               <scalar:int>1025</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>1025</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>1025</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>1025</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>false</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
             </node:Expr_ConstFetch>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>1024</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>1024</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>1024</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>1024</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>1024</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>1024</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>in_array</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>1024</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>1024</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>1024</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>1024</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>stock_management</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>1024</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>1024</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Array>
                  <attribute:startLine>
                   <scalar:int>1024</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>1024</scalar:int>
                  </attribute:endLine>
                  <subNode:items>
                   <scalar:array>
                    <node:Expr_ArrayItem>
                     <attribute:startLine>
                      <scalar:int>1024</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>1024</scalar:int>
                     </attribute:endLine>
                     <subNode:key>
                      <scalar:null/>
                     </subNode:key>
                     <subNode:value>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>1024</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>1024</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>WA</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Expr_ArrayItem>
                    <node:Expr_ArrayItem>
                     <attribute:startLine>
                      <scalar:int>1024</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>1024</scalar:int>
                     </attribute:endLine>
                     <subNode:key>
                      <scalar:null/>
                     </subNode:key>
                     <subNode:value>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>1024</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>1024</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>FIFO</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Expr_ArrayItem>
                    <node:Expr_ArrayItem>
                     <attribute:startLine>
                      <scalar:int>1024</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>1024</scalar:int>
                     </attribute:endLine>
                     <subNode:key>
                      <scalar:null/>
                     </subNode:key>
                     <subNode:value>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>1024</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>1024</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>LIFO</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Expr_ArrayItem>
                   </scalar:array>
                  </subNode:items>
                 </node:Expr_Array>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>1026</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>1026</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>1026</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>1026</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>1026</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>1026</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>true</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isStockManagement</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="1029">/**
	 * Validate SIRET Code
	 * @static
	 * @param $siret SIRET Code
	 * @return boolean Return true if is valid
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>1035</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>1048</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>1035</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>1035</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>siret</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>1037</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>1038</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>1038</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>1038</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_ConstFetch>
              <attribute:startLine>
               <scalar:int>1038</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>1038</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>1038</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>1038</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>false</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
             </node:Expr_ConstFetch>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_NotEqual>
           <attribute:startLine>
            <scalar:int>1037</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>1037</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_StaticCall>
             <attribute:startLine>
              <scalar:int>1037</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>1037</scalar:int>
             </attribute:endLine>
             <subNode:class>
              <node:Name_FullyQualified>
               <attribute:startLine>
                <scalar:int>1037</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>1037</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>Tools</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name_FullyQualified>
             </subNode:class>
             <subNode:name>
              <scalar:string>strlen</scalar:string>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>1037</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>1037</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>1037</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>1037</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>siret</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_StaticCall>
           </subNode:left>
           <subNode:right>
            <node:Scalar_LNumber>
             <attribute:startLine>
              <scalar:int>1037</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>1037</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:int>14</scalar:int>
             </subNode:value>
            </node:Scalar_LNumber>
           </subNode:right>
          </node:Expr_NotEqual>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>1039</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>1039</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>1039</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>1039</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>sum</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>1039</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>1039</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>0</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_For>
         <attribute:startLine>
          <scalar:int>1040</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>1046</scalar:int>
         </attribute:endLine>
         <subNode:init>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>1040</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>1040</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>1040</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>1040</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>i</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Scalar_LNumber>
              <attribute:startLine>
               <scalar:int>1040</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>1040</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:int>0</scalar:int>
              </subNode:value>
             </node:Scalar_LNumber>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:init>
         <subNode:cond>
          <scalar:array>
           <node:Expr_NotEqual>
            <attribute:startLine>
             <scalar:int>1040</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>1040</scalar:int>
            </attribute:endLine>
            <subNode:left>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>1040</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>1040</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>i</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:left>
            <subNode:right>
             <node:Scalar_LNumber>
              <attribute:startLine>
               <scalar:int>1040</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>1040</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:int>14</scalar:int>
              </subNode:value>
             </node:Scalar_LNumber>
            </subNode:right>
           </node:Expr_NotEqual>
          </scalar:array>
         </subNode:cond>
         <subNode:loop>
          <scalar:array>
           <node:Expr_PostInc>
            <attribute:startLine>
             <scalar:int>1040</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>1040</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>1040</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>1040</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>i</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
           </node:Expr_PostInc>
          </scalar:array>
         </subNode:loop>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>1042</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>1042</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>1042</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>1042</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>tmp</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Mul>
              <attribute:startLine>
               <scalar:int>1042</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>1042</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_Plus>
                <attribute:startLine>
                 <scalar:int>1042</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>1042</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Expr_Mod>
                  <attribute:startLine>
                   <scalar:int>1042</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>1042</scalar:int>
                  </attribute:endLine>
                  <subNode:left>
                   <node:Expr_Plus>
                    <attribute:startLine>
                     <scalar:int>1042</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>1042</scalar:int>
                    </attribute:endLine>
                    <subNode:left>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>1042</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>1042</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>i</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:left>
                    <subNode:right>
                     <node:Scalar_LNumber>
                      <attribute:startLine>
                       <scalar:int>1042</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>1042</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <scalar:int>1</scalar:int>
                      </subNode:value>
                     </node:Scalar_LNumber>
                    </subNode:right>
                   </node:Expr_Plus>
                  </subNode:left>
                  <subNode:right>
                   <node:Scalar_LNumber>
                    <attribute:startLine>
                     <scalar:int>1042</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>1042</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:int>2</scalar:int>
                    </subNode:value>
                   </node:Scalar_LNumber>
                  </subNode:right>
                 </node:Expr_Mod>
                </subNode:left>
                <subNode:right>
                 <node:Scalar_LNumber>
                  <attribute:startLine>
                   <scalar:int>1042</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>1042</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:int>1</scalar:int>
                  </subNode:value>
                 </node:Scalar_LNumber>
                </subNode:right>
               </node:Expr_Plus>
              </subNode:left>
              <subNode:right>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>1042</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>1042</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>1042</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>1042</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>intval</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>1042</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>1042</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_ArrayDimFetch>
                     <attribute:startLine>
                      <scalar:int>1042</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>1042</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>1042</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>1042</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>siret</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:dim>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>1042</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>1042</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>i</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:dim>
                    </node:Expr_ArrayDimFetch>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:right>
             </node:Expr_Mul>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>1043</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>1044</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_AssignMinus>
               <attribute:startLine>
                <scalar:int>1044</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>1044</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>1044</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>1044</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>tmp</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:expr>
                <node:Scalar_LNumber>
                 <attribute:startLine>
                  <scalar:int>1044</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>1044</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:int>9</scalar:int>
                 </subNode:value>
                </node:Scalar_LNumber>
               </subNode:expr>
              </node:Expr_AssignMinus>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_GreaterOrEqual>
              <attribute:startLine>
               <scalar:int>1043</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>1043</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>1043</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>1043</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>tmp</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:left>
              <subNode:right>
               <node:Scalar_LNumber>
                <attribute:startLine>
                 <scalar:int>1043</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>1043</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:int>10</scalar:int>
                </subNode:value>
               </node:Scalar_LNumber>
              </subNode:right>
             </node:Expr_GreaterOrEqual>
            </subNode:cond>
           </node:Stmt_If>
           <node:Expr_AssignPlus>
            <attribute:startLine>
             <scalar:int>1045</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>1045</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>1045</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>1045</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>sum</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>1045</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>1045</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>tmp</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:expr>
           </node:Expr_AssignPlus>
          </scalar:array>
         </subNode:stmts>
        </node:Stmt_For>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>1047</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>1047</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Identical>
           <attribute:startLine>
            <scalar:int>1047</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>1047</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Mod>
             <attribute:startLine>
              <scalar:int>1047</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>1047</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>1047</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>1047</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>sum</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:left>
             <subNode:right>
              <node:Scalar_LNumber>
               <attribute:startLine>
                <scalar:int>1047</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>1047</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <scalar:int>10</scalar:int>
               </subNode:value>
              </node:Scalar_LNumber>
             </subNode:right>
            </node:Expr_Mod>
           </subNode:left>
           <subNode:right>
            <node:Scalar_LNumber>
             <attribute:startLine>
              <scalar:int>1047</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>1047</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:int>0</scalar:int>
             </subNode:value>
            </node:Scalar_LNumber>
           </subNode:right>
          </node:Expr_Identical>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isSiret</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="1050">/**
	 * Validate APE Code
	 * @static
	 * @param $ape APE Code
	 * @return boolean Return true if is valid
	 */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>1056</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>1059</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>1056</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>1056</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>ape</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>1058</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>1058</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Cast_Bool>
           <attribute:startLine>
            <scalar:int>1058</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>1058</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>1058</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>1058</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>1058</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>1058</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>preg_match</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>1058</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>1058</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>1058</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>1058</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>/^[0-9]{3,4}[a-zA-Z]{1}$/s</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>1058</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>1058</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>1058</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>1058</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>ape</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:expr>
          </node:Expr_Cast_Bool>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isApe</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:startLine>
       <scalar:int>1061</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>1064</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>1061</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>1061</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>name</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>1063</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>1063</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Cast_Bool>
           <attribute:startLine>
            <scalar:int>1063</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>1063</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_BooleanAnd>
             <attribute:startLine>
              <scalar:int>1063</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>1063</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_FuncCall>
               <attribute:startLine>
                <scalar:int>1063</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>1063</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>1063</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>1063</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>is_string</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>1063</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>1063</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>1063</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>1063</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>name</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_FuncCall>
             </subNode:left>
             <subNode:right>
              <node:Expr_FuncCall>
               <attribute:startLine>
                <scalar:int>1063</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>1063</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>1063</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>1063</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>preg_match</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>1063</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>1063</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>1063</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>1063</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>/^[0-9a-zA-Z-_]*$/u</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>1063</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>1063</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>1063</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>1063</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>name</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_FuncCall>
             </subNode:right>
            </node:Expr_BooleanAnd>
           </subNode:expr>
          </node:Expr_Cast_Bool>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isControllerName</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:startLine>
       <scalar:int>1066</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>1069</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>1066</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>1066</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>version</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>1068</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>1068</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanAnd>
           <attribute:startLine>
            <scalar:int>1068</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>1068</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>1068</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>1068</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>1068</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>1068</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>preg_match</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>1068</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>1068</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>1068</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>1068</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>/^[0-1]\.[0-9]{1,2}(\.[0-9]{1,2}){0,2}$/</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>1068</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>1068</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>1068</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>1068</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>version</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:left>
           <subNode:right>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>1068</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>1068</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>1068</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>1068</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>ip2long</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>1068</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>1068</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>1068</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>1068</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>version</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:right>
          </node:Expr_BooleanAnd>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isPrestaShopVersion</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
    </scalar:array>
   </subNode:stmts>
   <subNode:name>
    <scalar:string>ValidateCore</scalar:string>
   </subNode:name>
   <subNode:namespacedName>
    <node:Name>
     <attribute:comments>
      <scalar:array>
       <comment isDocComment="false" line="2">/*
* 2007-2013 PrestaShop
*
* NOTICE OF LICENSE
*
* This source file is subject to the Open Software License (OSL 3.0)
* that is bundled with this package in the file LICENSE.txt.
* It is also available through the world-wide-web at this URL:
* http://opensource.org/licenses/osl-3.0.php
* If you did not receive a copy of the license and are unable to
* obtain it through the world-wide-web, please send an email
* to license@prestashop.com so we can send you a copy immediately.
*
* DISCLAIMER
*
* Do not edit or add to this file if you wish to upgrade PrestaShop to newer
* versions in the future. If you wish to customize PrestaShop for your
* needs please refer to http://www.prestashop.com for more information.
*
*  @author PrestaShop SA &lt;contact@prestashop.com&gt;
*  @copyright  2007-2013 PrestaShop SA
*  @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
*  International Registered Trademark &amp; Property of PrestaShop SA
*/</comment>
      </scalar:array>
     </attribute:comments>
     <attribute:startLine>
      <scalar:int>27</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>1070</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>ValidateCore</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name>
   </subNode:namespacedName>
  </node:Stmt_Class>
 </scalar:array>
</AST>
