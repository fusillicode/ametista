<?xml version="1.0" encoding="UTF-8"?>
<AST xmlns:node="http://nikic.github.com/PHPParser/XML/node" xmlns:subNode="http://nikic.github.com/PHPParser/XML/subNode" xmlns:attribute="http://nikic.github.com/PHPParser/XML/attribute" xmlns:scalar="http://nikic.github.com/PHPParser/XML/scalar">
 <scalar:array>
  <node:Stmt_Function>
   <attribute:comments>
    <scalar:array>
     <comment isDocComment="true" line="2">/**
 * Smarty plugin
 *
 * @package Smarty
 * @subpackage PluginsFilter
 */</comment>
     <comment isDocComment="true" line="9">/**
 * Smarty trimwhitespace outputfilter plugin
 *
 * Trim unnecessary whitespace from HTML markup.
 *
 * @author   Rodney Rehm
 * @param string                   $source input string
 * @param Smarty_Internal_Template $smarty Smarty object
 * @return string filtered output
 * @todo substr_replace() is not overloaded by mbstring.func_overload - so this function might fail!
 */</comment>
    </scalar:array>
   </attribute:comments>
   <attribute:startLine>
    <scalar:int>20</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>92</scalar:int>
   </attribute:endLine>
   <subNode:byRef>
    <scalar:false/>
   </subNode:byRef>
   <subNode:params>
    <scalar:array>
     <node:Param>
      <attribute:startLine>
       <scalar:int>20</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>20</scalar:int>
      </attribute:endLine>
      <subNode:name>
       <scalar:string>source</scalar:string>
      </subNode:name>
      <subNode:default>
       <scalar:null/>
      </subNode:default>
      <subNode:type>
       <scalar:null/>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
     </node:Param>
     <node:Param>
      <attribute:startLine>
       <scalar:int>20</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>20</scalar:int>
      </attribute:endLine>
      <subNode:name>
       <scalar:string>smarty</scalar:string>
      </subNode:name>
      <subNode:default>
       <scalar:null/>
      </subNode:default>
      <subNode:type>
       <node:Name_FullyQualified>
        <attribute:startLine>
         <scalar:int>20</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>20</scalar:int>
        </attribute:endLine>
        <subNode:parts>
         <scalar:array>
          <scalar:string>Smarty_Internal_Template</scalar:string>
         </scalar:array>
        </subNode:parts>
       </node:Name_FullyQualified>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
     </node:Param>
    </scalar:array>
   </subNode:params>
   <subNode:stmts>
    <scalar:array>
     <node:Expr_Assign>
      <attribute:startLine>
       <scalar:int>22</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>22</scalar:int>
      </attribute:endLine>
      <subNode:var>
       <node:Expr_Variable>
        <attribute:startLine>
         <scalar:int>22</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>22</scalar:int>
        </attribute:endLine>
        <subNode:name>
         <scalar:string>store</scalar:string>
        </subNode:name>
       </node:Expr_Variable>
      </subNode:var>
      <subNode:expr>
       <node:Expr_Array>
        <attribute:startLine>
         <scalar:int>22</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>22</scalar:int>
        </attribute:endLine>
        <subNode:items>
         <scalar:array/>
        </subNode:items>
       </node:Expr_Array>
      </subNode:expr>
     </node:Expr_Assign>
     <node:Expr_Assign>
      <attribute:startLine>
       <scalar:int>23</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>23</scalar:int>
      </attribute:endLine>
      <subNode:var>
       <node:Expr_Variable>
        <attribute:startLine>
         <scalar:int>23</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>23</scalar:int>
        </attribute:endLine>
        <subNode:name>
         <scalar:string>_store</scalar:string>
        </subNode:name>
       </node:Expr_Variable>
      </subNode:var>
      <subNode:expr>
       <node:Scalar_LNumber>
        <attribute:startLine>
         <scalar:int>23</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>23</scalar:int>
        </attribute:endLine>
        <subNode:value>
         <scalar:int>0</scalar:int>
        </subNode:value>
       </node:Scalar_LNumber>
      </subNode:expr>
     </node:Expr_Assign>
     <node:Expr_Assign>
      <attribute:startLine>
       <scalar:int>24</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>24</scalar:int>
      </attribute:endLine>
      <subNode:var>
       <node:Expr_Variable>
        <attribute:startLine>
         <scalar:int>24</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>24</scalar:int>
        </attribute:endLine>
        <subNode:name>
         <scalar:string>_offset</scalar:string>
        </subNode:name>
       </node:Expr_Variable>
      </subNode:var>
      <subNode:expr>
       <node:Scalar_LNumber>
        <attribute:startLine>
         <scalar:int>24</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>24</scalar:int>
        </attribute:endLine>
        <subNode:value>
         <scalar:int>0</scalar:int>
        </subNode:value>
       </node:Scalar_LNumber>
      </subNode:expr>
     </node:Expr_Assign>
     <node:Expr_Assign>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="false" line="26">// Unify Line-Breaks to \n
</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>27</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>27</scalar:int>
      </attribute:endLine>
      <subNode:var>
       <node:Expr_Variable>
        <attribute:comments>
         <scalar:array>
          <comment isDocComment="false" line="26">// Unify Line-Breaks to \n
</comment>
         </scalar:array>
        </attribute:comments>
        <attribute:startLine>
         <scalar:int>27</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>27</scalar:int>
        </attribute:endLine>
        <subNode:name>
         <scalar:string>source</scalar:string>
        </subNode:name>
       </node:Expr_Variable>
      </subNode:var>
      <subNode:expr>
       <node:Expr_FuncCall>
        <attribute:startLine>
         <scalar:int>27</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>27</scalar:int>
        </attribute:endLine>
        <subNode:name>
         <node:Name>
          <attribute:startLine>
           <scalar:int>27</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>27</scalar:int>
          </attribute:endLine>
          <subNode:parts>
           <scalar:array>
            <scalar:string>preg_replace</scalar:string>
           </scalar:array>
          </subNode:parts>
         </node:Name>
        </subNode:name>
        <subNode:args>
         <scalar:array>
          <node:Arg>
           <attribute:startLine>
            <scalar:int>27</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>27</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>27</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>27</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string>/&#13;
|&#13;|
/</scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:value>
           <subNode:byRef>
            <scalar:false/>
           </subNode:byRef>
          </node:Arg>
          <node:Arg>
           <attribute:startLine>
            <scalar:int>27</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>27</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>27</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>27</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string>
</scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:value>
           <subNode:byRef>
            <scalar:false/>
           </subNode:byRef>
          </node:Arg>
          <node:Arg>
           <attribute:startLine>
            <scalar:int>27</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>27</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>27</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>27</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>source</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:value>
           <subNode:byRef>
            <scalar:false/>
           </subNode:byRef>
          </node:Arg>
         </scalar:array>
        </subNode:args>
       </node:Expr_FuncCall>
      </subNode:expr>
     </node:Expr_Assign>
     <node:Stmt_If>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="false" line="29">// capture Internet Explorer Conditional Comments
</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>30</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>40</scalar:int>
      </attribute:endLine>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Foreach>
         <attribute:startLine>
          <scalar:int>31</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>39</scalar:int>
         </attribute:endLine>
         <subNode:keyVar>
          <scalar:null/>
         </subNode:keyVar>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>32</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>32</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_ArrayDimFetch>
              <attribute:startLine>
               <scalar:int>32</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>32</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>32</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>32</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>store</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:dim>
               <scalar:null/>
              </subNode:dim>
             </node:Expr_ArrayDimFetch>
            </subNode:var>
            <subNode:expr>
             <node:Expr_ArrayDimFetch>
              <attribute:startLine>
               <scalar:int>32</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>32</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_ArrayDimFetch>
                <attribute:startLine>
                 <scalar:int>32</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>32</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>32</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>32</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>match</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:dim>
                 <node:Scalar_LNumber>
                  <attribute:startLine>
                   <scalar:int>32</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>32</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:int>0</scalar:int>
                  </subNode:value>
                 </node:Scalar_LNumber>
                </subNode:dim>
               </node:Expr_ArrayDimFetch>
              </subNode:var>
              <subNode:dim>
               <node:Scalar_LNumber>
                <attribute:startLine>
                 <scalar:int>32</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>32</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:int>0</scalar:int>
                </subNode:value>
               </node:Scalar_LNumber>
              </subNode:dim>
             </node:Expr_ArrayDimFetch>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>33</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>33</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>33</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>33</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>_length</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>33</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>33</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>33</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>33</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>strlen</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>33</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>33</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_ArrayDimFetch>
                   <attribute:startLine>
                    <scalar:int>33</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>33</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_ArrayDimFetch>
                     <attribute:startLine>
                      <scalar:int>33</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>33</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>33</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>33</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>match</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:dim>
                      <node:Scalar_LNumber>
                       <attribute:startLine>
                        <scalar:int>33</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>33</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:int>0</scalar:int>
                       </subNode:value>
                      </node:Scalar_LNumber>
                     </subNode:dim>
                    </node:Expr_ArrayDimFetch>
                   </subNode:var>
                   <subNode:dim>
                    <node:Scalar_LNumber>
                     <attribute:startLine>
                      <scalar:int>33</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>33</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:int>0</scalar:int>
                     </subNode:value>
                    </node:Scalar_LNumber>
                   </subNode:dim>
                  </node:Expr_ArrayDimFetch>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>34</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>34</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>34</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>34</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>replace</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Concat>
              <attribute:startLine>
               <scalar:int>34</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>34</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_Concat>
                <attribute:startLine>
                 <scalar:int>34</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>34</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>34</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>34</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>@!@SMARTY:</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:left>
                <subNode:right>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>34</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>34</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>_store</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:right>
               </node:Expr_Concat>
              </subNode:left>
              <subNode:right>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>34</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>34</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>:SMARTY@!@</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:right>
             </node:Expr_Concat>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>35</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>35</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>35</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>35</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>source</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>35</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>35</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>35</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>35</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>substr_replace</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>35</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>35</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>35</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>35</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>source</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>35</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>35</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>35</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>35</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>replace</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>35</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>35</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Minus>
                   <attribute:startLine>
                    <scalar:int>35</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>35</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Expr_ArrayDimFetch>
                     <attribute:startLine>
                      <scalar:int>35</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>35</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_ArrayDimFetch>
                       <attribute:startLine>
                        <scalar:int>35</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>35</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>35</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>35</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>match</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:dim>
                        <node:Scalar_LNumber>
                         <attribute:startLine>
                          <scalar:int>35</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>35</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:int>0</scalar:int>
                         </subNode:value>
                        </node:Scalar_LNumber>
                       </subNode:dim>
                      </node:Expr_ArrayDimFetch>
                     </subNode:var>
                     <subNode:dim>
                      <node:Scalar_LNumber>
                       <attribute:startLine>
                        <scalar:int>35</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>35</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:int>1</scalar:int>
                       </subNode:value>
                      </node:Scalar_LNumber>
                     </subNode:dim>
                    </node:Expr_ArrayDimFetch>
                   </subNode:left>
                   <subNode:right>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>35</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>35</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>_offset</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:right>
                  </node:Expr_Minus>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>35</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>35</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>35</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>35</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>_length</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_AssignPlus>
            <attribute:startLine>
             <scalar:int>37</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>37</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>37</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>37</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>_offset</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Minus>
              <attribute:startLine>
               <scalar:int>37</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>37</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>37</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>37</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>_length</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:left>
              <subNode:right>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>37</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>37</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>37</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>37</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>strlen</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>37</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>37</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>37</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>37</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>replace</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:right>
             </node:Expr_Minus>
            </subNode:expr>
           </node:Expr_AssignPlus>
           <node:Expr_PostInc>
            <attribute:startLine>
             <scalar:int>38</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>38</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>38</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>38</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>_store</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
           </node:Expr_PostInc>
          </scalar:array>
         </subNode:stmts>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>31</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>31</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>matches</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
         <subNode:valueVar>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>31</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>31</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>match</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:valueVar>
        </node:Stmt_Foreach>
       </scalar:array>
      </subNode:stmts>
      <subNode:elseifs>
       <scalar:array/>
      </subNode:elseifs>
      <subNode:else>
       <scalar:null/>
      </subNode:else>
      <subNode:cond>
       <node:Expr_FuncCall>
        <attribute:startLine>
         <scalar:int>30</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>30</scalar:int>
        </attribute:endLine>
        <subNode:name>
         <node:Name>
          <attribute:startLine>
           <scalar:int>30</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>30</scalar:int>
          </attribute:endLine>
          <subNode:parts>
           <scalar:array>
            <scalar:string>preg_match_all</scalar:string>
           </scalar:array>
          </subNode:parts>
         </node:Name>
        </subNode:name>
        <subNode:args>
         <scalar:array>
          <node:Arg>
           <attribute:startLine>
            <scalar:int>30</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>30</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>30</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>30</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string>#&lt;!--\[[^\]]+\]&gt;.*?&lt;!\[[^\]]+\]--&gt;#is</scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:value>
           <subNode:byRef>
            <scalar:false/>
           </subNode:byRef>
          </node:Arg>
          <node:Arg>
           <attribute:startLine>
            <scalar:int>30</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>30</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>30</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>30</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>source</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:value>
           <subNode:byRef>
            <scalar:false/>
           </subNode:byRef>
          </node:Arg>
          <node:Arg>
           <attribute:startLine>
            <scalar:int>30</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>30</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>30</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>30</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>matches</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:value>
           <subNode:byRef>
            <scalar:false/>
           </subNode:byRef>
          </node:Arg>
          <node:Arg>
           <attribute:startLine>
            <scalar:int>30</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>30</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <node:Expr_BitwiseOr>
             <attribute:startLine>
              <scalar:int>30</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>30</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_ConstFetch>
               <attribute:startLine>
                <scalar:int>30</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>30</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>30</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>30</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>PREG_OFFSET_CAPTURE</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
              </node:Expr_ConstFetch>
             </subNode:left>
             <subNode:right>
              <node:Expr_ConstFetch>
               <attribute:startLine>
                <scalar:int>30</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>30</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>30</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>30</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>PREG_SET_ORDER</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
              </node:Expr_ConstFetch>
             </subNode:right>
            </node:Expr_BitwiseOr>
           </subNode:value>
           <subNode:byRef>
            <scalar:false/>
           </subNode:byRef>
          </node:Arg>
         </scalar:array>
        </subNode:args>
       </node:Expr_FuncCall>
      </subNode:cond>
     </node:Stmt_If>
     <node:Expr_Assign>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="false" line="42">// Strip all HTML-Comments
</comment>
        <comment isDocComment="false" line="43">// yes, even the ones in &lt;script&gt; - see http://stackoverflow.com/a/808850/515124
</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>44</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>44</scalar:int>
      </attribute:endLine>
      <subNode:var>
       <node:Expr_Variable>
        <attribute:comments>
         <scalar:array>
          <comment isDocComment="false" line="42">// Strip all HTML-Comments
</comment>
          <comment isDocComment="false" line="43">// yes, even the ones in &lt;script&gt; - see http://stackoverflow.com/a/808850/515124
</comment>
         </scalar:array>
        </attribute:comments>
        <attribute:startLine>
         <scalar:int>44</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>44</scalar:int>
        </attribute:endLine>
        <subNode:name>
         <scalar:string>source</scalar:string>
        </subNode:name>
       </node:Expr_Variable>
      </subNode:var>
      <subNode:expr>
       <node:Expr_FuncCall>
        <attribute:startLine>
         <scalar:int>44</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>44</scalar:int>
        </attribute:endLine>
        <subNode:name>
         <node:Name>
          <attribute:startLine>
           <scalar:int>44</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>44</scalar:int>
          </attribute:endLine>
          <subNode:parts>
           <scalar:array>
            <scalar:string>preg_replace</scalar:string>
           </scalar:array>
          </subNode:parts>
         </node:Name>
        </subNode:name>
        <subNode:args>
         <scalar:array>
          <node:Arg>
           <attribute:startLine>
            <scalar:int>44</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>44</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>44</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>44</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string>#&lt;!--.*?--&gt;#ms</scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:value>
           <subNode:byRef>
            <scalar:false/>
           </subNode:byRef>
          </node:Arg>
          <node:Arg>
           <attribute:startLine>
            <scalar:int>44</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>44</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>44</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>44</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string></scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:value>
           <subNode:byRef>
            <scalar:false/>
           </subNode:byRef>
          </node:Arg>
          <node:Arg>
           <attribute:startLine>
            <scalar:int>44</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>44</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>44</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>44</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>source</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:value>
           <subNode:byRef>
            <scalar:false/>
           </subNode:byRef>
          </node:Arg>
         </scalar:array>
        </subNode:args>
       </node:Expr_FuncCall>
      </subNode:expr>
     </node:Expr_Assign>
     <node:Expr_Assign>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="false" line="46">// capture html elements not to be messed with
</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>47</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>47</scalar:int>
      </attribute:endLine>
      <subNode:var>
       <node:Expr_Variable>
        <attribute:comments>
         <scalar:array>
          <comment isDocComment="false" line="46">// capture html elements not to be messed with
</comment>
         </scalar:array>
        </attribute:comments>
        <attribute:startLine>
         <scalar:int>47</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>47</scalar:int>
        </attribute:endLine>
        <subNode:name>
         <scalar:string>_offset</scalar:string>
        </subNode:name>
       </node:Expr_Variable>
      </subNode:var>
      <subNode:expr>
       <node:Scalar_LNumber>
        <attribute:startLine>
         <scalar:int>47</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>47</scalar:int>
        </attribute:endLine>
        <subNode:value>
         <scalar:int>0</scalar:int>
        </subNode:value>
       </node:Scalar_LNumber>
      </subNode:expr>
     </node:Expr_Assign>
     <node:Stmt_If>
      <attribute:startLine>
       <scalar:int>48</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>58</scalar:int>
      </attribute:endLine>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Foreach>
         <attribute:startLine>
          <scalar:int>49</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>57</scalar:int>
         </attribute:endLine>
         <subNode:keyVar>
          <scalar:null/>
         </subNode:keyVar>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>50</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>50</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_ArrayDimFetch>
              <attribute:startLine>
               <scalar:int>50</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>50</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>50</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>50</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>store</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:dim>
               <scalar:null/>
              </subNode:dim>
             </node:Expr_ArrayDimFetch>
            </subNode:var>
            <subNode:expr>
             <node:Expr_ArrayDimFetch>
              <attribute:startLine>
               <scalar:int>50</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>50</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_ArrayDimFetch>
                <attribute:startLine>
                 <scalar:int>50</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>50</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>50</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>50</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>match</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:dim>
                 <node:Scalar_LNumber>
                  <attribute:startLine>
                   <scalar:int>50</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>50</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:int>0</scalar:int>
                  </subNode:value>
                 </node:Scalar_LNumber>
                </subNode:dim>
               </node:Expr_ArrayDimFetch>
              </subNode:var>
              <subNode:dim>
               <node:Scalar_LNumber>
                <attribute:startLine>
                 <scalar:int>50</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>50</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:int>0</scalar:int>
                </subNode:value>
               </node:Scalar_LNumber>
              </subNode:dim>
             </node:Expr_ArrayDimFetch>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>51</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>51</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>51</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>51</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>_length</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>51</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>51</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>51</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>51</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>strlen</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>51</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>51</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_ArrayDimFetch>
                   <attribute:startLine>
                    <scalar:int>51</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>51</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_ArrayDimFetch>
                     <attribute:startLine>
                      <scalar:int>51</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>51</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>51</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>51</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>match</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:dim>
                      <node:Scalar_LNumber>
                       <attribute:startLine>
                        <scalar:int>51</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>51</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:int>0</scalar:int>
                       </subNode:value>
                      </node:Scalar_LNumber>
                     </subNode:dim>
                    </node:Expr_ArrayDimFetch>
                   </subNode:var>
                   <subNode:dim>
                    <node:Scalar_LNumber>
                     <attribute:startLine>
                      <scalar:int>51</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>51</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:int>0</scalar:int>
                     </subNode:value>
                    </node:Scalar_LNumber>
                   </subNode:dim>
                  </node:Expr_ArrayDimFetch>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>52</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>52</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>52</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>52</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>replace</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Concat>
              <attribute:startLine>
               <scalar:int>52</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>52</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_Concat>
                <attribute:startLine>
                 <scalar:int>52</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>52</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>52</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>52</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>@!@SMARTY:</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:left>
                <subNode:right>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>52</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>52</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>_store</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:right>
               </node:Expr_Concat>
              </subNode:left>
              <subNode:right>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>52</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>52</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>:SMARTY@!@</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:right>
             </node:Expr_Concat>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>53</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>53</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>53</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>53</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>source</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>53</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>53</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>53</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>53</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>substr_replace</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>53</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>53</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>53</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>53</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>source</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>53</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>53</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>53</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>53</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>replace</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>53</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>53</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Minus>
                   <attribute:startLine>
                    <scalar:int>53</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>53</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Expr_ArrayDimFetch>
                     <attribute:startLine>
                      <scalar:int>53</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>53</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_ArrayDimFetch>
                       <attribute:startLine>
                        <scalar:int>53</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>53</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>53</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>53</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>match</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:dim>
                        <node:Scalar_LNumber>
                         <attribute:startLine>
                          <scalar:int>53</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>53</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:int>0</scalar:int>
                         </subNode:value>
                        </node:Scalar_LNumber>
                       </subNode:dim>
                      </node:Expr_ArrayDimFetch>
                     </subNode:var>
                     <subNode:dim>
                      <node:Scalar_LNumber>
                       <attribute:startLine>
                        <scalar:int>53</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>53</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:int>1</scalar:int>
                       </subNode:value>
                      </node:Scalar_LNumber>
                     </subNode:dim>
                    </node:Expr_ArrayDimFetch>
                   </subNode:left>
                   <subNode:right>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>53</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>53</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>_offset</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:right>
                  </node:Expr_Minus>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>53</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>53</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>53</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>53</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>_length</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_AssignPlus>
            <attribute:startLine>
             <scalar:int>55</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>55</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>55</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>55</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>_offset</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Minus>
              <attribute:startLine>
               <scalar:int>55</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>55</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>55</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>55</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>_length</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:left>
              <subNode:right>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>55</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>55</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>55</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>55</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>strlen</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>55</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>55</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>55</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>55</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>replace</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:right>
             </node:Expr_Minus>
            </subNode:expr>
           </node:Expr_AssignPlus>
           <node:Expr_PostInc>
            <attribute:startLine>
             <scalar:int>56</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>56</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>56</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>56</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>_store</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
           </node:Expr_PostInc>
          </scalar:array>
         </subNode:stmts>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>49</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>49</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>matches</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
         <subNode:valueVar>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>49</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>49</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>match</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:valueVar>
        </node:Stmt_Foreach>
       </scalar:array>
      </subNode:stmts>
      <subNode:elseifs>
       <scalar:array/>
      </subNode:elseifs>
      <subNode:else>
       <scalar:null/>
      </subNode:else>
      <subNode:cond>
       <node:Expr_FuncCall>
        <attribute:startLine>
         <scalar:int>48</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>48</scalar:int>
        </attribute:endLine>
        <subNode:name>
         <node:Name>
          <attribute:startLine>
           <scalar:int>48</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>48</scalar:int>
          </attribute:endLine>
          <subNode:parts>
           <scalar:array>
            <scalar:string>preg_match_all</scalar:string>
           </scalar:array>
          </subNode:parts>
         </node:Name>
        </subNode:name>
        <subNode:args>
         <scalar:array>
          <node:Arg>
           <attribute:startLine>
            <scalar:int>48</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>48</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>48</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>48</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string>#&lt;(script|pre|textarea)[^&gt;]*&gt;.*?&lt;/\1&gt;#is</scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:value>
           <subNode:byRef>
            <scalar:false/>
           </subNode:byRef>
          </node:Arg>
          <node:Arg>
           <attribute:startLine>
            <scalar:int>48</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>48</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>48</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>48</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>source</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:value>
           <subNode:byRef>
            <scalar:false/>
           </subNode:byRef>
          </node:Arg>
          <node:Arg>
           <attribute:startLine>
            <scalar:int>48</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>48</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>48</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>48</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>matches</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:value>
           <subNode:byRef>
            <scalar:false/>
           </subNode:byRef>
          </node:Arg>
          <node:Arg>
           <attribute:startLine>
            <scalar:int>48</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>48</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <node:Expr_BitwiseOr>
             <attribute:startLine>
              <scalar:int>48</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>48</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_ConstFetch>
               <attribute:startLine>
                <scalar:int>48</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>48</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>48</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>48</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>PREG_OFFSET_CAPTURE</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
              </node:Expr_ConstFetch>
             </subNode:left>
             <subNode:right>
              <node:Expr_ConstFetch>
               <attribute:startLine>
                <scalar:int>48</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>48</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>48</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>48</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>PREG_SET_ORDER</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
              </node:Expr_ConstFetch>
             </subNode:right>
            </node:Expr_BitwiseOr>
           </subNode:value>
           <subNode:byRef>
            <scalar:false/>
           </subNode:byRef>
          </node:Arg>
         </scalar:array>
        </subNode:args>
       </node:Expr_FuncCall>
      </subNode:cond>
     </node:Stmt_If>
     <node:Expr_Assign>
      <attribute:startLine>
       <scalar:int>60</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>70</scalar:int>
      </attribute:endLine>
      <subNode:var>
       <node:Expr_Variable>
        <attribute:startLine>
         <scalar:int>60</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>60</scalar:int>
        </attribute:endLine>
        <subNode:name>
         <scalar:string>expressions</scalar:string>
        </subNode:name>
       </node:Expr_Variable>
      </subNode:var>
      <subNode:expr>
       <node:Expr_Array>
        <attribute:startLine>
         <scalar:int>60</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>70</scalar:int>
        </attribute:endLine>
        <subNode:items>
         <scalar:array>
          <node:Expr_ArrayItem>
           <attribute:comments>
            <scalar:array>
             <comment isDocComment="false" line="61">// replace multiple spaces between tags by a single space
</comment>
             <comment isDocComment="false" line="62">// can't remove them entirely, becaue that might break poorly implemented CSS display:inline-block elements
</comment>
            </scalar:array>
           </attribute:comments>
           <attribute:startLine>
            <scalar:int>63</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>63</scalar:int>
           </attribute:endLine>
           <subNode:key>
            <node:Scalar_String>
             <attribute:comments>
              <scalar:array>
               <comment isDocComment="false" line="61">// replace multiple spaces between tags by a single space
</comment>
               <comment isDocComment="false" line="62">// can't remove them entirely, becaue that might break poorly implemented CSS display:inline-block elements
</comment>
              </scalar:array>
             </attribute:comments>
             <attribute:startLine>
              <scalar:int>63</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>63</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string>#(:SMARTY@!@|&gt;)\s+(?=@!@SMARTY:|&lt;)#s</scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:key>
           <subNode:value>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>63</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>63</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string>\1 \2</scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:value>
           <subNode:byRef>
            <scalar:false/>
           </subNode:byRef>
          </node:Expr_ArrayItem>
          <node:Expr_ArrayItem>
           <attribute:comments>
            <scalar:array>
             <comment isDocComment="false" line="64">// remove spaces between attributes (but not in attribute values!)
</comment>
            </scalar:array>
           </attribute:comments>
           <attribute:startLine>
            <scalar:int>65</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>65</scalar:int>
           </attribute:endLine>
           <subNode:key>
            <node:Scalar_String>
             <attribute:comments>
              <scalar:array>
               <comment isDocComment="false" line="64">// remove spaces between attributes (but not in attribute values!)
</comment>
              </scalar:array>
             </attribute:comments>
             <attribute:startLine>
              <scalar:int>65</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>65</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string>#(([a-z0-9]\s*=\s*([&quot;'])[^\3]*?\3)|&lt;[a-z0-9_]+)\s+([a-z/&gt;])#is</scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:key>
           <subNode:value>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>65</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>65</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string>\1 \4</scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:value>
           <subNode:byRef>
            <scalar:false/>
           </subNode:byRef>
          </node:Expr_ArrayItem>
          <node:Expr_ArrayItem>
           <attribute:comments>
            <scalar:array>
             <comment isDocComment="false" line="66">// note: for some very weird reason trim() seems to remove spaces inside attributes.
</comment>
             <comment isDocComment="false" line="67">// maybe a \0 byte or something is interfering?
</comment>
            </scalar:array>
           </attribute:comments>
           <attribute:startLine>
            <scalar:int>68</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>68</scalar:int>
           </attribute:endLine>
           <subNode:key>
            <node:Scalar_String>
             <attribute:comments>
              <scalar:array>
               <comment isDocComment="false" line="66">// note: for some very weird reason trim() seems to remove spaces inside attributes.
</comment>
               <comment isDocComment="false" line="67">// maybe a \0 byte or something is interfering?
</comment>
              </scalar:array>
             </attribute:comments>
             <attribute:startLine>
              <scalar:int>68</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>68</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string>#^\s+&lt;#Ss</scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:key>
           <subNode:value>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>68</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>68</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string>&lt;</scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:value>
           <subNode:byRef>
            <scalar:false/>
           </subNode:byRef>
          </node:Expr_ArrayItem>
          <node:Expr_ArrayItem>
           <attribute:startLine>
            <scalar:int>69</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>69</scalar:int>
           </attribute:endLine>
           <subNode:key>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>69</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>69</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string>#&gt;\s+$#Ss</scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:key>
           <subNode:value>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>69</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>69</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string>&gt;</scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:value>
           <subNode:byRef>
            <scalar:false/>
           </subNode:byRef>
          </node:Expr_ArrayItem>
         </scalar:array>
        </subNode:items>
       </node:Expr_Array>
      </subNode:expr>
     </node:Expr_Assign>
     <node:Expr_Assign>
      <attribute:startLine>
       <scalar:int>72</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>72</scalar:int>
      </attribute:endLine>
      <subNode:var>
       <node:Expr_Variable>
        <attribute:startLine>
         <scalar:int>72</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>72</scalar:int>
        </attribute:endLine>
        <subNode:name>
         <scalar:string>source</scalar:string>
        </subNode:name>
       </node:Expr_Variable>
      </subNode:var>
      <subNode:expr>
       <node:Expr_FuncCall>
        <attribute:startLine>
         <scalar:int>72</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>72</scalar:int>
        </attribute:endLine>
        <subNode:name>
         <node:Name>
          <attribute:startLine>
           <scalar:int>72</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>72</scalar:int>
          </attribute:endLine>
          <subNode:parts>
           <scalar:array>
            <scalar:string>preg_replace</scalar:string>
           </scalar:array>
          </subNode:parts>
         </node:Name>
        </subNode:name>
        <subNode:args>
         <scalar:array>
          <node:Arg>
           <attribute:startLine>
            <scalar:int>72</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>72</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>72</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>72</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>72</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>72</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>array_keys</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>72</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>72</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>72</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>72</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>expressions</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:value>
           <subNode:byRef>
            <scalar:false/>
           </subNode:byRef>
          </node:Arg>
          <node:Arg>
           <attribute:startLine>
            <scalar:int>72</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>72</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>72</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>72</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>72</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>72</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>array_values</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>72</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>72</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>72</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>72</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>expressions</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:value>
           <subNode:byRef>
            <scalar:false/>
           </subNode:byRef>
          </node:Arg>
          <node:Arg>
           <attribute:startLine>
            <scalar:int>72</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>72</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>72</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>72</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>source</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:value>
           <subNode:byRef>
            <scalar:false/>
           </subNode:byRef>
          </node:Arg>
         </scalar:array>
        </subNode:args>
       </node:Expr_FuncCall>
      </subNode:expr>
     </node:Expr_Assign>
     <node:Expr_Assign>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="false" line="73">// note: for some very weird reason trim() seems to remove spaces inside attributes.
</comment>
        <comment isDocComment="false" line="74">// maybe a \0 byte or something is interfering?
</comment>
        <comment isDocComment="false" line="75">// $source = trim( $source );
</comment>
        <comment isDocComment="false" line="77">// capture html elements not to be messed with
</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>78</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>78</scalar:int>
      </attribute:endLine>
      <subNode:var>
       <node:Expr_Variable>
        <attribute:comments>
         <scalar:array>
          <comment isDocComment="false" line="73">// note: for some very weird reason trim() seems to remove spaces inside attributes.
</comment>
          <comment isDocComment="false" line="74">// maybe a \0 byte or something is interfering?
</comment>
          <comment isDocComment="false" line="75">// $source = trim( $source );
</comment>
          <comment isDocComment="false" line="77">// capture html elements not to be messed with
</comment>
         </scalar:array>
        </attribute:comments>
        <attribute:startLine>
         <scalar:int>78</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>78</scalar:int>
        </attribute:endLine>
        <subNode:name>
         <scalar:string>_offset</scalar:string>
        </subNode:name>
       </node:Expr_Variable>
      </subNode:var>
      <subNode:expr>
       <node:Scalar_LNumber>
        <attribute:startLine>
         <scalar:int>78</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>78</scalar:int>
        </attribute:endLine>
        <subNode:value>
         <scalar:int>0</scalar:int>
        </subNode:value>
       </node:Scalar_LNumber>
      </subNode:expr>
     </node:Expr_Assign>
     <node:Stmt_If>
      <attribute:startLine>
       <scalar:int>79</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>89</scalar:int>
      </attribute:endLine>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Foreach>
         <attribute:startLine>
          <scalar:int>80</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>88</scalar:int>
         </attribute:endLine>
         <subNode:keyVar>
          <scalar:null/>
         </subNode:keyVar>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>81</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>81</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_ArrayDimFetch>
              <attribute:startLine>
               <scalar:int>81</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>81</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>81</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>81</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>store</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:dim>
               <scalar:null/>
              </subNode:dim>
             </node:Expr_ArrayDimFetch>
            </subNode:var>
            <subNode:expr>
             <node:Expr_ArrayDimFetch>
              <attribute:startLine>
               <scalar:int>81</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>81</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_ArrayDimFetch>
                <attribute:startLine>
                 <scalar:int>81</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>81</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>81</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>81</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>match</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:dim>
                 <node:Scalar_LNumber>
                  <attribute:startLine>
                   <scalar:int>81</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>81</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:int>0</scalar:int>
                  </subNode:value>
                 </node:Scalar_LNumber>
                </subNode:dim>
               </node:Expr_ArrayDimFetch>
              </subNode:var>
              <subNode:dim>
               <node:Scalar_LNumber>
                <attribute:startLine>
                 <scalar:int>81</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>81</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:int>0</scalar:int>
                </subNode:value>
               </node:Scalar_LNumber>
              </subNode:dim>
             </node:Expr_ArrayDimFetch>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>82</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>82</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>82</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>82</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>_length</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>82</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>82</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>82</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>82</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>strlen</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>82</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>82</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_ArrayDimFetch>
                   <attribute:startLine>
                    <scalar:int>82</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>82</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_ArrayDimFetch>
                     <attribute:startLine>
                      <scalar:int>82</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>82</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>82</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>82</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>match</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:dim>
                      <node:Scalar_LNumber>
                       <attribute:startLine>
                        <scalar:int>82</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>82</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:int>0</scalar:int>
                       </subNode:value>
                      </node:Scalar_LNumber>
                     </subNode:dim>
                    </node:Expr_ArrayDimFetch>
                   </subNode:var>
                   <subNode:dim>
                    <node:Scalar_LNumber>
                     <attribute:startLine>
                      <scalar:int>82</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>82</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:int>0</scalar:int>
                     </subNode:value>
                    </node:Scalar_LNumber>
                   </subNode:dim>
                  </node:Expr_ArrayDimFetch>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>83</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>83</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>83</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>83</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>replace</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>83</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>83</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>83</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>83</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>array_shift</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>83</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>83</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>83</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>83</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>store</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>84</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>84</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>84</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>84</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>source</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>84</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>84</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>84</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>84</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>substr_replace</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>84</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>84</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>84</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>84</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>source</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>84</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>84</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>84</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>84</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>replace</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>84</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>84</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Plus>
                   <attribute:startLine>
                    <scalar:int>84</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>84</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Expr_ArrayDimFetch>
                     <attribute:startLine>
                      <scalar:int>84</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>84</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_ArrayDimFetch>
                       <attribute:startLine>
                        <scalar:int>84</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>84</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>84</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>84</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>match</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:dim>
                        <node:Scalar_LNumber>
                         <attribute:startLine>
                          <scalar:int>84</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>84</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:int>0</scalar:int>
                         </subNode:value>
                        </node:Scalar_LNumber>
                       </subNode:dim>
                      </node:Expr_ArrayDimFetch>
                     </subNode:var>
                     <subNode:dim>
                      <node:Scalar_LNumber>
                       <attribute:startLine>
                        <scalar:int>84</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>84</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:int>1</scalar:int>
                       </subNode:value>
                      </node:Scalar_LNumber>
                     </subNode:dim>
                    </node:Expr_ArrayDimFetch>
                   </subNode:left>
                   <subNode:right>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>84</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>84</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>_offset</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:right>
                  </node:Expr_Plus>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>84</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>84</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>84</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>84</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>_length</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_AssignPlus>
            <attribute:startLine>
             <scalar:int>86</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>86</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>86</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>86</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>_offset</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Minus>
              <attribute:startLine>
               <scalar:int>86</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>86</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>86</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>86</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>86</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>86</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>strlen</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>86</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>86</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>86</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>86</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>replace</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:left>
              <subNode:right>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>86</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>86</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>_length</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:right>
             </node:Expr_Minus>
            </subNode:expr>
           </node:Expr_AssignPlus>
           <node:Expr_PostInc>
            <attribute:startLine>
             <scalar:int>87</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>87</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>87</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>87</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>_store</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
           </node:Expr_PostInc>
          </scalar:array>
         </subNode:stmts>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>80</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>80</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>matches</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
         <subNode:valueVar>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>80</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>80</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>match</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:valueVar>
        </node:Stmt_Foreach>
       </scalar:array>
      </subNode:stmts>
      <subNode:elseifs>
       <scalar:array/>
      </subNode:elseifs>
      <subNode:else>
       <scalar:null/>
      </subNode:else>
      <subNode:cond>
       <node:Expr_FuncCall>
        <attribute:startLine>
         <scalar:int>79</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>79</scalar:int>
        </attribute:endLine>
        <subNode:name>
         <node:Name>
          <attribute:startLine>
           <scalar:int>79</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>79</scalar:int>
          </attribute:endLine>
          <subNode:parts>
           <scalar:array>
            <scalar:string>preg_match_all</scalar:string>
           </scalar:array>
          </subNode:parts>
         </node:Name>
        </subNode:name>
        <subNode:args>
         <scalar:array>
          <node:Arg>
           <attribute:startLine>
            <scalar:int>79</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>79</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>79</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>79</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string>#@!@SMARTY:([0-9]+):SMARTY@!@#is</scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:value>
           <subNode:byRef>
            <scalar:false/>
           </subNode:byRef>
          </node:Arg>
          <node:Arg>
           <attribute:startLine>
            <scalar:int>79</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>79</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>79</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>79</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>source</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:value>
           <subNode:byRef>
            <scalar:false/>
           </subNode:byRef>
          </node:Arg>
          <node:Arg>
           <attribute:startLine>
            <scalar:int>79</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>79</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>79</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>79</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>matches</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:value>
           <subNode:byRef>
            <scalar:false/>
           </subNode:byRef>
          </node:Arg>
          <node:Arg>
           <attribute:startLine>
            <scalar:int>79</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>79</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <node:Expr_BitwiseOr>
             <attribute:startLine>
              <scalar:int>79</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>79</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_ConstFetch>
               <attribute:startLine>
                <scalar:int>79</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>79</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>79</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>79</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>PREG_OFFSET_CAPTURE</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
              </node:Expr_ConstFetch>
             </subNode:left>
             <subNode:right>
              <node:Expr_ConstFetch>
               <attribute:startLine>
                <scalar:int>79</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>79</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>79</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>79</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>PREG_SET_ORDER</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
              </node:Expr_ConstFetch>
             </subNode:right>
            </node:Expr_BitwiseOr>
           </subNode:value>
           <subNode:byRef>
            <scalar:false/>
           </subNode:byRef>
          </node:Arg>
         </scalar:array>
        </subNode:args>
       </node:Expr_FuncCall>
      </subNode:cond>
     </node:Stmt_If>
     <node:Stmt_Return>
      <attribute:startLine>
       <scalar:int>91</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>91</scalar:int>
      </attribute:endLine>
      <subNode:expr>
       <node:Expr_Variable>
        <attribute:startLine>
         <scalar:int>91</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>91</scalar:int>
        </attribute:endLine>
        <subNode:name>
         <scalar:string>source</scalar:string>
        </subNode:name>
       </node:Expr_Variable>
      </subNode:expr>
     </node:Stmt_Return>
    </scalar:array>
   </subNode:stmts>
   <subNode:name>
    <scalar:string>smarty_outputfilter_trimwhitespace</scalar:string>
   </subNode:name>
   <subNode:namespacedName>
    <node:Name>
     <attribute:comments>
      <scalar:array>
       <comment isDocComment="true" line="2">/**
 * Smarty plugin
 *
 * @package Smarty
 * @subpackage PluginsFilter
 */</comment>
       <comment isDocComment="true" line="9">/**
 * Smarty trimwhitespace outputfilter plugin
 *
 * Trim unnecessary whitespace from HTML markup.
 *
 * @author   Rodney Rehm
 * @param string                   $source input string
 * @param Smarty_Internal_Template $smarty Smarty object
 * @return string filtered output
 * @todo substr_replace() is not overloaded by mbstring.func_overload - so this function might fail!
 */</comment>
      </scalar:array>
     </attribute:comments>
     <attribute:startLine>
      <scalar:int>20</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>92</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>smarty_outputfilter_trimwhitespace</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name>
   </subNode:namespacedName>
  </node:Stmt_Function>
 </scalar:array>
</AST>
