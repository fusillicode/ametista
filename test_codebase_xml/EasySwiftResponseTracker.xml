<?xml version="1.0" encoding="UTF-8"?>
<AST xmlns:node="http://nikic.github.com/PHPParser/XML/node" xmlns:subNode="http://nikic.github.com/PHPParser/XML/subNode" xmlns:attribute="http://nikic.github.com/PHPParser/XML/attribute" xmlns:scalar="http://nikic.github.com/PHPParser/XML/scalar">
 <scalar:array>
  <node:Expr_Include>
   <attribute:comments>
    <scalar:array>
     <comment isDocComment="true" line="3">/**
 * EasySwift Response Tracker
 * Please read the LICENSE file
 * @copyright Chris Corbyn &lt;chris@w3style.co.uk&gt;
 * @author Chris Corbyn &lt;chris@w3style.co.uk&gt;
 * @package EasySwift
 * @license GNU Lesser General Public License
 */</comment>
    </scalar:array>
   </attribute:comments>
   <attribute:startLine>
    <scalar:int>12</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>12</scalar:int>
   </attribute:endLine>
   <subNode:expr>
    <node:Expr_Concat>
     <attribute:startLine>
      <scalar:int>12</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>12</scalar:int>
     </attribute:endLine>
     <subNode:left>
      <node:Expr_FuncCall>
       <attribute:startLine>
        <scalar:int>12</scalar:int>
       </attribute:startLine>
       <attribute:endLine>
        <scalar:int>12</scalar:int>
       </attribute:endLine>
       <subNode:name>
        <node:Name>
         <attribute:startLine>
          <scalar:int>12</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>12</scalar:int>
         </attribute:endLine>
         <subNode:parts>
          <scalar:array>
           <scalar:string>dirname</scalar:string>
          </scalar:array>
         </subNode:parts>
        </node:Name>
       </subNode:name>
       <subNode:args>
        <scalar:array>
         <node:Arg>
          <attribute:startLine>
           <scalar:int>12</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>12</scalar:int>
          </attribute:endLine>
          <subNode:value>
           <node:Scalar_FileConst>
            <attribute:startLine>
             <scalar:int>12</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>12</scalar:int>
            </attribute:endLine>
           </node:Scalar_FileConst>
          </subNode:value>
          <subNode:byRef>
           <scalar:false/>
          </subNode:byRef>
         </node:Arg>
        </scalar:array>
       </subNode:args>
      </node:Expr_FuncCall>
     </subNode:left>
     <subNode:right>
      <node:Scalar_String>
       <attribute:startLine>
        <scalar:int>12</scalar:int>
       </attribute:startLine>
       <attribute:endLine>
        <scalar:int>12</scalar:int>
       </attribute:endLine>
       <subNode:value>
        <scalar:string>/../ClassLoader.php</scalar:string>
       </subNode:value>
      </node:Scalar_String>
     </subNode:right>
    </node:Expr_Concat>
   </subNode:expr>
   <subNode:type>
    <scalar:int>4</scalar:int>
   </subNode:type>
  </node:Expr_Include>
  <node:Expr_StaticCall>
   <attribute:startLine>
    <scalar:int>13</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>13</scalar:int>
   </attribute:endLine>
   <subNode:class>
    <node:Name_FullyQualified>
     <attribute:startLine>
      <scalar:int>13</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>13</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Swift_ClassLoader</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name_FullyQualified>
   </subNode:class>
   <subNode:name>
    <scalar:string>load</scalar:string>
   </subNode:name>
   <subNode:args>
    <scalar:array>
     <node:Arg>
      <attribute:startLine>
       <scalar:int>13</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>13</scalar:int>
      </attribute:endLine>
      <subNode:value>
       <node:Scalar_String>
        <attribute:startLine>
         <scalar:int>13</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>13</scalar:int>
        </attribute:endLine>
        <subNode:value>
         <scalar:string>Swift_Events_ResponseListener</scalar:string>
        </subNode:value>
       </node:Scalar_String>
      </subNode:value>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
     </node:Arg>
    </scalar:array>
   </subNode:args>
  </node:Expr_StaticCall>
  <node:Stmt_Class>
   <attribute:comments>
    <scalar:array>
     <comment isDocComment="true" line="15">/**
 * EasySwift, Swift Response Tracker.
 * Updates properties in EasySwift when a response is received by Swift.
 * @package EasySwift
 * @author Chris Corbyn &lt;chris@w3style.co.uk&gt;
 */</comment>
    </scalar:array>
   </attribute:comments>
   <attribute:startLine>
    <scalar:int>21</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>46</scalar:int>
   </attribute:endLine>
   <subNode:type>
    <scalar:int>0</scalar:int>
   </subNode:type>
   <subNode:extends>
    <scalar:null/>
   </subNode:extends>
   <subNode:implements>
    <scalar:array>
     <node:Name_FullyQualified>
      <attribute:startLine>
       <scalar:int>21</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>21</scalar:int>
      </attribute:endLine>
      <subNode:parts>
       <scalar:array>
        <scalar:string>Swift_Events_ResponseListener</scalar:string>
       </scalar:array>
      </subNode:parts>
     </node:Name_FullyQualified>
    </scalar:array>
   </subNode:implements>
   <subNode:stmts>
    <scalar:array>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="23">/**
   * The target object to update
   * @var EasySwift
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>27</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>27</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>27</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>27</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>target</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>27</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>27</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>27</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>27</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="29">/**
   * Constructor
   * @param EasySwift The instance of EasySwift to run against
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>33</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>36</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>33</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>33</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>obj</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>35</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>35</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>35</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>35</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>35</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>35</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>target</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>35</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>35</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>obj</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Expr_Assign>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>__construct</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="37">/**
   * Response listener method
   * @param Swift_Events_ResponseEvent The event occurred in Swift
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>41</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>45</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>41</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>41</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>e</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <node:Name_FullyQualified>
           <attribute:startLine>
            <scalar:int>41</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>41</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>Swift_Events_ResponseEvent</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name_FullyQualified>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>43</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>43</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>43</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>43</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>43</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>43</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>43</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>43</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>target</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:var>
           <subNode:name>
            <scalar:string>lastResponse</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>43</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>43</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>43</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>43</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>e</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>getString</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>44</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>44</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>44</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>44</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>44</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>44</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>44</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>44</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>target</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:var>
           <subNode:name>
            <scalar:string>responseCode</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>44</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>44</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>44</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>44</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>e</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>getCode</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Expr_Assign>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>responseReceived</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
    </scalar:array>
   </subNode:stmts>
   <subNode:name>
    <scalar:string>Swift_Plugin_EasySwiftResponseTracker</scalar:string>
   </subNode:name>
   <subNode:namespacedName>
    <node:Name>
     <attribute:comments>
      <scalar:array>
       <comment isDocComment="true" line="15">/**
 * EasySwift, Swift Response Tracker.
 * Updates properties in EasySwift when a response is received by Swift.
 * @package EasySwift
 * @author Chris Corbyn &lt;chris@w3style.co.uk&gt;
 */</comment>
      </scalar:array>
     </attribute:comments>
     <attribute:startLine>
      <scalar:int>21</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>46</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Swift_Plugin_EasySwiftResponseTracker</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name>
   </subNode:namespacedName>
  </node:Stmt_Class>
 </scalar:array>
</AST>
