<?xml version="1.0" encoding="UTF-8"?>
<AST xmlns:node="http://nikic.github.com/PHPParser/XML/node" xmlns:subNode="http://nikic.github.com/PHPParser/XML/subNode" xmlns:attribute="http://nikic.github.com/PHPParser/XML/attribute" xmlns:scalar="http://nikic.github.com/PHPParser/XML/scalar">
 <scalar:array>
  <node:Stmt_Class>
   <attribute:comments>
    <scalar:array>
     <comment isDocComment="true" line="3">/**
 * Smarty Internal Plugin Compile Insert
 *
 * Compiles the {insert} tag
 *
 * @package Smarty
 * @subpackage Compiler
 * @author Uwe Tews
 */</comment>
     <comment isDocComment="true" line="13">/**
 * Smarty Internal Plugin Compile Insert Class
 *
 * @package Smarty
 * @subpackage Compiler
 */</comment>
    </scalar:array>
   </attribute:comments>
   <attribute:startLine>
    <scalar:int>19</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>140</scalar:int>
   </attribute:endLine>
   <subNode:type>
    <scalar:int>0</scalar:int>
   </subNode:type>
   <subNode:extends>
    <node:Name_FullyQualified>
     <attribute:startLine>
      <scalar:int>19</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>19</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Smarty_Internal_CompileBase</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name_FullyQualified>
   </subNode:extends>
   <subNode:implements>
    <scalar:array/>
   </subNode:implements>
   <subNode:stmts>
    <scalar:array>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="21">/**
     * Attribute definition: Overwrites base class.
     *
     * @var array
     * @see Smarty_Internal_CompileBase
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>27</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>27</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>27</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>27</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>required_attributes</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_Array>
           <attribute:startLine>
            <scalar:int>27</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>27</scalar:int>
           </attribute:endLine>
           <subNode:items>
            <scalar:array>
             <node:Expr_ArrayItem>
              <attribute:startLine>
               <scalar:int>27</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>27</scalar:int>
              </attribute:endLine>
              <subNode:key>
               <scalar:null/>
              </subNode:key>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>27</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>27</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>name</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Expr_ArrayItem>
            </scalar:array>
           </subNode:items>
          </node:Expr_Array>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="28">/**
     * Attribute definition: Overwrites base class.
     *
     * @var array
     * @see Smarty_Internal_CompileBase
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>34</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>34</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>34</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>34</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>shorttag_order</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_Array>
           <attribute:startLine>
            <scalar:int>34</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>34</scalar:int>
           </attribute:endLine>
           <subNode:items>
            <scalar:array>
             <node:Expr_ArrayItem>
              <attribute:startLine>
               <scalar:int>34</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>34</scalar:int>
              </attribute:endLine>
              <subNode:key>
               <scalar:null/>
              </subNode:key>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>34</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>34</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>name</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Expr_ArrayItem>
            </scalar:array>
           </subNode:items>
          </node:Expr_Array>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="35">/**
     * Attribute definition: Overwrites base class.
     *
     * @var array
     * @see Smarty_Internal_CompileBase
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>41</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>41</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>41</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>41</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>optional_attributes</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_Array>
           <attribute:startLine>
            <scalar:int>41</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>41</scalar:int>
           </attribute:endLine>
           <subNode:items>
            <scalar:array>
             <node:Expr_ArrayItem>
              <attribute:startLine>
               <scalar:int>41</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>41</scalar:int>
              </attribute:endLine>
              <subNode:key>
               <scalar:null/>
              </subNode:key>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>41</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>41</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>_any</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Expr_ArrayItem>
            </scalar:array>
           </subNode:items>
          </node:Expr_Array>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="43">/**
     * Compiles code for the {insert} tag
     *
     * @param array  $args     array with attributes from parser
     * @param object $compiler compiler object
     * @return string compiled code
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>50</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>138</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>50</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>50</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>args</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>50</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>50</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>compiler</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:comments>
          <scalar:array>
           <comment isDocComment="false" line="52">// check and get attributes
</comment>
          </scalar:array>
         </attribute:comments>
         <attribute:startLine>
          <scalar:int>53</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>53</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:comments>
            <scalar:array>
             <comment isDocComment="false" line="52">// check and get attributes
</comment>
            </scalar:array>
           </attribute:comments>
           <attribute:startLine>
            <scalar:int>53</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>53</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>_attr</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>53</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>53</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>53</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>53</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>getAttributes</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>53</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>53</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>53</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>53</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>compiler</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>53</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>53</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>53</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>53</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>args</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:comments>
          <scalar:array>
           <comment isDocComment="false" line="54">// never compile as nocache code
</comment>
          </scalar:array>
         </attribute:comments>
         <attribute:startLine>
          <scalar:int>55</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>55</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:comments>
            <scalar:array>
             <comment isDocComment="false" line="54">// never compile as nocache code
</comment>
            </scalar:array>
           </attribute:comments>
           <attribute:startLine>
            <scalar:int>55</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>55</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:comments>
              <scalar:array>
               <comment isDocComment="false" line="54">// never compile as nocache code
</comment>
              </scalar:array>
             </attribute:comments>
             <attribute:startLine>
              <scalar:int>55</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>55</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>compiler</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>suppressNocacheProcessing</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>55</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>55</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>55</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>55</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>true</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>56</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>56</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>56</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>56</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>56</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>56</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>compiler</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>tag_nocache</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>56</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>56</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>56</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>56</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>true</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>57</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>57</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>57</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>57</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>_smarty_tpl</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>57</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>57</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>57</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>57</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>compiler</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>template</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>58</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>58</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>58</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>58</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>_name</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>58</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>58</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>58</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>58</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>59</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>59</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>59</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>59</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>_script</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>59</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>59</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>59</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>59</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>61</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>61</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>61</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>61</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>_output</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>61</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>61</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>&lt;?php </scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Eval>
         <attribute:comments>
          <scalar:array>
           <comment isDocComment="false" line="62">// save posible attributes
</comment>
          </scalar:array>
         </attribute:comments>
         <attribute:startLine>
          <scalar:int>63</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>63</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Concat>
           <attribute:startLine>
            <scalar:int>63</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>63</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Concat>
             <attribute:startLine>
              <scalar:int>63</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>63</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Scalar_String>
               <attribute:startLine>
                <scalar:int>63</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>63</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <scalar:string>$_name = </scalar:string>
               </subNode:value>
              </node:Scalar_String>
             </subNode:left>
             <subNode:right>
              <node:Expr_ArrayDimFetch>
               <attribute:startLine>
                <scalar:int>63</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>63</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>63</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>63</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>_attr</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:dim>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>63</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>63</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>name</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:dim>
              </node:Expr_ArrayDimFetch>
             </subNode:right>
            </node:Expr_Concat>
           </subNode:left>
           <subNode:right>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>63</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>63</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string>;</scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:right>
          </node:Expr_Concat>
         </subNode:expr>
        </node:Expr_Eval>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>64</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>69</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:comments>
             <scalar:array>
              <comment isDocComment="false" line="65">// output will be stored in a smarty variable instead of being displayed
</comment>
             </scalar:array>
            </attribute:comments>
            <attribute:startLine>
             <scalar:int>66</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>66</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:comments>
               <scalar:array>
                <comment isDocComment="false" line="65">// output will be stored in a smarty variable instead of being displayed
</comment>
               </scalar:array>
              </attribute:comments>
              <attribute:startLine>
               <scalar:int>66</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>66</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>_assign</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_ArrayDimFetch>
              <attribute:startLine>
               <scalar:int>66</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>66</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>66</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>66</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>_attr</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:dim>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>66</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>66</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>assign</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:dim>
             </node:Expr_ArrayDimFetch>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:comments>
             <scalar:array>
              <comment isDocComment="false" line="67">// create variable to make shure that the compiler knows about its nocache status
</comment>
             </scalar:array>
            </attribute:comments>
            <attribute:startLine>
             <scalar:int>68</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>68</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_ArrayDimFetch>
              <attribute:comments>
               <scalar:array>
                <comment isDocComment="false" line="67">// create variable to make shure that the compiler knows about its nocache status
</comment>
               </scalar:array>
              </attribute:comments>
              <attribute:startLine>
               <scalar:int>68</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>68</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_PropertyFetch>
                <attribute:comments>
                 <scalar:array>
                  <comment isDocComment="false" line="67">// create variable to make shure that the compiler knows about its nocache status
</comment>
                 </scalar:array>
                </attribute:comments>
                <attribute:startLine>
                 <scalar:int>68</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>68</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_PropertyFetch>
                  <attribute:comments>
                   <scalar:array>
                    <comment isDocComment="false" line="67">// create variable to make shure that the compiler knows about its nocache status
</comment>
                   </scalar:array>
                  </attribute:comments>
                  <attribute:startLine>
                   <scalar:int>68</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>68</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:comments>
                     <scalar:array>
                      <comment isDocComment="false" line="67">// create variable to make shure that the compiler knows about its nocache status
</comment>
                     </scalar:array>
                    </attribute:comments>
                    <attribute:startLine>
                     <scalar:int>68</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>68</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>compiler</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>template</scalar:string>
                  </subNode:name>
                 </node:Expr_PropertyFetch>
                </subNode:var>
                <subNode:name>
                 <scalar:string>tpl_vars</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:var>
              <subNode:dim>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>68</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>68</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>68</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>68</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>trim</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>68</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>68</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_ArrayDimFetch>
                     <attribute:startLine>
                      <scalar:int>68</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>68</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>68</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>68</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>_attr</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:dim>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>68</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>68</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>assign</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:dim>
                    </node:Expr_ArrayDimFetch>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>68</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>68</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>68</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>68</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>'</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:dim>
             </node:Expr_ArrayDimFetch>
            </subNode:var>
            <subNode:expr>
             <node:Expr_New>
              <attribute:startLine>
               <scalar:int>68</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>68</scalar:int>
              </attribute:endLine>
              <subNode:class>
               <node:Name_FullyQualified>
                <attribute:startLine>
                 <scalar:int>68</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>68</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>Smarty_Variable</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name_FullyQualified>
              </subNode:class>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>68</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>68</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_ConstFetch>
                   <attribute:startLine>
                    <scalar:int>68</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>68</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <node:Name>
                     <attribute:startLine>
                      <scalar:int>68</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>68</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>null</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name>
                   </subNode:name>
                  </node:Expr_ConstFetch>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>68</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>68</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_ConstFetch>
                   <attribute:startLine>
                    <scalar:int>68</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>68</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <node:Name>
                     <attribute:startLine>
                      <scalar:int>68</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>68</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>true</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name>
                   </subNode:name>
                  </node:Expr_ConstFetch>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_New>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Isset>
           <attribute:startLine>
            <scalar:int>64</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>64</scalar:int>
           </attribute:endLine>
           <subNode:vars>
            <scalar:array>
             <node:Expr_ArrayDimFetch>
              <attribute:startLine>
               <scalar:int>64</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>64</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>64</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>64</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>_attr</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:dim>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>64</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>64</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>assign</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:dim>
             </node:Expr_ArrayDimFetch>
            </scalar:array>
           </subNode:vars>
          </node:Expr_Isset>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>70</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>113</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:comments>
             <scalar:array>
              <comment isDocComment="false" line="71">// script which must be included
</comment>
             </scalar:array>
            </attribute:comments>
            <attribute:startLine>
             <scalar:int>72</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>72</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:comments>
               <scalar:array>
                <comment isDocComment="false" line="71">// script which must be included
</comment>
               </scalar:array>
              </attribute:comments>
              <attribute:startLine>
               <scalar:int>72</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>72</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>_function</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Scalar_Encapsed>
              <attribute:startLine>
               <scalar:int>72</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>72</scalar:int>
              </attribute:endLine>
              <subNode:parts>
               <scalar:array>
                <scalar:string>smarty_insert_</scalar:string>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>72</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>72</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>_name</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </scalar:array>
              </subNode:parts>
             </node:Scalar_Encapsed>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>73</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>73</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>73</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>73</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>_smarty_tpl</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>73</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>73</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>73</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>73</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>compiler</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>template</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>74</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>74</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>74</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>74</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>_filepath</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_ConstFetch>
              <attribute:startLine>
               <scalar:int>74</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>74</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>74</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>74</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>false</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
             </node:Expr_ConstFetch>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Eval>
            <attribute:startLine>
             <scalar:int>75</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>75</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_Concat>
              <attribute:startLine>
               <scalar:int>75</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>75</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_Concat>
                <attribute:startLine>
                 <scalar:int>75</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>75</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>75</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>75</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>$_script = </scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:left>
                <subNode:right>
                 <node:Expr_ArrayDimFetch>
                  <attribute:startLine>
                   <scalar:int>75</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>75</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>75</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>75</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>_attr</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:dim>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>75</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>75</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>script</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:dim>
                 </node:Expr_ArrayDimFetch>
                </subNode:right>
               </node:Expr_Concat>
              </subNode:left>
              <subNode:right>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>75</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>75</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>;</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:right>
             </node:Expr_Concat>
            </subNode:expr>
           </node:Expr_Eval>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>76</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>93</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>77</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>77</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>77</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>77</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>_filepath</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:expr>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>77</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>77</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>_script</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:expr>
              </node:Expr_Assign>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <node:Stmt_Else>
              <attribute:startLine>
               <scalar:int>78</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>93</scalar:int>
              </attribute:endLine>
              <subNode:stmts>
               <scalar:array>
                <node:Stmt_If>
                 <attribute:startLine>
                  <scalar:int>79</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>83</scalar:int>
                 </attribute:endLine>
                 <subNode:stmts>
                  <scalar:array>
                   <node:Expr_Assign>
                    <attribute:startLine>
                     <scalar:int>80</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>80</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>80</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>80</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>_dir</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:expr>
                     <node:Expr_PropertyFetch>
                      <attribute:startLine>
                       <scalar:int>80</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>80</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_PropertyFetch>
                        <attribute:startLine>
                         <scalar:int>80</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>80</scalar:int>
                        </attribute:endLine>
                        <subNode:var>
                         <node:Expr_PropertyFetch>
                          <attribute:startLine>
                           <scalar:int>80</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>80</scalar:int>
                          </attribute:endLine>
                          <subNode:var>
                           <node:Expr_Variable>
                            <attribute:startLine>
                             <scalar:int>80</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>80</scalar:int>
                            </attribute:endLine>
                            <subNode:name>
                             <scalar:string>compiler</scalar:string>
                            </subNode:name>
                           </node:Expr_Variable>
                          </subNode:var>
                          <subNode:name>
                           <scalar:string>smarty</scalar:string>
                          </subNode:name>
                         </node:Expr_PropertyFetch>
                        </subNode:var>
                        <subNode:name>
                         <scalar:string>security_policy</scalar:string>
                        </subNode:name>
                       </node:Expr_PropertyFetch>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>trusted_dir</scalar:string>
                      </subNode:name>
                     </node:Expr_PropertyFetch>
                    </subNode:expr>
                   </node:Expr_Assign>
                  </scalar:array>
                 </subNode:stmts>
                 <subNode:elseifs>
                  <scalar:array/>
                 </subNode:elseifs>
                 <subNode:else>
                  <node:Stmt_Else>
                   <attribute:startLine>
                    <scalar:int>81</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>83</scalar:int>
                   </attribute:endLine>
                   <subNode:stmts>
                    <scalar:array>
                     <node:Expr_Assign>
                      <attribute:startLine>
                       <scalar:int>82</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>82</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>82</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>82</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>_dir</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:expr>
                       <node:Expr_PropertyFetch>
                        <attribute:startLine>
                         <scalar:int>82</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>82</scalar:int>
                        </attribute:endLine>
                        <subNode:var>
                         <node:Expr_PropertyFetch>
                          <attribute:startLine>
                           <scalar:int>82</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>82</scalar:int>
                          </attribute:endLine>
                          <subNode:var>
                           <node:Expr_Variable>
                            <attribute:startLine>
                             <scalar:int>82</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>82</scalar:int>
                            </attribute:endLine>
                            <subNode:name>
                             <scalar:string>compiler</scalar:string>
                            </subNode:name>
                           </node:Expr_Variable>
                          </subNode:var>
                          <subNode:name>
                           <scalar:string>smarty</scalar:string>
                          </subNode:name>
                         </node:Expr_PropertyFetch>
                        </subNode:var>
                        <subNode:name>
                         <scalar:string>trusted_dir</scalar:string>
                        </subNode:name>
                       </node:Expr_PropertyFetch>
                      </subNode:expr>
                     </node:Expr_Assign>
                    </scalar:array>
                   </subNode:stmts>
                  </node:Stmt_Else>
                 </subNode:else>
                 <subNode:cond>
                  <node:Expr_Isset>
                   <attribute:startLine>
                    <scalar:int>79</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>79</scalar:int>
                   </attribute:endLine>
                   <subNode:vars>
                    <scalar:array>
                     <node:Expr_PropertyFetch>
                      <attribute:startLine>
                       <scalar:int>79</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>79</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_PropertyFetch>
                        <attribute:startLine>
                         <scalar:int>79</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>79</scalar:int>
                        </attribute:endLine>
                        <subNode:var>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>79</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>79</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>compiler</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:var>
                        <subNode:name>
                         <scalar:string>smarty</scalar:string>
                        </subNode:name>
                       </node:Expr_PropertyFetch>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>security_policy</scalar:string>
                      </subNode:name>
                     </node:Expr_PropertyFetch>
                    </scalar:array>
                   </subNode:vars>
                  </node:Expr_Isset>
                 </subNode:cond>
                </node:Stmt_If>
                <node:Stmt_If>
                 <attribute:startLine>
                  <scalar:int>84</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>92</scalar:int>
                 </attribute:endLine>
                 <subNode:stmts>
                  <scalar:array>
                   <node:Stmt_Foreach>
                    <attribute:startLine>
                     <scalar:int>85</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>91</scalar:int>
                    </attribute:endLine>
                    <subNode:keyVar>
                     <scalar:null/>
                    </subNode:keyVar>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                    <subNode:stmts>
                     <scalar:array>
                      <node:Expr_Assign>
                       <attribute:startLine>
                        <scalar:int>86</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>86</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>86</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>86</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>_script_dir</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:expr>
                        <node:Expr_Concat>
                         <attribute:startLine>
                          <scalar:int>86</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>86</scalar:int>
                         </attribute:endLine>
                         <subNode:left>
                          <node:Expr_FuncCall>
                           <attribute:startLine>
                            <scalar:int>86</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>86</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <node:Name>
                             <attribute:startLine>
                              <scalar:int>86</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>86</scalar:int>
                             </attribute:endLine>
                             <subNode:parts>
                              <scalar:array>
                               <scalar:string>rtrim</scalar:string>
                              </scalar:array>
                             </subNode:parts>
                            </node:Name>
                           </subNode:name>
                           <subNode:args>
                            <scalar:array>
                             <node:Arg>
                              <attribute:startLine>
                               <scalar:int>86</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>86</scalar:int>
                              </attribute:endLine>
                              <subNode:value>
                               <node:Expr_Variable>
                                <attribute:startLine>
                                 <scalar:int>86</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>86</scalar:int>
                                </attribute:endLine>
                                <subNode:name>
                                 <scalar:string>_script_dir</scalar:string>
                                </subNode:name>
                               </node:Expr_Variable>
                              </subNode:value>
                              <subNode:byRef>
                               <scalar:false/>
                              </subNode:byRef>
                             </node:Arg>
                             <node:Arg>
                              <attribute:startLine>
                               <scalar:int>86</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>86</scalar:int>
                              </attribute:endLine>
                              <subNode:value>
                               <node:Scalar_String>
                                <attribute:startLine>
                                 <scalar:int>86</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>86</scalar:int>
                                </attribute:endLine>
                                <subNode:value>
                                 <scalar:string>/\</scalar:string>
                                </subNode:value>
                               </node:Scalar_String>
                              </subNode:value>
                              <subNode:byRef>
                               <scalar:false/>
                              </subNode:byRef>
                             </node:Arg>
                            </scalar:array>
                           </subNode:args>
                          </node:Expr_FuncCall>
                         </subNode:left>
                         <subNode:right>
                          <node:Expr_ConstFetch>
                           <attribute:startLine>
                            <scalar:int>86</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>86</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <node:Name>
                             <attribute:startLine>
                              <scalar:int>86</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>86</scalar:int>
                             </attribute:endLine>
                             <subNode:parts>
                              <scalar:array>
                               <scalar:string>DS</scalar:string>
                              </scalar:array>
                             </subNode:parts>
                            </node:Name>
                           </subNode:name>
                          </node:Expr_ConstFetch>
                         </subNode:right>
                        </node:Expr_Concat>
                       </subNode:expr>
                      </node:Expr_Assign>
                      <node:Stmt_If>
                       <attribute:startLine>
                        <scalar:int>87</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>90</scalar:int>
                       </attribute:endLine>
                       <subNode:stmts>
                        <scalar:array>
                         <node:Expr_Assign>
                          <attribute:startLine>
                           <scalar:int>88</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>88</scalar:int>
                          </attribute:endLine>
                          <subNode:var>
                           <node:Expr_Variable>
                            <attribute:startLine>
                             <scalar:int>88</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>88</scalar:int>
                            </attribute:endLine>
                            <subNode:name>
                             <scalar:string>_filepath</scalar:string>
                            </subNode:name>
                           </node:Expr_Variable>
                          </subNode:var>
                          <subNode:expr>
                           <node:Expr_Concat>
                            <attribute:startLine>
                             <scalar:int>88</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>88</scalar:int>
                            </attribute:endLine>
                            <subNode:left>
                             <node:Expr_Variable>
                              <attribute:startLine>
                               <scalar:int>88</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>88</scalar:int>
                              </attribute:endLine>
                              <subNode:name>
                               <scalar:string>_script_dir</scalar:string>
                              </subNode:name>
                             </node:Expr_Variable>
                            </subNode:left>
                            <subNode:right>
                             <node:Expr_Variable>
                              <attribute:startLine>
                               <scalar:int>88</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>88</scalar:int>
                              </attribute:endLine>
                              <subNode:name>
                               <scalar:string>_script</scalar:string>
                              </subNode:name>
                             </node:Expr_Variable>
                            </subNode:right>
                           </node:Expr_Concat>
                          </subNode:expr>
                         </node:Expr_Assign>
                         <node:Stmt_Break>
                          <attribute:startLine>
                           <scalar:int>89</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>89</scalar:int>
                          </attribute:endLine>
                          <subNode:num>
                           <scalar:null/>
                          </subNode:num>
                         </node:Stmt_Break>
                        </scalar:array>
                       </subNode:stmts>
                       <subNode:elseifs>
                        <scalar:array/>
                       </subNode:elseifs>
                       <subNode:else>
                        <scalar:null/>
                       </subNode:else>
                       <subNode:cond>
                        <node:Expr_FuncCall>
                         <attribute:startLine>
                          <scalar:int>87</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>87</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <node:Name>
                           <attribute:startLine>
                            <scalar:int>87</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>87</scalar:int>
                           </attribute:endLine>
                           <subNode:parts>
                            <scalar:array>
                             <scalar:string>file_exists</scalar:string>
                            </scalar:array>
                           </subNode:parts>
                          </node:Name>
                         </subNode:name>
                         <subNode:args>
                          <scalar:array>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>87</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>87</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_Concat>
                              <attribute:startLine>
                               <scalar:int>87</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>87</scalar:int>
                              </attribute:endLine>
                              <subNode:left>
                               <node:Expr_Variable>
                                <attribute:startLine>
                                 <scalar:int>87</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>87</scalar:int>
                                </attribute:endLine>
                                <subNode:name>
                                 <scalar:string>_script_dir</scalar:string>
                                </subNode:name>
                               </node:Expr_Variable>
                              </subNode:left>
                              <subNode:right>
                               <node:Expr_Variable>
                                <attribute:startLine>
                                 <scalar:int>87</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>87</scalar:int>
                                </attribute:endLine>
                                <subNode:name>
                                 <scalar:string>_script</scalar:string>
                                </subNode:name>
                               </node:Expr_Variable>
                              </subNode:right>
                             </node:Expr_Concat>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                          </scalar:array>
                         </subNode:args>
                        </node:Expr_FuncCall>
                       </subNode:cond>
                      </node:Stmt_If>
                     </scalar:array>
                    </subNode:stmts>
                    <subNode:expr>
                     <node:Expr_Cast_Array>
                      <attribute:startLine>
                       <scalar:int>85</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>85</scalar:int>
                      </attribute:endLine>
                      <subNode:expr>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>85</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>85</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>_dir</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:expr>
                     </node:Expr_Cast_Array>
                    </subNode:expr>
                    <subNode:valueVar>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>85</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>85</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>_script_dir</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:valueVar>
                   </node:Stmt_Foreach>
                  </scalar:array>
                 </subNode:stmts>
                 <subNode:elseifs>
                  <scalar:array/>
                 </subNode:elseifs>
                 <subNode:else>
                  <scalar:null/>
                 </subNode:else>
                 <subNode:cond>
                  <node:Expr_BooleanNot>
                   <attribute:startLine>
                    <scalar:int>84</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>84</scalar:int>
                   </attribute:endLine>
                   <subNode:expr>
                    <node:Expr_Empty>
                     <attribute:startLine>
                      <scalar:int>84</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>84</scalar:int>
                     </attribute:endLine>
                     <subNode:expr>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>84</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>84</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>_dir</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:expr>
                    </node:Expr_Empty>
                   </subNode:expr>
                  </node:Expr_BooleanNot>
                 </subNode:cond>
                </node:Stmt_If>
               </scalar:array>
              </subNode:stmts>
             </node:Stmt_Else>
            </subNode:else>
            <subNode:cond>
             <node:Expr_BooleanAnd>
              <attribute:startLine>
               <scalar:int>76</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>76</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_BooleanNot>
                <attribute:startLine>
                 <scalar:int>76</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>76</scalar:int>
                </attribute:endLine>
                <subNode:expr>
                 <node:Expr_Isset>
                  <attribute:startLine>
                   <scalar:int>76</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>76</scalar:int>
                  </attribute:endLine>
                  <subNode:vars>
                   <scalar:array>
                    <node:Expr_PropertyFetch>
                     <attribute:startLine>
                      <scalar:int>76</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>76</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_PropertyFetch>
                       <attribute:startLine>
                        <scalar:int>76</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>76</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>76</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>76</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>compiler</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:name>
                        <scalar:string>smarty</scalar:string>
                       </subNode:name>
                      </node:Expr_PropertyFetch>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>security_policy</scalar:string>
                     </subNode:name>
                    </node:Expr_PropertyFetch>
                   </scalar:array>
                  </subNode:vars>
                 </node:Expr_Isset>
                </subNode:expr>
               </node:Expr_BooleanNot>
              </subNode:left>
              <subNode:right>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>76</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>76</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>76</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>76</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>file_exists</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>76</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>76</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>76</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>76</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>_script</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:right>
             </node:Expr_BooleanAnd>
            </subNode:cond>
           </node:Stmt_If>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>94</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>96</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>95</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>95</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>95</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>95</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>compiler</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>trigger_template_error</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>95</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>95</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Scalar_Encapsed>
                    <attribute:startLine>
                     <scalar:int>95</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>95</scalar:int>
                    </attribute:endLine>
                    <subNode:parts>
                     <scalar:array>
                      <scalar:string>{insert} missing script file '</scalar:string>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>95</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>95</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>_script</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                      <scalar:string>'</scalar:string>
                     </scalar:array>
                    </subNode:parts>
                   </node:Scalar_Encapsed>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>95</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>95</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_PropertyFetch>
                    <attribute:startLine>
                     <scalar:int>95</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>95</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_PropertyFetch>
                      <attribute:startLine>
                       <scalar:int>95</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>95</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>95</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>95</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>compiler</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>lex</scalar:string>
                      </subNode:name>
                     </node:Expr_PropertyFetch>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>taglineno</scalar:string>
                    </subNode:name>
                   </node:Expr_PropertyFetch>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_MethodCall>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_Equal>
              <attribute:startLine>
               <scalar:int>94</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>94</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>94</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>94</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>_filepath</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:left>
              <subNode:right>
               <node:Expr_ConstFetch>
                <attribute:startLine>
                 <scalar:int>94</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>94</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>94</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>94</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>false</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
               </node:Expr_ConstFetch>
              </subNode:right>
             </node:Expr_Equal>
            </subNode:cond>
           </node:Stmt_If>
           <node:Expr_AssignConcat>
            <attribute:comments>
             <scalar:array>
              <comment isDocComment="false" line="97">// code for script file loading
</comment>
             </scalar:array>
            </attribute:comments>
            <attribute:startLine>
             <scalar:int>98</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>98</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:comments>
               <scalar:array>
                <comment isDocComment="false" line="97">// code for script file loading
</comment>
               </scalar:array>
              </attribute:comments>
              <attribute:startLine>
               <scalar:int>98</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>98</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>_output</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Scalar_Encapsed>
              <attribute:startLine>
               <scalar:int>98</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>98</scalar:int>
              </attribute:endLine>
              <subNode:parts>
               <scalar:array>
                <scalar:string>require_once '</scalar:string>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>98</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>98</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>_filepath</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
                <scalar:string>' ;</scalar:string>
               </scalar:array>
              </subNode:parts>
             </node:Scalar_Encapsed>
            </subNode:expr>
           </node:Expr_AssignConcat>
           <node:Expr_Include>
            <attribute:startLine>
             <scalar:int>99</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>99</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>99</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>99</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>_filepath</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:expr>
            <subNode:type>
             <scalar:int>4</scalar:int>
            </subNode:type>
           </node:Expr_Include>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>100</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>102</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>101</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>101</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>101</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>101</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>compiler</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>trigger_template_error</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>101</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>101</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Scalar_Encapsed>
                    <attribute:startLine>
                     <scalar:int>101</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>101</scalar:int>
                    </attribute:endLine>
                    <subNode:parts>
                     <scalar:array>
                      <scalar:string> {insert} function '</scalar:string>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>101</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>101</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>_function</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                      <scalar:string>' is not callable in script file '</scalar:string>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>101</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>101</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>_script</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                      <scalar:string>'</scalar:string>
                     </scalar:array>
                    </subNode:parts>
                   </node:Scalar_Encapsed>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>101</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>101</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_PropertyFetch>
                    <attribute:startLine>
                     <scalar:int>101</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>101</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_PropertyFetch>
                      <attribute:startLine>
                       <scalar:int>101</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>101</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>101</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>101</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>compiler</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>lex</scalar:string>
                      </subNode:name>
                     </node:Expr_PropertyFetch>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>taglineno</scalar:string>
                    </subNode:name>
                   </node:Expr_PropertyFetch>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_MethodCall>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_BooleanNot>
              <attribute:startLine>
               <scalar:int>100</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>100</scalar:int>
              </attribute:endLine>
              <subNode:expr>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>100</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>100</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>100</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>100</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>is_callable</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>100</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>100</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>100</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>100</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>_function</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:expr>
             </node:Expr_BooleanNot>
            </subNode:cond>
           </node:Stmt_If>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <node:Stmt_Else>
           <attribute:startLine>
            <scalar:int>103</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>113</scalar:int>
           </attribute:endLine>
           <subNode:stmts>
            <scalar:array>
             <node:Expr_Assign>
              <attribute:startLine>
               <scalar:int>104</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>104</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>104</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>104</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>_filepath</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:expr>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>104</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>104</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>null</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:expr>
             </node:Expr_Assign>
             <node:Expr_Assign>
              <attribute:startLine>
               <scalar:int>105</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>105</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>105</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>105</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>_function</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:expr>
               <node:Scalar_Encapsed>
                <attribute:startLine>
                 <scalar:int>105</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>105</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>insert_</scalar:string>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>105</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>105</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>_name</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </scalar:array>
                </subNode:parts>
               </node:Scalar_Encapsed>
              </subNode:expr>
             </node:Expr_Assign>
             <node:Stmt_If>
              <attribute:comments>
               <scalar:array>
                <comment isDocComment="false" line="106">// function in PHP script ?
</comment>
               </scalar:array>
              </attribute:comments>
              <attribute:startLine>
               <scalar:int>107</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>112</scalar:int>
              </attribute:endLine>
              <subNode:stmts>
               <scalar:array>
                <node:Stmt_If>
                 <attribute:comments>
                  <scalar:array>
                   <comment isDocComment="false" line="108">// try plugin
</comment>
                  </scalar:array>
                 </attribute:comments>
                 <attribute:startLine>
                  <scalar:int>109</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>111</scalar:int>
                 </attribute:endLine>
                 <subNode:stmts>
                  <scalar:array>
                   <node:Expr_MethodCall>
                    <attribute:startLine>
                     <scalar:int>110</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>110</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>110</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>110</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>compiler</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>trigger_template_error</scalar:string>
                    </subNode:name>
                    <subNode:args>
                     <scalar:array>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>110</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>110</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Scalar_Encapsed>
                         <attribute:startLine>
                          <scalar:int>110</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>110</scalar:int>
                         </attribute:endLine>
                         <subNode:parts>
                          <scalar:array>
                           <scalar:string>{insert} no function or plugin found for '</scalar:string>
                           <node:Expr_Variable>
                            <attribute:startLine>
                             <scalar:int>110</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>110</scalar:int>
                            </attribute:endLine>
                            <subNode:name>
                             <scalar:string>_name</scalar:string>
                            </subNode:name>
                           </node:Expr_Variable>
                           <scalar:string>'</scalar:string>
                          </scalar:array>
                         </subNode:parts>
                        </node:Scalar_Encapsed>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>110</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>110</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_PropertyFetch>
                         <attribute:startLine>
                          <scalar:int>110</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>110</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_PropertyFetch>
                           <attribute:startLine>
                            <scalar:int>110</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>110</scalar:int>
                           </attribute:endLine>
                           <subNode:var>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>110</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>110</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>compiler</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:var>
                           <subNode:name>
                            <scalar:string>lex</scalar:string>
                           </subNode:name>
                          </node:Expr_PropertyFetch>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>taglineno</scalar:string>
                         </subNode:name>
                        </node:Expr_PropertyFetch>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                     </scalar:array>
                    </subNode:args>
                   </node:Expr_MethodCall>
                  </scalar:array>
                 </subNode:stmts>
                 <subNode:elseifs>
                  <scalar:array/>
                 </subNode:elseifs>
                 <subNode:else>
                  <scalar:null/>
                 </subNode:else>
                 <subNode:cond>
                  <node:Expr_BooleanNot>
                   <attribute:startLine>
                    <scalar:int>109</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>109</scalar:int>
                   </attribute:endLine>
                   <subNode:expr>
                    <node:Expr_Assign>
                     <attribute:startLine>
                      <scalar:int>109</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>109</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>109</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>109</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>_function</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:expr>
                      <node:Expr_MethodCall>
                       <attribute:startLine>
                        <scalar:int>109</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>109</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>109</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>109</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>compiler</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:name>
                        <scalar:string>getPlugin</scalar:string>
                       </subNode:name>
                       <subNode:args>
                        <scalar:array>
                         <node:Arg>
                          <attribute:startLine>
                           <scalar:int>109</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>109</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <node:Expr_Variable>
                            <attribute:startLine>
                             <scalar:int>109</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>109</scalar:int>
                            </attribute:endLine>
                            <subNode:name>
                             <scalar:string>_name</scalar:string>
                            </subNode:name>
                           </node:Expr_Variable>
                          </subNode:value>
                          <subNode:byRef>
                           <scalar:false/>
                          </subNode:byRef>
                         </node:Arg>
                         <node:Arg>
                          <attribute:startLine>
                           <scalar:int>109</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>109</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <node:Scalar_String>
                            <attribute:startLine>
                             <scalar:int>109</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>109</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <scalar:string>insert</scalar:string>
                            </subNode:value>
                           </node:Scalar_String>
                          </subNode:value>
                          <subNode:byRef>
                           <scalar:false/>
                          </subNode:byRef>
                         </node:Arg>
                        </scalar:array>
                       </subNode:args>
                      </node:Expr_MethodCall>
                     </subNode:expr>
                    </node:Expr_Assign>
                   </subNode:expr>
                  </node:Expr_BooleanNot>
                 </subNode:cond>
                </node:Stmt_If>
               </scalar:array>
              </subNode:stmts>
              <subNode:elseifs>
               <scalar:array/>
              </subNode:elseifs>
              <subNode:else>
               <scalar:null/>
              </subNode:else>
              <subNode:cond>
               <node:Expr_BooleanNot>
                <attribute:startLine>
                 <scalar:int>107</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>107</scalar:int>
                </attribute:endLine>
                <subNode:expr>
                 <node:Expr_FuncCall>
                  <attribute:startLine>
                   <scalar:int>107</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>107</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <node:Name>
                    <attribute:startLine>
                     <scalar:int>107</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>107</scalar:int>
                    </attribute:endLine>
                    <subNode:parts>
                     <scalar:array>
                      <scalar:string>is_callable</scalar:string>
                     </scalar:array>
                    </subNode:parts>
                   </node:Name>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>107</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>107</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>107</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>107</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>_function</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_FuncCall>
                </subNode:expr>
               </node:Expr_BooleanNot>
              </subNode:cond>
             </node:Stmt_If>
            </scalar:array>
           </subNode:stmts>
          </node:Stmt_Else>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Isset>
           <attribute:startLine>
            <scalar:int>70</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>70</scalar:int>
           </attribute:endLine>
           <subNode:vars>
            <scalar:array>
             <node:Expr_ArrayDimFetch>
              <attribute:startLine>
               <scalar:int>70</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>70</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>70</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>70</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>_attr</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:dim>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>70</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>70</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>script</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:dim>
             </node:Expr_ArrayDimFetch>
            </scalar:array>
           </subNode:vars>
          </node:Expr_Isset>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Unset>
         <attribute:comments>
          <scalar:array>
           <comment isDocComment="false" line="114">// delete {insert} standard attributes
</comment>
          </scalar:array>
         </attribute:comments>
         <attribute:startLine>
          <scalar:int>115</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>115</scalar:int>
         </attribute:endLine>
         <subNode:vars>
          <scalar:array>
           <node:Expr_ArrayDimFetch>
            <attribute:startLine>
             <scalar:int>115</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>115</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>115</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>115</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>_attr</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:dim>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>115</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>115</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>name</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:dim>
           </node:Expr_ArrayDimFetch>
           <node:Expr_ArrayDimFetch>
            <attribute:startLine>
             <scalar:int>115</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>115</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>115</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>115</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>_attr</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:dim>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>115</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>115</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>assign</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:dim>
           </node:Expr_ArrayDimFetch>
           <node:Expr_ArrayDimFetch>
            <attribute:startLine>
             <scalar:int>115</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>115</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>115</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>115</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>_attr</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:dim>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>115</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>115</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>script</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:dim>
           </node:Expr_ArrayDimFetch>
           <node:Expr_ArrayDimFetch>
            <attribute:startLine>
             <scalar:int>115</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>115</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>115</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>115</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>_attr</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:dim>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>115</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>115</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>nocache</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:dim>
           </node:Expr_ArrayDimFetch>
          </scalar:array>
         </subNode:vars>
        </node:Stmt_Unset>
        <node:Expr_Assign>
         <attribute:comments>
          <scalar:array>
           <comment isDocComment="false" line="116">// convert attributes into parameter array string
</comment>
          </scalar:array>
         </attribute:comments>
         <attribute:startLine>
          <scalar:int>117</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>117</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:comments>
            <scalar:array>
             <comment isDocComment="false" line="116">// convert attributes into parameter array string
</comment>
            </scalar:array>
           </attribute:comments>
           <attribute:startLine>
            <scalar:int>117</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>117</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>_paramsArray</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Array>
           <attribute:startLine>
            <scalar:int>117</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>117</scalar:int>
           </attribute:endLine>
           <subNode:items>
            <scalar:array/>
           </subNode:items>
          </node:Expr_Array>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_Foreach>
         <attribute:startLine>
          <scalar:int>118</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>120</scalar:int>
         </attribute:endLine>
         <subNode:keyVar>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>118</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>118</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>_key</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:keyVar>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>119</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>119</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_ArrayDimFetch>
              <attribute:startLine>
               <scalar:int>119</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>119</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>119</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>119</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>_paramsArray</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:dim>
               <scalar:null/>
              </subNode:dim>
             </node:Expr_ArrayDimFetch>
            </subNode:var>
            <subNode:expr>
             <node:Scalar_Encapsed>
              <attribute:startLine>
               <scalar:int>119</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>119</scalar:int>
              </attribute:endLine>
              <subNode:parts>
               <scalar:array>
                <scalar:string>'</scalar:string>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>119</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>119</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>_key</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
                <scalar:string>' =&gt; </scalar:string>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>119</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>119</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>_value</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </scalar:array>
              </subNode:parts>
             </node:Scalar_Encapsed>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>118</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>118</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>_attr</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
         <subNode:valueVar>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>118</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>118</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>_value</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:valueVar>
        </node:Stmt_Foreach>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>121</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>121</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>121</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>121</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>_params</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Concat>
           <attribute:startLine>
            <scalar:int>121</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>121</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Concat>
             <attribute:startLine>
              <scalar:int>121</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>121</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Scalar_String>
               <attribute:startLine>
                <scalar:int>121</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>121</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <scalar:string>array(</scalar:string>
               </subNode:value>
              </node:Scalar_String>
             </subNode:left>
             <subNode:right>
              <node:Expr_FuncCall>
               <attribute:startLine>
                <scalar:int>121</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>121</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>121</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>121</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>implode</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>121</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>121</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>121</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>121</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>, </scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>121</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>121</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>121</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>121</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>_paramsArray</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_FuncCall>
             </subNode:right>
            </node:Expr_Concat>
           </subNode:left>
           <subNode:right>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>121</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>121</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string>)</scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:right>
          </node:Expr_Concat>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:comments>
          <scalar:array>
           <comment isDocComment="false" line="122">// call insert
</comment>
          </scalar:array>
         </attribute:comments>
         <attribute:startLine>
          <scalar:int>123</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>136</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>124</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>128</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_AssignConcat>
               <attribute:startLine>
                <scalar:int>125</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>125</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>125</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>125</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>_output</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:expr>
                <node:Scalar_Encapsed>
                 <attribute:startLine>
                  <scalar:int>125</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>125</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>echo Smarty_Internal_Nocache_Insert::compile ('</scalar:string>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>125</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>125</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>_function</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                   <scalar:string>',</scalar:string>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>125</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>125</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>_params</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                   <scalar:string>, $_smarty_tpl, '</scalar:string>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>125</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>125</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>_filepath</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                   <scalar:string>',</scalar:string>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>125</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>125</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>_assign</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                   <scalar:string>);?&gt;</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Scalar_Encapsed>
               </subNode:expr>
              </node:Expr_AssignConcat>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <node:Stmt_Else>
              <attribute:startLine>
               <scalar:int>126</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>128</scalar:int>
              </attribute:endLine>
              <subNode:stmts>
               <scalar:array>
                <node:Expr_AssignConcat>
                 <attribute:startLine>
                  <scalar:int>127</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>127</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>127</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>127</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>_output</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:expr>
                  <node:Scalar_Encapsed>
                   <attribute:startLine>
                    <scalar:int>127</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>127</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>$_smarty_tpl-&gt;assign(</scalar:string>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>127</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>127</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>_assign</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                     <scalar:string> , </scalar:string>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>127</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>127</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>_function</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                     <scalar:string> (</scalar:string>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>127</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>127</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>_params</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                     <scalar:string>,$_smarty_tpl), true);?&gt;</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Scalar_Encapsed>
                 </subNode:expr>
                </node:Expr_AssignConcat>
               </scalar:array>
              </subNode:stmts>
             </node:Stmt_Else>
            </subNode:else>
            <subNode:cond>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>124</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>124</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>124</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>124</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>_smarty_tpl</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>caching</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:cond>
           </node:Stmt_If>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <node:Stmt_Else>
           <attribute:startLine>
            <scalar:int>129</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>136</scalar:int>
           </attribute:endLine>
           <subNode:stmts>
            <scalar:array>
             <node:Expr_Assign>
              <attribute:startLine>
               <scalar:int>130</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>130</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>130</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>130</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>130</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>130</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>compiler</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>has_output</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:var>
              <subNode:expr>
               <node:Expr_ConstFetch>
                <attribute:startLine>
                 <scalar:int>130</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>130</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>130</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>130</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>true</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
               </node:Expr_ConstFetch>
              </subNode:expr>
             </node:Expr_Assign>
             <node:Stmt_If>
              <attribute:startLine>
               <scalar:int>131</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>135</scalar:int>
              </attribute:endLine>
              <subNode:stmts>
               <scalar:array>
                <node:Expr_AssignConcat>
                 <attribute:startLine>
                  <scalar:int>132</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>132</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>132</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>132</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>_output</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:expr>
                  <node:Scalar_Encapsed>
                   <attribute:startLine>
                    <scalar:int>132</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>132</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>echo Smarty_Internal_Nocache_Insert::compile ('</scalar:string>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>132</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>132</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>_function</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                     <scalar:string>',</scalar:string>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>132</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>132</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>_params</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                     <scalar:string>, $_smarty_tpl, '</scalar:string>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>132</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>132</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>_filepath</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                     <scalar:string>');?&gt;</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Scalar_Encapsed>
                 </subNode:expr>
                </node:Expr_AssignConcat>
               </scalar:array>
              </subNode:stmts>
              <subNode:elseifs>
               <scalar:array/>
              </subNode:elseifs>
              <subNode:else>
               <node:Stmt_Else>
                <attribute:startLine>
                 <scalar:int>133</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>135</scalar:int>
                </attribute:endLine>
                <subNode:stmts>
                 <scalar:array>
                  <node:Expr_AssignConcat>
                   <attribute:startLine>
                    <scalar:int>134</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>134</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>134</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>134</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>_output</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:expr>
                    <node:Scalar_Encapsed>
                     <attribute:startLine>
                      <scalar:int>134</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>134</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>echo </scalar:string>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>134</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>134</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>_function</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                       <scalar:string>(</scalar:string>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>134</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>134</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>_params</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                       <scalar:string>,$_smarty_tpl);?&gt;</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Scalar_Encapsed>
                   </subNode:expr>
                  </node:Expr_AssignConcat>
                 </scalar:array>
                </subNode:stmts>
               </node:Stmt_Else>
              </subNode:else>
              <subNode:cond>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>131</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>131</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>131</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>131</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>_smarty_tpl</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>caching</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:cond>
             </node:Stmt_If>
            </scalar:array>
           </subNode:stmts>
          </node:Stmt_Else>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Isset>
           <attribute:startLine>
            <scalar:int>123</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>123</scalar:int>
           </attribute:endLine>
           <subNode:vars>
            <scalar:array>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>123</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>123</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>_assign</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </scalar:array>
           </subNode:vars>
          </node:Expr_Isset>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>137</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>137</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>137</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>137</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>_output</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>compile</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
    </scalar:array>
   </subNode:stmts>
   <subNode:name>
    <scalar:string>Smarty_Internal_Compile_Insert</scalar:string>
   </subNode:name>
   <subNode:namespacedName>
    <node:Name>
     <attribute:comments>
      <scalar:array>
       <comment isDocComment="true" line="3">/**
 * Smarty Internal Plugin Compile Insert
 *
 * Compiles the {insert} tag
 *
 * @package Smarty
 * @subpackage Compiler
 * @author Uwe Tews
 */</comment>
       <comment isDocComment="true" line="13">/**
 * Smarty Internal Plugin Compile Insert Class
 *
 * @package Smarty
 * @subpackage Compiler
 */</comment>
      </scalar:array>
     </attribute:comments>
     <attribute:startLine>
      <scalar:int>19</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>140</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Smarty_Internal_Compile_Insert</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name>
   </subNode:namespacedName>
  </node:Stmt_Class>
 </scalar:array>
</AST>
