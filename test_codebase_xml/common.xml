<?xml version="1.0" encoding="UTF-8"?>
<AST xmlns:node="http://nikic.github.com/PHPParser/XML/node" xmlns:subNode="http://nikic.github.com/PHPParser/XML/subNode" xmlns:attribute="http://nikic.github.com/PHPParser/XML/attribute" xmlns:scalar="http://nikic.github.com/PHPParser/XML/scalar">
 <scalar:array>
  <node:Stmt_Function>
   <attribute:comments>
    <scalar:array>
     <comment isDocComment="false" line="2">/*
 * This work is hereby released into the Public Domain.
 * To view a copy of the public domain dedication,
 * visit http://creativecommons.org/licenses/publicdomain/ or send a letter to
 * Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.
 *
 */</comment>
     <comment isDocComment="false" line="10">/*
 * Get the minimum of an array and ignore non numeric values
 */</comment>
    </scalar:array>
   </attribute:comments>
   <attribute:startLine>
    <scalar:int>13</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>40</scalar:int>
   </attribute:endLine>
   <subNode:byRef>
    <scalar:false/>
   </subNode:byRef>
   <subNode:params>
    <scalar:array>
     <node:Param>
      <attribute:startLine>
       <scalar:int>13</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>13</scalar:int>
      </attribute:endLine>
      <subNode:name>
       <scalar:string>array</scalar:string>
      </subNode:name>
      <subNode:default>
       <scalar:null/>
      </subNode:default>
      <subNode:type>
       <scalar:null/>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
     </node:Param>
    </scalar:array>
   </subNode:params>
   <subNode:stmts>
    <scalar:array>
     <node:Stmt_If>
      <attribute:startLine>
       <scalar:int>15</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>36</scalar:int>
      </attribute:endLine>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Do>
         <attribute:startLine>
          <scalar:int>17</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>22</scalar:int>
         </attribute:endLine>
         <subNode:cond>
          <node:Expr_LogicalAnd>
           <attribute:startLine>
            <scalar:int>22</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>22</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Greater>
             <attribute:startLine>
              <scalar:int>22</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>22</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_FuncCall>
               <attribute:startLine>
                <scalar:int>22</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>22</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>22</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>22</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>count</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>22</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>22</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>22</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>22</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>array</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_FuncCall>
             </subNode:left>
             <subNode:right>
              <node:Scalar_LNumber>
               <attribute:startLine>
                <scalar:int>22</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>22</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <scalar:int>0</scalar:int>
               </subNode:value>
              </node:Scalar_LNumber>
             </subNode:right>
            </node:Expr_Greater>
           </subNode:left>
           <subNode:right>
            <node:Expr_Identical>
             <attribute:startLine>
              <scalar:int>22</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>22</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>22</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>22</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>min</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:left>
             <subNode:right>
              <node:Expr_ConstFetch>
               <attribute:startLine>
                <scalar:int>22</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>22</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>22</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>22</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>NULL</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
              </node:Expr_ConstFetch>
             </subNode:right>
            </node:Expr_Identical>
           </subNode:right>
          </node:Expr_LogicalAnd>
         </subNode:cond>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>18</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>18</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>18</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>18</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>min</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>18</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>18</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>18</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>18</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>array_pop</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>18</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>18</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>18</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>18</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>array</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>19</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>21</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>20</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>20</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>20</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>20</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>min</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:expr>
                <node:Expr_ConstFetch>
                 <attribute:startLine>
                  <scalar:int>20</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>20</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>20</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>20</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>NULL</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                </node:Expr_ConstFetch>
               </subNode:expr>
              </node:Expr_Assign>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_Identical>
              <attribute:startLine>
               <scalar:int>19</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>19</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>19</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>19</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>19</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>19</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>is_numeric</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>19</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>19</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>19</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>19</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>min</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:left>
              <subNode:right>
               <node:Expr_ConstFetch>
                <attribute:startLine>
                 <scalar:int>19</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>19</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>19</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>19</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>FALSE</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
               </node:Expr_ConstFetch>
              </subNode:right>
             </node:Expr_Identical>
            </subNode:cond>
           </node:Stmt_If>
          </scalar:array>
         </subNode:stmts>
        </node:Stmt_Do>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>24</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>26</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>25</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>25</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>25</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>25</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>min</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Cast_Double>
              <attribute:startLine>
               <scalar:int>25</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>25</scalar:int>
              </attribute:endLine>
              <subNode:expr>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>25</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>25</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>min</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:expr>
             </node:Expr_Cast_Double>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_NotIdentical>
           <attribute:startLine>
            <scalar:int>24</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>24</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>24</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>24</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>min</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:left>
           <subNode:right>
            <node:Expr_ConstFetch>
             <attribute:startLine>
              <scalar:int>24</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>24</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>24</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>24</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>NULL</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
            </node:Expr_ConstFetch>
           </subNode:right>
          </node:Expr_NotIdentical>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Foreach>
         <attribute:startLine>
          <scalar:int>28</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>32</scalar:int>
         </attribute:endLine>
         <subNode:keyVar>
          <scalar:null/>
         </subNode:keyVar>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>29</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>31</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>30</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>30</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>30</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>30</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>min</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:expr>
                <node:Expr_Cast_Double>
                 <attribute:startLine>
                  <scalar:int>30</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>30</scalar:int>
                 </attribute:endLine>
                 <subNode:expr>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>30</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>30</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>value</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:expr>
                </node:Expr_Cast_Double>
               </subNode:expr>
              </node:Expr_Assign>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_LogicalAnd>
              <attribute:startLine>
               <scalar:int>29</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>29</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>29</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>29</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>29</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>29</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>is_numeric</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>29</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>29</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>29</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>29</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>value</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:left>
              <subNode:right>
               <node:Expr_Smaller>
                <attribute:startLine>
                 <scalar:int>29</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>29</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Expr_Cast_Double>
                  <attribute:startLine>
                   <scalar:int>29</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>29</scalar:int>
                  </attribute:endLine>
                  <subNode:expr>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>29</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>29</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>value</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:expr>
                 </node:Expr_Cast_Double>
                </subNode:left>
                <subNode:right>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>29</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>29</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>min</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:right>
               </node:Expr_Smaller>
              </subNode:right>
             </node:Expr_LogicalAnd>
            </subNode:cond>
           </node:Stmt_If>
          </scalar:array>
         </subNode:stmts>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>28</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>28</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>array</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
         <subNode:valueVar>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>28</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>28</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>value</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:valueVar>
        </node:Stmt_Foreach>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>34</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>34</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>34</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>34</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>min</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:elseifs>
       <scalar:array/>
      </subNode:elseifs>
      <subNode:else>
       <scalar:null/>
      </subNode:else>
      <subNode:cond>
       <node:Expr_LogicalAnd>
        <attribute:startLine>
         <scalar:int>15</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>15</scalar:int>
        </attribute:endLine>
        <subNode:left>
         <node:Expr_FuncCall>
          <attribute:startLine>
           <scalar:int>15</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>15</scalar:int>
          </attribute:endLine>
          <subNode:name>
           <node:Name>
            <attribute:startLine>
             <scalar:int>15</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>15</scalar:int>
            </attribute:endLine>
            <subNode:parts>
             <scalar:array>
              <scalar:string>is_array</scalar:string>
             </scalar:array>
            </subNode:parts>
           </node:Name>
          </subNode:name>
          <subNode:args>
           <scalar:array>
            <node:Arg>
             <attribute:startLine>
              <scalar:int>15</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>15</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>15</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>15</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>array</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:value>
             <subNode:byRef>
              <scalar:false/>
             </subNode:byRef>
            </node:Arg>
           </scalar:array>
          </subNode:args>
         </node:Expr_FuncCall>
        </subNode:left>
        <subNode:right>
         <node:Expr_Greater>
          <attribute:startLine>
           <scalar:int>15</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>15</scalar:int>
          </attribute:endLine>
          <subNode:left>
           <node:Expr_FuncCall>
            <attribute:startLine>
             <scalar:int>15</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>15</scalar:int>
            </attribute:endLine>
            <subNode:name>
             <node:Name>
              <attribute:startLine>
               <scalar:int>15</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>15</scalar:int>
              </attribute:endLine>
              <subNode:parts>
               <scalar:array>
                <scalar:string>count</scalar:string>
               </scalar:array>
              </subNode:parts>
             </node:Name>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>15</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>15</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>15</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>15</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>array</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_FuncCall>
          </subNode:left>
          <subNode:right>
           <node:Scalar_LNumber>
            <attribute:startLine>
             <scalar:int>15</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>15</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <scalar:int>0</scalar:int>
            </subNode:value>
           </node:Scalar_LNumber>
          </subNode:right>
         </node:Expr_Greater>
        </subNode:right>
       </node:Expr_LogicalAnd>
      </subNode:cond>
     </node:Stmt_If>
     <node:Stmt_Return>
      <attribute:startLine>
       <scalar:int>38</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>38</scalar:int>
      </attribute:endLine>
      <subNode:expr>
       <node:Expr_ConstFetch>
        <attribute:startLine>
         <scalar:int>38</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>38</scalar:int>
        </attribute:endLine>
        <subNode:name>
         <node:Name>
          <attribute:startLine>
           <scalar:int>38</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>38</scalar:int>
          </attribute:endLine>
          <subNode:parts>
           <scalar:array>
            <scalar:string>NULL</scalar:string>
           </scalar:array>
          </subNode:parts>
         </node:Name>
        </subNode:name>
       </node:Expr_ConstFetch>
      </subNode:expr>
     </node:Stmt_Return>
    </scalar:array>
   </subNode:stmts>
   <subNode:name>
    <scalar:string>array_min</scalar:string>
   </subNode:name>
   <subNode:namespacedName>
    <node:Name>
     <attribute:comments>
      <scalar:array>
       <comment isDocComment="false" line="2">/*
 * This work is hereby released into the Public Domain.
 * To view a copy of the public domain dedication,
 * visit http://creativecommons.org/licenses/publicdomain/ or send a letter to
 * Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.
 *
 */</comment>
       <comment isDocComment="false" line="10">/*
 * Get the minimum of an array and ignore non numeric values
 */</comment>
      </scalar:array>
     </attribute:comments>
     <attribute:startLine>
      <scalar:int>13</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>40</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>array_min</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name>
   </subNode:namespacedName>
  </node:Stmt_Function>
  <node:Stmt_Function>
   <attribute:comments>
    <scalar:array>
     <comment isDocComment="false" line="42">/*
 * Get the maximum of an array and ignore non numeric values
 */</comment>
    </scalar:array>
   </attribute:comments>
   <attribute:startLine>
    <scalar:int>45</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>72</scalar:int>
   </attribute:endLine>
   <subNode:byRef>
    <scalar:false/>
   </subNode:byRef>
   <subNode:params>
    <scalar:array>
     <node:Param>
      <attribute:startLine>
       <scalar:int>45</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>45</scalar:int>
      </attribute:endLine>
      <subNode:name>
       <scalar:string>array</scalar:string>
      </subNode:name>
      <subNode:default>
       <scalar:null/>
      </subNode:default>
      <subNode:type>
       <scalar:null/>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
     </node:Param>
    </scalar:array>
   </subNode:params>
   <subNode:stmts>
    <scalar:array>
     <node:Stmt_If>
      <attribute:startLine>
       <scalar:int>47</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>68</scalar:int>
      </attribute:endLine>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Do>
         <attribute:startLine>
          <scalar:int>49</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>54</scalar:int>
         </attribute:endLine>
         <subNode:cond>
          <node:Expr_LogicalAnd>
           <attribute:startLine>
            <scalar:int>54</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>54</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Greater>
             <attribute:startLine>
              <scalar:int>54</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>54</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_FuncCall>
               <attribute:startLine>
                <scalar:int>54</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>54</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>54</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>54</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>count</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>54</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>54</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>54</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>54</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>array</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_FuncCall>
             </subNode:left>
             <subNode:right>
              <node:Scalar_LNumber>
               <attribute:startLine>
                <scalar:int>54</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>54</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <scalar:int>0</scalar:int>
               </subNode:value>
              </node:Scalar_LNumber>
             </subNode:right>
            </node:Expr_Greater>
           </subNode:left>
           <subNode:right>
            <node:Expr_Identical>
             <attribute:startLine>
              <scalar:int>54</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>54</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>54</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>54</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>max</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:left>
             <subNode:right>
              <node:Expr_ConstFetch>
               <attribute:startLine>
                <scalar:int>54</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>54</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>54</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>54</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>NULL</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
              </node:Expr_ConstFetch>
             </subNode:right>
            </node:Expr_Identical>
           </subNode:right>
          </node:Expr_LogicalAnd>
         </subNode:cond>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>50</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>50</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>50</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>50</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>max</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>50</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>50</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>50</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>50</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>array_pop</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>50</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>50</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>50</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>50</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>array</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>51</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>53</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>52</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>52</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>52</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>52</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>max</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:expr>
                <node:Expr_ConstFetch>
                 <attribute:startLine>
                  <scalar:int>52</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>52</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>52</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>52</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>NULL</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                </node:Expr_ConstFetch>
               </subNode:expr>
              </node:Expr_Assign>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_Identical>
              <attribute:startLine>
               <scalar:int>51</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>51</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>51</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>51</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>51</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>51</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>is_numeric</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>51</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>51</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>51</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>51</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>max</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:left>
              <subNode:right>
               <node:Expr_ConstFetch>
                <attribute:startLine>
                 <scalar:int>51</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>51</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>51</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>51</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>FALSE</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
               </node:Expr_ConstFetch>
              </subNode:right>
             </node:Expr_Identical>
            </subNode:cond>
           </node:Stmt_If>
          </scalar:array>
         </subNode:stmts>
        </node:Stmt_Do>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>56</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>58</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>57</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>57</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>57</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>57</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>max</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Cast_Double>
              <attribute:startLine>
               <scalar:int>57</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>57</scalar:int>
              </attribute:endLine>
              <subNode:expr>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>57</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>57</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>max</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:expr>
             </node:Expr_Cast_Double>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_NotIdentical>
           <attribute:startLine>
            <scalar:int>56</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>56</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>56</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>56</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>max</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:left>
           <subNode:right>
            <node:Expr_ConstFetch>
             <attribute:startLine>
              <scalar:int>56</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>56</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>56</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>56</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>NULL</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
            </node:Expr_ConstFetch>
           </subNode:right>
          </node:Expr_NotIdentical>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Foreach>
         <attribute:startLine>
          <scalar:int>60</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>64</scalar:int>
         </attribute:endLine>
         <subNode:keyVar>
          <scalar:null/>
         </subNode:keyVar>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>61</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>63</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>62</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>62</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>62</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>62</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>max</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:expr>
                <node:Expr_Cast_Double>
                 <attribute:startLine>
                  <scalar:int>62</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>62</scalar:int>
                 </attribute:endLine>
                 <subNode:expr>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>62</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>62</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>value</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:expr>
                </node:Expr_Cast_Double>
               </subNode:expr>
              </node:Expr_Assign>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_LogicalAnd>
              <attribute:startLine>
               <scalar:int>61</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>61</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>61</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>61</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>61</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>61</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>is_numeric</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>61</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>61</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>61</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>61</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>value</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:left>
              <subNode:right>
               <node:Expr_Greater>
                <attribute:startLine>
                 <scalar:int>61</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>61</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Expr_Cast_Double>
                  <attribute:startLine>
                   <scalar:int>61</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>61</scalar:int>
                  </attribute:endLine>
                  <subNode:expr>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>61</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>61</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>value</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:expr>
                 </node:Expr_Cast_Double>
                </subNode:left>
                <subNode:right>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>61</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>61</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>max</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:right>
               </node:Expr_Greater>
              </subNode:right>
             </node:Expr_LogicalAnd>
            </subNode:cond>
           </node:Stmt_If>
          </scalar:array>
         </subNode:stmts>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>60</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>60</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>array</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
         <subNode:valueVar>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>60</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>60</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>value</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:valueVar>
        </node:Stmt_Foreach>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>66</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>66</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>66</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>66</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>max</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:elseifs>
       <scalar:array/>
      </subNode:elseifs>
      <subNode:else>
       <scalar:null/>
      </subNode:else>
      <subNode:cond>
       <node:Expr_LogicalAnd>
        <attribute:startLine>
         <scalar:int>47</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>47</scalar:int>
        </attribute:endLine>
        <subNode:left>
         <node:Expr_FuncCall>
          <attribute:startLine>
           <scalar:int>47</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>47</scalar:int>
          </attribute:endLine>
          <subNode:name>
           <node:Name>
            <attribute:startLine>
             <scalar:int>47</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>47</scalar:int>
            </attribute:endLine>
            <subNode:parts>
             <scalar:array>
              <scalar:string>is_array</scalar:string>
             </scalar:array>
            </subNode:parts>
           </node:Name>
          </subNode:name>
          <subNode:args>
           <scalar:array>
            <node:Arg>
             <attribute:startLine>
              <scalar:int>47</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>47</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>47</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>47</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>array</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:value>
             <subNode:byRef>
              <scalar:false/>
             </subNode:byRef>
            </node:Arg>
           </scalar:array>
          </subNode:args>
         </node:Expr_FuncCall>
        </subNode:left>
        <subNode:right>
         <node:Expr_Greater>
          <attribute:startLine>
           <scalar:int>47</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>47</scalar:int>
          </attribute:endLine>
          <subNode:left>
           <node:Expr_FuncCall>
            <attribute:startLine>
             <scalar:int>47</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>47</scalar:int>
            </attribute:endLine>
            <subNode:name>
             <node:Name>
              <attribute:startLine>
               <scalar:int>47</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>47</scalar:int>
              </attribute:endLine>
              <subNode:parts>
               <scalar:array>
                <scalar:string>count</scalar:string>
               </scalar:array>
              </subNode:parts>
             </node:Name>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>47</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>47</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>47</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>47</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>array</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_FuncCall>
          </subNode:left>
          <subNode:right>
           <node:Scalar_LNumber>
            <attribute:startLine>
             <scalar:int>47</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>47</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <scalar:int>0</scalar:int>
            </subNode:value>
           </node:Scalar_LNumber>
          </subNode:right>
         </node:Expr_Greater>
        </subNode:right>
       </node:Expr_LogicalAnd>
      </subNode:cond>
     </node:Stmt_If>
     <node:Stmt_Return>
      <attribute:startLine>
       <scalar:int>70</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>70</scalar:int>
      </attribute:endLine>
      <subNode:expr>
       <node:Expr_ConstFetch>
        <attribute:startLine>
         <scalar:int>70</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>70</scalar:int>
        </attribute:endLine>
        <subNode:name>
         <node:Name>
          <attribute:startLine>
           <scalar:int>70</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>70</scalar:int>
          </attribute:endLine>
          <subNode:parts>
           <scalar:array>
            <scalar:string>NULL</scalar:string>
           </scalar:array>
          </subNode:parts>
         </node:Name>
        </subNode:name>
       </node:Expr_ConstFetch>
      </subNode:expr>
     </node:Stmt_Return>
    </scalar:array>
   </subNode:stmts>
   <subNode:name>
    <scalar:string>array_max</scalar:string>
   </subNode:name>
   <subNode:namespacedName>
    <node:Name>
     <attribute:comments>
      <scalar:array>
       <comment isDocComment="false" line="42">/*
 * Get the maximum of an array and ignore non numeric values
 */</comment>
      </scalar:array>
     </attribute:comments>
     <attribute:startLine>
      <scalar:int>45</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>72</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>array_max</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name>
   </subNode:namespacedName>
  </node:Stmt_Function>
  <node:Stmt_If>
   <attribute:comments>
    <scalar:array>
     <comment isDocComment="false" line="73">/*
 * Define file_put_contents() if needed
 */</comment>
    </scalar:array>
   </attribute:comments>
   <attribute:startLine>
    <scalar:int>76</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>86</scalar:int>
   </attribute:endLine>
   <subNode:stmts>
    <scalar:array>
     <node:Stmt_Function>
      <attribute:startLine>
       <scalar:int>78</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>84</scalar:int>
      </attribute:endLine>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>78</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>78</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>file</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>78</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>78</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>content</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>79</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>79</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>79</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>79</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>fp</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>79</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>79</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>79</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>79</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>fopen</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>79</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>79</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>79</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>79</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>file</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>79</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>79</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>79</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>79</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>w</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>80</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>83</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_FuncCall>
            <attribute:startLine>
             <scalar:int>81</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>81</scalar:int>
            </attribute:endLine>
            <subNode:name>
             <node:Name>
              <attribute:startLine>
               <scalar:int>81</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>81</scalar:int>
              </attribute:endLine>
              <subNode:parts>
               <scalar:array>
                <scalar:string>fwrite</scalar:string>
               </scalar:array>
              </subNode:parts>
             </node:Name>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>81</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>81</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>81</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>81</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>fp</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>81</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>81</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>81</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>81</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>content</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_FuncCall>
           <node:Expr_FuncCall>
            <attribute:startLine>
             <scalar:int>82</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>82</scalar:int>
            </attribute:endLine>
            <subNode:name>
             <node:Name>
              <attribute:startLine>
               <scalar:int>82</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>82</scalar:int>
              </attribute:endLine>
              <subNode:parts>
               <scalar:array>
                <scalar:string>fclose</scalar:string>
               </scalar:array>
              </subNode:parts>
             </node:Name>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>82</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>82</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>82</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>82</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>fp</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_FuncCall>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>80</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>80</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>fp</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:cond>
        </node:Stmt_If>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>file_put_contents</scalar:string>
      </subNode:name>
      <subNode:namespacedName>
       <node:Name>
        <attribute:startLine>
         <scalar:int>78</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>84</scalar:int>
        </attribute:endLine>
        <subNode:parts>
         <scalar:array>
          <scalar:string>file_put_contents</scalar:string>
         </scalar:array>
        </subNode:parts>
       </node:Name>
      </subNode:namespacedName>
     </node:Stmt_Function>
    </scalar:array>
   </subNode:stmts>
   <subNode:elseifs>
    <scalar:array/>
   </subNode:elseifs>
   <subNode:else>
    <scalar:null/>
   </subNode:else>
   <subNode:cond>
    <node:Expr_Identical>
     <attribute:startLine>
      <scalar:int>76</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>76</scalar:int>
     </attribute:endLine>
     <subNode:left>
      <node:Expr_FuncCall>
       <attribute:startLine>
        <scalar:int>76</scalar:int>
       </attribute:startLine>
       <attribute:endLine>
        <scalar:int>76</scalar:int>
       </attribute:endLine>
       <subNode:name>
        <node:Name>
         <attribute:startLine>
          <scalar:int>76</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>76</scalar:int>
         </attribute:endLine>
         <subNode:parts>
          <scalar:array>
           <scalar:string>function_exists</scalar:string>
          </scalar:array>
         </subNode:parts>
        </node:Name>
       </subNode:name>
       <subNode:args>
        <scalar:array>
         <node:Arg>
          <attribute:startLine>
           <scalar:int>76</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>76</scalar:int>
          </attribute:endLine>
          <subNode:value>
           <node:Scalar_String>
            <attribute:startLine>
             <scalar:int>76</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>76</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <scalar:string>file_put_contents</scalar:string>
            </subNode:value>
           </node:Scalar_String>
          </subNode:value>
          <subNode:byRef>
           <scalar:false/>
          </subNode:byRef>
         </node:Arg>
        </scalar:array>
       </subNode:args>
      </node:Expr_FuncCall>
     </subNode:left>
     <subNode:right>
      <node:Expr_ConstFetch>
       <attribute:startLine>
        <scalar:int>76</scalar:int>
       </attribute:startLine>
       <attribute:endLine>
        <scalar:int>76</scalar:int>
       </attribute:endLine>
       <subNode:name>
        <node:Name>
         <attribute:startLine>
          <scalar:int>76</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>76</scalar:int>
         </attribute:endLine>
         <subNode:parts>
          <scalar:array>
           <scalar:string>FALSE</scalar:string>
          </scalar:array>
         </subNode:parts>
        </node:Name>
       </subNode:name>
      </node:Expr_ConstFetch>
     </subNode:right>
    </node:Expr_Identical>
   </subNode:cond>
  </node:Stmt_If>
  <node:Expr_FuncCall>
   <attribute:comments>
    <scalar:array>
     <comment isDocComment="false" line="88">/*
 * Change error handler
 */</comment>
    </scalar:array>
   </attribute:comments>
   <attribute:startLine>
    <scalar:int>91</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>91</scalar:int>
   </attribute:endLine>
   <subNode:name>
    <node:Name>
     <attribute:comments>
      <scalar:array>
       <comment isDocComment="false" line="88">/*
 * Change error handler
 */</comment>
      </scalar:array>
     </attribute:comments>
     <attribute:startLine>
      <scalar:int>91</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>91</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>set_error_handler</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name>
   </subNode:name>
   <subNode:args>
    <scalar:array>
     <node:Arg>
      <attribute:startLine>
       <scalar:int>91</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>91</scalar:int>
      </attribute:endLine>
      <subNode:value>
       <node:Scalar_String>
        <attribute:startLine>
         <scalar:int>91</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>91</scalar:int>
        </attribute:endLine>
        <subNode:value>
         <scalar:string>errorHandlerArtichow</scalar:string>
        </subNode:value>
       </node:Scalar_String>
      </subNode:value>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
     </node:Arg>
    </scalar:array>
   </subNode:args>
  </node:Expr_FuncCall>
  <node:Stmt_Function>
   <attribute:startLine>
    <scalar:int>93</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>95</scalar:int>
   </attribute:endLine>
   <subNode:byRef>
    <scalar:false/>
   </subNode:byRef>
   <subNode:params>
    <scalar:array>
     <node:Param>
      <attribute:startLine>
       <scalar:int>93</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>93</scalar:int>
      </attribute:endLine>
      <subNode:name>
       <scalar:string>level</scalar:string>
      </subNode:name>
      <subNode:default>
       <scalar:null/>
      </subNode:default>
      <subNode:type>
       <scalar:null/>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
     </node:Param>
     <node:Param>
      <attribute:startLine>
       <scalar:int>93</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>93</scalar:int>
      </attribute:endLine>
      <subNode:name>
       <scalar:string>message</scalar:string>
      </subNode:name>
      <subNode:default>
       <scalar:null/>
      </subNode:default>
      <subNode:type>
       <scalar:null/>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
     </node:Param>
     <node:Param>
      <attribute:startLine>
       <scalar:int>93</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>93</scalar:int>
      </attribute:endLine>
      <subNode:name>
       <scalar:string>file</scalar:string>
      </subNode:name>
      <subNode:default>
       <scalar:null/>
      </subNode:default>
      <subNode:type>
       <scalar:null/>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
     </node:Param>
     <node:Param>
      <attribute:startLine>
       <scalar:int>93</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>93</scalar:int>
      </attribute:endLine>
      <subNode:name>
       <scalar:string>line</scalar:string>
      </subNode:name>
      <subNode:default>
       <scalar:null/>
      </subNode:default>
      <subNode:type>
       <scalar:null/>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
     </node:Param>
    </scalar:array>
   </subNode:params>
   <subNode:stmts>
    <scalar:array>
     <node:Expr_StaticCall>
      <attribute:startLine>
       <scalar:int>94</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>94</scalar:int>
      </attribute:endLine>
      <subNode:class>
       <node:Name_FullyQualified>
        <attribute:startLine>
         <scalar:int>94</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>94</scalar:int>
        </attribute:endLine>
        <subNode:parts>
         <scalar:array>
          <scalar:string>awImage</scalar:string>
         </scalar:array>
        </subNode:parts>
       </node:Name_FullyQualified>
      </subNode:class>
      <subNode:name>
       <scalar:string>drawError</scalar:string>
      </subNode:name>
      <subNode:args>
       <scalar:array>
        <node:Arg>
         <attribute:startLine>
          <scalar:int>94</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>94</scalar:int>
         </attribute:endLine>
         <subNode:value>
          <node:Expr_Concat>
           <attribute:startLine>
            <scalar:int>94</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>94</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Concat>
             <attribute:startLine>
              <scalar:int>94</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>94</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_Concat>
               <attribute:startLine>
                <scalar:int>94</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>94</scalar:int>
               </attribute:endLine>
               <subNode:left>
                <node:Expr_Concat>
                 <attribute:startLine>
                  <scalar:int>94</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>94</scalar:int>
                 </attribute:endLine>
                 <subNode:left>
                  <node:Expr_Concat>
                   <attribute:startLine>
                    <scalar:int>94</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>94</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>94</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>94</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>message</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:left>
                   <subNode:right>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>94</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>94</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string> in </scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:right>
                  </node:Expr_Concat>
                 </subNode:left>
                 <subNode:right>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>94</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>94</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>file</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:right>
                </node:Expr_Concat>
               </subNode:left>
               <subNode:right>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>94</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>94</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string> on line </scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:right>
              </node:Expr_Concat>
             </subNode:left>
             <subNode:right>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>94</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>94</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>line</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:right>
            </node:Expr_Concat>
           </subNode:left>
           <subNode:right>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>94</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>94</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string>.</scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:right>
          </node:Expr_Concat>
         </subNode:value>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Arg>
       </scalar:array>
      </subNode:args>
     </node:Expr_StaticCall>
    </scalar:array>
   </subNode:stmts>
   <subNode:name>
    <scalar:string>errorHandlerArtichow</scalar:string>
   </subNode:name>
   <subNode:namespacedName>
    <node:Name>
     <attribute:startLine>
      <scalar:int>93</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>95</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>errorHandlerArtichow</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name>
   </subNode:namespacedName>
  </node:Stmt_Function>
 </scalar:array>
</AST>
