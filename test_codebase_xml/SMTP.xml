<?xml version="1.0" encoding="UTF-8"?>
<AST xmlns:node="http://nikic.github.com/PHPParser/XML/node" xmlns:subNode="http://nikic.github.com/PHPParser/XML/subNode" xmlns:attribute="http://nikic.github.com/PHPParser/XML/attribute" xmlns:scalar="http://nikic.github.com/PHPParser/XML/scalar">
 <scalar:array>
  <node:Expr_Include>
   <attribute:comments>
    <scalar:array>
     <comment isDocComment="true" line="3">/**
 * Swift Mailer SMTP Connection component.
 * Please read the LICENSE file
 * @author Chris Corbyn &lt;chris@w3style.co.uk&gt;
 * @package Swift_Connection
 * @license GNU Lesser General Public License
 */</comment>
    </scalar:array>
   </attribute:comments>
   <attribute:startLine>
    <scalar:int>11</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>11</scalar:int>
   </attribute:endLine>
   <subNode:expr>
    <node:Expr_Concat>
     <attribute:startLine>
      <scalar:int>11</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>11</scalar:int>
     </attribute:endLine>
     <subNode:left>
      <node:Expr_FuncCall>
       <attribute:startLine>
        <scalar:int>11</scalar:int>
       </attribute:startLine>
       <attribute:endLine>
        <scalar:int>11</scalar:int>
       </attribute:endLine>
       <subNode:name>
        <node:Name>
         <attribute:startLine>
          <scalar:int>11</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>11</scalar:int>
         </attribute:endLine>
         <subNode:parts>
          <scalar:array>
           <scalar:string>dirname</scalar:string>
          </scalar:array>
         </subNode:parts>
        </node:Name>
       </subNode:name>
       <subNode:args>
        <scalar:array>
         <node:Arg>
          <attribute:startLine>
           <scalar:int>11</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>11</scalar:int>
          </attribute:endLine>
          <subNode:value>
           <node:Scalar_FileConst>
            <attribute:startLine>
             <scalar:int>11</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>11</scalar:int>
            </attribute:endLine>
           </node:Scalar_FileConst>
          </subNode:value>
          <subNode:byRef>
           <scalar:false/>
          </subNode:byRef>
         </node:Arg>
        </scalar:array>
       </subNode:args>
      </node:Expr_FuncCall>
     </subNode:left>
     <subNode:right>
      <node:Scalar_String>
       <attribute:startLine>
        <scalar:int>11</scalar:int>
       </attribute:startLine>
       <attribute:endLine>
        <scalar:int>11</scalar:int>
       </attribute:endLine>
       <subNode:value>
        <scalar:string>/../ClassLoader.php</scalar:string>
       </subNode:value>
      </node:Scalar_String>
     </subNode:right>
    </node:Expr_Concat>
   </subNode:expr>
   <subNode:type>
    <scalar:int>4</scalar:int>
   </subNode:type>
  </node:Expr_Include>
  <node:Expr_StaticCall>
   <attribute:startLine>
    <scalar:int>12</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>12</scalar:int>
   </attribute:endLine>
   <subNode:class>
    <node:Name_FullyQualified>
     <attribute:startLine>
      <scalar:int>12</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>12</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Swift_ClassLoader</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name_FullyQualified>
   </subNode:class>
   <subNode:name>
    <scalar:string>load</scalar:string>
   </subNode:name>
   <subNode:args>
    <scalar:array>
     <node:Arg>
      <attribute:startLine>
       <scalar:int>12</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>12</scalar:int>
      </attribute:endLine>
      <subNode:value>
       <node:Scalar_String>
        <attribute:startLine>
         <scalar:int>12</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>12</scalar:int>
        </attribute:endLine>
        <subNode:value>
         <scalar:string>Swift_ConnectionBase</scalar:string>
        </subNode:value>
       </node:Scalar_String>
      </subNode:value>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
     </node:Arg>
    </scalar:array>
   </subNode:args>
  </node:Expr_StaticCall>
  <node:Expr_StaticCall>
   <attribute:startLine>
    <scalar:int>13</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>13</scalar:int>
   </attribute:endLine>
   <subNode:class>
    <node:Name_FullyQualified>
     <attribute:startLine>
      <scalar:int>13</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>13</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Swift_ClassLoader</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name_FullyQualified>
   </subNode:class>
   <subNode:name>
    <scalar:string>load</scalar:string>
   </subNode:name>
   <subNode:args>
    <scalar:array>
     <node:Arg>
      <attribute:startLine>
       <scalar:int>13</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>13</scalar:int>
      </attribute:endLine>
      <subNode:value>
       <node:Scalar_String>
        <attribute:startLine>
         <scalar:int>13</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>13</scalar:int>
        </attribute:endLine>
        <subNode:value>
         <scalar:string>Swift_Authenticator</scalar:string>
        </subNode:value>
       </node:Scalar_String>
      </subNode:value>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
     </node:Arg>
    </scalar:array>
   </subNode:args>
  </node:Expr_StaticCall>
  <node:Stmt_Class>
   <attribute:comments>
    <scalar:array>
     <comment isDocComment="true" line="15">/**
 * Swift SMTP Connection
 * @package Swift_Connection
 * @author Chris Corbyn &lt;chris@w3style.co.uk&gt;
 */</comment>
    </scalar:array>
   </attribute:comments>
   <attribute:startLine>
    <scalar:int>20</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>452</scalar:int>
   </attribute:endLine>
   <subNode:type>
    <scalar:int>0</scalar:int>
   </subNode:type>
   <subNode:extends>
    <node:Name_FullyQualified>
     <attribute:startLine>
      <scalar:int>20</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>20</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Swift_ConnectionBase</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name_FullyQualified>
   </subNode:extends>
   <subNode:implements>
    <scalar:array/>
   </subNode:implements>
   <subNode:stmts>
    <scalar:array>
     <node:Stmt_ClassConst>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="22">/**
   * Constant for TLS connections
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>25</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>25</scalar:int>
      </attribute:endLine>
      <subNode:consts>
       <scalar:array>
        <node:Const>
         <attribute:startLine>
          <scalar:int>25</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>25</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>ENC_TLS</scalar:string>
         </subNode:name>
         <subNode:value>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>25</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>25</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>2</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:value>
        </node:Const>
       </scalar:array>
      </subNode:consts>
     </node:Stmt_ClassConst>
     <node:Stmt_ClassConst>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="26">/**
   * Constant for SSL connections
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>29</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>29</scalar:int>
      </attribute:endLine>
      <subNode:consts>
       <scalar:array>
        <node:Const>
         <attribute:startLine>
          <scalar:int>29</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>29</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>ENC_SSL</scalar:string>
         </subNode:name>
         <subNode:value>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>29</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>29</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>4</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:value>
        </node:Const>
       </scalar:array>
      </subNode:consts>
     </node:Stmt_ClassConst>
     <node:Stmt_ClassConst>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="30">/**
   * Constant for unencrypted connections
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>33</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>33</scalar:int>
      </attribute:endLine>
      <subNode:consts>
       <scalar:array>
        <node:Const>
         <attribute:startLine>
          <scalar:int>33</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>33</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>ENC_OFF</scalar:string>
         </subNode:name>
         <subNode:value>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>33</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>33</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>8</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:value>
        </node:Const>
       </scalar:array>
      </subNode:consts>
     </node:Stmt_ClassConst>
     <node:Stmt_ClassConst>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="34">/**
   * Constant for the default SMTP port
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>37</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>37</scalar:int>
      </attribute:endLine>
      <subNode:consts>
       <scalar:array>
        <node:Const>
         <attribute:startLine>
          <scalar:int>37</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>37</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>PORT_DEFAULT</scalar:string>
         </subNode:name>
         <subNode:value>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>37</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>37</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>25</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:value>
        </node:Const>
       </scalar:array>
      </subNode:consts>
     </node:Stmt_ClassConst>
     <node:Stmt_ClassConst>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="38">/**
   * Constant for the default secure SMTP port
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>41</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>41</scalar:int>
      </attribute:endLine>
      <subNode:consts>
       <scalar:array>
        <node:Const>
         <attribute:startLine>
          <scalar:int>41</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>41</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>PORT_SECURE</scalar:string>
         </subNode:name>
         <subNode:value>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>41</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>41</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>465</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:value>
        </node:Const>
       </scalar:array>
      </subNode:consts>
     </node:Stmt_ClassConst>
     <node:Stmt_ClassConst>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="42">/**
   * Constant for auto-detection of paramters
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>45</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>45</scalar:int>
      </attribute:endLine>
      <subNode:consts>
       <scalar:array>
        <node:Const>
         <attribute:startLine>
          <scalar:int>45</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>45</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>AUTO_DETECT</scalar:string>
         </subNode:name>
         <subNode:value>
          <node:Expr_UnaryMinus>
           <attribute:startLine>
            <scalar:int>45</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>45</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Scalar_LNumber>
             <attribute:startLine>
              <scalar:int>45</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>45</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:int>2</scalar:int>
             </subNode:value>
            </node:Scalar_LNumber>
           </subNode:expr>
          </node:Expr_UnaryMinus>
         </subNode:value>
        </node:Const>
       </scalar:array>
      </subNode:consts>
     </node:Stmt_ClassConst>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="46">/**
   * A connection handle
   * @var resource
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>50</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>50</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>50</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>50</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>handle</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>50</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>50</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>50</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>50</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="51">/**
   * The remote port number
   * @var int
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>55</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>55</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>55</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>55</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>port</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>55</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>55</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>55</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>55</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="56">/**
   * Encryption type to use
   * @var int
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>60</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>60</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>60</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>60</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>encryption</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>60</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>60</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>60</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>60</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="61">/**
   * A connection timeout
   * @var int
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>65</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>65</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>65</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>65</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>timeout</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>65</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>65</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>15</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="66">/**
   * A username to authenticate with
   * @var string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>70</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>70</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>70</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>70</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>username</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>70</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>70</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>70</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>70</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>false</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="71">/**
   * A password to authenticate with
   * @var string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>75</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>75</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>75</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>75</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>password</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>75</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>75</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>75</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>75</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>false</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="76">/**
   * Loaded authentication mechanisms
   * @var array
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>80</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>80</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>80</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>80</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>authenticators</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_Array>
           <attribute:startLine>
            <scalar:int>80</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>80</scalar:int>
           </attribute:endLine>
           <subNode:items>
            <scalar:array/>
           </subNode:items>
          </node:Expr_Array>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="81">/**
   * Fsockopen() error codes.
   * @var int
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>85</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>85</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>85</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>85</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>errno</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="86">/**
   * Fsockopen() error codes.
   * @var string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>90</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>90</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>90</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>90</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>errstr</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="92">/**
   * Constructor
   * @param string The remote server to connect to
   * @param int The remote port to connect to
   * @param int The encryption level to use
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>98</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>103</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>98</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>98</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>server</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>98</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>98</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>localhost</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>98</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>98</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>port</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>98</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>98</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>98</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>98</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>98</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>98</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>encryption</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>98</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>98</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>98</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>98</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>100</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>100</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>100</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>100</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>setServer</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>100</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>100</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>100</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>100</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>server</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>101</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>101</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>101</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>101</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>setEncryption</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>101</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>101</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>101</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>101</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>encryption</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>102</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>102</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>102</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>102</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>setPort</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>102</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>102</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>102</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>102</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>port</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>__construct</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="104">/**
   * Set the timeout to connect in seconds
   * @param int Timeout to use
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>108</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>111</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>108</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>108</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>time</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>110</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>110</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>110</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>110</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>110</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>110</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>timeout</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Cast_Int>
           <attribute:startLine>
            <scalar:int>110</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>110</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>110</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>110</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>time</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:expr>
          </node:Expr_Cast_Int>
         </subNode:expr>
        </node:Expr_Assign>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>setTimeout</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="112">/**
   * Get the timeout currently set for connecting
   * @return int
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>116</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>119</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>118</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>118</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>118</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>118</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>118</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>118</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>timeout</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getTimeout</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="120">/**
   * Set the remote server to connect to as a FQDN
   * @param string Server name
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>124</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>132</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>124</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>124</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>server</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>126</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>130</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>128</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>128</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>128</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>128</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>server</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_ErrorSuppress>
              <attribute:startLine>
               <scalar:int>128</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>128</scalar:int>
              </attribute:endLine>
              <subNode:expr>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>128</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>128</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>128</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>128</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>ini_get</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>128</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>128</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>128</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>128</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>SMTP</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:expr>
             </node:Expr_ErrorSuppress>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>129</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>129</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>129</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>129</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>129</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>129</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>server</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:expr>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>129</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>129</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>localhost</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:expr>
              </node:Expr_Assign>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_BooleanNot>
              <attribute:startLine>
               <scalar:int>129</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>129</scalar:int>
              </attribute:endLine>
              <subNode:expr>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>129</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>129</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>server</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:expr>
             </node:Expr_BooleanNot>
            </subNode:cond>
           </node:Stmt_If>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Equal>
           <attribute:startLine>
            <scalar:int>126</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>126</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>126</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>126</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>server</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:left>
           <subNode:right>
            <node:Expr_ClassConstFetch>
             <attribute:startLine>
              <scalar:int>126</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>126</scalar:int>
             </attribute:endLine>
             <subNode:class>
              <node:Name>
               <attribute:startLine>
                <scalar:int>126</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>126</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>self</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:class>
             <subNode:name>
              <scalar:string>AUTO_DETECT</scalar:string>
             </subNode:name>
            </node:Expr_ClassConstFetch>
           </subNode:right>
          </node:Expr_Equal>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>131</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>131</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>131</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>131</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>131</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>131</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>server</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Cast_String>
           <attribute:startLine>
            <scalar:int>131</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>131</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>131</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>131</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>server</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:expr>
          </node:Expr_Cast_String>
         </subNode:expr>
        </node:Expr_Assign>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>setServer</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="133">/**
   * Get the remote server name
   * @return string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>137</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>140</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>139</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>139</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>139</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>139</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>139</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>139</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>server</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getServer</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="141">/**
   * Set the remote port number to connect to
   * @param int Port number
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>145</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>153</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>145</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>145</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>port</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>147</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>150</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>149</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>149</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>149</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>149</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>port</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_ErrorSuppress>
              <attribute:startLine>
               <scalar:int>149</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>149</scalar:int>
              </attribute:endLine>
              <subNode:expr>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>149</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>149</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>149</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>149</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>ini_get</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>149</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>149</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>149</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>149</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>SMTP_PORT</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:expr>
             </node:Expr_ErrorSuppress>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Equal>
           <attribute:startLine>
            <scalar:int>147</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>147</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>147</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>147</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>port</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:left>
           <subNode:right>
            <node:Expr_ClassConstFetch>
             <attribute:startLine>
              <scalar:int>147</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>147</scalar:int>
             </attribute:endLine>
             <subNode:class>
              <node:Name>
               <attribute:startLine>
                <scalar:int>147</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>147</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>self</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:class>
             <subNode:name>
              <scalar:string>AUTO_DETECT</scalar:string>
             </subNode:name>
            </node:Expr_ClassConstFetch>
           </subNode:right>
          </node:Expr_Equal>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>151</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>151</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>151</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>151</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>151</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>151</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>port</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Ternary>
              <attribute:startLine>
               <scalar:int>151</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>151</scalar:int>
              </attribute:endLine>
              <subNode:cond>
               <node:Expr_Equal>
                <attribute:startLine>
                 <scalar:int>151</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>151</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Expr_MethodCall>
                  <attribute:startLine>
                   <scalar:int>151</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>151</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>151</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>151</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>this</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>getEncryption</scalar:string>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array/>
                  </subNode:args>
                 </node:Expr_MethodCall>
                </subNode:left>
                <subNode:right>
                 <node:Expr_ClassConstFetch>
                  <attribute:startLine>
                   <scalar:int>151</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>151</scalar:int>
                  </attribute:endLine>
                  <subNode:class>
                   <node:Name>
                    <attribute:startLine>
                     <scalar:int>151</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>151</scalar:int>
                    </attribute:endLine>
                    <subNode:parts>
                     <scalar:array>
                      <scalar:string>self</scalar:string>
                     </scalar:array>
                    </subNode:parts>
                   </node:Name>
                  </subNode:class>
                  <subNode:name>
                   <scalar:string>ENC_OFF</scalar:string>
                  </subNode:name>
                 </node:Expr_ClassConstFetch>
                </subNode:right>
               </node:Expr_Equal>
              </subNode:cond>
              <subNode:if>
               <node:Expr_ClassConstFetch>
                <attribute:startLine>
                 <scalar:int>151</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>151</scalar:int>
                </attribute:endLine>
                <subNode:class>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>151</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>151</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>self</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:class>
                <subNode:name>
                 <scalar:string>PORT_DEFAULT</scalar:string>
                </subNode:name>
               </node:Expr_ClassConstFetch>
              </subNode:if>
              <subNode:else>
               <node:Expr_ClassConstFetch>
                <attribute:startLine>
                 <scalar:int>151</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>151</scalar:int>
                </attribute:endLine>
                <subNode:class>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>151</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>151</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>self</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:class>
                <subNode:name>
                 <scalar:string>PORT_SECURE</scalar:string>
                </subNode:name>
               </node:Expr_ClassConstFetch>
              </subNode:else>
             </node:Expr_Ternary>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>151</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>151</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>151</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>151</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>port</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>152</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>152</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>152</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>152</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>152</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>152</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>port</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Cast_Int>
           <attribute:startLine>
            <scalar:int>152</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>152</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>152</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>152</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>port</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:expr>
          </node:Expr_Cast_Int>
         </subNode:expr>
        </node:Expr_Assign>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>setPort</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="154">/**
   * Get the remote port number currently used to connect
   * @return int
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>158</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>161</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>160</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>160</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>160</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>160</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>160</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>160</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>port</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getPort</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="162">/**
   * Provide a username for authentication
   * @param string The username
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>166</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>170</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>166</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>166</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>user</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>168</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>168</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>168</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>168</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>setRequiresEHLO</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>168</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>168</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_ConstFetch>
              <attribute:startLine>
               <scalar:int>168</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>168</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>168</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>168</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>true</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
             </node:Expr_ConstFetch>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>169</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>169</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>169</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>169</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>169</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>169</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>username</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>169</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>169</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>user</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Expr_Assign>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>setUsername</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="171">/**
   * Get the username for authentication
   * @return string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>175</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>178</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>177</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>177</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>177</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>177</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>177</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>177</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>username</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getUsername</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="179">/**
   * Set the password for SMTP authentication
   * @param string Password to use
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>183</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>187</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>183</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>183</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>pass</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>185</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>185</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>185</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>185</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>setRequiresEHLO</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>185</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>185</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_ConstFetch>
              <attribute:startLine>
               <scalar:int>185</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>185</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>185</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>185</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>true</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
             </node:Expr_ConstFetch>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>186</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>186</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>186</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>186</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>186</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>186</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>password</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>186</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>186</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>pass</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Expr_Assign>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>setPassword</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="188">/**
   * Get the password for authentication
   * @return string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>192</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>195</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>194</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>194</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>194</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>194</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>194</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>194</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>password</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getPassword</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="196">/**
   * Add an authentication mechanism to authenticate with
   * @param Swift_Authenticator
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>200</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>208</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>200</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>200</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>auth</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <node:Name_FullyQualified>
           <attribute:startLine>
            <scalar:int>200</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>200</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>Swift_Authenticator</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name_FullyQualified>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>202</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>202</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_ArrayDimFetch>
           <attribute:startLine>
            <scalar:int>202</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>202</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>202</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>202</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>202</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>202</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>authenticators</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:var>
           <subNode:dim>
            <node:Expr_MethodCall>
             <attribute:startLine>
              <scalar:int>202</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>202</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>202</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>202</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>auth</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>getAuthExtensionName</scalar:string>
             </subNode:name>
             <subNode:args>
              <scalar:array/>
             </subNode:args>
            </node:Expr_MethodCall>
           </subNode:dim>
          </node:Expr_ArrayDimFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>202</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>202</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>auth</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>203</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>203</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>203</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>203</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>log</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_StaticCall>
           <attribute:startLine>
            <scalar:int>203</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>203</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>203</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>203</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Swift_LogContainer</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
           <subNode:name>
            <scalar:string>getLog</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_StaticCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>204</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>207</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_MethodCall>
            <attribute:startLine>
             <scalar:int>206</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>206</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>206</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>206</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>log</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:name>
             <scalar:string>add</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>206</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>206</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Concat>
                 <attribute:startLine>
                  <scalar:int>206</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>206</scalar:int>
                 </attribute:endLine>
                 <subNode:left>
                  <node:Expr_Concat>
                   <attribute:startLine>
                    <scalar:int>206</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>206</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>206</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>206</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>Authentication mechanism '</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:left>
                   <subNode:right>
                    <node:Expr_MethodCall>
                     <attribute:startLine>
                      <scalar:int>206</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>206</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>206</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>206</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>auth</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>getAuthExtensionName</scalar:string>
                     </subNode:name>
                     <subNode:args>
                      <scalar:array/>
                     </subNode:args>
                    </node:Expr_MethodCall>
                   </subNode:right>
                  </node:Expr_Concat>
                 </subNode:left>
                 <subNode:right>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>206</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>206</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>' attached.</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:right>
                </node:Expr_Concat>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_MethodCall>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>204</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>204</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>204</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>204</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>log</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>hasLevel</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>204</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>204</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_ClassConstFetch>
                <attribute:startLine>
                 <scalar:int>204</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>204</scalar:int>
                </attribute:endLine>
                <subNode:class>
                 <node:Name_FullyQualified>
                  <attribute:startLine>
                   <scalar:int>204</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>204</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>Swift_Log</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name_FullyQualified>
                </subNode:class>
                <subNode:name>
                 <scalar:string>LOG_EVERYTHING</scalar:string>
                </subNode:name>
               </node:Expr_ClassConstFetch>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:cond>
        </node:Stmt_If>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>attachAuthenticator</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="209">/**
   * Set the encryption level to use on the connection
   * See the constants ENC_TLS, ENC_SSL and ENC_OFF
   * NOTE: PHP needs to have been compiled with OpenSSL for SSL and TLS to work
   * NOTE: Some PHP installations will not have the TLS stream wrapper
   * @param int Level of encryption
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>216</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>220</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>216</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>216</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>enc</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>218</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>218</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>218</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>218</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>218</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>218</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>enc</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_ClassConstFetch>
              <attribute:startLine>
               <scalar:int>218</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>218</scalar:int>
              </attribute:endLine>
              <subNode:class>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>218</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>218</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>self</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:class>
              <subNode:name>
               <scalar:string>ENC_OFF</scalar:string>
              </subNode:name>
             </node:Expr_ClassConstFetch>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>218</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>218</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>218</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>218</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>enc</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>219</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>219</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>219</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>219</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>219</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>219</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>encryption</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Cast_Int>
           <attribute:startLine>
            <scalar:int>219</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>219</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>219</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>219</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>enc</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:expr>
          </node:Expr_Cast_Int>
         </subNode:expr>
        </node:Expr_Assign>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>setEncryption</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="221">/**
   * Get the current encryption level used
   * This method returns an integer corresponding to one of the constants ENC_TLS, ENC_SSL or ENC_OFF
   * @return int
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>226</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>229</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>228</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>228</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>228</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>228</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>228</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>228</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>encryption</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getEncryption</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="230">/**
   * Read a full response from the buffer
   * inner !feof() patch provided by Christian Rodriguez:
   * &lt;a href=&quot;http://www.flyspray.org/&quot;&gt;www.flyspray.org&lt;/a&gt;
   * @return string
   * @throws Swift_ConnectionException Upon failure to read
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>237</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>259</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>239</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>240</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Throw>
            <attribute:startLine>
             <scalar:int>239</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>240</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_New>
              <attribute:startLine>
               <scalar:int>239</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>240</scalar:int>
              </attribute:endLine>
              <subNode:class>
               <node:Name_FullyQualified>
                <attribute:startLine>
                 <scalar:int>239</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>239</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>Swift_ConnectionException</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name_FullyQualified>
              </subNode:class>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>240</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>240</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Concat>
                   <attribute:startLine>
                    <scalar:int>240</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>240</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>240</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>240</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>The SMTP connection is not alive and cannot be read from.</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:left>
                   <subNode:right>
                    <node:Expr_MethodCall>
                     <attribute:startLine>
                      <scalar:int>240</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>240</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>240</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>240</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>this</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>smtpErrors</scalar:string>
                     </subNode:name>
                     <subNode:args>
                      <scalar:array/>
                     </subNode:args>
                    </node:Expr_MethodCall>
                   </subNode:right>
                  </node:Expr_Concat>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_New>
            </subNode:expr>
           </node:Stmt_Throw>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>239</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>239</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>239</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>239</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>239</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>239</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>handle</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>241</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>241</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>241</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>241</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>ret</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>241</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>241</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string></scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>242</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>242</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>242</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>242</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>line</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>242</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>242</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>0</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_While>
         <attribute:startLine>
          <scalar:int>243</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>257</scalar:int>
         </attribute:endLine>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>243</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>243</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>243</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>243</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>243</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>243</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>feof</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>243</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>243</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_PropertyFetch>
                  <attribute:startLine>
                   <scalar:int>243</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>243</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>243</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>243</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>this</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>handle</scalar:string>
                  </subNode:name>
                 </node:Expr_PropertyFetch>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_PostInc>
            <attribute:startLine>
             <scalar:int>245</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>245</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>245</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>245</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>line</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
           </node:Expr_PostInc>
           <node:Expr_FuncCall>
            <attribute:startLine>
             <scalar:int>246</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>246</scalar:int>
            </attribute:endLine>
            <subNode:name>
             <node:Name>
              <attribute:startLine>
               <scalar:int>246</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>246</scalar:int>
              </attribute:endLine>
              <subNode:parts>
               <scalar:array>
                <scalar:string>stream_set_timeout</scalar:string>
               </scalar:array>
              </subNode:parts>
             </node:Name>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>246</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>246</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>246</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>246</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>246</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>246</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>handle</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>246</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>246</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>246</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>246</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>246</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>246</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>timeout</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_FuncCall>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>247</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>247</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>247</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>247</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>tmp</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_ErrorSuppress>
              <attribute:startLine>
               <scalar:int>247</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>247</scalar:int>
              </attribute:endLine>
              <subNode:expr>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>247</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>247</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>247</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>247</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>fgets</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>247</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>247</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_PropertyFetch>
                     <attribute:startLine>
                      <scalar:int>247</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>247</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>247</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>247</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>this</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>handle</scalar:string>
                     </subNode:name>
                    </node:Expr_PropertyFetch>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:expr>
             </node:Expr_ErrorSuppress>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>248</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>254</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_Throw>
               <attribute:startLine>
                <scalar:int>250</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>253</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_New>
                 <attribute:startLine>
                  <scalar:int>250</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>253</scalar:int>
                 </attribute:endLine>
                 <subNode:class>
                  <node:Name_FullyQualified>
                   <attribute:startLine>
                    <scalar:int>250</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>250</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>Swift_ConnectionException</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name_FullyQualified>
                 </subNode:class>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>251</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>253</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Concat>
                      <attribute:startLine>
                       <scalar:int>251</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>253</scalar:int>
                      </attribute:endLine>
                      <subNode:left>
                       <node:Expr_Concat>
                        <attribute:startLine>
                         <scalar:int>251</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>252</scalar:int>
                        </attribute:endLine>
                        <subNode:left>
                         <node:Expr_Concat>
                          <attribute:startLine>
                           <scalar:int>251</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>251</scalar:int>
                          </attribute:endLine>
                          <subNode:left>
                           <node:Expr_Concat>
                            <attribute:startLine>
                             <scalar:int>251</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>251</scalar:int>
                            </attribute:endLine>
                            <subNode:left>
                             <node:Expr_Concat>
                              <attribute:startLine>
                               <scalar:int>251</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>251</scalar:int>
                              </attribute:endLine>
                              <subNode:left>
                               <node:Scalar_String>
                                <attribute:startLine>
                                 <scalar:int>251</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>251</scalar:int>
                                </attribute:endLine>
                                <subNode:value>
                                 <scalar:string>There was a problem reading line </scalar:string>
                                </subNode:value>
                               </node:Scalar_String>
                              </subNode:left>
                              <subNode:right>
                               <node:Expr_Variable>
                                <attribute:startLine>
                                 <scalar:int>251</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>251</scalar:int>
                                </attribute:endLine>
                                <subNode:name>
                                 <scalar:string>line</scalar:string>
                                </subNode:name>
                               </node:Expr_Variable>
                              </subNode:right>
                             </node:Expr_Concat>
                            </subNode:left>
                            <subNode:right>
                             <node:Scalar_String>
                              <attribute:startLine>
                               <scalar:int>251</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>251</scalar:int>
                              </attribute:endLine>
                              <subNode:value>
                               <scalar:string> of an SMTP response. The response so far was:&lt;br /&gt;[</scalar:string>
                              </subNode:value>
                             </node:Scalar_String>
                            </subNode:right>
                           </node:Expr_Concat>
                          </subNode:left>
                          <subNode:right>
                           <node:Expr_Variable>
                            <attribute:startLine>
                             <scalar:int>251</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>251</scalar:int>
                            </attribute:endLine>
                            <subNode:name>
                             <scalar:string>ret</scalar:string>
                            </subNode:name>
                           </node:Expr_Variable>
                          </subNode:right>
                         </node:Expr_Concat>
                        </subNode:left>
                        <subNode:right>
                         <node:Scalar_String>
                          <attribute:startLine>
                           <scalar:int>252</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>252</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <scalar:string>].  It appears the connection has died without saying goodbye to us! Too many emails in one go perhaps?</scalar:string>
                          </subNode:value>
                         </node:Scalar_String>
                        </subNode:right>
                       </node:Expr_Concat>
                      </subNode:left>
                      <subNode:right>
                       <node:Expr_MethodCall>
                        <attribute:startLine>
                         <scalar:int>253</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>253</scalar:int>
                        </attribute:endLine>
                        <subNode:var>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>253</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>253</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>this</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:var>
                        <subNode:name>
                         <scalar:string>smtpErrors</scalar:string>
                        </subNode:name>
                        <subNode:args>
                         <scalar:array/>
                        </subNode:args>
                       </node:Expr_MethodCall>
                      </subNode:right>
                     </node:Expr_Concat>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_New>
               </subNode:expr>
              </node:Stmt_Throw>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_BooleanAnd>
              <attribute:startLine>
               <scalar:int>248</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>248</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_Identical>
                <attribute:startLine>
                 <scalar:int>248</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>248</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>248</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>248</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>tmp</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:left>
                <subNode:right>
                 <node:Expr_ConstFetch>
                  <attribute:startLine>
                   <scalar:int>248</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>248</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <node:Name>
                    <attribute:startLine>
                     <scalar:int>248</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>248</scalar:int>
                    </attribute:endLine>
                    <subNode:parts>
                     <scalar:array>
                      <scalar:string>false</scalar:string>
                     </scalar:array>
                    </subNode:parts>
                   </node:Name>
                  </subNode:name>
                 </node:Expr_ConstFetch>
                </subNode:right>
               </node:Expr_Identical>
              </subNode:left>
              <subNode:right>
               <node:Expr_BooleanNot>
                <attribute:startLine>
                 <scalar:int>248</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>248</scalar:int>
                </attribute:endLine>
                <subNode:expr>
                 <node:Expr_FuncCall>
                  <attribute:startLine>
                   <scalar:int>248</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>248</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <node:Name>
                    <attribute:startLine>
                     <scalar:int>248</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>248</scalar:int>
                    </attribute:endLine>
                    <subNode:parts>
                     <scalar:array>
                      <scalar:string>feof</scalar:string>
                     </scalar:array>
                    </subNode:parts>
                   </node:Name>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>248</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>248</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Expr_PropertyFetch>
                       <attribute:startLine>
                        <scalar:int>248</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>248</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>248</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>248</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>this</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:name>
                        <scalar:string>handle</scalar:string>
                       </subNode:name>
                      </node:Expr_PropertyFetch>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_FuncCall>
                </subNode:expr>
               </node:Expr_BooleanNot>
              </subNode:right>
             </node:Expr_BooleanAnd>
            </subNode:cond>
           </node:Stmt_If>
           <node:Expr_AssignConcat>
            <attribute:startLine>
             <scalar:int>255</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>255</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>255</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>255</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>ret</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Concat>
              <attribute:startLine>
               <scalar:int>255</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>255</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>255</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>255</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>255</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>255</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>trim</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>255</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>255</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>255</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>255</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>tmp</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:left>
              <subNode:right>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>255</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>255</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>&#13;
</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:right>
             </node:Expr_Concat>
            </subNode:expr>
           </node:Expr_AssignConcat>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>256</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>256</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_Break>
               <attribute:startLine>
                <scalar:int>256</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>256</scalar:int>
               </attribute:endLine>
               <subNode:num>
                <scalar:null/>
               </subNode:num>
              </node:Stmt_Break>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_Equal>
              <attribute:startLine>
               <scalar:int>256</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>256</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_ArrayDimFetch>
                <attribute:startLine>
                 <scalar:int>256</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>256</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>256</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>256</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>tmp</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:dim>
                 <node:Scalar_LNumber>
                  <attribute:startLine>
                   <scalar:int>256</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>256</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:int>3</scalar:int>
                  </subNode:value>
                 </node:Scalar_LNumber>
                </subNode:dim>
               </node:Expr_ArrayDimFetch>
              </subNode:left>
              <subNode:right>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>256</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>256</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string> </scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:right>
             </node:Expr_Equal>
            </subNode:cond>
           </node:Stmt_If>
          </scalar:array>
         </subNode:stmts>
        </node:Stmt_While>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>258</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>258</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Assign>
           <attribute:startLine>
            <scalar:int>258</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>258</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>258</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>258</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>ret</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:expr>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>258</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>258</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>258</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>258</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>substr</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>258</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>258</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>258</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>258</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>ret</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>258</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>258</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_LNumber>
                  <attribute:startLine>
                   <scalar:int>258</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>258</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:int>0</scalar:int>
                  </subNode:value>
                 </node:Scalar_LNumber>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>258</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>258</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_UnaryMinus>
                  <attribute:startLine>
                   <scalar:int>258</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>258</scalar:int>
                  </attribute:endLine>
                  <subNode:expr>
                   <node:Scalar_LNumber>
                    <attribute:startLine>
                     <scalar:int>258</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>258</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:int>2</scalar:int>
                    </subNode:value>
                   </node:Scalar_LNumber>
                  </subNode:expr>
                 </node:Expr_UnaryMinus>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:expr>
          </node:Expr_Assign>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>read</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="260">/**
   * Write a command to the server (leave off trailing CRLF)
   * @param string The command to send
   * @throws Swift_ConnectionException Upon failure to write
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>265</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>271</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>265</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>265</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>command</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>265</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>265</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>end</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>265</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>265</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>&#13;
</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>267</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>269</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Throw>
            <attribute:startLine>
             <scalar:int>267</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>269</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_New>
              <attribute:startLine>
               <scalar:int>267</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>269</scalar:int>
              </attribute:endLine>
              <subNode:class>
               <node:Name_FullyQualified>
                <attribute:startLine>
                 <scalar:int>267</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>267</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>Swift_ConnectionException</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name_FullyQualified>
              </subNode:class>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>268</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>269</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Concat>
                   <attribute:startLine>
                    <scalar:int>268</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>269</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>268</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>268</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>The SMTP connection is not alive and cannot be written to.</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:left>
                   <subNode:right>
                    <node:Expr_MethodCall>
                     <attribute:startLine>
                      <scalar:int>269</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>269</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>269</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>269</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>this</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>smtpErrors</scalar:string>
                     </subNode:name>
                     <subNode:args>
                      <scalar:array/>
                     </subNode:args>
                    </node:Expr_MethodCall>
                   </subNode:right>
                  </node:Expr_Concat>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_New>
            </subNode:expr>
           </node:Stmt_Throw>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>267</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>267</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>267</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>267</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>267</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>267</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>handle</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>270</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>270</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Throw>
            <attribute:startLine>
             <scalar:int>270</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>270</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_New>
              <attribute:startLine>
               <scalar:int>270</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>270</scalar:int>
              </attribute:endLine>
              <subNode:class>
               <node:Name_FullyQualified>
                <attribute:startLine>
                 <scalar:int>270</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>270</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>Swift_ConnectionException</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name_FullyQualified>
              </subNode:class>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>270</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>270</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Concat>
                   <attribute:startLine>
                    <scalar:int>270</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>270</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Expr_Concat>
                     <attribute:startLine>
                      <scalar:int>270</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>270</scalar:int>
                     </attribute:endLine>
                     <subNode:left>
                      <node:Expr_Concat>
                       <attribute:startLine>
                        <scalar:int>270</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>270</scalar:int>
                       </attribute:endLine>
                       <subNode:left>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>270</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>270</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>The SMTP connection did not allow the command '</scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:left>
                       <subNode:right>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>270</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>270</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>command</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:right>
                      </node:Expr_Concat>
                     </subNode:left>
                     <subNode:right>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>270</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>270</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>' to be sent.</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:right>
                    </node:Expr_Concat>
                   </subNode:left>
                   <subNode:right>
                    <node:Expr_MethodCall>
                     <attribute:startLine>
                      <scalar:int>270</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>270</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>270</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>270</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>this</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>smtpErrors</scalar:string>
                     </subNode:name>
                     <subNode:args>
                      <scalar:array/>
                     </subNode:args>
                    </node:Expr_MethodCall>
                   </subNode:right>
                  </node:Expr_Concat>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_New>
            </subNode:expr>
           </node:Stmt_Throw>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanAnd>
           <attribute:startLine>
            <scalar:int>270</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>270</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_BooleanNot>
             <attribute:startLine>
              <scalar:int>270</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>270</scalar:int>
             </attribute:endLine>
             <subNode:expr>
              <node:Expr_ErrorSuppress>
               <attribute:startLine>
                <scalar:int>270</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>270</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_FuncCall>
                 <attribute:startLine>
                  <scalar:int>270</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>270</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>270</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>270</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>fwrite</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>270</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>270</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_PropertyFetch>
                      <attribute:startLine>
                       <scalar:int>270</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>270</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>270</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>270</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>this</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>handle</scalar:string>
                      </subNode:name>
                     </node:Expr_PropertyFetch>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>270</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>270</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Concat>
                      <attribute:startLine>
                       <scalar:int>270</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>270</scalar:int>
                      </attribute:endLine>
                      <subNode:left>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>270</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>270</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>command</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:left>
                      <subNode:right>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>270</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>270</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>end</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:right>
                     </node:Expr_Concat>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_FuncCall>
               </subNode:expr>
              </node:Expr_ErrorSuppress>
             </subNode:expr>
            </node:Expr_BooleanNot>
           </subNode:left>
           <subNode:right>
            <node:Expr_BooleanNot>
             <attribute:startLine>
              <scalar:int>270</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>270</scalar:int>
             </attribute:endLine>
             <subNode:expr>
              <node:Expr_Empty>
               <attribute:startLine>
                <scalar:int>270</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>270</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>270</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>270</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>command</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:expr>
              </node:Expr_Empty>
             </subNode:expr>
            </node:Expr_BooleanNot>
           </subNode:right>
          </node:Expr_BooleanAnd>
         </subNode:cond>
        </node:Stmt_If>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>write</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="272">/**
   * Try to start the connection
   * @throws Swift_ConnectionException Upon failure to start
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>276</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>313</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>278</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>289</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Switch>
            <attribute:startLine>
             <scalar:int>280</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>288</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>280</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>280</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>280</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>280</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>encryption</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:cond>
            <subNode:cases>
             <scalar:array>
              <node:Stmt_Case>
               <attribute:startLine>
                <scalar:int>282</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>282</scalar:int>
               </attribute:endLine>
               <subNode:cond>
                <node:Expr_ClassConstFetch>
                 <attribute:startLine>
                  <scalar:int>282</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>282</scalar:int>
                 </attribute:endLine>
                 <subNode:class>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>282</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>282</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>self</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:class>
                 <subNode:name>
                  <scalar:string>ENC_TLS</scalar:string>
                 </subNode:name>
                </node:Expr_ClassConstFetch>
               </subNode:cond>
               <subNode:stmts>
                <scalar:array/>
               </subNode:stmts>
              </node:Stmt_Case>
              <node:Stmt_Case>
               <attribute:startLine>
                <scalar:int>282</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>284</scalar:int>
               </attribute:endLine>
               <subNode:cond>
                <node:Expr_ClassConstFetch>
                 <attribute:startLine>
                  <scalar:int>282</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>282</scalar:int>
                 </attribute:endLine>
                 <subNode:class>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>282</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>282</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>self</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:class>
                 <subNode:name>
                  <scalar:string>ENC_SSL</scalar:string>
                 </subNode:name>
                </node:Expr_ClassConstFetch>
               </subNode:cond>
               <subNode:stmts>
                <scalar:array>
                 <node:Expr_Assign>
                  <attribute:startLine>
                   <scalar:int>283</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>283</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_PropertyFetch>
                    <attribute:startLine>
                     <scalar:int>283</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>283</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>283</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>283</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>this</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>port</scalar:string>
                    </subNode:name>
                   </node:Expr_PropertyFetch>
                  </subNode:var>
                  <subNode:expr>
                   <node:Scalar_LNumber>
                    <attribute:startLine>
                     <scalar:int>283</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>283</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:int>465</scalar:int>
                    </subNode:value>
                   </node:Scalar_LNumber>
                  </subNode:expr>
                 </node:Expr_Assign>
                 <node:Stmt_Break>
                  <attribute:startLine>
                   <scalar:int>284</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>284</scalar:int>
                  </attribute:endLine>
                  <subNode:num>
                   <scalar:null/>
                  </subNode:num>
                 </node:Stmt_Break>
                </scalar:array>
               </subNode:stmts>
              </node:Stmt_Case>
              <node:Stmt_Case>
               <attribute:startLine>
                <scalar:int>285</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>285</scalar:int>
               </attribute:endLine>
               <subNode:cond>
                <node:Expr_ConstFetch>
                 <attribute:startLine>
                  <scalar:int>285</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>285</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>285</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>285</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>null</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                </node:Expr_ConstFetch>
               </subNode:cond>
               <subNode:stmts>
                <scalar:array/>
               </subNode:stmts>
              </node:Stmt_Case>
              <node:Stmt_Case>
               <attribute:startLine>
                <scalar:int>285</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>287</scalar:int>
               </attribute:endLine>
               <subNode:cond>
                <scalar:null/>
               </subNode:cond>
               <subNode:stmts>
                <scalar:array>
                 <node:Expr_Assign>
                  <attribute:startLine>
                   <scalar:int>286</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>286</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_PropertyFetch>
                    <attribute:startLine>
                     <scalar:int>286</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>286</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>286</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>286</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>this</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>port</scalar:string>
                    </subNode:name>
                   </node:Expr_PropertyFetch>
                  </subNode:var>
                  <subNode:expr>
                   <node:Scalar_LNumber>
                    <attribute:startLine>
                     <scalar:int>286</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>286</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:int>25</scalar:int>
                    </subNode:value>
                   </node:Scalar_LNumber>
                  </subNode:expr>
                 </node:Expr_Assign>
                 <node:Stmt_Break>
                  <attribute:startLine>
                   <scalar:int>287</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>287</scalar:int>
                  </attribute:endLine>
                  <subNode:num>
                   <scalar:null/>
                  </subNode:num>
                 </node:Stmt_Break>
                </scalar:array>
               </subNode:stmts>
              </node:Stmt_Case>
             </scalar:array>
            </subNode:cases>
           </node:Stmt_Switch>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Identical>
           <attribute:startLine>
            <scalar:int>278</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>278</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>278</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>278</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>278</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>278</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>port</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:left>
           <subNode:right>
            <node:Expr_ConstFetch>
             <attribute:startLine>
              <scalar:int>278</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>278</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>278</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>278</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>null</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
            </node:Expr_ConstFetch>
           </subNode:right>
          </node:Expr_Identical>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>291</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>291</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>291</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>291</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>server</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>291</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>291</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>291</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>291</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>server</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>292</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>293</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>292</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>292</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>292</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>292</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>server</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Concat>
              <attribute:startLine>
               <scalar:int>292</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>292</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>292</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>292</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>tls://</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:left>
              <subNode:right>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>292</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>292</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>server</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:right>
             </node:Expr_Concat>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array>
           <node:Stmt_ElseIf>
            <attribute:startLine>
             <scalar:int>293</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>293</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Expr_Equal>
              <attribute:startLine>
               <scalar:int>293</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>293</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>293</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>293</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>293</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>293</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>encryption</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:left>
              <subNode:right>
               <node:Expr_ClassConstFetch>
                <attribute:startLine>
                 <scalar:int>293</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>293</scalar:int>
                </attribute:endLine>
                <subNode:class>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>293</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>293</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>self</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:class>
                <subNode:name>
                 <scalar:string>ENC_SSL</scalar:string>
                </subNode:name>
               </node:Expr_ClassConstFetch>
              </subNode:right>
             </node:Expr_Equal>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>293</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>293</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>293</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>293</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>server</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:expr>
                <node:Expr_Concat>
                 <attribute:startLine>
                  <scalar:int>293</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>293</scalar:int>
                 </attribute:endLine>
                 <subNode:left>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>293</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>293</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>ssl://</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:left>
                 <subNode:right>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>293</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>293</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>server</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:right>
                </node:Expr_Concat>
               </subNode:expr>
              </node:Expr_Assign>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_ElseIf>
          </scalar:array>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Equal>
           <attribute:startLine>
            <scalar:int>292</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>292</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>292</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>292</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>292</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>292</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>encryption</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:left>
           <subNode:right>
            <node:Expr_ClassConstFetch>
             <attribute:startLine>
              <scalar:int>292</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>292</scalar:int>
             </attribute:endLine>
             <subNode:class>
              <node:Name>
               <attribute:startLine>
                <scalar:int>292</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>292</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>self</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:class>
             <subNode:name>
              <scalar:string>ENC_TLS</scalar:string>
             </subNode:name>
            </node:Expr_ClassConstFetch>
           </subNode:right>
          </node:Expr_Equal>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>295</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>295</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>295</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>295</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>log</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_StaticCall>
           <attribute:startLine>
            <scalar:int>295</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>295</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>295</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>295</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Swift_LogContainer</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
           <subNode:name>
            <scalar:string>getLog</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_StaticCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>296</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>299</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_MethodCall>
            <attribute:startLine>
             <scalar:int>298</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>298</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>298</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>298</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>log</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:name>
             <scalar:string>add</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>298</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>298</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Concat>
                 <attribute:startLine>
                  <scalar:int>298</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>298</scalar:int>
                 </attribute:endLine>
                 <subNode:left>
                  <node:Expr_Concat>
                   <attribute:startLine>
                    <scalar:int>298</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>298</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Expr_Concat>
                     <attribute:startLine>
                      <scalar:int>298</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>298</scalar:int>
                     </attribute:endLine>
                     <subNode:left>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>298</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>298</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>Trying to connect to SMTP server at '</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:left>
                     <subNode:right>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>298</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>298</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>server</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:right>
                    </node:Expr_Concat>
                   </subNode:left>
                   <subNode:right>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>298</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>298</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>:</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:right>
                  </node:Expr_Concat>
                 </subNode:left>
                 <subNode:right>
                  <node:Expr_PropertyFetch>
                   <attribute:startLine>
                    <scalar:int>298</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>298</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>298</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>298</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>port</scalar:string>
                   </subNode:name>
                  </node:Expr_PropertyFetch>
                 </subNode:right>
                </node:Expr_Concat>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_MethodCall>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>296</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>296</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>296</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>296</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>log</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>hasLevel</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>296</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>296</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_ClassConstFetch>
                <attribute:startLine>
                 <scalar:int>296</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>296</scalar:int>
                </attribute:endLine>
                <subNode:class>
                 <node:Name_FullyQualified>
                  <attribute:startLine>
                   <scalar:int>296</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>296</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>Swift_log</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name_FullyQualified>
                </subNode:class>
                <subNode:name>
                 <scalar:string>LOG_EVERYTHING</scalar:string>
                </subNode:name>
               </node:Expr_ClassConstFetch>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>301</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>310</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>303</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>303</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>303</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>303</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>error_msg</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Concat>
              <attribute:startLine>
               <scalar:int>303</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>303</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_Concat>
                <attribute:startLine>
                 <scalar:int>303</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>303</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Expr_Concat>
                  <attribute:startLine>
                   <scalar:int>303</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>303</scalar:int>
                  </attribute:endLine>
                  <subNode:left>
                   <node:Expr_Concat>
                    <attribute:startLine>
                     <scalar:int>303</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>303</scalar:int>
                    </attribute:endLine>
                    <subNode:left>
                     <node:Expr_Concat>
                      <attribute:startLine>
                       <scalar:int>303</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>303</scalar:int>
                      </attribute:endLine>
                      <subNode:left>
                       <node:Expr_Concat>
                        <attribute:startLine>
                         <scalar:int>303</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>303</scalar:int>
                        </attribute:endLine>
                        <subNode:left>
                         <node:Expr_Concat>
                          <attribute:startLine>
                           <scalar:int>303</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>303</scalar:int>
                          </attribute:endLine>
                          <subNode:left>
                           <node:Expr_Concat>
                            <attribute:startLine>
                             <scalar:int>303</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>303</scalar:int>
                            </attribute:endLine>
                            <subNode:left>
                             <node:Scalar_String>
                              <attribute:startLine>
                               <scalar:int>303</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>303</scalar:int>
                              </attribute:endLine>
                              <subNode:value>
                               <scalar:string>The SMTP connection failed to start [</scalar:string>
                              </subNode:value>
                             </node:Scalar_String>
                            </subNode:left>
                            <subNode:right>
                             <node:Expr_Variable>
                              <attribute:startLine>
                               <scalar:int>303</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>303</scalar:int>
                              </attribute:endLine>
                              <subNode:name>
                               <scalar:string>server</scalar:string>
                              </subNode:name>
                             </node:Expr_Variable>
                            </subNode:right>
                           </node:Expr_Concat>
                          </subNode:left>
                          <subNode:right>
                           <node:Scalar_String>
                            <attribute:startLine>
                             <scalar:int>303</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>303</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <scalar:string>:</scalar:string>
                            </subNode:value>
                           </node:Scalar_String>
                          </subNode:right>
                         </node:Expr_Concat>
                        </subNode:left>
                        <subNode:right>
                         <node:Expr_PropertyFetch>
                          <attribute:startLine>
                           <scalar:int>303</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>303</scalar:int>
                          </attribute:endLine>
                          <subNode:var>
                           <node:Expr_Variable>
                            <attribute:startLine>
                             <scalar:int>303</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>303</scalar:int>
                            </attribute:endLine>
                            <subNode:name>
                             <scalar:string>this</scalar:string>
                            </subNode:name>
                           </node:Expr_Variable>
                          </subNode:var>
                          <subNode:name>
                           <scalar:string>port</scalar:string>
                          </subNode:name>
                         </node:Expr_PropertyFetch>
                        </subNode:right>
                       </node:Expr_Concat>
                      </subNode:left>
                      <subNode:right>
                       <node:Scalar_String>
                        <attribute:startLine>
                         <scalar:int>303</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>303</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <scalar:string>]: fsockopen returned Error Number </scalar:string>
                        </subNode:value>
                       </node:Scalar_String>
                      </subNode:right>
                     </node:Expr_Concat>
                    </subNode:left>
                    <subNode:right>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>303</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>303</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>errno</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:right>
                   </node:Expr_Concat>
                  </subNode:left>
                  <subNode:right>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>303</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>303</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string> and Error String '</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:right>
                 </node:Expr_Concat>
                </subNode:left>
                <subNode:right>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>303</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>303</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>errstr</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:right>
               </node:Expr_Concat>
              </subNode:left>
              <subNode:right>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>303</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>303</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>'</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:right>
             </node:Expr_Concat>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>304</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>307</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>306</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>306</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>306</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>306</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>log</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>add</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>306</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>306</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>306</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>306</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>error_msg</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>306</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>306</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_ClassConstFetch>
                    <attribute:startLine>
                     <scalar:int>306</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>306</scalar:int>
                    </attribute:endLine>
                    <subNode:class>
                     <node:Name_FullyQualified>
                      <attribute:startLine>
                       <scalar:int>306</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>306</scalar:int>
                      </attribute:endLine>
                      <subNode:parts>
                       <scalar:array>
                        <scalar:string>Swift_Log</scalar:string>
                       </scalar:array>
                      </subNode:parts>
                     </node:Name_FullyQualified>
                    </subNode:class>
                    <subNode:name>
                     <scalar:string>ERROR</scalar:string>
                    </subNode:name>
                   </node:Expr_ClassConstFetch>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_MethodCall>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>304</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>304</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>304</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>304</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>log</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>isEnabled</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array/>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:cond>
           </node:Stmt_If>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>308</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>308</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>308</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>308</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>308</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>308</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>handle</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:var>
            <subNode:expr>
             <node:Expr_ConstFetch>
              <attribute:startLine>
               <scalar:int>308</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>308</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>308</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>308</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>null</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
             </node:Expr_ConstFetch>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Stmt_Throw>
            <attribute:startLine>
             <scalar:int>309</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>309</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_New>
              <attribute:startLine>
               <scalar:int>309</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>309</scalar:int>
              </attribute:endLine>
              <subNode:class>
               <node:Name_FullyQualified>
                <attribute:startLine>
                 <scalar:int>309</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>309</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>Swift_ConnectionException</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name_FullyQualified>
              </subNode:class>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>309</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>309</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>309</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>309</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>error_msg</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_New>
            </subNode:expr>
           </node:Stmt_Throw>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>301</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>301</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Assign>
             <attribute:startLine>
              <scalar:int>301</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>301</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_PropertyFetch>
               <attribute:startLine>
                <scalar:int>301</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>301</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>301</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>301</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>this</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>handle</scalar:string>
               </subNode:name>
              </node:Expr_PropertyFetch>
             </subNode:var>
             <subNode:expr>
              <node:Expr_ErrorSuppress>
               <attribute:startLine>
                <scalar:int>301</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>301</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_FuncCall>
                 <attribute:startLine>
                  <scalar:int>301</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>301</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>301</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>301</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>fsockopen</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>301</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>301</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>301</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>301</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>server</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>301</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>301</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_PropertyFetch>
                      <attribute:startLine>
                       <scalar:int>301</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>301</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>301</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>301</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>this</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>port</scalar:string>
                      </subNode:name>
                     </node:Expr_PropertyFetch>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>301</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>301</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>301</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>301</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>errno</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>301</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>301</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>301</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>301</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>errstr</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>301</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>301</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_PropertyFetch>
                      <attribute:startLine>
                       <scalar:int>301</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>301</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>301</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>301</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>this</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>timeout</scalar:string>
                      </subNode:name>
                     </node:Expr_PropertyFetch>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_FuncCall>
               </subNode:expr>
              </node:Expr_ErrorSuppress>
             </subNode:expr>
            </node:Expr_Assign>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_AssignRef>
         <attribute:startLine>
          <scalar:int>311</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>311</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>311</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>311</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>311</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>311</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>errno</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>311</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>311</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>errno</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Expr_AssignRef>
        <node:Expr_AssignRef>
         <attribute:startLine>
          <scalar:int>312</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>312</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>312</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>312</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>312</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>312</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>errstr</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>312</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>312</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>errstr</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Expr_AssignRef>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>start</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="314">/**
   * Get the smtp error string as recorded by fsockopen()
   * @return string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>318</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>321</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>320</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>320</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Concat>
           <attribute:startLine>
            <scalar:int>320</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>320</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Concat>
             <attribute:startLine>
              <scalar:int>320</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>320</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_Concat>
               <attribute:startLine>
                <scalar:int>320</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>320</scalar:int>
               </attribute:endLine>
               <subNode:left>
                <node:Expr_Concat>
                 <attribute:startLine>
                  <scalar:int>320</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>320</scalar:int>
                 </attribute:endLine>
                 <subNode:left>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>320</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>320</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string> (fsockopen: </scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:left>
                 <subNode:right>
                  <node:Expr_PropertyFetch>
                   <attribute:startLine>
                    <scalar:int>320</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>320</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>320</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>320</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>errstr</scalar:string>
                   </subNode:name>
                  </node:Expr_PropertyFetch>
                 </subNode:right>
                </node:Expr_Concat>
               </subNode:left>
               <subNode:right>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>320</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>320</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>#</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:right>
              </node:Expr_Concat>
             </subNode:left>
             <subNode:right>
              <node:Expr_PropertyFetch>
               <attribute:startLine>
                <scalar:int>320</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>320</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>320</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>320</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>this</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>errno</scalar:string>
               </subNode:name>
              </node:Expr_PropertyFetch>
             </subNode:right>
            </node:Expr_Concat>
           </subNode:left>
           <subNode:right>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>320</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>320</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string>) </scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:right>
          </node:Expr_Concat>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>smtpErrors</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="322">/**
   * Authenticate if required to do so
   * @param Swift An instance of Swift
   * @throws Swift_ConnectionException If authentication fails
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>327</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>333</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>327</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>327</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>instance</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <node:Name_FullyQualified>
           <attribute:startLine>
            <scalar:int>327</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>327</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>Swift</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name_FullyQualified>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>329</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>332</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_MethodCall>
            <attribute:startLine>
             <scalar:int>331</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>331</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>331</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>331</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>this</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:name>
             <scalar:string>runAuthenticators</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>331</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>331</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_MethodCall>
                 <attribute:startLine>
                  <scalar:int>331</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>331</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>331</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>331</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>getUsername</scalar:string>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array/>
                 </subNode:args>
                </node:Expr_MethodCall>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>331</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>331</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_MethodCall>
                 <attribute:startLine>
                  <scalar:int>331</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>331</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>331</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>331</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>getPassword</scalar:string>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array/>
                 </subNode:args>
                </node:Expr_MethodCall>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>331</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>331</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>331</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>331</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>instance</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_MethodCall>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanAnd>
           <attribute:startLine>
            <scalar:int>329</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>329</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_MethodCall>
             <attribute:startLine>
              <scalar:int>329</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>329</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>329</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>329</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>getUsername</scalar:string>
             </subNode:name>
             <subNode:args>
              <scalar:array/>
             </subNode:args>
            </node:Expr_MethodCall>
           </subNode:left>
           <subNode:right>
            <node:Expr_MethodCall>
             <attribute:startLine>
              <scalar:int>329</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>329</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>329</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>329</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>getPassword</scalar:string>
             </subNode:name>
             <subNode:args>
              <scalar:array/>
             </subNode:args>
            </node:Expr_MethodCall>
           </subNode:right>
          </node:Expr_BooleanAnd>
         </subNode:cond>
        </node:Stmt_If>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>postConnect</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="334">/**
   * Run each authenticator in turn an try for a successful login
   * If none works, throw an exception
   * @param string Username
   * @param string Password
   * @param Swift An instance of swift
   * @throws Swift_ConnectionException Upon failure to authenticate
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>342</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>415</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>342</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>342</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>user</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>342</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>342</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>pass</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>342</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>342</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>swift</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <node:Name_FullyQualified>
           <attribute:startLine>
            <scalar:int>342</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>342</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>Swift</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name_FullyQualified>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>344</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>344</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>344</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>344</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>log</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_StaticCall>
           <attribute:startLine>
            <scalar:int>344</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>344</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>344</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>344</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Swift_LogContainer</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
           <subNode:name>
            <scalar:string>getLog</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_StaticCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>345</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>348</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_MethodCall>
            <attribute:startLine>
             <scalar:int>347</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>347</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>347</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>347</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>log</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:name>
             <scalar:string>add</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>347</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>347</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Concat>
                 <attribute:startLine>
                  <scalar:int>347</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>347</scalar:int>
                 </attribute:endLine>
                 <subNode:left>
                  <node:Expr_Concat>
                   <attribute:startLine>
                    <scalar:int>347</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>347</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>347</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>347</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>Trying to authenticate with username '</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:left>
                   <subNode:right>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>347</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>347</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>user</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:right>
                  </node:Expr_Concat>
                 </subNode:left>
                 <subNode:right>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>347</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>347</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>'.</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:right>
                </node:Expr_Concat>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_MethodCall>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>345</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>345</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>345</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>345</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>log</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>hasLevel</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>345</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>345</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_ClassConstFetch>
                <attribute:startLine>
                 <scalar:int>345</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>345</scalar:int>
                </attribute:endLine>
                <subNode:class>
                 <node:Name_FullyQualified>
                  <attribute:startLine>
                   <scalar:int>345</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>345</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>Swift_Log</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name_FullyQualified>
                </subNode:class>
                <subNode:name>
                 <scalar:string>LOG_EVERYTHING</scalar:string>
                </subNode:name>
               </node:Expr_ClassConstFetch>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_If>
         <attribute:comments>
          <scalar:array>
           <comment isDocComment="false" line="349">//Load in defaults
</comment>
          </scalar:array>
         </attribute:comments>
         <attribute:startLine>
          <scalar:int>350</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>369</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>352</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>355</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>354</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>354</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>354</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>354</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>log</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>add</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>354</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>354</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>354</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>354</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>No authenticators loaded; looking for defaults.</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_MethodCall>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>352</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>352</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>352</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>352</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>log</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>hasLevel</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>352</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>352</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_ClassConstFetch>
                   <attribute:startLine>
                    <scalar:int>352</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>352</scalar:int>
                   </attribute:endLine>
                   <subNode:class>
                    <node:Name_FullyQualified>
                     <attribute:startLine>
                      <scalar:int>352</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>352</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>Swift_Log</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name_FullyQualified>
                   </subNode:class>
                   <subNode:name>
                    <scalar:string>LOG_EVERYTHING</scalar:string>
                   </subNode:name>
                  </node:Expr_ClassConstFetch>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:cond>
           </node:Stmt_If>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>356</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>356</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>356</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>356</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>dir</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Concat>
              <attribute:startLine>
               <scalar:int>356</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>356</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>356</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>356</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>356</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>356</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>dirname</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>356</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>356</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Scalar_FileConst>
                     <attribute:startLine>
                      <scalar:int>356</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>356</scalar:int>
                     </attribute:endLine>
                    </node:Scalar_FileConst>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:left>
              <subNode:right>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>356</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>356</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/../Authenticator</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:right>
             </node:Expr_Concat>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>357</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>357</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>357</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>357</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>handle</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>357</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>357</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>357</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>357</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>opendir</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>357</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>357</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>357</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>357</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>dir</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Stmt_While>
            <attribute:startLine>
             <scalar:int>358</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>367</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Expr_NotIdentical>
              <attribute:startLine>
               <scalar:int>358</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>358</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_ConstFetch>
                <attribute:startLine>
                 <scalar:int>358</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>358</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>358</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>358</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>false</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
               </node:Expr_ConstFetch>
              </subNode:left>
              <subNode:right>
               <node:Expr_Assign>
                <attribute:startLine>
                 <scalar:int>358</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>358</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>358</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>358</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>file</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:expr>
                 <node:Expr_FuncCall>
                  <attribute:startLine>
                   <scalar:int>358</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>358</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <node:Name>
                    <attribute:startLine>
                     <scalar:int>358</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>358</scalar:int>
                    </attribute:endLine>
                    <subNode:parts>
                     <scalar:array>
                      <scalar:string>readdir</scalar:string>
                     </scalar:array>
                    </subNode:parts>
                   </node:Name>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>358</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>358</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>358</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>358</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>handle</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_FuncCall>
                </subNode:expr>
               </node:Expr_Assign>
              </subNode:right>
             </node:Expr_NotIdentical>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_If>
               <attribute:startLine>
                <scalar:int>360</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>366</scalar:int>
               </attribute:endLine>
               <subNode:stmts>
                <scalar:array>
                 <node:Expr_Assign>
                  <attribute:startLine>
                   <scalar:int>362</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>362</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>362</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>362</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>name</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:expr>
                   <node:Expr_FuncCall>
                    <attribute:startLine>
                     <scalar:int>362</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>362</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <node:Name>
                      <attribute:startLine>
                       <scalar:int>362</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>362</scalar:int>
                      </attribute:endLine>
                      <subNode:parts>
                       <scalar:array>
                        <scalar:string>preg_replace</scalar:string>
                       </scalar:array>
                      </subNode:parts>
                     </node:Name>
                    </subNode:name>
                    <subNode:args>
                     <scalar:array>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>362</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>362</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>362</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>362</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>/[^a-zA-Z0-9]+/</scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>362</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>362</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>362</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>362</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string></scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>362</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>362</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_FuncCall>
                         <attribute:startLine>
                          <scalar:int>362</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>362</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <node:Name>
                           <attribute:startLine>
                            <scalar:int>362</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>362</scalar:int>
                           </attribute:endLine>
                           <subNode:parts>
                            <scalar:array>
                             <scalar:string>substr</scalar:string>
                            </scalar:array>
                           </subNode:parts>
                          </node:Name>
                         </subNode:name>
                         <subNode:args>
                          <scalar:array>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>362</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>362</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_Variable>
                              <attribute:startLine>
                               <scalar:int>362</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>362</scalar:int>
                              </attribute:endLine>
                              <subNode:name>
                               <scalar:string>file</scalar:string>
                              </subNode:name>
                             </node:Expr_Variable>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>362</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>362</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Scalar_LNumber>
                              <attribute:startLine>
                               <scalar:int>362</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>362</scalar:int>
                              </attribute:endLine>
                              <subNode:value>
                               <scalar:int>0</scalar:int>
                              </subNode:value>
                             </node:Scalar_LNumber>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>362</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>362</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_UnaryMinus>
                              <attribute:startLine>
                               <scalar:int>362</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>362</scalar:int>
                              </attribute:endLine>
                              <subNode:expr>
                               <node:Scalar_LNumber>
                                <attribute:startLine>
                                 <scalar:int>362</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>362</scalar:int>
                                </attribute:endLine>
                                <subNode:value>
                                 <scalar:int>4</scalar:int>
                                </subNode:value>
                               </node:Scalar_LNumber>
                              </subNode:expr>
                             </node:Expr_UnaryMinus>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                          </scalar:array>
                         </subNode:args>
                        </node:Expr_FuncCall>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                     </scalar:array>
                    </subNode:args>
                   </node:Expr_FuncCall>
                  </subNode:expr>
                 </node:Expr_Assign>
                 <node:Expr_Include>
                  <attribute:startLine>
                   <scalar:int>363</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>363</scalar:int>
                  </attribute:endLine>
                  <subNode:expr>
                   <node:Expr_Concat>
                    <attribute:startLine>
                     <scalar:int>363</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>363</scalar:int>
                    </attribute:endLine>
                    <subNode:left>
                     <node:Expr_Concat>
                      <attribute:startLine>
                       <scalar:int>363</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>363</scalar:int>
                      </attribute:endLine>
                      <subNode:left>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>363</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>363</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>dir</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:left>
                      <subNode:right>
                       <node:Scalar_String>
                        <attribute:startLine>
                         <scalar:int>363</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>363</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <scalar:string>/</scalar:string>
                        </subNode:value>
                       </node:Scalar_String>
                      </subNode:right>
                     </node:Expr_Concat>
                    </subNode:left>
                    <subNode:right>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>363</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>363</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>file</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:right>
                   </node:Expr_Concat>
                  </subNode:expr>
                  <subNode:type>
                   <scalar:int>4</scalar:int>
                  </subNode:type>
                 </node:Expr_Include>
                 <node:Expr_Assign>
                  <attribute:startLine>
                   <scalar:int>364</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>364</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>364</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>364</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>class</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:expr>
                   <node:Expr_Concat>
                    <attribute:startLine>
                     <scalar:int>364</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>364</scalar:int>
                    </attribute:endLine>
                    <subNode:left>
                     <node:Scalar_String>
                      <attribute:startLine>
                       <scalar:int>364</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>364</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <scalar:string>Swift_Authenticator_</scalar:string>
                      </subNode:value>
                     </node:Scalar_String>
                    </subNode:left>
                    <subNode:right>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>364</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>364</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>name</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:right>
                   </node:Expr_Concat>
                  </subNode:expr>
                 </node:Expr_Assign>
                 <node:Expr_MethodCall>
                  <attribute:startLine>
                   <scalar:int>365</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>365</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>365</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>365</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>this</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>attachAuthenticator</scalar:string>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>365</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>365</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Expr_New>
                       <attribute:startLine>
                        <scalar:int>365</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>365</scalar:int>
                       </attribute:endLine>
                       <subNode:class>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>365</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>365</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>class</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:class>
                       <subNode:args>
                        <scalar:array/>
                       </subNode:args>
                      </node:Expr_New>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_MethodCall>
                </scalar:array>
               </subNode:stmts>
               <subNode:elseifs>
                <scalar:array/>
               </subNode:elseifs>
               <subNode:else>
                <scalar:null/>
               </subNode:else>
               <subNode:cond>
                <node:Expr_BooleanAnd>
                 <attribute:startLine>
                  <scalar:int>360</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>360</scalar:int>
                 </attribute:endLine>
                 <subNode:left>
                  <node:Expr_FuncCall>
                   <attribute:startLine>
                    <scalar:int>360</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>360</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <node:Name>
                     <attribute:startLine>
                      <scalar:int>360</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>360</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>preg_match</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>360</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>360</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Scalar_String>
                        <attribute:startLine>
                         <scalar:int>360</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>360</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <scalar:string>/^[A-Za-z0-9-]+\.php$/</scalar:string>
                        </subNode:value>
                       </node:Scalar_String>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>360</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>360</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>360</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>360</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>file</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                    </scalar:array>
                   </subNode:args>
                  </node:Expr_FuncCall>
                 </subNode:left>
                 <subNode:right>
                  <node:Expr_NotEqual>
                   <attribute:startLine>
                    <scalar:int>360</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>360</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>360</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>360</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>file</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:left>
                   <subNode:right>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>360</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>360</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>index.php</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:right>
                  </node:Expr_NotEqual>
                 </subNode:right>
                </node:Expr_BooleanAnd>
               </subNode:cond>
              </node:Stmt_If>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_While>
           <node:Expr_FuncCall>
            <attribute:startLine>
             <scalar:int>368</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>368</scalar:int>
            </attribute:endLine>
            <subNode:name>
             <node:Name>
              <attribute:startLine>
               <scalar:int>368</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>368</scalar:int>
              </attribute:endLine>
              <subNode:parts>
               <scalar:array>
                <scalar:string>closedir</scalar:string>
               </scalar:array>
              </subNode:parts>
             </node:Name>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>368</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>368</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>368</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>368</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>handle</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_FuncCall>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Empty>
           <attribute:startLine>
            <scalar:int>350</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>350</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>350</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>350</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>350</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>350</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>authenticators</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:expr>
          </node:Expr_Empty>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>371</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>371</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>371</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>371</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>tried</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>371</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>371</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>0</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>372</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>372</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>372</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>372</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>looks_supported</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>372</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>372</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>372</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>372</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>true</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:comments>
          <scalar:array>
           <comment isDocComment="false" line="374">//Allow everything we have if the server has the audacity not to help us out.
</comment>
          </scalar:array>
         </attribute:comments>
         <attribute:startLine>
          <scalar:int>375</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>383</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>377</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>380</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>379</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>379</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>379</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>379</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>log</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>add</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>379</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>379</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>379</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>379</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>Server (perhaps wrongly) is not advertising AUTH... manually overriding.</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_MethodCall>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>377</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>377</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>377</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>377</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>log</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>hasLevel</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>377</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>377</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_ClassConstFetch>
                   <attribute:startLine>
                    <scalar:int>377</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>377</scalar:int>
                   </attribute:endLine>
                   <subNode:class>
                    <node:Name_FullyQualified>
                     <attribute:startLine>
                      <scalar:int>377</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>377</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>Swift_Log</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name_FullyQualified>
                   </subNode:class>
                   <subNode:name>
                    <scalar:string>LOG_EVERYTHING</scalar:string>
                   </subNode:name>
                  </node:Expr_ClassConstFetch>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:cond>
           </node:Stmt_If>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>381</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>381</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>381</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>381</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>looks_supported</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_ConstFetch>
              <attribute:startLine>
               <scalar:int>381</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>381</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>381</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>381</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>false</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
             </node:Expr_ConstFetch>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_MethodCall>
            <attribute:startLine>
             <scalar:int>382</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>382</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>382</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>382</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>this</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:name>
             <scalar:string>setExtension</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>382</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>382</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>382</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>382</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>AUTH</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>382</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>382</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_FuncCall>
                 <attribute:startLine>
                  <scalar:int>382</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>382</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>382</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>382</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>array_keys</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>382</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>382</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_PropertyFetch>
                      <attribute:startLine>
                       <scalar:int>382</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>382</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>382</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>382</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>this</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>authenticators</scalar:string>
                      </subNode:name>
                     </node:Expr_PropertyFetch>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_FuncCall>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_MethodCall>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>375</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>375</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_MethodCall>
             <attribute:startLine>
              <scalar:int>375</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>375</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>375</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>375</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>hasExtension</scalar:string>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>375</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>375</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>375</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>375</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>AUTH</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_MethodCall>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Foreach>
         <attribute:startLine>
          <scalar:int>385</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>404</scalar:int>
         </attribute:endLine>
         <subNode:keyVar>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>385</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>385</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>name</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:keyVar>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_If>
            <attribute:comments>
             <scalar:array>
              <comment isDocComment="false" line="387">//Server supports this authentication mechanism
</comment>
             </scalar:array>
            </attribute:comments>
            <attribute:startLine>
             <scalar:int>388</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>403</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_PostInc>
               <attribute:startLine>
                <scalar:int>390</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>390</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>390</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>390</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>tried</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
              </node:Expr_PostInc>
              <node:Stmt_If>
               <attribute:startLine>
                <scalar:int>391</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>394</scalar:int>
               </attribute:endLine>
               <subNode:stmts>
                <scalar:array>
                 <node:Expr_MethodCall>
                  <attribute:startLine>
                   <scalar:int>393</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>393</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>393</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>393</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>log</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>add</scalar:string>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>393</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>393</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Expr_Concat>
                       <attribute:startLine>
                        <scalar:int>393</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>393</scalar:int>
                       </attribute:endLine>
                       <subNode:left>
                        <node:Expr_Concat>
                         <attribute:startLine>
                          <scalar:int>393</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>393</scalar:int>
                         </attribute:endLine>
                         <subNode:left>
                          <node:Scalar_String>
                           <attribute:startLine>
                            <scalar:int>393</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>393</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <scalar:string>Trying '</scalar:string>
                           </subNode:value>
                          </node:Scalar_String>
                         </subNode:left>
                         <subNode:right>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>393</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>393</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>name</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:right>
                        </node:Expr_Concat>
                       </subNode:left>
                       <subNode:right>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>393</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>393</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>' authentication...</scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:right>
                      </node:Expr_Concat>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_MethodCall>
                </scalar:array>
               </subNode:stmts>
               <subNode:elseifs>
                <scalar:array/>
               </subNode:elseifs>
               <subNode:else>
                <scalar:null/>
               </subNode:else>
               <subNode:cond>
                <node:Expr_MethodCall>
                 <attribute:startLine>
                  <scalar:int>391</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>391</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>391</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>391</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>log</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>hasLevel</scalar:string>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>391</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>391</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_ClassConstFetch>
                      <attribute:startLine>
                       <scalar:int>391</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>391</scalar:int>
                      </attribute:endLine>
                      <subNode:class>
                       <node:Name_FullyQualified>
                        <attribute:startLine>
                         <scalar:int>391</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>391</scalar:int>
                        </attribute:endLine>
                        <subNode:parts>
                         <scalar:array>
                          <scalar:string>Swift_Log</scalar:string>
                         </scalar:array>
                        </subNode:parts>
                       </node:Name_FullyQualified>
                      </subNode:class>
                      <subNode:name>
                       <scalar:string>LOG_EVERYTHING</scalar:string>
                      </subNode:name>
                     </node:Expr_ClassConstFetch>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_MethodCall>
               </subNode:cond>
              </node:Stmt_If>
              <node:Stmt_If>
               <attribute:startLine>
                <scalar:int>395</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>402</scalar:int>
               </attribute:endLine>
               <subNode:stmts>
                <scalar:array>
                 <node:Stmt_If>
                  <attribute:startLine>
                   <scalar:int>397</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>400</scalar:int>
                  </attribute:endLine>
                  <subNode:stmts>
                   <scalar:array>
                    <node:Expr_MethodCall>
                     <attribute:startLine>
                      <scalar:int>399</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>399</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>399</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>399</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>log</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>add</scalar:string>
                     </subNode:name>
                     <subNode:args>
                      <scalar:array>
                       <node:Arg>
                        <attribute:startLine>
                         <scalar:int>399</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>399</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <node:Scalar_String>
                          <attribute:startLine>
                           <scalar:int>399</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>399</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <scalar:string>Success! Authentication accepted.</scalar:string>
                          </subNode:value>
                         </node:Scalar_String>
                        </subNode:value>
                        <subNode:byRef>
                         <scalar:false/>
                        </subNode:byRef>
                       </node:Arg>
                      </scalar:array>
                     </subNode:args>
                    </node:Expr_MethodCall>
                   </scalar:array>
                  </subNode:stmts>
                  <subNode:elseifs>
                   <scalar:array/>
                  </subNode:elseifs>
                  <subNode:else>
                   <scalar:null/>
                  </subNode:else>
                  <subNode:cond>
                   <node:Expr_MethodCall>
                    <attribute:startLine>
                     <scalar:int>397</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>397</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>397</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>397</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>log</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>hasLevel</scalar:string>
                    </subNode:name>
                    <subNode:args>
                     <scalar:array>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>397</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>397</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_ClassConstFetch>
                         <attribute:startLine>
                          <scalar:int>397</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>397</scalar:int>
                         </attribute:endLine>
                         <subNode:class>
                          <node:Name_FullyQualified>
                           <attribute:startLine>
                            <scalar:int>397</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>397</scalar:int>
                           </attribute:endLine>
                           <subNode:parts>
                            <scalar:array>
                             <scalar:string>Swift_Log</scalar:string>
                            </scalar:array>
                           </subNode:parts>
                          </node:Name_FullyQualified>
                         </subNode:class>
                         <subNode:name>
                          <scalar:string>LOG_EVERYTHING</scalar:string>
                         </subNode:name>
                        </node:Expr_ClassConstFetch>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                     </scalar:array>
                    </subNode:args>
                   </node:Expr_MethodCall>
                  </subNode:cond>
                 </node:Stmt_If>
                 <node:Stmt_Return>
                  <attribute:startLine>
                   <scalar:int>401</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>401</scalar:int>
                  </attribute:endLine>
                  <subNode:expr>
                   <node:Expr_ConstFetch>
                    <attribute:startLine>
                     <scalar:int>401</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>401</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <node:Name>
                      <attribute:startLine>
                       <scalar:int>401</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>401</scalar:int>
                      </attribute:endLine>
                      <subNode:parts>
                       <scalar:array>
                        <scalar:string>true</scalar:string>
                       </scalar:array>
                      </subNode:parts>
                     </node:Name>
                    </subNode:name>
                   </node:Expr_ConstFetch>
                  </subNode:expr>
                 </node:Stmt_Return>
                </scalar:array>
               </subNode:stmts>
               <subNode:elseifs>
                <scalar:array/>
               </subNode:elseifs>
               <subNode:else>
                <scalar:null/>
               </subNode:else>
               <subNode:cond>
                <node:Expr_MethodCall>
                 <attribute:startLine>
                  <scalar:int>395</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>395</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_ArrayDimFetch>
                   <attribute:startLine>
                    <scalar:int>395</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>395</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_PropertyFetch>
                     <attribute:startLine>
                      <scalar:int>395</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>395</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>395</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>395</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>this</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>authenticators</scalar:string>
                     </subNode:name>
                    </node:Expr_PropertyFetch>
                   </subNode:var>
                   <subNode:dim>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>395</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>395</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>name</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:dim>
                  </node:Expr_ArrayDimFetch>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>isAuthenticated</scalar:string>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>395</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>395</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>395</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>395</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>user</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>395</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>395</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>395</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>395</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>pass</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>395</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>395</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>395</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>395</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>swift</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_MethodCall>
               </subNode:cond>
              </node:Stmt_If>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_BooleanOr>
              <attribute:startLine>
               <scalar:int>388</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>388</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>388</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>388</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>388</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>388</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>in_array</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>388</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>388</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>388</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>388</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>name</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>388</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>388</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_MethodCall>
                     <attribute:startLine>
                      <scalar:int>388</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>388</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>388</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>388</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>this</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>getAttributes</scalar:string>
                     </subNode:name>
                     <subNode:args>
                      <scalar:array>
                       <node:Arg>
                        <attribute:startLine>
                         <scalar:int>388</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>388</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <node:Scalar_String>
                          <attribute:startLine>
                           <scalar:int>388</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>388</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <scalar:string>AUTH</scalar:string>
                          </subNode:value>
                         </node:Scalar_String>
                        </subNode:value>
                        <subNode:byRef>
                         <scalar:false/>
                        </subNode:byRef>
                       </node:Arg>
                      </scalar:array>
                     </subNode:args>
                    </node:Expr_MethodCall>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:left>
              <subNode:right>
               <node:Expr_Equal>
                <attribute:startLine>
                 <scalar:int>388</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>388</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Expr_ArrayDimFetch>
                  <attribute:startLine>
                   <scalar:int>388</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>388</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>388</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>388</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>name</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:dim>
                   <node:Scalar_LNumber>
                    <attribute:startLine>
                     <scalar:int>388</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>388</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:int>0</scalar:int>
                    </subNode:value>
                   </node:Scalar_LNumber>
                  </subNode:dim>
                 </node:Expr_ArrayDimFetch>
                </subNode:left>
                <subNode:right>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>388</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>388</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>*</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:right>
               </node:Expr_Equal>
              </subNode:right>
             </node:Expr_BooleanOr>
            </subNode:cond>
           </node:Stmt_If>
          </scalar:array>
         </subNode:stmts>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>385</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>385</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>385</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>385</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>authenticators</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
         <subNode:valueVar>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>385</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>385</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>obj</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:valueVar>
        </node:Stmt_Foreach>
        <node:Stmt_If>
         <attribute:comments>
          <scalar:array>
           <comment isDocComment="false" line="406">//Server doesn't support authentication
</comment>
          </scalar:array>
         </attribute:comments>
         <attribute:startLine>
          <scalar:int>407</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>408</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Throw>
            <attribute:startLine>
             <scalar:int>408</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>408</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_New>
              <attribute:startLine>
               <scalar:int>408</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>408</scalar:int>
              </attribute:endLine>
              <subNode:class>
               <node:Name_FullyQualified>
                <attribute:startLine>
                 <scalar:int>408</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>408</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>Swift_ConnectionException</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name_FullyQualified>
              </subNode:class>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>408</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>408</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>408</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>408</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>Authentication is not supported by the server but a username and password was given.</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_New>
            </subNode:expr>
           </node:Stmt_Throw>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanAnd>
           <attribute:startLine>
            <scalar:int>407</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>407</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_BooleanNot>
             <attribute:startLine>
              <scalar:int>407</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>407</scalar:int>
             </attribute:endLine>
             <subNode:expr>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>407</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>407</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>looks_supported</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:expr>
            </node:Expr_BooleanNot>
           </subNode:left>
           <subNode:right>
            <node:Expr_Equal>
             <attribute:startLine>
              <scalar:int>407</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>407</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>407</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>407</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>tried</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:left>
             <subNode:right>
              <node:Scalar_LNumber>
               <attribute:startLine>
                <scalar:int>407</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>407</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <scalar:int>0</scalar:int>
               </subNode:value>
              </node:Scalar_LNumber>
             </subNode:right>
            </node:Expr_Equal>
           </subNode:right>
          </node:Expr_BooleanAnd>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>410</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>414</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Throw>
            <attribute:startLine>
             <scalar:int>411</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>412</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_New>
              <attribute:startLine>
               <scalar:int>411</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>412</scalar:int>
              </attribute:endLine>
              <subNode:class>
               <node:Name_FullyQualified>
                <attribute:startLine>
                 <scalar:int>411</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>411</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>Swift_ConnectionException</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name_FullyQualified>
              </subNode:class>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>411</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>412</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Concat>
                   <attribute:startLine>
                    <scalar:int>411</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>412</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Expr_Concat>
                     <attribute:startLine>
                      <scalar:int>411</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>412</scalar:int>
                     </attribute:endLine>
                     <subNode:left>
                      <node:Expr_Concat>
                       <attribute:startLine>
                        <scalar:int>411</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>412</scalar:int>
                       </attribute:endLine>
                       <subNode:left>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>411</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>411</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>No authentication mechanisms were tried since the server did not support any of the ones loaded. </scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:left>
                       <subNode:right>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>412</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>412</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>Loaded authenticators: [</scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:right>
                      </node:Expr_Concat>
                     </subNode:left>
                     <subNode:right>
                      <node:Expr_FuncCall>
                       <attribute:startLine>
                        <scalar:int>412</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>412</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <node:Name>
                         <attribute:startLine>
                          <scalar:int>412</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>412</scalar:int>
                         </attribute:endLine>
                         <subNode:parts>
                          <scalar:array>
                           <scalar:string>implode</scalar:string>
                          </scalar:array>
                         </subNode:parts>
                        </node:Name>
                       </subNode:name>
                       <subNode:args>
                        <scalar:array>
                         <node:Arg>
                          <attribute:startLine>
                           <scalar:int>412</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>412</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <node:Scalar_String>
                            <attribute:startLine>
                             <scalar:int>412</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>412</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <scalar:string>, </scalar:string>
                            </subNode:value>
                           </node:Scalar_String>
                          </subNode:value>
                          <subNode:byRef>
                           <scalar:false/>
                          </subNode:byRef>
                         </node:Arg>
                         <node:Arg>
                          <attribute:startLine>
                           <scalar:int>412</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>412</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <node:Expr_FuncCall>
                            <attribute:startLine>
                             <scalar:int>412</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>412</scalar:int>
                            </attribute:endLine>
                            <subNode:name>
                             <node:Name>
                              <attribute:startLine>
                               <scalar:int>412</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>412</scalar:int>
                              </attribute:endLine>
                              <subNode:parts>
                               <scalar:array>
                                <scalar:string>array_keys</scalar:string>
                               </scalar:array>
                              </subNode:parts>
                             </node:Name>
                            </subNode:name>
                            <subNode:args>
                             <scalar:array>
                              <node:Arg>
                               <attribute:startLine>
                                <scalar:int>412</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>412</scalar:int>
                               </attribute:endLine>
                               <subNode:value>
                                <node:Expr_PropertyFetch>
                                 <attribute:startLine>
                                  <scalar:int>412</scalar:int>
                                 </attribute:startLine>
                                 <attribute:endLine>
                                  <scalar:int>412</scalar:int>
                                 </attribute:endLine>
                                 <subNode:var>
                                  <node:Expr_Variable>
                                   <attribute:startLine>
                                    <scalar:int>412</scalar:int>
                                   </attribute:startLine>
                                   <attribute:endLine>
                                    <scalar:int>412</scalar:int>
                                   </attribute:endLine>
                                   <subNode:name>
                                    <scalar:string>this</scalar:string>
                                   </subNode:name>
                                  </node:Expr_Variable>
                                 </subNode:var>
                                 <subNode:name>
                                  <scalar:string>authenticators</scalar:string>
                                 </subNode:name>
                                </node:Expr_PropertyFetch>
                               </subNode:value>
                               <subNode:byRef>
                                <scalar:false/>
                               </subNode:byRef>
                              </node:Arg>
                             </scalar:array>
                            </subNode:args>
                           </node:Expr_FuncCall>
                          </subNode:value>
                          <subNode:byRef>
                           <scalar:false/>
                          </subNode:byRef>
                         </node:Arg>
                        </scalar:array>
                       </subNode:args>
                      </node:Expr_FuncCall>
                     </subNode:right>
                    </node:Expr_Concat>
                   </subNode:left>
                   <subNode:right>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>412</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>412</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>]</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:right>
                  </node:Expr_Concat>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_New>
            </subNode:expr>
           </node:Stmt_Throw>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <node:Stmt_Else>
           <attribute:startLine>
            <scalar:int>413</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>414</scalar:int>
           </attribute:endLine>
           <subNode:stmts>
            <scalar:array>
             <node:Stmt_Throw>
              <attribute:startLine>
               <scalar:int>414</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>414</scalar:int>
              </attribute:endLine>
              <subNode:expr>
               <node:Expr_New>
                <attribute:startLine>
                 <scalar:int>414</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>414</scalar:int>
                </attribute:endLine>
                <subNode:class>
                 <node:Name_FullyQualified>
                  <attribute:startLine>
                   <scalar:int>414</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>414</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>Swift_ConnectionException</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name_FullyQualified>
                </subNode:class>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>414</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>414</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Concat>
                     <attribute:startLine>
                      <scalar:int>414</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>414</scalar:int>
                     </attribute:endLine>
                     <subNode:left>
                      <node:Expr_Concat>
                       <attribute:startLine>
                        <scalar:int>414</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>414</scalar:int>
                       </attribute:endLine>
                       <subNode:left>
                        <node:Expr_Concat>
                         <attribute:startLine>
                          <scalar:int>414</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>414</scalar:int>
                         </attribute:endLine>
                         <subNode:left>
                          <node:Expr_Concat>
                           <attribute:startLine>
                            <scalar:int>414</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>414</scalar:int>
                           </attribute:endLine>
                           <subNode:left>
                            <node:Scalar_String>
                             <attribute:startLine>
                              <scalar:int>414</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>414</scalar:int>
                             </attribute:endLine>
                             <subNode:value>
                              <scalar:string>Authentication failed using username '</scalar:string>
                             </subNode:value>
                            </node:Scalar_String>
                           </subNode:left>
                           <subNode:right>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>414</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>414</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>user</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:right>
                          </node:Expr_Concat>
                         </subNode:left>
                         <subNode:right>
                          <node:Scalar_String>
                           <attribute:startLine>
                            <scalar:int>414</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>414</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <scalar:string>' and password '</scalar:string>
                           </subNode:value>
                          </node:Scalar_String>
                         </subNode:right>
                        </node:Expr_Concat>
                       </subNode:left>
                       <subNode:right>
                        <node:Expr_FuncCall>
                         <attribute:startLine>
                          <scalar:int>414</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>414</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <node:Name>
                           <attribute:startLine>
                            <scalar:int>414</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>414</scalar:int>
                           </attribute:endLine>
                           <subNode:parts>
                            <scalar:array>
                             <scalar:string>str_repeat</scalar:string>
                            </scalar:array>
                           </subNode:parts>
                          </node:Name>
                         </subNode:name>
                         <subNode:args>
                          <scalar:array>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>414</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>414</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Scalar_String>
                              <attribute:startLine>
                               <scalar:int>414</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>414</scalar:int>
                              </attribute:endLine>
                              <subNode:value>
                               <scalar:string>*</scalar:string>
                              </subNode:value>
                             </node:Scalar_String>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>414</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>414</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_FuncCall>
                              <attribute:startLine>
                               <scalar:int>414</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>414</scalar:int>
                              </attribute:endLine>
                              <subNode:name>
                               <node:Name>
                                <attribute:startLine>
                                 <scalar:int>414</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>414</scalar:int>
                                </attribute:endLine>
                                <subNode:parts>
                                 <scalar:array>
                                  <scalar:string>strlen</scalar:string>
                                 </scalar:array>
                                </subNode:parts>
                               </node:Name>
                              </subNode:name>
                              <subNode:args>
                               <scalar:array>
                                <node:Arg>
                                 <attribute:startLine>
                                  <scalar:int>414</scalar:int>
                                 </attribute:startLine>
                                 <attribute:endLine>
                                  <scalar:int>414</scalar:int>
                                 </attribute:endLine>
                                 <subNode:value>
                                  <node:Expr_Variable>
                                   <attribute:startLine>
                                    <scalar:int>414</scalar:int>
                                   </attribute:startLine>
                                   <attribute:endLine>
                                    <scalar:int>414</scalar:int>
                                   </attribute:endLine>
                                   <subNode:name>
                                    <scalar:string>pass</scalar:string>
                                   </subNode:name>
                                  </node:Expr_Variable>
                                 </subNode:value>
                                 <subNode:byRef>
                                  <scalar:false/>
                                 </subNode:byRef>
                                </node:Arg>
                               </scalar:array>
                              </subNode:args>
                             </node:Expr_FuncCall>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                          </scalar:array>
                         </subNode:args>
                        </node:Expr_FuncCall>
                       </subNode:right>
                      </node:Expr_Concat>
                     </subNode:left>
                     <subNode:right>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>414</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>414</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>'</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:right>
                    </node:Expr_Concat>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_New>
              </subNode:expr>
             </node:Stmt_Throw>
            </scalar:array>
           </subNode:stmts>
          </node:Stmt_Else>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Equal>
           <attribute:startLine>
            <scalar:int>410</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>410</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>410</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>410</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>tried</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:left>
           <subNode:right>
            <node:Scalar_LNumber>
             <attribute:startLine>
              <scalar:int>410</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>410</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:int>0</scalar:int>
             </subNode:value>
            </node:Scalar_LNumber>
           </subNode:right>
          </node:Expr_Equal>
         </subNode:cond>
        </node:Stmt_If>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>runAuthenticators</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="416">/**
   * Try to close the connection
   * @throws Swift_ConnectionException Upon failure to close
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>420</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>435</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>422</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>422</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>422</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>422</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>log</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_StaticCall>
           <attribute:startLine>
            <scalar:int>422</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>422</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>422</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>422</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Swift_LogContainer</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
           <subNode:name>
            <scalar:string>getLog</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_StaticCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>423</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>426</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_MethodCall>
            <attribute:startLine>
             <scalar:int>425</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>425</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>425</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>425</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>log</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:name>
             <scalar:string>add</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>425</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>425</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>425</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>425</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>Closing down SMTP connection.</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_MethodCall>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>423</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>423</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>423</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>423</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>log</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>hasLevel</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>423</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>423</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_ClassConstFetch>
                <attribute:startLine>
                 <scalar:int>423</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>423</scalar:int>
                </attribute:endLine>
                <subNode:class>
                 <node:Name_FullyQualified>
                  <attribute:startLine>
                   <scalar:int>423</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>423</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>Swift_Log</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name_FullyQualified>
                </subNode:class>
                <subNode:name>
                 <scalar:string>LOG_EVERYTHING</scalar:string>
                </subNode:name>
               </node:Expr_ClassConstFetch>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>427</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>434</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>429</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>432</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_Throw>
               <attribute:startLine>
                <scalar:int>431</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>431</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_New>
                 <attribute:startLine>
                  <scalar:int>431</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>431</scalar:int>
                 </attribute:endLine>
                 <subNode:class>
                  <node:Name_FullyQualified>
                   <attribute:startLine>
                    <scalar:int>431</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>431</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>Swift_ConnectionException</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name_FullyQualified>
                 </subNode:class>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>431</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>431</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Concat>
                      <attribute:startLine>
                       <scalar:int>431</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>431</scalar:int>
                      </attribute:endLine>
                      <subNode:left>
                       <node:Scalar_String>
                        <attribute:startLine>
                         <scalar:int>431</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>431</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <scalar:string>The SMTP connection could not be closed for an unknown reason.</scalar:string>
                        </subNode:value>
                       </node:Scalar_String>
                      </subNode:left>
                      <subNode:right>
                       <node:Expr_MethodCall>
                        <attribute:startLine>
                         <scalar:int>431</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>431</scalar:int>
                        </attribute:endLine>
                        <subNode:var>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>431</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>431</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>this</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:var>
                        <subNode:name>
                         <scalar:string>smtpErrors</scalar:string>
                        </subNode:name>
                        <subNode:args>
                         <scalar:array/>
                        </subNode:args>
                       </node:Expr_MethodCall>
                      </subNode:right>
                     </node:Expr_Concat>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_New>
               </subNode:expr>
              </node:Stmt_Throw>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_BooleanNot>
              <attribute:startLine>
               <scalar:int>429</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>429</scalar:int>
              </attribute:endLine>
              <subNode:expr>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>429</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>429</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>429</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>429</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>fclose</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>429</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>429</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_PropertyFetch>
                     <attribute:startLine>
                      <scalar:int>429</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>429</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>429</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>429</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>this</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>handle</scalar:string>
                     </subNode:name>
                    </node:Expr_PropertyFetch>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:expr>
             </node:Expr_BooleanNot>
            </subNode:cond>
           </node:Stmt_If>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>433</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>433</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>433</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>433</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>433</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>433</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>handle</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:var>
            <subNode:expr>
             <node:Expr_ConstFetch>
              <attribute:startLine>
               <scalar:int>433</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>433</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>433</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>433</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>null</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
             </node:Expr_ConstFetch>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>427</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>427</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>427</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>427</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>handle</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:cond>
        </node:Stmt_If>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>stop</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="436">/**
   * Check if the SMTP connection is alive
   * @return boolean
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>440</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>443</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>442</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>442</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_NotIdentical>
           <attribute:startLine>
            <scalar:int>442</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>442</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>442</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>442</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>442</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>442</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>handle</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:left>
           <subNode:right>
            <node:Expr_ConstFetch>
             <attribute:startLine>
              <scalar:int>442</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>442</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>442</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>442</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>null</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
            </node:Expr_ConstFetch>
           </subNode:right>
          </node:Expr_NotIdentical>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isAlive</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="444">/**
   * Destructor.
   * Cleans up any open connections.
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>448</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>451</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>450</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>450</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>450</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>450</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>stop</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array/>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>__destruct</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
    </scalar:array>
   </subNode:stmts>
   <subNode:name>
    <scalar:string>Swift_Connection_SMTP</scalar:string>
   </subNode:name>
   <subNode:namespacedName>
    <node:Name>
     <attribute:comments>
      <scalar:array>
       <comment isDocComment="true" line="15">/**
 * Swift SMTP Connection
 * @package Swift_Connection
 * @author Chris Corbyn &lt;chris@w3style.co.uk&gt;
 */</comment>
      </scalar:array>
     </attribute:comments>
     <attribute:startLine>
      <scalar:int>20</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>452</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Swift_Connection_SMTP</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name>
   </subNode:namespacedName>
  </node:Stmt_Class>
 </scalar:array>
</AST>
