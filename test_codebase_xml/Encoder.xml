<?xml version="1.0" encoding="UTF-8"?>
<AST xmlns:node="http://nikic.github.com/PHPParser/XML/node" xmlns:subNode="http://nikic.github.com/PHPParser/XML/subNode" xmlns:attribute="http://nikic.github.com/PHPParser/XML/attribute" xmlns:scalar="http://nikic.github.com/PHPParser/XML/scalar">
 <scalar:array>
  <node:Expr_Include>
   <attribute:comments>
    <scalar:array>
     <comment isDocComment="true" line="3">/**
 * Swift Mailer Message Encoder
 * Please read the LICENSE file
 * @copyright Chris Corbyn &lt;chris@w3style.co.uk&gt;
 * @author Chris Corbyn &lt;chris@w3style.co.uk&gt;
 * @package Swift_Message
 * @license GNU Lesser General Public License
 */</comment>
    </scalar:array>
   </attribute:comments>
   <attribute:startLine>
    <scalar:int>12</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>12</scalar:int>
   </attribute:endLine>
   <subNode:expr>
    <node:Expr_Concat>
     <attribute:startLine>
      <scalar:int>12</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>12</scalar:int>
     </attribute:endLine>
     <subNode:left>
      <node:Expr_FuncCall>
       <attribute:startLine>
        <scalar:int>12</scalar:int>
       </attribute:startLine>
       <attribute:endLine>
        <scalar:int>12</scalar:int>
       </attribute:endLine>
       <subNode:name>
        <node:Name>
         <attribute:startLine>
          <scalar:int>12</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>12</scalar:int>
         </attribute:endLine>
         <subNode:parts>
          <scalar:array>
           <scalar:string>dirname</scalar:string>
          </scalar:array>
         </subNode:parts>
        </node:Name>
       </subNode:name>
       <subNode:args>
        <scalar:array>
         <node:Arg>
          <attribute:startLine>
           <scalar:int>12</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>12</scalar:int>
          </attribute:endLine>
          <subNode:value>
           <node:Scalar_FileConst>
            <attribute:startLine>
             <scalar:int>12</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>12</scalar:int>
            </attribute:endLine>
           </node:Scalar_FileConst>
          </subNode:value>
          <subNode:byRef>
           <scalar:false/>
          </subNode:byRef>
         </node:Arg>
        </scalar:array>
       </subNode:args>
      </node:Expr_FuncCall>
     </subNode:left>
     <subNode:right>
      <node:Scalar_String>
       <attribute:startLine>
        <scalar:int>12</scalar:int>
       </attribute:startLine>
       <attribute:endLine>
        <scalar:int>12</scalar:int>
       </attribute:endLine>
       <subNode:value>
        <scalar:string>/../ClassLoader.php</scalar:string>
       </subNode:value>
      </node:Scalar_String>
     </subNode:right>
    </node:Expr_Concat>
   </subNode:expr>
   <subNode:type>
    <scalar:int>4</scalar:int>
   </subNode:type>
  </node:Expr_Include>
  <node:Expr_StaticCall>
   <attribute:startLine>
    <scalar:int>13</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>13</scalar:int>
   </attribute:endLine>
   <subNode:class>
    <node:Name_FullyQualified>
     <attribute:startLine>
      <scalar:int>13</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>13</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Swift_ClassLoader</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name_FullyQualified>
   </subNode:class>
   <subNode:name>
    <scalar:string>load</scalar:string>
   </subNode:name>
   <subNode:args>
    <scalar:array>
     <node:Arg>
      <attribute:startLine>
       <scalar:int>13</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>13</scalar:int>
      </attribute:endLine>
      <subNode:value>
       <node:Scalar_String>
        <attribute:startLine>
         <scalar:int>13</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>13</scalar:int>
        </attribute:endLine>
        <subNode:value>
         <scalar:string>Swift_File</scalar:string>
        </subNode:value>
       </node:Scalar_String>
      </subNode:value>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
     </node:Arg>
    </scalar:array>
   </subNode:args>
  </node:Expr_StaticCall>
  <node:Stmt_Class>
   <attribute:comments>
    <scalar:array>
     <comment isDocComment="true" line="15">/**
 * Encodes strings in a variety of formats and detects some encoding formats
 * @package Swift_Message
 * @author Chris Corbyn &lt;chris@w3style.co.uk&gt;
 */</comment>
    </scalar:array>
   </attribute:comments>
   <attribute:startLine>
    <scalar:int>20</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>455</scalar:int>
   </attribute:endLine>
   <subNode:type>
    <scalar:int>0</scalar:int>
   </subNode:type>
   <subNode:extends>
    <scalar:null/>
   </subNode:extends>
   <subNode:implements>
    <scalar:array/>
   </subNode:implements>
   <subNode:stmts>
    <scalar:array>
     <node:Stmt_ClassConst>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="22">/**
   * A regular expression which matches valid e-mail addresses (including some unlikely ones)
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>25</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>27</scalar:int>
      </attribute:endLine>
      <subNode:consts>
       <scalar:array>
        <node:Const>
         <attribute:startLine>
          <scalar:int>25</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>27</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>CHEAP_ADDRESS_RE</scalar:string>
         </subNode:name>
         <subNode:value>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>25</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>27</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>(?#Start of dot-atom
    )[-!#\$%&amp;'\*\+\/=\?\^_`{}\|~0-9A-Za-z]+(?:\.[-!#\$%&amp;'\*\+\/=\?\^_`{}\|~0-9A-Za-z]+)*(?#
    End of dot-atom)(?:@(?#Start of domain)[-0-9A-Za-z]+(?:\.[-0-9A-Za-z]+)*(?#End of domain))?</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:value>
        </node:Const>
       </scalar:array>
      </subNode:consts>
     </node:Stmt_ClassConst>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="28">/**
   * A singleton of this class
   * @var Swift_Message_Encoder
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>32</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>32</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>10</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>32</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>32</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>instance</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>32</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>32</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>32</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>32</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="33">/**
   * Retreive an instance of the encoder as a singleton.
   * New instances are never ever needed since it's monostatic.
   * @return Message_Encoder
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>38</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>45</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>40</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>43</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>42</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>42</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_StaticPropertyFetch>
              <attribute:startLine>
               <scalar:int>42</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>42</scalar:int>
              </attribute:endLine>
              <subNode:class>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>42</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>42</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>self</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:class>
              <subNode:name>
               <scalar:string>instance</scalar:string>
              </subNode:name>
             </node:Expr_StaticPropertyFetch>
            </subNode:var>
            <subNode:expr>
             <node:Expr_New>
              <attribute:startLine>
               <scalar:int>42</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>42</scalar:int>
              </attribute:endLine>
              <subNode:class>
               <node:Name_FullyQualified>
                <attribute:startLine>
                 <scalar:int>42</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>42</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>Swift_Message_Encoder</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name_FullyQualified>
              </subNode:class>
              <subNode:args>
               <scalar:array/>
              </subNode:args>
             </node:Expr_New>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Identical>
           <attribute:startLine>
            <scalar:int>40</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>40</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_StaticPropertyFetch>
             <attribute:startLine>
              <scalar:int>40</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>40</scalar:int>
             </attribute:endLine>
             <subNode:class>
              <node:Name>
               <attribute:startLine>
                <scalar:int>40</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>40</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>self</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:class>
             <subNode:name>
              <scalar:string>instance</scalar:string>
             </subNode:name>
            </node:Expr_StaticPropertyFetch>
           </subNode:left>
           <subNode:right>
            <node:Expr_ConstFetch>
             <attribute:startLine>
              <scalar:int>40</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>40</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>40</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>40</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>null</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
            </node:Expr_ConstFetch>
           </subNode:right>
          </node:Expr_Identical>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>44</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>44</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_StaticPropertyFetch>
           <attribute:startLine>
            <scalar:int>44</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>44</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name>
             <attribute:startLine>
              <scalar:int>44</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>44</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>self</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:class>
           <subNode:name>
            <scalar:string>instance</scalar:string>
           </subNode:name>
          </node:Expr_StaticPropertyFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>instance</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="46">/**
   * Break a string apart at every occurence of &lt;add@ress&gt; and return an array
   * This method does NOT remove any characters like a preg_split() would do.
   * Elements matching an address start with &quot;a&quot; followed by the numeric index
   * @param string The input string to separate
   * @return array
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>53</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>65</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>53</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>53</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>input</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>55</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>55</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>55</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>55</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>elements</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>55</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>55</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>0</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_While>
         <attribute:startLine>
          <scalar:int>56</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>61</scalar:int>
         </attribute:endLine>
         <subNode:cond>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>56</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>56</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>56</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>56</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>56</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>56</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Concat>
                <attribute:startLine>
                 <scalar:int>56</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>56</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Expr_Concat>
                  <attribute:startLine>
                   <scalar:int>56</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>56</scalar:int>
                  </attribute:endLine>
                  <subNode:left>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>56</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>56</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>/^(.*?)(&lt;</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:left>
                  <subNode:right>
                   <node:Expr_ClassConstFetch>
                    <attribute:startLine>
                     <scalar:int>56</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>56</scalar:int>
                    </attribute:endLine>
                    <subNode:class>
                     <node:Name>
                      <attribute:startLine>
                       <scalar:int>56</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>56</scalar:int>
                      </attribute:endLine>
                      <subNode:parts>
                       <scalar:array>
                        <scalar:string>self</scalar:string>
                       </scalar:array>
                      </subNode:parts>
                     </node:Name>
                    </subNode:class>
                    <subNode:name>
                     <scalar:string>CHEAP_ADDRESS_RE</scalar:string>
                    </subNode:name>
                   </node:Expr_ClassConstFetch>
                  </subNode:right>
                 </node:Expr_Concat>
                </subNode:left>
                <subNode:right>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>56</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>56</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>&gt;)/s</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:right>
               </node:Expr_Concat>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>56</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>56</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>56</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>56</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>input</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>56</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>56</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>56</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>56</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>matches</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:cond>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>58</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>58</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>58</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>58</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_ArrayDimFetch>
                 <attribute:startLine>
                  <scalar:int>58</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>58</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>58</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>58</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>ret</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:dim>
                  <node:Expr_PostInc>
                   <attribute:startLine>
                    <scalar:int>58</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>58</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>58</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>58</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>elements</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                  </node:Expr_PostInc>
                 </subNode:dim>
                </node:Expr_ArrayDimFetch>
               </subNode:var>
               <subNode:expr>
                <node:Expr_ArrayDimFetch>
                 <attribute:startLine>
                  <scalar:int>58</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>58</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>58</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>58</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>matches</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:dim>
                  <node:Scalar_LNumber>
                   <attribute:startLine>
                    <scalar:int>58</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>58</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:int>1</scalar:int>
                   </subNode:value>
                  </node:Scalar_LNumber>
                 </subNode:dim>
                </node:Expr_ArrayDimFetch>
               </subNode:expr>
              </node:Expr_Assign>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_BooleanNot>
              <attribute:startLine>
               <scalar:int>58</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>58</scalar:int>
              </attribute:endLine>
              <subNode:expr>
               <node:Expr_Empty>
                <attribute:startLine>
                 <scalar:int>58</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>58</scalar:int>
                </attribute:endLine>
                <subNode:expr>
                 <node:Expr_ArrayDimFetch>
                  <attribute:startLine>
                   <scalar:int>58</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>58</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>58</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>58</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>matches</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:dim>
                   <node:Scalar_LNumber>
                    <attribute:startLine>
                     <scalar:int>58</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>58</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:int>1</scalar:int>
                    </subNode:value>
                   </node:Scalar_LNumber>
                  </subNode:dim>
                 </node:Expr_ArrayDimFetch>
                </subNode:expr>
               </node:Expr_Empty>
              </subNode:expr>
             </node:Expr_BooleanNot>
            </subNode:cond>
           </node:Stmt_If>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>59</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>59</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_ArrayDimFetch>
              <attribute:startLine>
               <scalar:int>59</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>59</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>59</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>59</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>ret</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:dim>
               <node:Expr_Concat>
                <attribute:startLine>
                 <scalar:int>59</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>59</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>59</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>59</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>a</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:left>
                <subNode:right>
                 <node:Expr_PostInc>
                  <attribute:startLine>
                   <scalar:int>59</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>59</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>59</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>59</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>elements</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                 </node:Expr_PostInc>
                </subNode:right>
               </node:Expr_Concat>
              </subNode:dim>
             </node:Expr_ArrayDimFetch>
            </subNode:var>
            <subNode:expr>
             <node:Expr_ArrayDimFetch>
              <attribute:startLine>
               <scalar:int>59</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>59</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>59</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>59</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>matches</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:dim>
               <node:Scalar_LNumber>
                <attribute:startLine>
                 <scalar:int>59</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>59</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:int>2</scalar:int>
                </subNode:value>
               </node:Scalar_LNumber>
              </subNode:dim>
             </node:Expr_ArrayDimFetch>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>60</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>60</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>60</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>60</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>input</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>60</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>60</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>60</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>60</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>substr</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>60</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>60</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>60</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>60</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>input</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>60</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>60</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_FuncCall>
                   <attribute:startLine>
                    <scalar:int>60</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>60</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <node:Name>
                     <attribute:startLine>
                      <scalar:int>60</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>60</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>strlen</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>60</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>60</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_ArrayDimFetch>
                        <attribute:startLine>
                         <scalar:int>60</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>60</scalar:int>
                        </attribute:endLine>
                        <subNode:var>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>60</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>60</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>matches</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:var>
                        <subNode:dim>
                         <node:Scalar_LNumber>
                          <attribute:startLine>
                           <scalar:int>60</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>60</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <scalar:int>0</scalar:int>
                          </subNode:value>
                         </node:Scalar_LNumber>
                        </subNode:dim>
                       </node:Expr_ArrayDimFetch>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                    </scalar:array>
                   </subNode:args>
                  </node:Expr_FuncCall>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
        </node:Stmt_While>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>62</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>62</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>62</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>62</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_ArrayDimFetch>
              <attribute:startLine>
               <scalar:int>62</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>62</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>62</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>62</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>ret</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:dim>
               <node:Expr_PostInc>
                <attribute:startLine>
                 <scalar:int>62</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>62</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>62</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>62</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>elements</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
               </node:Expr_PostInc>
              </subNode:dim>
             </node:Expr_ArrayDimFetch>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>62</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>62</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>input</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_NotEqual>
           <attribute:startLine>
            <scalar:int>62</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>62</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>62</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>62</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>input</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:left>
           <subNode:right>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>62</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>62</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string></scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:right>
          </node:Expr_NotEqual>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Return>
         <attribute:comments>
          <scalar:array>
           <comment isDocComment="false" line="62">//Whatever is left over
</comment>
          </scalar:array>
         </attribute:comments>
         <attribute:startLine>
          <scalar:int>64</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>64</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>64</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>64</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>ret</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>addressChunk</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="66">/**
   * Break a string apart at every occurence of &lt;xxxyyy&gt; and return an array
   * This method does NOT remove any characters like a preg_split() would do.
   * Elements matching a quoted string start with &quot;a&quot; followed by the numeric index
   * @param string The input string to separate
   * @return array
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>73</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>85</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>73</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>73</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>input</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>75</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>75</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>75</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>75</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>elements</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>75</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>75</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>0</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_While>
         <attribute:startLine>
          <scalar:int>76</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>81</scalar:int>
         </attribute:endLine>
         <subNode:cond>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>76</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>76</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>76</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>76</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>76</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>76</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>76</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>76</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^(.*?)(&lt;[\x20-\x3A\x3C-\x7E]*&gt;)/s</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>76</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>76</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>76</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>76</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>input</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>76</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>76</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>76</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>76</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>matches</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:cond>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>78</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>78</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>78</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>78</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_ArrayDimFetch>
                 <attribute:startLine>
                  <scalar:int>78</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>78</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>78</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>78</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>ret</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:dim>
                  <node:Expr_PostInc>
                   <attribute:startLine>
                    <scalar:int>78</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>78</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>78</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>78</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>elements</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                  </node:Expr_PostInc>
                 </subNode:dim>
                </node:Expr_ArrayDimFetch>
               </subNode:var>
               <subNode:expr>
                <node:Expr_ArrayDimFetch>
                 <attribute:startLine>
                  <scalar:int>78</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>78</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>78</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>78</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>matches</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:dim>
                  <node:Scalar_LNumber>
                   <attribute:startLine>
                    <scalar:int>78</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>78</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:int>1</scalar:int>
                   </subNode:value>
                  </node:Scalar_LNumber>
                 </subNode:dim>
                </node:Expr_ArrayDimFetch>
               </subNode:expr>
              </node:Expr_Assign>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_BooleanNot>
              <attribute:startLine>
               <scalar:int>78</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>78</scalar:int>
              </attribute:endLine>
              <subNode:expr>
               <node:Expr_Empty>
                <attribute:startLine>
                 <scalar:int>78</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>78</scalar:int>
                </attribute:endLine>
                <subNode:expr>
                 <node:Expr_ArrayDimFetch>
                  <attribute:startLine>
                   <scalar:int>78</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>78</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>78</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>78</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>matches</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:dim>
                   <node:Scalar_LNumber>
                    <attribute:startLine>
                     <scalar:int>78</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>78</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:int>1</scalar:int>
                    </subNode:value>
                   </node:Scalar_LNumber>
                  </subNode:dim>
                 </node:Expr_ArrayDimFetch>
                </subNode:expr>
               </node:Expr_Empty>
              </subNode:expr>
             </node:Expr_BooleanNot>
            </subNode:cond>
           </node:Stmt_If>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>79</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>79</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_ArrayDimFetch>
              <attribute:startLine>
               <scalar:int>79</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>79</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>79</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>79</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>ret</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:dim>
               <node:Expr_Concat>
                <attribute:startLine>
                 <scalar:int>79</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>79</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>79</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>79</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>a</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:left>
                <subNode:right>
                 <node:Expr_PostInc>
                  <attribute:startLine>
                   <scalar:int>79</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>79</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>79</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>79</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>elements</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                 </node:Expr_PostInc>
                </subNode:right>
               </node:Expr_Concat>
              </subNode:dim>
             </node:Expr_ArrayDimFetch>
            </subNode:var>
            <subNode:expr>
             <node:Expr_ArrayDimFetch>
              <attribute:startLine>
               <scalar:int>79</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>79</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>79</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>79</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>matches</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:dim>
               <node:Scalar_LNumber>
                <attribute:startLine>
                 <scalar:int>79</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>79</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:int>2</scalar:int>
                </subNode:value>
               </node:Scalar_LNumber>
              </subNode:dim>
             </node:Expr_ArrayDimFetch>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>80</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>80</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>80</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>80</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>input</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>80</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>80</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>80</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>80</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>substr</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>80</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>80</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>80</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>80</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>input</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>80</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>80</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_FuncCall>
                   <attribute:startLine>
                    <scalar:int>80</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>80</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <node:Name>
                     <attribute:startLine>
                      <scalar:int>80</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>80</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>strlen</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>80</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>80</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_ArrayDimFetch>
                        <attribute:startLine>
                         <scalar:int>80</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>80</scalar:int>
                        </attribute:endLine>
                        <subNode:var>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>80</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>80</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>matches</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:var>
                        <subNode:dim>
                         <node:Scalar_LNumber>
                          <attribute:startLine>
                           <scalar:int>80</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>80</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <scalar:int>0</scalar:int>
                          </subNode:value>
                         </node:Scalar_LNumber>
                        </subNode:dim>
                       </node:Expr_ArrayDimFetch>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                    </scalar:array>
                   </subNode:args>
                  </node:Expr_FuncCall>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
        </node:Stmt_While>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>82</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>82</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>82</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>82</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_ArrayDimFetch>
              <attribute:startLine>
               <scalar:int>82</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>82</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>82</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>82</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>ret</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:dim>
               <node:Expr_PostInc>
                <attribute:startLine>
                 <scalar:int>82</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>82</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>82</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>82</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>elements</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
               </node:Expr_PostInc>
              </subNode:dim>
             </node:Expr_ArrayDimFetch>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>82</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>82</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>input</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_NotEqual>
           <attribute:startLine>
            <scalar:int>82</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>82</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>82</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>82</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>input</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:left>
           <subNode:right>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>82</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>82</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string></scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:right>
          </node:Expr_NotEqual>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Return>
         <attribute:comments>
          <scalar:array>
           <comment isDocComment="false" line="82">//Whatever is left over
</comment>
          </scalar:array>
         </attribute:comments>
         <attribute:startLine>
          <scalar:int>84</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>84</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>84</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>84</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>ret</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>quoteChunk</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="86">/**
   * Return the base64 encoded version of the string
   * @param string The input string to encode
   * @param int The maximum length of each line of output (inc CRLF)
   * @param int The maximum length of the first line in the output (for headers)
   * @param boolean Whether email addresses between &lt; and &gt; chars should be preserved or not
   * @param string The line ending
   * @return string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>95</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>134</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>95</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>95</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>data</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>95</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>95</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>chunk</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>95</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>95</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>76</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>95</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>95</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>init_chunk</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>95</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>95</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>0</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>95</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>95</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>headers</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>95</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>95</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>95</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>95</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>false</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>95</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>95</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>le</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>95</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>95</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>&#13;
</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>97</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>97</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>97</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>97</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>ret</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>97</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>97</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string></scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_AssignMinus>
         <attribute:startLine>
          <scalar:int>98</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>98</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>98</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>98</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>chunk</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>98</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>98</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>2</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:expr>
        </node:Expr_AssignMinus>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>99</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>99</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>99</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>99</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>chunk</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>99</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>99</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>99</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>99</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>getHcf</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>99</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>99</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>99</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>99</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>chunk</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>99</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>99</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_LNumber>
                <attribute:startLine>
                 <scalar:int>99</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>99</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:int>4</scalar:int>
                </subNode:value>
               </node:Scalar_LNumber>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>101</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>105</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_AssignMinus>
            <attribute:startLine>
             <scalar:int>103</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>103</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>103</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>103</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>init_chunk</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Scalar_LNumber>
              <attribute:startLine>
               <scalar:int>103</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>103</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:int>2</scalar:int>
              </subNode:value>
             </node:Scalar_LNumber>
            </subNode:expr>
           </node:Expr_AssignMinus>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>104</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>104</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>104</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>104</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>init_chunk</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>104</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>104</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>104</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>104</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>getHcf</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>104</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>104</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>104</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>104</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>init_chunk</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>104</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>104</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Scalar_LNumber>
                   <attribute:startLine>
                    <scalar:int>104</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>104</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:int>4</scalar:int>
                   </subNode:value>
                  </node:Scalar_LNumber>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_GreaterOrEqual>
           <attribute:startLine>
            <scalar:int>101</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>101</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>101</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>101</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>init_chunk</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:left>
           <subNode:right>
            <node:Scalar_LNumber>
             <attribute:startLine>
              <scalar:int>101</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>101</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:int>2</scalar:int>
             </subNode:value>
            </node:Scalar_LNumber>
           </subNode:right>
          </node:Expr_GreaterOrEqual>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>107</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>108</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>107</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>107</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>107</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>107</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>data</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>107</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>107</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>107</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>107</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>quoteChunk</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>107</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>107</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>107</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>107</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>data</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <node:Stmt_Else>
           <attribute:startLine>
            <scalar:int>108</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>108</scalar:int>
           </attribute:endLine>
           <subNode:stmts>
            <scalar:array>
             <node:Expr_Assign>
              <attribute:startLine>
               <scalar:int>108</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>108</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>108</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>108</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>data</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:expr>
               <node:Expr_Array>
                <attribute:startLine>
                 <scalar:int>108</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>108</scalar:int>
                </attribute:endLine>
                <subNode:items>
                 <scalar:array>
                  <node:Expr_ArrayItem>
                   <attribute:startLine>
                    <scalar:int>108</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>108</scalar:int>
                   </attribute:endLine>
                   <subNode:key>
                    <scalar:null/>
                   </subNode:key>
                   <subNode:value>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>108</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>108</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>data</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Expr_ArrayItem>
                 </scalar:array>
                </subNode:items>
               </node:Expr_Array>
              </subNode:expr>
             </node:Expr_Assign>
            </scalar:array>
           </subNode:stmts>
          </node:Stmt_Else>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>107</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>107</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>headers</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Foreach>
         <attribute:startLine>
          <scalar:int>110</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>131</scalar:int>
         </attribute:endLine>
         <subNode:keyVar>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>110</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>110</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>key</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:keyVar>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>112</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>112</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>112</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>112</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>key</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Cast_String>
              <attribute:startLine>
               <scalar:int>112</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>112</scalar:int>
              </attribute:endLine>
              <subNode:expr>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>112</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>112</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>key</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:expr>
             </node:Expr_Cast_String>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>113</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>129</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_If>
               <attribute:startLine>
                <scalar:int>115</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>115</scalar:int>
               </attribute:endLine>
               <subNode:stmts>
                <scalar:array>
                 <node:Expr_AssignConcat>
                  <attribute:startLine>
                   <scalar:int>115</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>115</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>115</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>115</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>ret</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:expr>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>115</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>115</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>le</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:expr>
                 </node:Expr_AssignConcat>
                </scalar:array>
               </subNode:stmts>
               <subNode:elseifs>
                <scalar:array/>
               </subNode:elseifs>
               <subNode:else>
                <scalar:null/>
               </subNode:else>
               <subNode:cond>
                <node:Expr_BooleanAnd>
                 <attribute:startLine>
                  <scalar:int>115</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>115</scalar:int>
                 </attribute:endLine>
                 <subNode:left>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>115</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>115</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>init_chunk</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:left>
                 <subNode:right>
                  <node:Expr_Smaller>
                   <attribute:startLine>
                    <scalar:int>115</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>115</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>115</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>115</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>init_chunk</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:left>
                   <subNode:right>
                    <node:Expr_Plus>
                     <attribute:startLine>
                      <scalar:int>115</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>115</scalar:int>
                     </attribute:endLine>
                     <subNode:left>
                      <node:Expr_FuncCall>
                       <attribute:startLine>
                        <scalar:int>115</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>115</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <node:Name>
                         <attribute:startLine>
                          <scalar:int>115</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>115</scalar:int>
                         </attribute:endLine>
                         <subNode:parts>
                          <scalar:array>
                           <scalar:string>strlen</scalar:string>
                          </scalar:array>
                         </subNode:parts>
                        </node:Name>
                       </subNode:name>
                       <subNode:args>
                        <scalar:array>
                         <node:Arg>
                          <attribute:startLine>
                           <scalar:int>115</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>115</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <node:Expr_Variable>
                            <attribute:startLine>
                             <scalar:int>115</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>115</scalar:int>
                            </attribute:endLine>
                            <subNode:name>
                             <scalar:string>string</scalar:string>
                            </subNode:name>
                           </node:Expr_Variable>
                          </subNode:value>
                          <subNode:byRef>
                           <scalar:false/>
                          </subNode:byRef>
                         </node:Arg>
                        </scalar:array>
                       </subNode:args>
                      </node:Expr_FuncCall>
                     </subNode:left>
                     <subNode:right>
                      <node:Scalar_LNumber>
                       <attribute:startLine>
                        <scalar:int>115</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>115</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:int>2</scalar:int>
                       </subNode:value>
                      </node:Scalar_LNumber>
                     </subNode:right>
                    </node:Expr_Plus>
                   </subNode:right>
                  </node:Expr_Smaller>
                 </subNode:right>
                </node:Expr_BooleanAnd>
               </subNode:cond>
              </node:Stmt_If>
              <node:Expr_AssignConcat>
               <attribute:startLine>
                <scalar:int>116</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>116</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>116</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>116</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>ret</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:expr>
                <node:Expr_Concat>
                 <attribute:startLine>
                  <scalar:int>116</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>116</scalar:int>
                 </attribute:endLine>
                 <subNode:left>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>116</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>116</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>le</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:left>
                 <subNode:right>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>116</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>116</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>string</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:right>
                </node:Expr_Concat>
               </subNode:expr>
              </node:Expr_AssignConcat>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <node:Stmt_Else>
              <attribute:startLine>
               <scalar:int>118</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>129</scalar:int>
              </attribute:endLine>
              <subNode:stmts>
               <scalar:array>
                <node:Expr_Assign>
                 <attribute:startLine>
                  <scalar:int>120</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>120</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>120</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>120</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>string</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:expr>
                  <node:Expr_MethodCall>
                   <attribute:startLine>
                    <scalar:int>120</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>120</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>120</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>120</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>rawBase64Encode</scalar:string>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>120</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>120</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>120</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>120</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>string</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                    </scalar:array>
                   </subNode:args>
                  </node:Expr_MethodCall>
                 </subNode:expr>
                </node:Expr_Assign>
                <node:Stmt_If>
                 <attribute:startLine>
                  <scalar:int>121</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>126</scalar:int>
                 </attribute:endLine>
                 <subNode:stmts>
                  <scalar:array>
                   <node:Expr_AssignConcat>
                    <attribute:startLine>
                     <scalar:int>123</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>123</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>123</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>123</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>ret</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:expr>
                     <node:Expr_Concat>
                      <attribute:startLine>
                       <scalar:int>123</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>123</scalar:int>
                      </attribute:endLine>
                      <subNode:left>
                       <node:Expr_FuncCall>
                        <attribute:startLine>
                         <scalar:int>123</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>123</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <node:Name>
                          <attribute:startLine>
                           <scalar:int>123</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>123</scalar:int>
                          </attribute:endLine>
                          <subNode:parts>
                           <scalar:array>
                            <scalar:string>substr</scalar:string>
                           </scalar:array>
                          </subNode:parts>
                         </node:Name>
                        </subNode:name>
                        <subNode:args>
                         <scalar:array>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>123</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>123</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>123</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>123</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>string</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>123</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>123</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Scalar_LNumber>
                             <attribute:startLine>
                              <scalar:int>123</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>123</scalar:int>
                             </attribute:endLine>
                             <subNode:value>
                              <scalar:int>0</scalar:int>
                             </subNode:value>
                            </node:Scalar_LNumber>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>123</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>123</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>123</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>123</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>init_chunk</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                         </scalar:array>
                        </subNode:args>
                       </node:Expr_FuncCall>
                      </subNode:left>
                      <subNode:right>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>123</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>123</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>le</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:right>
                     </node:Expr_Concat>
                    </subNode:expr>
                   </node:Expr_AssignConcat>
                   <node:Expr_Assign>
                    <attribute:startLine>
                     <scalar:int>124</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>124</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>124</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>124</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>string</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:expr>
                     <node:Expr_FuncCall>
                      <attribute:startLine>
                       <scalar:int>124</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>124</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <node:Name>
                        <attribute:startLine>
                         <scalar:int>124</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>124</scalar:int>
                        </attribute:endLine>
                        <subNode:parts>
                         <scalar:array>
                          <scalar:string>substr</scalar:string>
                         </scalar:array>
                        </subNode:parts>
                       </node:Name>
                      </subNode:name>
                      <subNode:args>
                       <scalar:array>
                        <node:Arg>
                         <attribute:startLine>
                          <scalar:int>124</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>124</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>124</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>124</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>string</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:value>
                         <subNode:byRef>
                          <scalar:false/>
                         </subNode:byRef>
                        </node:Arg>
                        <node:Arg>
                         <attribute:startLine>
                          <scalar:int>124</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>124</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>124</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>124</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>init_chunk</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:value>
                         <subNode:byRef>
                          <scalar:false/>
                         </subNode:byRef>
                        </node:Arg>
                       </scalar:array>
                      </subNode:args>
                     </node:Expr_FuncCall>
                    </subNode:expr>
                   </node:Expr_Assign>
                  </scalar:array>
                 </subNode:stmts>
                 <subNode:elseifs>
                  <scalar:array>
                   <node:Stmt_ElseIf>
                    <attribute:startLine>
                     <scalar:int>126</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>126</scalar:int>
                    </attribute:endLine>
                    <subNode:cond>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>126</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>126</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>init_chunk</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:cond>
                    <subNode:stmts>
                     <scalar:array>
                      <node:Expr_AssignConcat>
                       <attribute:startLine>
                        <scalar:int>126</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>126</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>126</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>126</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>ret</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:expr>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>126</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>126</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>le</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:expr>
                      </node:Expr_AssignConcat>
                     </scalar:array>
                    </subNode:stmts>
                   </node:Stmt_ElseIf>
                  </scalar:array>
                 </subNode:elseifs>
                 <subNode:else>
                  <scalar:null/>
                 </subNode:else>
                 <subNode:cond>
                  <node:Expr_Greater>
                   <attribute:startLine>
                    <scalar:int>121</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>121</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>121</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>121</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>init_chunk</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:left>
                   <subNode:right>
                    <node:Scalar_LNumber>
                     <attribute:startLine>
                      <scalar:int>121</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>121</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:int>2</scalar:int>
                     </subNode:value>
                    </node:Scalar_LNumber>
                   </subNode:right>
                  </node:Expr_Greater>
                 </subNode:cond>
                </node:Stmt_If>
                <node:Expr_AssignConcat>
                 <attribute:startLine>
                  <scalar:int>128</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>128</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>128</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>128</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>ret</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:expr>
                  <node:Expr_Concat>
                   <attribute:startLine>
                    <scalar:int>128</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>128</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Expr_FuncCall>
                     <attribute:startLine>
                      <scalar:int>128</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>128</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <node:Name>
                       <attribute:startLine>
                        <scalar:int>128</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>128</scalar:int>
                       </attribute:endLine>
                       <subNode:parts>
                        <scalar:array>
                         <scalar:string>trim</scalar:string>
                        </scalar:array>
                       </subNode:parts>
                      </node:Name>
                     </subNode:name>
                     <subNode:args>
                      <scalar:array>
                       <node:Arg>
                        <attribute:startLine>
                         <scalar:int>128</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>128</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <node:Expr_FuncCall>
                          <attribute:startLine>
                           <scalar:int>128</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>128</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <node:Name>
                            <attribute:startLine>
                             <scalar:int>128</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>128</scalar:int>
                            </attribute:endLine>
                            <subNode:parts>
                             <scalar:array>
                              <scalar:string>chunk_split</scalar:string>
                             </scalar:array>
                            </subNode:parts>
                           </node:Name>
                          </subNode:name>
                          <subNode:args>
                           <scalar:array>
                            <node:Arg>
                             <attribute:startLine>
                              <scalar:int>128</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>128</scalar:int>
                             </attribute:endLine>
                             <subNode:value>
                              <node:Expr_Variable>
                               <attribute:startLine>
                                <scalar:int>128</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>128</scalar:int>
                               </attribute:endLine>
                               <subNode:name>
                                <scalar:string>string</scalar:string>
                               </subNode:name>
                              </node:Expr_Variable>
                             </subNode:value>
                             <subNode:byRef>
                              <scalar:false/>
                             </subNode:byRef>
                            </node:Arg>
                            <node:Arg>
                             <attribute:startLine>
                              <scalar:int>128</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>128</scalar:int>
                             </attribute:endLine>
                             <subNode:value>
                              <node:Expr_Variable>
                               <attribute:startLine>
                                <scalar:int>128</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>128</scalar:int>
                               </attribute:endLine>
                               <subNode:name>
                                <scalar:string>chunk</scalar:string>
                               </subNode:name>
                              </node:Expr_Variable>
                             </subNode:value>
                             <subNode:byRef>
                              <scalar:false/>
                             </subNode:byRef>
                            </node:Arg>
                            <node:Arg>
                             <attribute:startLine>
                              <scalar:int>128</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>128</scalar:int>
                             </attribute:endLine>
                             <subNode:value>
                              <node:Expr_Variable>
                               <attribute:startLine>
                                <scalar:int>128</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>128</scalar:int>
                               </attribute:endLine>
                               <subNode:name>
                                <scalar:string>le</scalar:string>
                               </subNode:name>
                              </node:Expr_Variable>
                             </subNode:value>
                             <subNode:byRef>
                              <scalar:false/>
                             </subNode:byRef>
                            </node:Arg>
                           </scalar:array>
                          </subNode:args>
                         </node:Expr_FuncCall>
                        </subNode:value>
                        <subNode:byRef>
                         <scalar:false/>
                        </subNode:byRef>
                       </node:Arg>
                      </scalar:array>
                     </subNode:args>
                    </node:Expr_FuncCall>
                   </subNode:left>
                   <subNode:right>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>128</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>128</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>le</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:right>
                  </node:Expr_Concat>
                 </subNode:expr>
                </node:Expr_AssignConcat>
               </scalar:array>
              </subNode:stmts>
             </node:Stmt_Else>
            </subNode:else>
            <subNode:cond>
             <node:Expr_Equal>
              <attribute:startLine>
               <scalar:int>113</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>113</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_ArrayDimFetch>
                <attribute:startLine>
                 <scalar:int>113</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>113</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>113</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>113</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>key</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:dim>
                 <node:Scalar_LNumber>
                  <attribute:startLine>
                   <scalar:int>113</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>113</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:int>0</scalar:int>
                  </subNode:value>
                 </node:Scalar_LNumber>
                </subNode:dim>
               </node:Expr_ArrayDimFetch>
              </subNode:left>
              <subNode:right>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>113</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>113</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>a</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:right>
             </node:Expr_Equal>
            </subNode:cond>
           </node:Stmt_If>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>130</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>130</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>130</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>130</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>init_chunk</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Scalar_LNumber>
              <attribute:startLine>
               <scalar:int>130</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>130</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:int>0</scalar:int>
              </subNode:value>
             </node:Scalar_LNumber>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>110</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>110</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>data</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
         <subNode:valueVar>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>110</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>110</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>string</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:valueVar>
        </node:Stmt_Foreach>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>133</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>133</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>133</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>133</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>133</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>133</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>trim</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>133</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>133</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>133</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>133</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>ret</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>base64Encode</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="135">/**
   * Return the base64 encoded version of a string with no breaks
   * @param The input string to encode
   * @return string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>140</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>143</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>140</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>140</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>string</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>142</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>142</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Assign>
           <attribute:startLine>
            <scalar:int>142</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>142</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>142</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>142</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>string</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:expr>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>142</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>142</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>142</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>142</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>base64_encode</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>142</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>142</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>142</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>142</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>string</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:expr>
          </node:Expr_Assign>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>rawBase64Encode</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="144">/**
   * Return the base64 encoded version of a file
   * @param Swift_File The file input stream
   * @param int Max line length
   * @param string The line ending
   * @return Swift_Cache_OutputStream
   * @throws Swift_FileException If the file cannot be read
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>152</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>170</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>152</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>152</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>file</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <node:Name_FullyQualified>
           <attribute:startLine>
            <scalar:int>152</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>152</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>Swift_File</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name_FullyQualified>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>152</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>152</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>chunk</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>152</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>152</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>76</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>152</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>152</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>le</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>152</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>152</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>&#13;
</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_StaticCall>
         <attribute:startLine>
          <scalar:int>154</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>154</scalar:int>
         </attribute:endLine>
         <subNode:class>
          <node:Name_FullyQualified>
           <attribute:startLine>
            <scalar:int>154</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>154</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>Swift_ClassLoader</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name_FullyQualified>
         </subNode:class>
         <subNode:name>
          <scalar:string>load</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>154</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>154</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>154</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>154</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>Swift_CacheFactory</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_StaticCall>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>155</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>155</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>155</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>155</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>cache</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_StaticCall>
           <attribute:startLine>
            <scalar:int>155</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>155</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>155</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>155</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Swift_CacheFactory</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
           <subNode:name>
            <scalar:string>getCache</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_StaticCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_AssignMinus>
         <attribute:startLine>
          <scalar:int>156</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>156</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>156</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>156</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>chunk</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>156</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>156</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>2</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:expr>
        </node:Expr_AssignMinus>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>157</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>157</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>157</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>157</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>chunk</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>157</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>157</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>157</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>157</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>getHcf</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>157</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>157</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>157</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>157</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>chunk</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>157</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>157</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_LNumber>
                <attribute:startLine>
                 <scalar:int>157</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>157</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:int>4</scalar:int>
                </subNode:value>
               </node:Scalar_LNumber>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>158</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>158</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>158</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>158</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>loop</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>158</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>158</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>158</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>158</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>false</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_While>
         <attribute:comments>
          <scalar:array>
           <comment isDocComment="false" line="159">//We have to read in multiples of 3 bytes but avoid doing such small chunks that it takes too long
</comment>
          </scalar:array>
         </attribute:comments>
         <attribute:startLine>
          <scalar:int>160</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>167</scalar:int>
         </attribute:endLine>
         <subNode:cond>
          <node:Expr_NotIdentical>
           <attribute:startLine>
            <scalar:int>160</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>160</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_ConstFetch>
             <attribute:startLine>
              <scalar:int>160</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>160</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>160</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>160</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>false</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
            </node:Expr_ConstFetch>
           </subNode:left>
           <subNode:right>
            <node:Expr_Assign>
             <attribute:startLine>
              <scalar:int>160</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>160</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>160</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>160</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>bytes</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:expr>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>160</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>160</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>160</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>160</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>file</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>read</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>160</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>160</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Scalar_LNumber>
                    <attribute:startLine>
                     <scalar:int>160</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>160</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:int>8190</scalar:int>
                    </subNode:value>
                   </node:Scalar_LNumber>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_MethodCall>
             </subNode:expr>
            </node:Expr_Assign>
           </subNode:right>
          </node:Expr_NotIdentical>
         </subNode:cond>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>162</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>162</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>162</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>162</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>162</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>162</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>cache</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>write</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>162</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>162</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>162</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>162</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>b64</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>162</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>162</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>162</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>162</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>le</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_MethodCall>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>162</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>162</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>loop</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:cond>
           </node:Stmt_If>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>163</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>163</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>163</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>163</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>loop</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_ConstFetch>
              <attribute:startLine>
               <scalar:int>163</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>163</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>163</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>163</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>true</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
             </node:Expr_ConstFetch>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>164</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>164</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>164</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>164</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>next</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>164</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>164</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>164</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>164</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>chunk_split</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>164</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>164</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_MethodCall>
                   <attribute:startLine>
                    <scalar:int>164</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>164</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>164</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>164</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>rawBase64Encode</scalar:string>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>164</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>164</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>164</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>164</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>bytes</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                    </scalar:array>
                   </subNode:args>
                  </node:Expr_MethodCall>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>164</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>164</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>164</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>164</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>chunk</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>164</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>164</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>164</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>164</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>le</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>165</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>165</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>165</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>165</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>next</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>165</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>165</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>165</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>165</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>trim</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>165</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>165</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>165</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>165</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>next</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_MethodCall>
            <attribute:startLine>
             <scalar:int>166</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>166</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>166</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>166</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>cache</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:name>
             <scalar:string>write</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>166</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>166</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>166</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>166</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>b64</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>166</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>166</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>166</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>166</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>next</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_MethodCall>
          </scalar:array>
         </subNode:stmts>
        </node:Stmt_While>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>168</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>168</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>168</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>168</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>file</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>reset</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array/>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>169</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>169</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>169</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>169</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>169</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>169</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>cache</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>getOutputStream</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>169</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>169</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>169</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>169</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>b64</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>base64EncodeFile</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="171">/**
   * Return the quoted printable version of the input string
   * @param string The input string to encode
   * @param int The maximum length of each line of output (inc CRLF)
   * @param int The maximum length of the first line in the output (for headers)
   * @param boolean Whether email addresses between &lt; and &gt; chars should be preserved or not
   * @param string The line ending
   * @return string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>180</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>225</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>180</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>180</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>data</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>180</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>180</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>chunk</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>180</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>180</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>76</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>180</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>180</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>init_chunk</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>180</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>180</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>0</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>180</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>180</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>headers</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>180</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>180</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>180</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>180</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>false</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>180</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>180</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>le</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>180</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>180</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>&#13;
</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>182</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>182</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>182</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>182</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>ret</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>182</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>182</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string></scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>183</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>184</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>183</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>183</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>183</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>183</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>data</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>183</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>183</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>183</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>183</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>quoteChunk</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>183</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>183</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>183</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>183</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>data</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <node:Stmt_Else>
           <attribute:startLine>
            <scalar:int>184</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>184</scalar:int>
           </attribute:endLine>
           <subNode:stmts>
            <scalar:array>
             <node:Expr_Assign>
              <attribute:startLine>
               <scalar:int>184</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>184</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>184</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>184</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>data</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:expr>
               <node:Expr_Array>
                <attribute:startLine>
                 <scalar:int>184</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>184</scalar:int>
                </attribute:endLine>
                <subNode:items>
                 <scalar:array>
                  <node:Expr_ArrayItem>
                   <attribute:startLine>
                    <scalar:int>184</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>184</scalar:int>
                   </attribute:endLine>
                   <subNode:key>
                    <scalar:null/>
                   </subNode:key>
                   <subNode:value>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>184</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>184</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>data</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Expr_ArrayItem>
                 </scalar:array>
                </subNode:items>
               </node:Expr_Array>
              </subNode:expr>
             </node:Expr_Assign>
            </scalar:array>
           </subNode:stmts>
          </node:Stmt_Else>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>183</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>183</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>headers</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>186</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>186</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>186</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>186</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>trailing_spaces</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Concat>
           <attribute:startLine>
            <scalar:int>186</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>186</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>186</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>186</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>186</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>186</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>chr</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>186</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>186</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_LNumber>
                  <attribute:startLine>
                   <scalar:int>186</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>186</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:int>9</scalar:int>
                  </subNode:value>
                 </node:Scalar_LNumber>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:left>
           <subNode:right>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>186</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>186</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>186</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>186</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>chr</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>186</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>186</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_LNumber>
                  <attribute:startLine>
                   <scalar:int>186</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>186</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:int>32</scalar:int>
                  </subNode:value>
                 </node:Scalar_LNumber>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:right>
          </node:Expr_Concat>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_Foreach>
         <attribute:startLine>
          <scalar:int>187</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>221</scalar:int>
         </attribute:endLine>
         <subNode:keyVar>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>187</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>187</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>key</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:keyVar>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>189</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>189</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>189</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>189</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>key</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Cast_String>
              <attribute:startLine>
               <scalar:int>189</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>189</scalar:int>
              </attribute:endLine>
              <subNode:expr>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>189</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>189</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>key</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:expr>
             </node:Expr_Cast_String>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>190</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>219</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_If>
               <attribute:startLine>
                <scalar:int>192</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>192</scalar:int>
               </attribute:endLine>
               <subNode:stmts>
                <scalar:array>
                 <node:Expr_AssignConcat>
                  <attribute:startLine>
                   <scalar:int>192</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>192</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>192</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>192</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>ret</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:expr>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>192</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>192</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>=</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:expr>
                 </node:Expr_AssignConcat>
                </scalar:array>
               </subNode:stmts>
               <subNode:elseifs>
                <scalar:array/>
               </subNode:elseifs>
               <subNode:else>
                <scalar:null/>
               </subNode:else>
               <subNode:cond>
                <node:Expr_BooleanAnd>
                 <attribute:startLine>
                  <scalar:int>192</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>192</scalar:int>
                 </attribute:endLine>
                 <subNode:left>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>192</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>192</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>init_chunk</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:left>
                 <subNode:right>
                  <node:Expr_Smaller>
                   <attribute:startLine>
                    <scalar:int>192</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>192</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>192</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>192</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>init_chunk</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:left>
                   <subNode:right>
                    <node:Expr_Plus>
                     <attribute:startLine>
                      <scalar:int>192</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>192</scalar:int>
                     </attribute:endLine>
                     <subNode:left>
                      <node:Expr_FuncCall>
                       <attribute:startLine>
                        <scalar:int>192</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>192</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <node:Name>
                         <attribute:startLine>
                          <scalar:int>192</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>192</scalar:int>
                         </attribute:endLine>
                         <subNode:parts>
                          <scalar:array>
                           <scalar:string>strlen</scalar:string>
                          </scalar:array>
                         </subNode:parts>
                        </node:Name>
                       </subNode:name>
                       <subNode:args>
                        <scalar:array>
                         <node:Arg>
                          <attribute:startLine>
                           <scalar:int>192</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>192</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <node:Expr_Variable>
                            <attribute:startLine>
                             <scalar:int>192</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>192</scalar:int>
                            </attribute:endLine>
                            <subNode:name>
                             <scalar:string>string</scalar:string>
                            </subNode:name>
                           </node:Expr_Variable>
                          </subNode:value>
                          <subNode:byRef>
                           <scalar:false/>
                          </subNode:byRef>
                         </node:Arg>
                        </scalar:array>
                       </subNode:args>
                      </node:Expr_FuncCall>
                     </subNode:left>
                     <subNode:right>
                      <node:Scalar_LNumber>
                       <attribute:startLine>
                        <scalar:int>192</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>192</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:int>3</scalar:int>
                       </subNode:value>
                      </node:Scalar_LNumber>
                     </subNode:right>
                    </node:Expr_Plus>
                   </subNode:right>
                  </node:Expr_Smaller>
                 </subNode:right>
                </node:Expr_BooleanAnd>
               </subNode:cond>
              </node:Stmt_If>
              <node:Expr_AssignConcat>
               <attribute:startLine>
                <scalar:int>193</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>193</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>193</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>193</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>ret</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:expr>
                <node:Expr_Concat>
                 <attribute:startLine>
                  <scalar:int>193</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>193</scalar:int>
                 </attribute:endLine>
                 <subNode:left>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>193</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>193</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>le</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:left>
                 <subNode:right>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>193</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>193</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>string</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:right>
                </node:Expr_Concat>
               </subNode:expr>
              </node:Expr_AssignConcat>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <node:Stmt_Else>
              <attribute:startLine>
               <scalar:int>195</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>219</scalar:int>
              </attribute:endLine>
              <subNode:stmts>
               <scalar:array>
                <node:Expr_Assign>
                 <attribute:startLine>
                  <scalar:int>197</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>197</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>197</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>197</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>lines</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:expr>
                  <node:Expr_FuncCall>
                   <attribute:startLine>
                    <scalar:int>197</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>197</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <node:Name>
                     <attribute:startLine>
                      <scalar:int>197</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>197</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>explode</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>197</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>197</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>197</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>197</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>le</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>197</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>197</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>197</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>197</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>string</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                    </scalar:array>
                   </subNode:args>
                  </node:Expr_FuncCall>
                 </subNode:expr>
                </node:Expr_Assign>
                <node:Stmt_Foreach>
                 <attribute:startLine>
                  <scalar:int>198</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>199</scalar:int>
                 </attribute:endLine>
                 <subNode:keyVar>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>198</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>198</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>n</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:keyVar>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                 <subNode:stmts>
                  <scalar:array>
                   <node:Expr_Assign>
                    <attribute:startLine>
                     <scalar:int>199</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>199</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_ArrayDimFetch>
                      <attribute:startLine>
                       <scalar:int>199</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>199</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>199</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>199</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>lines</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:dim>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>199</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>199</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>n</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:dim>
                     </node:Expr_ArrayDimFetch>
                    </subNode:var>
                    <subNode:expr>
                     <node:Expr_MethodCall>
                      <attribute:startLine>
                       <scalar:int>199</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>199</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>199</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>199</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>this</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>rawQPEncode</scalar:string>
                      </subNode:name>
                      <subNode:args>
                       <scalar:array>
                        <node:Arg>
                         <attribute:startLine>
                          <scalar:int>199</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>199</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <node:Expr_FuncCall>
                           <attribute:startLine>
                            <scalar:int>199</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>199</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <node:Name>
                             <attribute:startLine>
                              <scalar:int>199</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>199</scalar:int>
                             </attribute:endLine>
                             <subNode:parts>
                              <scalar:array>
                               <scalar:string>rtrim</scalar:string>
                              </scalar:array>
                             </subNode:parts>
                            </node:Name>
                           </subNode:name>
                           <subNode:args>
                            <scalar:array>
                             <node:Arg>
                              <attribute:startLine>
                               <scalar:int>199</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>199</scalar:int>
                              </attribute:endLine>
                              <subNode:value>
                               <node:Expr_Variable>
                                <attribute:startLine>
                                 <scalar:int>199</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>199</scalar:int>
                                </attribute:endLine>
                                <subNode:name>
                                 <scalar:string>line</scalar:string>
                                </subNode:name>
                               </node:Expr_Variable>
                              </subNode:value>
                              <subNode:byRef>
                               <scalar:false/>
                              </subNode:byRef>
                             </node:Arg>
                             <node:Arg>
                              <attribute:startLine>
                               <scalar:int>199</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>199</scalar:int>
                              </attribute:endLine>
                              <subNode:value>
                               <node:Expr_Variable>
                                <attribute:startLine>
                                 <scalar:int>199</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>199</scalar:int>
                                </attribute:endLine>
                                <subNode:name>
                                 <scalar:string>trailing_spaces</scalar:string>
                                </subNode:name>
                               </node:Expr_Variable>
                              </subNode:value>
                              <subNode:byRef>
                               <scalar:false/>
                              </subNode:byRef>
                             </node:Arg>
                            </scalar:array>
                           </subNode:args>
                          </node:Expr_FuncCall>
                         </subNode:value>
                         <subNode:byRef>
                          <scalar:false/>
                         </subNode:byRef>
                        </node:Arg>
                       </scalar:array>
                      </subNode:args>
                     </node:Expr_MethodCall>
                    </subNode:expr>
                   </node:Expr_Assign>
                  </scalar:array>
                 </subNode:stmts>
                 <subNode:expr>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>198</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>198</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>lines</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:expr>
                 <subNode:valueVar>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>198</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>198</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>line</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:valueVar>
                </node:Stmt_Foreach>
                <node:Expr_Assign>
                 <attribute:startLine>
                  <scalar:int>200</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>200</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>200</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>200</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>string</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:expr>
                  <node:Expr_FuncCall>
                   <attribute:startLine>
                    <scalar:int>200</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>200</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <node:Name>
                     <attribute:startLine>
                      <scalar:int>200</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>200</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>implode</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>200</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>200</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>200</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>200</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>le</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>200</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>200</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>200</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>200</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>lines</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                    </scalar:array>
                   </subNode:args>
                  </node:Expr_FuncCall>
                 </subNode:expr>
                </node:Expr_Assign>
                <node:Stmt_If>
                 <attribute:startLine>
                  <scalar:int>201</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>210</scalar:int>
                 </attribute:endLine>
                 <subNode:stmts>
                  <scalar:array>
                   <node:Stmt_If>
                    <attribute:startLine>
                     <scalar:int>203</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>208</scalar:int>
                    </attribute:endLine>
                    <subNode:stmts>
                     <scalar:array>
                      <node:Expr_AssignConcat>
                       <attribute:startLine>
                        <scalar:int>206</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>206</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>206</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>206</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>ret</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:expr>
                        <node:Expr_MethodCall>
                         <attribute:startLine>
                          <scalar:int>206</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>206</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>206</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>206</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>this</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>fixLE</scalar:string>
                         </subNode:name>
                         <subNode:args>
                          <scalar:array>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>206</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>206</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_Concat>
                              <attribute:startLine>
                               <scalar:int>206</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>206</scalar:int>
                              </attribute:endLine>
                              <subNode:left>
                               <node:Expr_ArrayDimFetch>
                                <attribute:startLine>
                                 <scalar:int>206</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>206</scalar:int>
                                </attribute:endLine>
                                <subNode:var>
                                 <node:Expr_Variable>
                                  <attribute:startLine>
                                   <scalar:int>206</scalar:int>
                                  </attribute:startLine>
                                  <attribute:endLine>
                                   <scalar:int>206</scalar:int>
                                  </attribute:endLine>
                                  <subNode:name>
                                   <scalar:string>matches</scalar:string>
                                  </subNode:name>
                                 </node:Expr_Variable>
                                </subNode:var>
                                <subNode:dim>
                                 <node:Scalar_LNumber>
                                  <attribute:startLine>
                                   <scalar:int>206</scalar:int>
                                  </attribute:startLine>
                                  <attribute:endLine>
                                   <scalar:int>206</scalar:int>
                                  </attribute:endLine>
                                  <subNode:value>
                                   <scalar:int>0</scalar:int>
                                  </subNode:value>
                                 </node:Scalar_LNumber>
                                </subNode:dim>
                               </node:Expr_ArrayDimFetch>
                              </subNode:left>
                              <subNode:right>
                               <node:Scalar_String>
                                <attribute:startLine>
                                 <scalar:int>206</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>206</scalar:int>
                                </attribute:endLine>
                                <subNode:value>
                                 <scalar:string>=</scalar:string>
                                </subNode:value>
                               </node:Scalar_String>
                              </subNode:right>
                             </node:Expr_Concat>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>206</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>206</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_Variable>
                              <attribute:startLine>
                               <scalar:int>206</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>206</scalar:int>
                              </attribute:endLine>
                              <subNode:name>
                               <scalar:string>le</scalar:string>
                              </subNode:name>
                             </node:Expr_Variable>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                          </scalar:array>
                         </subNode:args>
                        </node:Expr_MethodCall>
                       </subNode:expr>
                      </node:Expr_AssignConcat>
                      <node:Expr_Assign>
                       <attribute:comments>
                        <scalar:array>
                         <comment isDocComment="false" line="206">//fixLE added 24/08/07
</comment>
                        </scalar:array>
                       </attribute:comments>
                       <attribute:startLine>
                        <scalar:int>207</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>207</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:comments>
                          <scalar:array>
                           <comment isDocComment="false" line="206">//fixLE added 24/08/07
</comment>
                          </scalar:array>
                         </attribute:comments>
                         <attribute:startLine>
                          <scalar:int>207</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>207</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>string</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:expr>
                        <node:Expr_FuncCall>
                         <attribute:startLine>
                          <scalar:int>207</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>207</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <node:Name>
                           <attribute:startLine>
                            <scalar:int>207</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>207</scalar:int>
                           </attribute:endLine>
                           <subNode:parts>
                            <scalar:array>
                             <scalar:string>substr</scalar:string>
                            </scalar:array>
                           </subNode:parts>
                          </node:Name>
                         </subNode:name>
                         <subNode:args>
                          <scalar:array>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>207</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>207</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_Variable>
                              <attribute:startLine>
                               <scalar:int>207</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>207</scalar:int>
                              </attribute:endLine>
                              <subNode:name>
                               <scalar:string>string</scalar:string>
                              </subNode:name>
                             </node:Expr_Variable>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>207</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>207</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_FuncCall>
                              <attribute:startLine>
                               <scalar:int>207</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>207</scalar:int>
                              </attribute:endLine>
                              <subNode:name>
                               <node:Name>
                                <attribute:startLine>
                                 <scalar:int>207</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>207</scalar:int>
                                </attribute:endLine>
                                <subNode:parts>
                                 <scalar:array>
                                  <scalar:string>strlen</scalar:string>
                                 </scalar:array>
                                </subNode:parts>
                               </node:Name>
                              </subNode:name>
                              <subNode:args>
                               <scalar:array>
                                <node:Arg>
                                 <attribute:startLine>
                                  <scalar:int>207</scalar:int>
                                 </attribute:startLine>
                                 <attribute:endLine>
                                  <scalar:int>207</scalar:int>
                                 </attribute:endLine>
                                 <subNode:value>
                                  <node:Expr_ArrayDimFetch>
                                   <attribute:startLine>
                                    <scalar:int>207</scalar:int>
                                   </attribute:startLine>
                                   <attribute:endLine>
                                    <scalar:int>207</scalar:int>
                                   </attribute:endLine>
                                   <subNode:var>
                                    <node:Expr_Variable>
                                     <attribute:startLine>
                                      <scalar:int>207</scalar:int>
                                     </attribute:startLine>
                                     <attribute:endLine>
                                      <scalar:int>207</scalar:int>
                                     </attribute:endLine>
                                     <subNode:name>
                                      <scalar:string>matches</scalar:string>
                                     </subNode:name>
                                    </node:Expr_Variable>
                                   </subNode:var>
                                   <subNode:dim>
                                    <node:Scalar_LNumber>
                                     <attribute:startLine>
                                      <scalar:int>207</scalar:int>
                                     </attribute:startLine>
                                     <attribute:endLine>
                                      <scalar:int>207</scalar:int>
                                     </attribute:endLine>
                                     <subNode:value>
                                      <scalar:int>0</scalar:int>
                                     </subNode:value>
                                    </node:Scalar_LNumber>
                                   </subNode:dim>
                                  </node:Expr_ArrayDimFetch>
                                 </subNode:value>
                                 <subNode:byRef>
                                  <scalar:false/>
                                 </subNode:byRef>
                                </node:Arg>
                               </scalar:array>
                              </subNode:args>
                             </node:Expr_FuncCall>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                          </scalar:array>
                         </subNode:args>
                        </node:Expr_FuncCall>
                       </subNode:expr>
                      </node:Expr_Assign>
                     </scalar:array>
                    </subNode:stmts>
                    <subNode:elseifs>
                     <scalar:array/>
                    </subNode:elseifs>
                    <subNode:else>
                     <scalar:null/>
                    </subNode:else>
                    <subNode:cond>
                     <node:Expr_BooleanOr>
                      <attribute:startLine>
                       <scalar:int>203</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>204</scalar:int>
                      </attribute:endLine>
                      <subNode:left>
                       <node:Expr_FuncCall>
                        <attribute:startLine>
                         <scalar:int>203</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>203</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <node:Name>
                          <attribute:startLine>
                           <scalar:int>203</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>203</scalar:int>
                          </attribute:endLine>
                          <subNode:parts>
                           <scalar:array>
                            <scalar:string>preg_match</scalar:string>
                           </scalar:array>
                          </subNode:parts>
                         </node:Name>
                        </subNode:name>
                        <subNode:args>
                         <scalar:array>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>203</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>203</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Expr_Concat>
                             <attribute:startLine>
                              <scalar:int>203</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>203</scalar:int>
                             </attribute:endLine>
                             <subNode:left>
                              <node:Expr_Concat>
                               <attribute:startLine>
                                <scalar:int>203</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>203</scalar:int>
                               </attribute:endLine>
                               <subNode:left>
                                <node:Scalar_String>
                                 <attribute:startLine>
                                  <scalar:int>203</scalar:int>
                                 </attribute:startLine>
                                 <attribute:endLine>
                                  <scalar:int>203</scalar:int>
                                 </attribute:endLine>
                                 <subNode:value>
                                  <scalar:string>/^.{1,</scalar:string>
                                 </subNode:value>
                                </node:Scalar_String>
                               </subNode:left>
                               <subNode:right>
                                <node:Expr_Minus>
                                 <attribute:startLine>
                                  <scalar:int>203</scalar:int>
                                 </attribute:startLine>
                                 <attribute:endLine>
                                  <scalar:int>203</scalar:int>
                                 </attribute:endLine>
                                 <subNode:left>
                                  <node:Expr_Variable>
                                   <attribute:startLine>
                                    <scalar:int>203</scalar:int>
                                   </attribute:startLine>
                                   <attribute:endLine>
                                    <scalar:int>203</scalar:int>
                                   </attribute:endLine>
                                   <subNode:name>
                                    <scalar:string>init_chunk</scalar:string>
                                   </subNode:name>
                                  </node:Expr_Variable>
                                 </subNode:left>
                                 <subNode:right>
                                  <node:Scalar_LNumber>
                                   <attribute:startLine>
                                    <scalar:int>203</scalar:int>
                                   </attribute:startLine>
                                   <attribute:endLine>
                                    <scalar:int>203</scalar:int>
                                   </attribute:endLine>
                                   <subNode:value>
                                    <scalar:int>5</scalar:int>
                                   </subNode:value>
                                  </node:Scalar_LNumber>
                                 </subNode:right>
                                </node:Expr_Minus>
                               </subNode:right>
                              </node:Expr_Concat>
                             </subNode:left>
                             <subNode:right>
                              <node:Scalar_String>
                               <attribute:startLine>
                                <scalar:int>203</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>203</scalar:int>
                               </attribute:endLine>
                               <subNode:value>
                                <scalar:string>}[^=]{2}(?!=[A-F0-9]{2})/</scalar:string>
                               </subNode:value>
                              </node:Scalar_String>
                             </subNode:right>
                            </node:Expr_Concat>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>203</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>203</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>203</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>203</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>string</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>203</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>203</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>203</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>203</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>matches</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                         </scalar:array>
                        </subNode:args>
                       </node:Expr_FuncCall>
                      </subNode:left>
                      <subNode:right>
                       <node:Expr_FuncCall>
                        <attribute:startLine>
                         <scalar:int>204</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>204</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <node:Name>
                          <attribute:startLine>
                           <scalar:int>204</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>204</scalar:int>
                          </attribute:endLine>
                          <subNode:parts>
                           <scalar:array>
                            <scalar:string>preg_match</scalar:string>
                           </scalar:array>
                          </subNode:parts>
                         </node:Name>
                        </subNode:name>
                        <subNode:args>
                         <scalar:array>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>204</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>204</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Expr_Concat>
                             <attribute:startLine>
                              <scalar:int>204</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>204</scalar:int>
                             </attribute:endLine>
                             <subNode:left>
                              <node:Expr_Concat>
                               <attribute:startLine>
                                <scalar:int>204</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>204</scalar:int>
                               </attribute:endLine>
                               <subNode:left>
                                <node:Scalar_String>
                                 <attribute:startLine>
                                  <scalar:int>204</scalar:int>
                                 </attribute:startLine>
                                 <attribute:endLine>
                                  <scalar:int>204</scalar:int>
                                 </attribute:endLine>
                                 <subNode:value>
                                  <scalar:string>/^.{1,</scalar:string>
                                 </subNode:value>
                                </node:Scalar_String>
                               </subNode:left>
                               <subNode:right>
                                <node:Expr_Minus>
                                 <attribute:startLine>
                                  <scalar:int>204</scalar:int>
                                 </attribute:startLine>
                                 <attribute:endLine>
                                  <scalar:int>204</scalar:int>
                                 </attribute:endLine>
                                 <subNode:left>
                                  <node:Expr_Variable>
                                   <attribute:startLine>
                                    <scalar:int>204</scalar:int>
                                   </attribute:startLine>
                                   <attribute:endLine>
                                    <scalar:int>204</scalar:int>
                                   </attribute:endLine>
                                   <subNode:name>
                                    <scalar:string>init_chunk</scalar:string>
                                   </subNode:name>
                                  </node:Expr_Variable>
                                 </subNode:left>
                                 <subNode:right>
                                  <node:Scalar_LNumber>
                                   <attribute:startLine>
                                    <scalar:int>204</scalar:int>
                                   </attribute:startLine>
                                   <attribute:endLine>
                                    <scalar:int>204</scalar:int>
                                   </attribute:endLine>
                                   <subNode:value>
                                    <scalar:int>6</scalar:int>
                                   </subNode:value>
                                  </node:Scalar_LNumber>
                                 </subNode:right>
                                </node:Expr_Minus>
                               </subNode:right>
                              </node:Expr_Concat>
                             </subNode:left>
                             <subNode:right>
                              <node:Scalar_String>
                               <attribute:startLine>
                                <scalar:int>204</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>204</scalar:int>
                               </attribute:endLine>
                               <subNode:value>
                                <scalar:string>}([^=]{0,3})?/</scalar:string>
                               </subNode:value>
                              </node:Scalar_String>
                             </subNode:right>
                            </node:Expr_Concat>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>204</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>204</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>204</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>204</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>string</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>204</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>204</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>204</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>204</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>matches</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                         </scalar:array>
                        </subNode:args>
                       </node:Expr_FuncCall>
                      </subNode:right>
                     </node:Expr_BooleanOr>
                    </subNode:cond>
                   </node:Stmt_If>
                  </scalar:array>
                 </subNode:stmts>
                 <subNode:elseifs>
                  <scalar:array>
                   <node:Stmt_ElseIf>
                    <attribute:startLine>
                     <scalar:int>210</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>210</scalar:int>
                    </attribute:endLine>
                    <subNode:cond>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>210</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>210</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>init_chunk</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:cond>
                    <subNode:stmts>
                     <scalar:array>
                      <node:Expr_AssignConcat>
                       <attribute:startLine>
                        <scalar:int>210</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>210</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>210</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>210</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>ret</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:expr>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>210</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>210</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>=</scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:expr>
                      </node:Expr_AssignConcat>
                     </scalar:array>
                    </subNode:stmts>
                   </node:Stmt_ElseIf>
                  </scalar:array>
                 </subNode:elseifs>
                 <subNode:else>
                  <scalar:null/>
                 </subNode:else>
                 <subNode:cond>
                  <node:Expr_Greater>
                   <attribute:startLine>
                    <scalar:int>201</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>201</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>201</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>201</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>init_chunk</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:left>
                   <subNode:right>
                    <node:Scalar_LNumber>
                     <attribute:startLine>
                      <scalar:int>201</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>201</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:int>3</scalar:int>
                     </subNode:value>
                    </node:Scalar_LNumber>
                   </subNode:right>
                  </node:Expr_Greater>
                 </subNode:cond>
                </node:Stmt_If>
                <node:Stmt_While>
                 <attribute:startLine>
                  <scalar:int>212</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>218</scalar:int>
                 </attribute:endLine>
                 <subNode:cond>
                  <node:Expr_BooleanOr>
                   <attribute:startLine>
                    <scalar:int>212</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>214</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Expr_BooleanOr>
                     <attribute:startLine>
                      <scalar:int>212</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>213</scalar:int>
                     </attribute:endLine>
                     <subNode:left>
                      <node:Expr_FuncCall>
                       <attribute:startLine>
                        <scalar:int>212</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>212</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <node:Name>
                         <attribute:startLine>
                          <scalar:int>212</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>212</scalar:int>
                         </attribute:endLine>
                         <subNode:parts>
                          <scalar:array>
                           <scalar:string>preg_match</scalar:string>
                          </scalar:array>
                         </subNode:parts>
                        </node:Name>
                       </subNode:name>
                       <subNode:args>
                        <scalar:array>
                         <node:Arg>
                          <attribute:startLine>
                           <scalar:int>212</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>212</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <node:Expr_Concat>
                            <attribute:startLine>
                             <scalar:int>212</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>212</scalar:int>
                            </attribute:endLine>
                            <subNode:left>
                             <node:Expr_Concat>
                              <attribute:startLine>
                               <scalar:int>212</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>212</scalar:int>
                              </attribute:endLine>
                              <subNode:left>
                               <node:Scalar_String>
                                <attribute:startLine>
                                 <scalar:int>212</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>212</scalar:int>
                                </attribute:endLine>
                                <subNode:value>
                                 <scalar:string>/^.{1,</scalar:string>
                                </subNode:value>
                               </node:Scalar_String>
                              </subNode:left>
                              <subNode:right>
                               <node:Expr_Minus>
                                <attribute:startLine>
                                 <scalar:int>212</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>212</scalar:int>
                                </attribute:endLine>
                                <subNode:left>
                                 <node:Expr_Variable>
                                  <attribute:startLine>
                                   <scalar:int>212</scalar:int>
                                  </attribute:startLine>
                                  <attribute:endLine>
                                   <scalar:int>212</scalar:int>
                                  </attribute:endLine>
                                  <subNode:name>
                                   <scalar:string>init_chunk</scalar:string>
                                  </subNode:name>
                                 </node:Expr_Variable>
                                </subNode:left>
                                <subNode:right>
                                 <node:Scalar_LNumber>
                                  <attribute:startLine>
                                   <scalar:int>212</scalar:int>
                                  </attribute:startLine>
                                  <attribute:endLine>
                                   <scalar:int>212</scalar:int>
                                  </attribute:endLine>
                                  <subNode:value>
                                   <scalar:int>5</scalar:int>
                                  </subNode:value>
                                 </node:Scalar_LNumber>
                                </subNode:right>
                               </node:Expr_Minus>
                              </subNode:right>
                             </node:Expr_Concat>
                            </subNode:left>
                            <subNode:right>
                             <node:Scalar_String>
                              <attribute:startLine>
                               <scalar:int>212</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>212</scalar:int>
                              </attribute:endLine>
                              <subNode:value>
                               <scalar:string>}[^=]{2}(?!=[A-F0-9]{2})/</scalar:string>
                              </subNode:value>
                             </node:Scalar_String>
                            </subNode:right>
                           </node:Expr_Concat>
                          </subNode:value>
                          <subNode:byRef>
                           <scalar:false/>
                          </subNode:byRef>
                         </node:Arg>
                         <node:Arg>
                          <attribute:startLine>
                           <scalar:int>212</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>212</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <node:Expr_Variable>
                            <attribute:startLine>
                             <scalar:int>212</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>212</scalar:int>
                            </attribute:endLine>
                            <subNode:name>
                             <scalar:string>string</scalar:string>
                            </subNode:name>
                           </node:Expr_Variable>
                          </subNode:value>
                          <subNode:byRef>
                           <scalar:false/>
                          </subNode:byRef>
                         </node:Arg>
                         <node:Arg>
                          <attribute:startLine>
                           <scalar:int>212</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>212</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <node:Expr_Variable>
                            <attribute:startLine>
                             <scalar:int>212</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>212</scalar:int>
                            </attribute:endLine>
                            <subNode:name>
                             <scalar:string>matches</scalar:string>
                            </subNode:name>
                           </node:Expr_Variable>
                          </subNode:value>
                          <subNode:byRef>
                           <scalar:false/>
                          </subNode:byRef>
                         </node:Arg>
                        </scalar:array>
                       </subNode:args>
                      </node:Expr_FuncCall>
                     </subNode:left>
                     <subNode:right>
                      <node:Expr_FuncCall>
                       <attribute:startLine>
                        <scalar:int>213</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>213</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <node:Name>
                         <attribute:startLine>
                          <scalar:int>213</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>213</scalar:int>
                         </attribute:endLine>
                         <subNode:parts>
                          <scalar:array>
                           <scalar:string>preg_match</scalar:string>
                          </scalar:array>
                         </subNode:parts>
                        </node:Name>
                       </subNode:name>
                       <subNode:args>
                        <scalar:array>
                         <node:Arg>
                          <attribute:startLine>
                           <scalar:int>213</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>213</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <node:Expr_Concat>
                            <attribute:startLine>
                             <scalar:int>213</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>213</scalar:int>
                            </attribute:endLine>
                            <subNode:left>
                             <node:Expr_Concat>
                              <attribute:startLine>
                               <scalar:int>213</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>213</scalar:int>
                              </attribute:endLine>
                              <subNode:left>
                               <node:Scalar_String>
                                <attribute:startLine>
                                 <scalar:int>213</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>213</scalar:int>
                                </attribute:endLine>
                                <subNode:value>
                                 <scalar:string>/^.{1,</scalar:string>
                                </subNode:value>
                               </node:Scalar_String>
                              </subNode:left>
                              <subNode:right>
                               <node:Expr_Minus>
                                <attribute:startLine>
                                 <scalar:int>213</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>213</scalar:int>
                                </attribute:endLine>
                                <subNode:left>
                                 <node:Expr_Variable>
                                  <attribute:startLine>
                                   <scalar:int>213</scalar:int>
                                  </attribute:startLine>
                                  <attribute:endLine>
                                   <scalar:int>213</scalar:int>
                                  </attribute:endLine>
                                  <subNode:name>
                                   <scalar:string>chunk</scalar:string>
                                  </subNode:name>
                                 </node:Expr_Variable>
                                </subNode:left>
                                <subNode:right>
                                 <node:Scalar_LNumber>
                                  <attribute:startLine>
                                   <scalar:int>213</scalar:int>
                                  </attribute:startLine>
                                  <attribute:endLine>
                                   <scalar:int>213</scalar:int>
                                  </attribute:endLine>
                                  <subNode:value>
                                   <scalar:int>6</scalar:int>
                                  </subNode:value>
                                 </node:Scalar_LNumber>
                                </subNode:right>
                               </node:Expr_Minus>
                              </subNode:right>
                             </node:Expr_Concat>
                            </subNode:left>
                            <subNode:right>
                             <node:Scalar_String>
                              <attribute:startLine>
                               <scalar:int>213</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>213</scalar:int>
                              </attribute:endLine>
                              <subNode:value>
                               <scalar:string>}([^=]{0,3})?/</scalar:string>
                              </subNode:value>
                             </node:Scalar_String>
                            </subNode:right>
                           </node:Expr_Concat>
                          </subNode:value>
                          <subNode:byRef>
                           <scalar:false/>
                          </subNode:byRef>
                         </node:Arg>
                         <node:Arg>
                          <attribute:startLine>
                           <scalar:int>213</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>213</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <node:Expr_Variable>
                            <attribute:startLine>
                             <scalar:int>213</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>213</scalar:int>
                            </attribute:endLine>
                            <subNode:name>
                             <scalar:string>string</scalar:string>
                            </subNode:name>
                           </node:Expr_Variable>
                          </subNode:value>
                          <subNode:byRef>
                           <scalar:false/>
                          </subNode:byRef>
                         </node:Arg>
                         <node:Arg>
                          <attribute:startLine>
                           <scalar:int>213</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>213</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <node:Expr_Variable>
                            <attribute:startLine>
                             <scalar:int>213</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>213</scalar:int>
                            </attribute:endLine>
                            <subNode:name>
                             <scalar:string>matches</scalar:string>
                            </subNode:name>
                           </node:Expr_Variable>
                          </subNode:value>
                          <subNode:byRef>
                           <scalar:false/>
                          </subNode:byRef>
                         </node:Arg>
                        </scalar:array>
                       </subNode:args>
                      </node:Expr_FuncCall>
                     </subNode:right>
                    </node:Expr_BooleanOr>
                   </subNode:left>
                   <subNode:right>
                    <node:Expr_BooleanAnd>
                     <attribute:startLine>
                      <scalar:int>214</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>214</scalar:int>
                     </attribute:endLine>
                     <subNode:left>
                      <node:Expr_Greater>
                       <attribute:startLine>
                        <scalar:int>214</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>214</scalar:int>
                       </attribute:endLine>
                       <subNode:left>
                        <node:Expr_FuncCall>
                         <attribute:startLine>
                          <scalar:int>214</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>214</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <node:Name>
                           <attribute:startLine>
                            <scalar:int>214</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>214</scalar:int>
                           </attribute:endLine>
                           <subNode:parts>
                            <scalar:array>
                             <scalar:string>strlen</scalar:string>
                            </scalar:array>
                           </subNode:parts>
                          </node:Name>
                         </subNode:name>
                         <subNode:args>
                          <scalar:array>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>214</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>214</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_Variable>
                              <attribute:startLine>
                               <scalar:int>214</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>214</scalar:int>
                              </attribute:endLine>
                              <subNode:name>
                               <scalar:string>string</scalar:string>
                              </subNode:name>
                             </node:Expr_Variable>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                          </scalar:array>
                         </subNode:args>
                        </node:Expr_FuncCall>
                       </subNode:left>
                       <subNode:right>
                        <node:Scalar_LNumber>
                         <attribute:startLine>
                          <scalar:int>214</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>214</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:int>0</scalar:int>
                         </subNode:value>
                        </node:Scalar_LNumber>
                       </subNode:right>
                      </node:Expr_Greater>
                     </subNode:left>
                     <subNode:right>
                      <node:Expr_Assign>
                       <attribute:startLine>
                        <scalar:int>214</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>214</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>214</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>214</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>matches</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:expr>
                        <node:Expr_Array>
                         <attribute:startLine>
                          <scalar:int>214</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>214</scalar:int>
                         </attribute:endLine>
                         <subNode:items>
                          <scalar:array>
                           <node:Expr_ArrayItem>
                            <attribute:startLine>
                             <scalar:int>214</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>214</scalar:int>
                            </attribute:endLine>
                            <subNode:key>
                             <scalar:null/>
                            </subNode:key>
                            <subNode:value>
                             <node:Expr_Variable>
                              <attribute:startLine>
                               <scalar:int>214</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>214</scalar:int>
                              </attribute:endLine>
                              <subNode:name>
                               <scalar:string>string</scalar:string>
                              </subNode:name>
                             </node:Expr_Variable>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Expr_ArrayItem>
                          </scalar:array>
                         </subNode:items>
                        </node:Expr_Array>
                       </subNode:expr>
                      </node:Expr_Assign>
                     </subNode:right>
                    </node:Expr_BooleanAnd>
                   </subNode:right>
                  </node:Expr_BooleanOr>
                 </subNode:cond>
                 <subNode:stmts>
                  <scalar:array>
                   <node:Expr_AssignConcat>
                    <attribute:startLine>
                     <scalar:int>216</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>216</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>216</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>216</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>ret</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:expr>
                     <node:Expr_MethodCall>
                      <attribute:startLine>
                       <scalar:int>216</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>216</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>216</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>216</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>this</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>fixLE</scalar:string>
                      </subNode:name>
                      <subNode:args>
                       <scalar:array>
                        <node:Arg>
                         <attribute:startLine>
                          <scalar:int>216</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>216</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <node:Expr_Concat>
                           <attribute:startLine>
                            <scalar:int>216</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>216</scalar:int>
                           </attribute:endLine>
                           <subNode:left>
                            <node:Expr_Concat>
                             <attribute:startLine>
                              <scalar:int>216</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>216</scalar:int>
                             </attribute:endLine>
                             <subNode:left>
                              <node:Expr_Variable>
                               <attribute:startLine>
                                <scalar:int>216</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>216</scalar:int>
                               </attribute:endLine>
                               <subNode:name>
                                <scalar:string>le</scalar:string>
                               </subNode:name>
                              </node:Expr_Variable>
                             </subNode:left>
                             <subNode:right>
                              <node:Expr_ArrayDimFetch>
                               <attribute:startLine>
                                <scalar:int>216</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>216</scalar:int>
                               </attribute:endLine>
                               <subNode:var>
                                <node:Expr_Variable>
                                 <attribute:startLine>
                                  <scalar:int>216</scalar:int>
                                 </attribute:startLine>
                                 <attribute:endLine>
                                  <scalar:int>216</scalar:int>
                                 </attribute:endLine>
                                 <subNode:name>
                                  <scalar:string>matches</scalar:string>
                                 </subNode:name>
                                </node:Expr_Variable>
                               </subNode:var>
                               <subNode:dim>
                                <node:Scalar_LNumber>
                                 <attribute:startLine>
                                  <scalar:int>216</scalar:int>
                                 </attribute:startLine>
                                 <attribute:endLine>
                                  <scalar:int>216</scalar:int>
                                 </attribute:endLine>
                                 <subNode:value>
                                  <scalar:int>0</scalar:int>
                                 </subNode:value>
                                </node:Scalar_LNumber>
                               </subNode:dim>
                              </node:Expr_ArrayDimFetch>
                             </subNode:right>
                            </node:Expr_Concat>
                           </subNode:left>
                           <subNode:right>
                            <node:Scalar_String>
                             <attribute:startLine>
                              <scalar:int>216</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>216</scalar:int>
                             </attribute:endLine>
                             <subNode:value>
                              <scalar:string>=</scalar:string>
                             </subNode:value>
                            </node:Scalar_String>
                           </subNode:right>
                          </node:Expr_Concat>
                         </subNode:value>
                         <subNode:byRef>
                          <scalar:false/>
                         </subNode:byRef>
                        </node:Arg>
                        <node:Arg>
                         <attribute:startLine>
                          <scalar:int>216</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>216</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>216</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>216</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>le</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:value>
                         <subNode:byRef>
                          <scalar:false/>
                         </subNode:byRef>
                        </node:Arg>
                       </scalar:array>
                      </subNode:args>
                     </node:Expr_MethodCall>
                    </subNode:expr>
                   </node:Expr_AssignConcat>
                   <node:Expr_Assign>
                    <attribute:comments>
                     <scalar:array>
                      <comment isDocComment="false" line="216">//fixLE added 24/08/07
</comment>
                     </scalar:array>
                    </attribute:comments>
                    <attribute:startLine>
                     <scalar:int>217</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>217</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:comments>
                       <scalar:array>
                        <comment isDocComment="false" line="216">//fixLE added 24/08/07
</comment>
                       </scalar:array>
                      </attribute:comments>
                      <attribute:startLine>
                       <scalar:int>217</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>217</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>string</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:expr>
                     <node:Expr_FuncCall>
                      <attribute:startLine>
                       <scalar:int>217</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>217</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <node:Name>
                        <attribute:startLine>
                         <scalar:int>217</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>217</scalar:int>
                        </attribute:endLine>
                        <subNode:parts>
                         <scalar:array>
                          <scalar:string>substr</scalar:string>
                         </scalar:array>
                        </subNode:parts>
                       </node:Name>
                      </subNode:name>
                      <subNode:args>
                       <scalar:array>
                        <node:Arg>
                         <attribute:startLine>
                          <scalar:int>217</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>217</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>217</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>217</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>string</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:value>
                         <subNode:byRef>
                          <scalar:false/>
                         </subNode:byRef>
                        </node:Arg>
                        <node:Arg>
                         <attribute:startLine>
                          <scalar:int>217</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>217</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <node:Expr_FuncCall>
                           <attribute:startLine>
                            <scalar:int>217</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>217</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <node:Name>
                             <attribute:startLine>
                              <scalar:int>217</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>217</scalar:int>
                             </attribute:endLine>
                             <subNode:parts>
                              <scalar:array>
                               <scalar:string>strlen</scalar:string>
                              </scalar:array>
                             </subNode:parts>
                            </node:Name>
                           </subNode:name>
                           <subNode:args>
                            <scalar:array>
                             <node:Arg>
                              <attribute:startLine>
                               <scalar:int>217</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>217</scalar:int>
                              </attribute:endLine>
                              <subNode:value>
                               <node:Expr_ArrayDimFetch>
                                <attribute:startLine>
                                 <scalar:int>217</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>217</scalar:int>
                                </attribute:endLine>
                                <subNode:var>
                                 <node:Expr_Variable>
                                  <attribute:startLine>
                                   <scalar:int>217</scalar:int>
                                  </attribute:startLine>
                                  <attribute:endLine>
                                   <scalar:int>217</scalar:int>
                                  </attribute:endLine>
                                  <subNode:name>
                                   <scalar:string>matches</scalar:string>
                                  </subNode:name>
                                 </node:Expr_Variable>
                                </subNode:var>
                                <subNode:dim>
                                 <node:Scalar_LNumber>
                                  <attribute:startLine>
                                   <scalar:int>217</scalar:int>
                                  </attribute:startLine>
                                  <attribute:endLine>
                                   <scalar:int>217</scalar:int>
                                  </attribute:endLine>
                                  <subNode:value>
                                   <scalar:int>0</scalar:int>
                                  </subNode:value>
                                 </node:Scalar_LNumber>
                                </subNode:dim>
                               </node:Expr_ArrayDimFetch>
                              </subNode:value>
                              <subNode:byRef>
                               <scalar:false/>
                              </subNode:byRef>
                             </node:Arg>
                            </scalar:array>
                           </subNode:args>
                          </node:Expr_FuncCall>
                         </subNode:value>
                         <subNode:byRef>
                          <scalar:false/>
                         </subNode:byRef>
                        </node:Arg>
                       </scalar:array>
                      </subNode:args>
                     </node:Expr_FuncCall>
                    </subNode:expr>
                   </node:Expr_Assign>
                  </scalar:array>
                 </subNode:stmts>
                </node:Stmt_While>
               </scalar:array>
              </subNode:stmts>
             </node:Stmt_Else>
            </subNode:else>
            <subNode:cond>
             <node:Expr_Equal>
              <attribute:startLine>
               <scalar:int>190</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>190</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_ArrayDimFetch>
                <attribute:startLine>
                 <scalar:int>190</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>190</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>190</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>190</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>key</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:dim>
                 <node:Scalar_LNumber>
                  <attribute:startLine>
                   <scalar:int>190</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>190</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:int>0</scalar:int>
                  </subNode:value>
                 </node:Scalar_LNumber>
                </subNode:dim>
               </node:Expr_ArrayDimFetch>
              </subNode:left>
              <subNode:right>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>190</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>190</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>a</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:right>
             </node:Expr_Equal>
            </subNode:cond>
           </node:Stmt_If>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>220</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>220</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>220</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>220</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>init_chunk</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Scalar_LNumber>
              <attribute:startLine>
               <scalar:int>220</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>220</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:int>0</scalar:int>
              </subNode:value>
             </node:Scalar_LNumber>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>187</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>187</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>data</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
         <subNode:valueVar>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>187</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>187</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>string</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:valueVar>
        </node:Stmt_Foreach>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>223</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>224</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>223</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>223</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>223</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>223</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>223</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>223</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>trim</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>223</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>223</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_FuncCall>
                   <attribute:startLine>
                    <scalar:int>223</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>223</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <node:Name>
                     <attribute:startLine>
                      <scalar:int>223</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>223</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>substr</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>223</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>223</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>223</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>223</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>ret</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>223</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>223</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Scalar_LNumber>
                        <attribute:startLine>
                         <scalar:int>223</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>223</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <scalar:int>0</scalar:int>
                        </subNode:value>
                       </node:Scalar_LNumber>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>223</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>223</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_UnaryMinus>
                        <attribute:startLine>
                         <scalar:int>223</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>223</scalar:int>
                        </attribute:endLine>
                        <subNode:expr>
                         <node:Scalar_LNumber>
                          <attribute:startLine>
                           <scalar:int>223</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>223</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <scalar:int>1</scalar:int>
                          </subNode:value>
                         </node:Scalar_LNumber>
                        </subNode:expr>
                       </node:Expr_UnaryMinus>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                    </scalar:array>
                   </subNode:args>
                  </node:Expr_FuncCall>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <node:Stmt_Else>
           <attribute:startLine>
            <scalar:int>224</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>224</scalar:int>
           </attribute:endLine>
           <subNode:stmts>
            <scalar:array>
             <node:Stmt_Return>
              <attribute:startLine>
               <scalar:int>224</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>224</scalar:int>
              </attribute:endLine>
              <subNode:expr>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>224</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>224</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>224</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>224</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>trim</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>224</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>224</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>224</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>224</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>ret</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:expr>
             </node:Stmt_Return>
            </scalar:array>
           </subNode:stmts>
          </node:Stmt_Else>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Equal>
           <attribute:startLine>
            <scalar:int>223</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>223</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>223</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>223</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>223</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>223</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>substr</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>223</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>223</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>223</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>223</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>ret</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>223</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>223</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_UnaryMinus>
                  <attribute:startLine>
                   <scalar:int>223</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>223</scalar:int>
                  </attribute:endLine>
                  <subNode:expr>
                   <node:Scalar_LNumber>
                    <attribute:startLine>
                     <scalar:int>223</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>223</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:int>1</scalar:int>
                    </subNode:value>
                   </node:Scalar_LNumber>
                  </subNode:expr>
                 </node:Expr_UnaryMinus>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:left>
           <subNode:right>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>223</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>223</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string>=</scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:right>
          </node:Expr_Equal>
         </subNode:cond>
        </node:Stmt_If>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>QPEncode</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="226">/**
   * Return the QP encoded version of a string with no breaks
   * @param string The input to encode
   * @param boolean True if the data we're encoding is binary
   * @return string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>232</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>258</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>232</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>232</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>string</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>232</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>232</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>bin</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>232</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>232</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>232</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>232</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>false</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>234</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>234</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>234</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>234</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>ret</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>234</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>234</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string></scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>235</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>239</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>237</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>237</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>237</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>237</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>string</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>237</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>237</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>237</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>237</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>str_replace</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>237</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>237</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Array>
                   <attribute:startLine>
                    <scalar:int>237</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>237</scalar:int>
                   </attribute:endLine>
                   <subNode:items>
                    <scalar:array>
                     <node:Expr_ArrayItem>
                      <attribute:startLine>
                       <scalar:int>237</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>237</scalar:int>
                      </attribute:endLine>
                      <subNode:key>
                       <scalar:null/>
                      </subNode:key>
                      <subNode:value>
                       <node:Scalar_String>
                        <attribute:startLine>
                         <scalar:int>237</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>237</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <scalar:string>&#13;
</scalar:string>
                        </subNode:value>
                       </node:Scalar_String>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Expr_ArrayItem>
                     <node:Expr_ArrayItem>
                      <attribute:startLine>
                       <scalar:int>237</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>237</scalar:int>
                      </attribute:endLine>
                      <subNode:key>
                       <scalar:null/>
                      </subNode:key>
                      <subNode:value>
                       <node:Scalar_String>
                        <attribute:startLine>
                         <scalar:int>237</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>237</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <scalar:string>&#13;</scalar:string>
                        </subNode:value>
                       </node:Scalar_String>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Expr_ArrayItem>
                    </scalar:array>
                   </subNode:items>
                  </node:Expr_Array>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>237</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>237</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>237</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>237</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>
</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>237</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>237</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>237</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>237</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>string</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>238</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>238</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>238</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>238</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>string</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>238</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>238</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>238</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>238</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>str_replace</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>238</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>238</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>238</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>238</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>
</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>238</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>238</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>238</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>238</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>&#13;
</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>238</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>238</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>238</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>238</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>string</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>235</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>235</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>235</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>235</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>bin</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>240</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>240</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>240</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>240</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>len</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>240</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>240</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>240</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>240</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>strlen</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>240</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>240</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>240</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>240</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>string</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_For>
         <attribute:startLine>
          <scalar:int>241</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>256</scalar:int>
         </attribute:endLine>
         <subNode:init>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>241</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>241</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>241</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>241</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>i</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Scalar_LNumber>
              <attribute:startLine>
               <scalar:int>241</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>241</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:int>0</scalar:int>
              </subNode:value>
             </node:Scalar_LNumber>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:init>
         <subNode:cond>
          <scalar:array>
           <node:Expr_Smaller>
            <attribute:startLine>
             <scalar:int>241</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>241</scalar:int>
            </attribute:endLine>
            <subNode:left>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>241</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>241</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>i</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:left>
            <subNode:right>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>241</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>241</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>len</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:right>
           </node:Expr_Smaller>
          </scalar:array>
         </subNode:cond>
         <subNode:loop>
          <scalar:array>
           <node:Expr_PostInc>
            <attribute:startLine>
             <scalar:int>241</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>241</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>241</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>241</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>i</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
           </node:Expr_PostInc>
          </scalar:array>
         </subNode:loop>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>243</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>243</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>243</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>243</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>val</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>243</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>243</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>243</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>243</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>ord</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>243</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>243</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_ArrayDimFetch>
                   <attribute:startLine>
                    <scalar:int>243</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>243</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>243</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>243</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>string</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:dim>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>243</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>243</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>i</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:dim>
                  </node:Expr_ArrayDimFetch>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Stmt_If>
            <attribute:comments>
             <scalar:array>
              <comment isDocComment="false" line="244">//9, 32 = HT, SP; 10, 13 = CR, LF; 33-60 &amp; 62-126 are ok
</comment>
              <comment isDocComment="false" line="245">// 63 = '?'; 95 = '_' and need encoding to go in the headers
</comment>
             </scalar:array>
            </attribute:comments>
            <attribute:startLine>
             <scalar:int>246</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>255</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_AssignConcat>
               <attribute:startLine>
                <scalar:int>250</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>250</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>250</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>250</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>ret</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:expr>
                <node:Expr_ArrayDimFetch>
                 <attribute:startLine>
                  <scalar:int>250</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>250</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>250</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>250</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>string</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:dim>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>250</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>250</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>i</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:dim>
                </node:Expr_ArrayDimFetch>
               </subNode:expr>
              </node:Expr_AssignConcat>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <node:Stmt_Else>
              <attribute:startLine>
               <scalar:int>252</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>255</scalar:int>
              </attribute:endLine>
              <subNode:stmts>
               <scalar:array>
                <node:Expr_AssignConcat>
                 <attribute:startLine>
                  <scalar:int>254</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>254</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>254</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>254</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>ret</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:expr>
                  <node:Expr_FuncCall>
                   <attribute:startLine>
                    <scalar:int>254</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>254</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <node:Name>
                     <attribute:startLine>
                      <scalar:int>254</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>254</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>sprintf</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>254</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>254</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Scalar_String>
                        <attribute:startLine>
                         <scalar:int>254</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>254</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <scalar:string>=%02X</scalar:string>
                        </subNode:value>
                       </node:Scalar_String>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>254</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>254</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>254</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>254</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>val</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                    </scalar:array>
                   </subNode:args>
                  </node:Expr_FuncCall>
                 </subNode:expr>
                </node:Expr_AssignConcat>
               </scalar:array>
              </subNode:stmts>
             </node:Stmt_Else>
            </subNode:else>
            <subNode:cond>
             <node:Expr_BooleanOr>
              <attribute:startLine>
               <scalar:int>246</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>248</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_BooleanOr>
                <attribute:startLine>
                 <scalar:int>246</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>247</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Expr_BooleanAnd>
                  <attribute:startLine>
                   <scalar:int>246</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>246</scalar:int>
                  </attribute:endLine>
                  <subNode:left>
                   <node:Expr_BooleanNot>
                    <attribute:startLine>
                     <scalar:int>246</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>246</scalar:int>
                    </attribute:endLine>
                    <subNode:expr>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>246</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>246</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>bin</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:expr>
                   </node:Expr_BooleanNot>
                  </subNode:left>
                  <subNode:right>
                   <node:Expr_BooleanOr>
                    <attribute:startLine>
                     <scalar:int>246</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>246</scalar:int>
                    </attribute:endLine>
                    <subNode:left>
                     <node:Expr_BooleanOr>
                      <attribute:startLine>
                       <scalar:int>246</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>246</scalar:int>
                      </attribute:endLine>
                      <subNode:left>
                       <node:Expr_BooleanOr>
                        <attribute:startLine>
                         <scalar:int>246</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>246</scalar:int>
                        </attribute:endLine>
                        <subNode:left>
                         <node:Expr_Equal>
                          <attribute:startLine>
                           <scalar:int>246</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>246</scalar:int>
                          </attribute:endLine>
                          <subNode:left>
                           <node:Expr_Variable>
                            <attribute:startLine>
                             <scalar:int>246</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>246</scalar:int>
                            </attribute:endLine>
                            <subNode:name>
                             <scalar:string>val</scalar:string>
                            </subNode:name>
                           </node:Expr_Variable>
                          </subNode:left>
                          <subNode:right>
                           <node:Scalar_LNumber>
                            <attribute:startLine>
                             <scalar:int>246</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>246</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <scalar:int>32</scalar:int>
                            </subNode:value>
                           </node:Scalar_LNumber>
                          </subNode:right>
                         </node:Expr_Equal>
                        </subNode:left>
                        <subNode:right>
                         <node:Expr_Equal>
                          <attribute:startLine>
                           <scalar:int>246</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>246</scalar:int>
                          </attribute:endLine>
                          <subNode:left>
                           <node:Expr_Variable>
                            <attribute:startLine>
                             <scalar:int>246</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>246</scalar:int>
                            </attribute:endLine>
                            <subNode:name>
                             <scalar:string>val</scalar:string>
                            </subNode:name>
                           </node:Expr_Variable>
                          </subNode:left>
                          <subNode:right>
                           <node:Scalar_LNumber>
                            <attribute:startLine>
                             <scalar:int>246</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>246</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <scalar:int>9</scalar:int>
                            </subNode:value>
                           </node:Scalar_LNumber>
                          </subNode:right>
                         </node:Expr_Equal>
                        </subNode:right>
                       </node:Expr_BooleanOr>
                      </subNode:left>
                      <subNode:right>
                       <node:Expr_Equal>
                        <attribute:startLine>
                         <scalar:int>246</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>246</scalar:int>
                        </attribute:endLine>
                        <subNode:left>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>246</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>246</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>val</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:left>
                        <subNode:right>
                         <node:Scalar_LNumber>
                          <attribute:startLine>
                           <scalar:int>246</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>246</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <scalar:int>10</scalar:int>
                          </subNode:value>
                         </node:Scalar_LNumber>
                        </subNode:right>
                       </node:Expr_Equal>
                      </subNode:right>
                     </node:Expr_BooleanOr>
                    </subNode:left>
                    <subNode:right>
                     <node:Expr_Equal>
                      <attribute:startLine>
                       <scalar:int>246</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>246</scalar:int>
                      </attribute:endLine>
                      <subNode:left>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>246</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>246</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>val</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:left>
                      <subNode:right>
                       <node:Scalar_LNumber>
                        <attribute:startLine>
                         <scalar:int>246</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>246</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <scalar:int>13</scalar:int>
                        </subNode:value>
                       </node:Scalar_LNumber>
                      </subNode:right>
                     </node:Expr_Equal>
                    </subNode:right>
                   </node:Expr_BooleanOr>
                  </subNode:right>
                 </node:Expr_BooleanAnd>
                </subNode:left>
                <subNode:right>
                 <node:Expr_BooleanAnd>
                  <attribute:startLine>
                   <scalar:int>247</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>247</scalar:int>
                  </attribute:endLine>
                  <subNode:left>
                   <node:Expr_GreaterOrEqual>
                    <attribute:startLine>
                     <scalar:int>247</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>247</scalar:int>
                    </attribute:endLine>
                    <subNode:left>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>247</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>247</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>val</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:left>
                    <subNode:right>
                     <node:Scalar_LNumber>
                      <attribute:startLine>
                       <scalar:int>247</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>247</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <scalar:int>33</scalar:int>
                      </subNode:value>
                     </node:Scalar_LNumber>
                    </subNode:right>
                   </node:Expr_GreaterOrEqual>
                  </subNode:left>
                  <subNode:right>
                   <node:Expr_SmallerOrEqual>
                    <attribute:startLine>
                     <scalar:int>247</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>247</scalar:int>
                    </attribute:endLine>
                    <subNode:left>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>247</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>247</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>val</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:left>
                    <subNode:right>
                     <node:Scalar_LNumber>
                      <attribute:startLine>
                       <scalar:int>247</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>247</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <scalar:int>60</scalar:int>
                      </subNode:value>
                     </node:Scalar_LNumber>
                    </subNode:right>
                   </node:Expr_SmallerOrEqual>
                  </subNode:right>
                 </node:Expr_BooleanAnd>
                </subNode:right>
               </node:Expr_BooleanOr>
              </subNode:left>
              <subNode:right>
               <node:Expr_BooleanAnd>
                <attribute:startLine>
                 <scalar:int>247</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>248</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Expr_BooleanAnd>
                  <attribute:startLine>
                   <scalar:int>247</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>247</scalar:int>
                  </attribute:endLine>
                  <subNode:left>
                   <node:Expr_GreaterOrEqual>
                    <attribute:startLine>
                     <scalar:int>247</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>247</scalar:int>
                    </attribute:endLine>
                    <subNode:left>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>247</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>247</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>val</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:left>
                    <subNode:right>
                     <node:Scalar_LNumber>
                      <attribute:startLine>
                       <scalar:int>247</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>247</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <scalar:int>62</scalar:int>
                      </subNode:value>
                     </node:Scalar_LNumber>
                    </subNode:right>
                   </node:Expr_GreaterOrEqual>
                  </subNode:left>
                  <subNode:right>
                   <node:Expr_SmallerOrEqual>
                    <attribute:startLine>
                     <scalar:int>247</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>247</scalar:int>
                    </attribute:endLine>
                    <subNode:left>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>247</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>247</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>val</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:left>
                    <subNode:right>
                     <node:Scalar_LNumber>
                      <attribute:startLine>
                       <scalar:int>247</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>247</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <scalar:int>126</scalar:int>
                      </subNode:value>
                     </node:Scalar_LNumber>
                    </subNode:right>
                   </node:Expr_SmallerOrEqual>
                  </subNode:right>
                 </node:Expr_BooleanAnd>
                </subNode:left>
                <subNode:right>
                 <node:Expr_NotEqual>
                  <attribute:startLine>
                   <scalar:int>248</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>248</scalar:int>
                  </attribute:endLine>
                  <subNode:left>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>248</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>248</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>val</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:left>
                  <subNode:right>
                   <node:Scalar_LNumber>
                    <attribute:startLine>
                     <scalar:int>248</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>248</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:int>63</scalar:int>
                    </subNode:value>
                   </node:Scalar_LNumber>
                  </subNode:right>
                 </node:Expr_NotEqual>
                </subNode:right>
               </node:Expr_BooleanAnd>
              </subNode:right>
             </node:Expr_BooleanOr>
            </subNode:cond>
           </node:Stmt_If>
          </scalar:array>
         </subNode:stmts>
        </node:Stmt_For>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>257</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>257</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>257</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>257</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>ret</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>rawQPEncode</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="259">/**
   * Return a file as a quoted printable encoded string
   * @param Swift_File The file to encode
   * @param int Max line length
   * @param string The line ending
   * @return Swift_Cache_OutputStream
   * @throws Swift_FileException If the file cannot be read
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>267</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>278</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>267</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>267</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>file</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <node:Name_FullyQualified>
           <attribute:startLine>
            <scalar:int>267</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>267</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>Swift_File</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name_FullyQualified>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>267</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>267</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>chunk</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>267</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>267</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>76</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>267</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>267</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>le</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>267</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>267</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>&#13;
</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_StaticCall>
         <attribute:startLine>
          <scalar:int>269</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>269</scalar:int>
         </attribute:endLine>
         <subNode:class>
          <node:Name_FullyQualified>
           <attribute:startLine>
            <scalar:int>269</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>269</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>Swift_ClassLoader</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name_FullyQualified>
         </subNode:class>
         <subNode:name>
          <scalar:string>load</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>269</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>269</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>269</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>269</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>Swift_CacheFactory</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_StaticCall>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>270</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>270</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>270</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>270</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>cache</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_StaticCall>
           <attribute:startLine>
            <scalar:int>270</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>270</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>270</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>270</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Swift_CacheFactory</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
           <subNode:name>
            <scalar:string>getCache</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_StaticCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_While>
         <attribute:startLine>
          <scalar:int>271</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>276</scalar:int>
         </attribute:endLine>
         <subNode:cond>
          <node:Expr_NotIdentical>
           <attribute:startLine>
            <scalar:int>271</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>271</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_ConstFetch>
             <attribute:startLine>
              <scalar:int>271</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>271</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>271</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>271</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>false</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
            </node:Expr_ConstFetch>
           </subNode:left>
           <subNode:right>
            <node:Expr_Assign>
             <attribute:startLine>
              <scalar:int>271</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>271</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>271</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>271</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>bytes</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:expr>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>271</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>271</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>271</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>271</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>file</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>readln</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array/>
               </subNode:args>
              </node:Expr_MethodCall>
             </subNode:expr>
            </node:Expr_Assign>
           </subNode:right>
          </node:Expr_NotIdentical>
         </subNode:cond>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>273</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>273</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>273</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>273</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>next</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>273</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>273</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>273</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>273</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>rawQPEncode</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>273</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>273</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>273</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>273</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>bytes</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>273</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>273</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_ConstFetch>
                   <attribute:startLine>
                    <scalar:int>273</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>273</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <node:Name>
                     <attribute:startLine>
                      <scalar:int>273</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>273</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>true</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name>
                   </subNode:name>
                  </node:Expr_ConstFetch>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_FuncCall>
            <attribute:startLine>
             <scalar:int>274</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>274</scalar:int>
            </attribute:endLine>
            <subNode:name>
             <node:Name>
              <attribute:startLine>
               <scalar:int>274</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>274</scalar:int>
              </attribute:endLine>
              <subNode:parts>
               <scalar:array>
                <scalar:string>preg_match_all</scalar:string>
               </scalar:array>
              </subNode:parts>
             </node:Name>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>274</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>274</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Concat>
                 <attribute:startLine>
                  <scalar:int>274</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>274</scalar:int>
                 </attribute:endLine>
                 <subNode:left>
                  <node:Expr_Concat>
                   <attribute:startLine>
                    <scalar:int>274</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>274</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>274</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>274</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>/.{1,</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:left>
                   <subNode:right>
                    <node:Expr_Minus>
                     <attribute:startLine>
                      <scalar:int>274</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>274</scalar:int>
                     </attribute:endLine>
                     <subNode:left>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>274</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>274</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>chunk</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:left>
                     <subNode:right>
                      <node:Scalar_LNumber>
                       <attribute:startLine>
                        <scalar:int>274</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>274</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:int>6</scalar:int>
                       </subNode:value>
                      </node:Scalar_LNumber>
                     </subNode:right>
                    </node:Expr_Minus>
                   </subNode:right>
                  </node:Expr_Concat>
                 </subNode:left>
                 <subNode:right>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>274</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>274</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>}([^=]{0,3})?/</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:right>
                </node:Expr_Concat>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>274</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>274</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>274</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>274</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>next</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>274</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>274</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>274</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>274</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>next</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_FuncCall>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>275</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>275</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>275</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>275</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>275</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>275</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>cache</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>write</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>275</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>275</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>275</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>275</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>qp</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>275</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>275</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_MethodCall>
                    <attribute:startLine>
                     <scalar:int>275</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>275</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>275</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>275</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>this</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>fixLE</scalar:string>
                    </subNode:name>
                    <subNode:args>
                     <scalar:array>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>275</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>275</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_FuncCall>
                         <attribute:startLine>
                          <scalar:int>275</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>275</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <node:Name>
                           <attribute:startLine>
                            <scalar:int>275</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>275</scalar:int>
                           </attribute:endLine>
                           <subNode:parts>
                            <scalar:array>
                             <scalar:string>implode</scalar:string>
                            </scalar:array>
                           </subNode:parts>
                          </node:Name>
                         </subNode:name>
                         <subNode:args>
                          <scalar:array>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>275</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>275</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_Concat>
                              <attribute:startLine>
                               <scalar:int>275</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>275</scalar:int>
                              </attribute:endLine>
                              <subNode:left>
                               <node:Scalar_String>
                                <attribute:startLine>
                                 <scalar:int>275</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>275</scalar:int>
                                </attribute:endLine>
                                <subNode:value>
                                 <scalar:string>=</scalar:string>
                                </subNode:value>
                               </node:Scalar_String>
                              </subNode:left>
                              <subNode:right>
                               <node:Expr_Variable>
                                <attribute:startLine>
                                 <scalar:int>275</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>275</scalar:int>
                                </attribute:endLine>
                                <subNode:name>
                                 <scalar:string>le</scalar:string>
                                </subNode:name>
                               </node:Expr_Variable>
                              </subNode:right>
                             </node:Expr_Concat>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>275</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>275</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_ArrayDimFetch>
                              <attribute:startLine>
                               <scalar:int>275</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>275</scalar:int>
                              </attribute:endLine>
                              <subNode:var>
                               <node:Expr_Variable>
                                <attribute:startLine>
                                 <scalar:int>275</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>275</scalar:int>
                                </attribute:endLine>
                                <subNode:name>
                                 <scalar:string>next</scalar:string>
                                </subNode:name>
                               </node:Expr_Variable>
                              </subNode:var>
                              <subNode:dim>
                               <node:Scalar_LNumber>
                                <attribute:startLine>
                                 <scalar:int>275</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>275</scalar:int>
                                </attribute:endLine>
                                <subNode:value>
                                 <scalar:int>0</scalar:int>
                                </subNode:value>
                               </node:Scalar_LNumber>
                              </subNode:dim>
                             </node:Expr_ArrayDimFetch>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                          </scalar:array>
                         </subNode:args>
                        </node:Expr_FuncCall>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>275</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>275</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>275</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>275</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>le</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                     </scalar:array>
                    </subNode:args>
                   </node:Expr_MethodCall>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_MethodCall>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>275</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>275</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>275</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>275</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>count</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>275</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>275</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_ArrayDimFetch>
                   <attribute:startLine>
                    <scalar:int>275</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>275</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>275</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>275</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>next</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:dim>
                    <node:Scalar_LNumber>
                     <attribute:startLine>
                      <scalar:int>275</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>275</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:int>0</scalar:int>
                     </subNode:value>
                    </node:Scalar_LNumber>
                   </subNode:dim>
                  </node:Expr_ArrayDimFetch>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:cond>
           </node:Stmt_If>
          </scalar:array>
         </subNode:stmts>
        </node:Stmt_While>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>277</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>277</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>277</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>277</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>277</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>277</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>cache</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>getOutputStream</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>277</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>277</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>277</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>277</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>qp</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>QPEncodeFile</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="279">/**
   * Encode a string as 7bit ascii
   * @param string Input data to encode
   * @param int Max line length
   * @param string The line ending
   * @return string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>286</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>289</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>286</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>286</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>data</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>286</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>286</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>chunk</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>286</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>286</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>76</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>286</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>286</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>le</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>286</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>286</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>&#13;
</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>288</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>288</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>288</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>288</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>288</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>288</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>fixLE</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>288</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>288</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>288</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>288</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>288</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>288</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>wordwrap</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>288</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>288</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>288</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>288</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>data</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>288</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>288</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Minus>
                     <attribute:startLine>
                      <scalar:int>288</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>288</scalar:int>
                     </attribute:endLine>
                     <subNode:left>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>288</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>288</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>chunk</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:left>
                     <subNode:right>
                      <node:Scalar_LNumber>
                       <attribute:startLine>
                        <scalar:int>288</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>288</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:int>2</scalar:int>
                       </subNode:value>
                      </node:Scalar_LNumber>
                     </subNode:right>
                    </node:Expr_Minus>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>288</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>288</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>288</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>288</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>le</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>288</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>288</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Scalar_LNumber>
                     <attribute:startLine>
                      <scalar:int>288</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>288</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:int>1</scalar:int>
                     </subNode:value>
                    </node:Scalar_LNumber>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>288</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>288</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>288</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>288</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>le</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>encode7Bit</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="290">/**
   * Return a 7bit string from a file
   * @param Swift_File The file stream to read from
   * @param int The max line length
   * @param string The line ending
   * @return Swift_Cache_OutputStream
   * @throws Swift_FileException If the file cannot be read
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>298</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>306</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>298</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>298</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>file</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <node:Name_FullyQualified>
           <attribute:startLine>
            <scalar:int>298</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>298</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>Swift_File</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name_FullyQualified>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>298</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>298</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>chunk</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>298</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>298</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>76</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>298</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>298</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>le</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>298</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>298</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>&#13;
</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_StaticCall>
         <attribute:startLine>
          <scalar:int>300</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>300</scalar:int>
         </attribute:endLine>
         <subNode:class>
          <node:Name_FullyQualified>
           <attribute:startLine>
            <scalar:int>300</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>300</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>Swift_ClassLoader</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name_FullyQualified>
         </subNode:class>
         <subNode:name>
          <scalar:string>load</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>300</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>300</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>300</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>300</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>Swift_CacheFactory</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_StaticCall>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>301</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>301</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>301</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>301</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>cache</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_StaticCall>
           <attribute:startLine>
            <scalar:int>301</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>301</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>301</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>301</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Swift_CacheFactory</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
           <subNode:name>
            <scalar:string>getCache</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_StaticCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>302</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>302</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>302</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>302</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>ret</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>302</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>302</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string></scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_While>
         <attribute:startLine>
          <scalar:int>303</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>303</scalar:int>
         </attribute:endLine>
         <subNode:cond>
          <node:Expr_NotIdentical>
           <attribute:startLine>
            <scalar:int>303</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>303</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_ConstFetch>
             <attribute:startLine>
              <scalar:int>303</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>303</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>303</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>303</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>false</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
            </node:Expr_ConstFetch>
           </subNode:left>
           <subNode:right>
            <node:Expr_Assign>
             <attribute:startLine>
              <scalar:int>303</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>303</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>303</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>303</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>bytes</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:expr>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>303</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>303</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>303</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>303</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>file</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>read</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>303</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>303</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Scalar_LNumber>
                    <attribute:startLine>
                     <scalar:int>303</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>303</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:int>8192</scalar:int>
                    </subNode:value>
                   </node:Scalar_LNumber>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_MethodCall>
             </subNode:expr>
            </node:Expr_Assign>
           </subNode:right>
          </node:Expr_NotIdentical>
         </subNode:cond>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_AssignConcat>
            <attribute:startLine>
             <scalar:int>303</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>303</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>303</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>303</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>ret</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>303</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>303</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>bytes</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:expr>
           </node:Expr_AssignConcat>
          </scalar:array>
         </subNode:stmts>
        </node:Stmt_While>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>304</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>304</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>304</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>304</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>cache</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>write</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>304</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>304</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>304</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>304</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>7b</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>304</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>304</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>304</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>304</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>304</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>304</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>fixLE</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>304</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>304</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_FuncCall>
                   <attribute:startLine>
                    <scalar:int>304</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>304</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <node:Name>
                     <attribute:startLine>
                      <scalar:int>304</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>304</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>wordwrap</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>304</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>304</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>304</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>304</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>ret</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>304</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>304</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_Minus>
                        <attribute:startLine>
                         <scalar:int>304</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>304</scalar:int>
                        </attribute:endLine>
                        <subNode:left>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>304</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>304</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>chunk</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:left>
                        <subNode:right>
                         <node:Scalar_LNumber>
                          <attribute:startLine>
                           <scalar:int>304</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>304</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <scalar:int>2</scalar:int>
                          </subNode:value>
                         </node:Scalar_LNumber>
                        </subNode:right>
                       </node:Expr_Minus>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>304</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>304</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>304</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>304</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>le</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>304</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>304</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Scalar_LNumber>
                        <attribute:startLine>
                         <scalar:int>304</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>304</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <scalar:int>1</scalar:int>
                        </subNode:value>
                       </node:Scalar_LNumber>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                    </scalar:array>
                   </subNode:args>
                  </node:Expr_FuncCall>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>304</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>304</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>304</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>304</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>le</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>305</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>305</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>305</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>305</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>305</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>305</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>cache</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>getOutputStream</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>305</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>305</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>305</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>305</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>7b</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>encode7BitFile</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="307">/**
   * Return the 8bit encoded form of a string (unchanged there-abouts)
   * @param string Input data to encode
   * @param int Maximum line length
   * @param string The line ending
   * @return string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>314</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>317</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>314</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>314</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>data</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>314</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>314</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>chunk</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>314</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>314</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>76</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>314</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>314</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>le</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>314</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>314</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>&#13;
</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>316</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>316</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>316</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>316</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>316</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>316</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>fixLE</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>316</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>316</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>316</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>316</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>316</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>316</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>wordwrap</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>316</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>316</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>316</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>316</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>data</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>316</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>316</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Minus>
                     <attribute:startLine>
                      <scalar:int>316</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>316</scalar:int>
                     </attribute:endLine>
                     <subNode:left>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>316</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>316</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>chunk</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:left>
                     <subNode:right>
                      <node:Scalar_LNumber>
                       <attribute:startLine>
                        <scalar:int>316</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>316</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:int>2</scalar:int>
                       </subNode:value>
                      </node:Scalar_LNumber>
                     </subNode:right>
                    </node:Expr_Minus>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>316</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>316</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>316</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>316</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>le</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>316</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>316</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Scalar_LNumber>
                     <attribute:startLine>
                      <scalar:int>316</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>316</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:int>1</scalar:int>
                     </subNode:value>
                    </node:Scalar_LNumber>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>316</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>316</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>316</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>316</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>le</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>encode8Bit</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="318">/**
   * Return a 8bit string from a file
   * @param Swift_File The file stream to read from
   * @param int Max line length (including CRLF)
   * @param string The line ending
   * @return Swift_Cache_OutputStream
   * @throws Swift_FileException If the file cannot be read
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>326</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>334</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>326</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>326</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>file</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <node:Name_FullyQualified>
           <attribute:startLine>
            <scalar:int>326</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>326</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>Swift_File</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name_FullyQualified>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>326</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>326</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>chunk</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>326</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>326</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>76</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>326</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>326</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>le</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>326</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>326</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>&#13;
</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_StaticCall>
         <attribute:startLine>
          <scalar:int>328</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>328</scalar:int>
         </attribute:endLine>
         <subNode:class>
          <node:Name_FullyQualified>
           <attribute:startLine>
            <scalar:int>328</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>328</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>Swift_ClassLoader</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name_FullyQualified>
         </subNode:class>
         <subNode:name>
          <scalar:string>load</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>328</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>328</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>328</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>328</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>Swift_CacheFactory</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_StaticCall>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>329</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>329</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>329</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>329</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>cache</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_StaticCall>
           <attribute:startLine>
            <scalar:int>329</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>329</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>329</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>329</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Swift_CacheFactory</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
           <subNode:name>
            <scalar:string>getCache</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_StaticCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>330</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>330</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>330</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>330</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>ret</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>330</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>330</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string></scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_While>
         <attribute:startLine>
          <scalar:int>331</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>331</scalar:int>
         </attribute:endLine>
         <subNode:cond>
          <node:Expr_NotIdentical>
           <attribute:startLine>
            <scalar:int>331</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>331</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_ConstFetch>
             <attribute:startLine>
              <scalar:int>331</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>331</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>331</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>331</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>false</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
            </node:Expr_ConstFetch>
           </subNode:left>
           <subNode:right>
            <node:Expr_Assign>
             <attribute:startLine>
              <scalar:int>331</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>331</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>331</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>331</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>bytes</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:expr>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>331</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>331</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>331</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>331</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>file</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>read</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>331</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>331</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Scalar_LNumber>
                    <attribute:startLine>
                     <scalar:int>331</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>331</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:int>8192</scalar:int>
                    </subNode:value>
                   </node:Scalar_LNumber>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_MethodCall>
             </subNode:expr>
            </node:Expr_Assign>
           </subNode:right>
          </node:Expr_NotIdentical>
         </subNode:cond>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_AssignConcat>
            <attribute:startLine>
             <scalar:int>331</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>331</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>331</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>331</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>ret</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>331</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>331</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>bytes</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:expr>
           </node:Expr_AssignConcat>
          </scalar:array>
         </subNode:stmts>
        </node:Stmt_While>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>332</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>332</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>332</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>332</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>cache</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>write</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>332</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>332</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>332</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>332</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>8b</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>332</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>332</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>332</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>332</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>332</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>332</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>fixLE</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>332</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>332</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_FuncCall>
                   <attribute:startLine>
                    <scalar:int>332</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>332</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <node:Name>
                     <attribute:startLine>
                      <scalar:int>332</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>332</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>wordwrap</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>332</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>332</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>332</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>332</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>ret</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>332</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>332</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_Minus>
                        <attribute:startLine>
                         <scalar:int>332</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>332</scalar:int>
                        </attribute:endLine>
                        <subNode:left>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>332</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>332</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>chunk</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:left>
                        <subNode:right>
                         <node:Scalar_LNumber>
                          <attribute:startLine>
                           <scalar:int>332</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>332</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <scalar:int>2</scalar:int>
                          </subNode:value>
                         </node:Scalar_LNumber>
                        </subNode:right>
                       </node:Expr_Minus>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>332</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>332</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>332</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>332</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>le</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>332</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>332</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Scalar_LNumber>
                        <attribute:startLine>
                         <scalar:int>332</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>332</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <scalar:int>1</scalar:int>
                        </subNode:value>
                       </node:Scalar_LNumber>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                    </scalar:array>
                   </subNode:args>
                  </node:Expr_FuncCall>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>332</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>332</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>332</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>332</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>le</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>333</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>333</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>333</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>333</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>333</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>333</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>cache</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>getOutputStream</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>333</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>333</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>333</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>333</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>8b</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>encode8BitFile</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="335">/**
   * Keeps lines longer than 76 characters trimmed down to size
   * This currently does not convert other string encodings into 7bit
   * @param string The data to make safe for headers (defaults to RFC 2822 standards)
   * @param int maximum length of lines returned
   * @param int The maximum length of the first line
   * @param string The Line ending
   * @return string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>344</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>359</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>344</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>344</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>data</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>344</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>344</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>chunk</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>344</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>344</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>76</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>344</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>344</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>init_chunk</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>344</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>344</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>0</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>344</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>344</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>le</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>344</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>344</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>&#13;
</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>346</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>346</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>346</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>346</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>data</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>346</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>346</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>346</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>346</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>encode7BitPrintable</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>346</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>346</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>346</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>346</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>data</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>347</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>347</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>347</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>347</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>ret</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>347</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>347</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string></scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>348</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>356</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>350</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>350</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>350</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>350</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>data_wrapped</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>350</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>350</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>350</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>350</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>wordwrap</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>350</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>350</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>350</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>350</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>data</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>350</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>350</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>350</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>350</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>init_chunk</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>350</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>350</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>350</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>350</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>le</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>351</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>351</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>351</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>351</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>lines</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>351</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>351</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>351</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>351</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>explode</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>351</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>351</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>351</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>351</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>le</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>351</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>351</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>351</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>351</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>data_wrapped</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>352</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>352</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>352</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>352</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>first_line</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>352</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>352</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>352</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>352</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>array_shift</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>352</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>352</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>352</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>352</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>lines</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_AssignConcat>
            <attribute:startLine>
             <scalar:int>353</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>353</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>353</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>353</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>ret</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Concat>
              <attribute:startLine>
               <scalar:int>353</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>353</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>353</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>353</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>first_line</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:left>
              <subNode:right>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>353</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>353</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>le</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:right>
             </node:Expr_Concat>
            </subNode:expr>
           </node:Expr_AssignConcat>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>354</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>354</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>354</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>354</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>data</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>354</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>354</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>354</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>354</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>preg_replace</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>354</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>354</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>354</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>354</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>~^[ 	]~D</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>354</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>354</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>354</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>354</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string></scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>354</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>354</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_FuncCall>
                   <attribute:startLine>
                    <scalar:int>354</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>354</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <node:Name>
                     <attribute:startLine>
                      <scalar:int>354</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>354</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>substr</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>354</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>354</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>354</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>354</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>data</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>354</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>354</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_FuncCall>
                        <attribute:startLine>
                         <scalar:int>354</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>354</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <node:Name>
                          <attribute:startLine>
                           <scalar:int>354</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>354</scalar:int>
                          </attribute:endLine>
                          <subNode:parts>
                           <scalar:array>
                            <scalar:string>strlen</scalar:string>
                           </scalar:array>
                          </subNode:parts>
                         </node:Name>
                        </subNode:name>
                        <subNode:args>
                         <scalar:array>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>354</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>354</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>354</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>354</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>first_line</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                         </scalar:array>
                        </subNode:args>
                       </node:Expr_FuncCall>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                    </scalar:array>
                   </subNode:args>
                  </node:Expr_FuncCall>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array>
           <node:Stmt_ElseIf>
            <attribute:startLine>
             <scalar:int>356</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>356</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>356</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>356</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>init_chunk</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_AssignConcat>
               <attribute:startLine>
                <scalar:int>356</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>356</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>356</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>356</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>ret</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:expr>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>356</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>356</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>le</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:expr>
              </node:Expr_AssignConcat>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_ElseIf>
          </scalar:array>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Greater>
           <attribute:startLine>
            <scalar:int>348</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>348</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>348</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>348</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>init_chunk</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:left>
           <subNode:right>
            <node:Scalar_LNumber>
             <attribute:startLine>
              <scalar:int>348</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>348</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:int>2</scalar:int>
             </subNode:value>
            </node:Scalar_LNumber>
           </subNode:right>
          </node:Expr_Greater>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_AssignConcat>
         <attribute:startLine>
          <scalar:int>357</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>357</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>357</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>357</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>ret</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>357</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>357</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>357</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>357</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>wordwrap</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>357</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>357</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>357</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>357</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>data</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>357</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>357</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Minus>
                <attribute:startLine>
                 <scalar:int>357</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>357</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>357</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>357</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>chunk</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:left>
                <subNode:right>
                 <node:Scalar_LNumber>
                  <attribute:startLine>
                   <scalar:int>357</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>357</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:int>2</scalar:int>
                  </subNode:value>
                 </node:Scalar_LNumber>
                </subNode:right>
               </node:Expr_Minus>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>357</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>357</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>357</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>357</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>le</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Expr_AssignConcat>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>358</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>358</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>358</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>358</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>358</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>358</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>trim</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>358</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>358</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>358</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>358</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>ret</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>header7BitEncode</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="360">/**
   * Strip out any characters which are not in the ASCII 7bit printable range
   * @param string The string to clean
   * @return string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>365</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>368</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>365</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>365</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>data</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>367</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>367</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>367</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>367</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>367</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>367</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_replace</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>367</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>367</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>367</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>367</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/[^\x20-\x7E]/</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>367</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>367</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>367</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>367</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string></scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>367</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>367</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>367</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>367</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>data</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>encode7BitPrintable</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="369">/**
   * Detect if a string contains multi-byte non-ascii chars that fall in the UTF-8 ranges
   * @param string Data to detect UTF-8 sequences in
   * @return boolean
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>374</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>385</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>374</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>374</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>data</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>376</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>384</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>376</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>384</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>376</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>376</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>376</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>384</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>376</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>384</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>%(?:
    [\xC2-\xDF][\x80-\xBF]				# non-overlong 2-byte
    |\xE0[\xA0-\xBF][\x80-\xBF]			# excluding overlongs
    |[\xE1-\xEC\xEE\xEF][\x80-\xBF]{2}	# straight 3-byte
    |\xED[\x80-\x9F][\x80-\xBF]			# excluding surrogates
    |\xF0[\x90-\xBF][\x80-\xBF]{2}		# planes 1-3
    |[\xF1-\xF3][\x80-\xBF]{3}			# planes 4-15
    |\xF4[\x80-\x8F][\x80-\xBF]{2}		# plane 16
    )+%xs</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>384</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>384</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>384</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>384</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>data</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isUTF8</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="386">/**
   * This function checks for 7bit *printable* characters
   * which excludes \r \n \t etc and so, is safe for use in mail headers
   * Actual permitted chars [\ !&quot;#\$%&amp;'\(\)\*\+,-\.\/0123456789:;&lt;=&gt;\?@ABCDEFGHIJKLMNOPQRSTUVWXYZ\[\\\]\^_`abcdefghijklmnopqrstuvwxyz{\|}~]
   * Ranges \x00-\x1F are printer control sequences
   * \x7F is the ascii delete character
   * @param string Data to check against
   * @return boolean
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>395</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>398</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>395</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>395</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>data</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>397</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>397</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>397</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>397</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>397</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>397</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>397</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>397</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>preg_match</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>397</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>397</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>397</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>397</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>/[^\x20-\x7E]/</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>397</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>397</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>397</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>397</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>data</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>is7BitPrintable</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="399">/**
   * Check that a string does not contain any evil characters for headers.
   * @param string The string to check
   * @return boolean
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>404</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>407</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>404</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>404</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>data</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>406</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>406</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanAnd>
           <attribute:startLine>
            <scalar:int>406</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>406</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_MethodCall>
             <attribute:startLine>
              <scalar:int>406</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>406</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>406</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>406</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>is7BitPrintable</scalar:string>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>406</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>406</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>406</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>406</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>data</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_MethodCall>
           </subNode:left>
           <subNode:right>
            <node:Expr_Identical>
             <attribute:startLine>
              <scalar:int>406</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>406</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_FuncCall>
               <attribute:startLine>
                <scalar:int>406</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>406</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>406</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>406</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>strpos</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>406</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>406</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>406</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>406</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>data</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>406</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>406</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>406</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>406</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>;</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_FuncCall>
             </subNode:left>
             <subNode:right>
              <node:Expr_ConstFetch>
               <attribute:startLine>
                <scalar:int>406</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>406</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>406</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>406</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>false</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
              </node:Expr_ConstFetch>
             </subNode:right>
            </node:Expr_Identical>
           </subNode:right>
          </node:Expr_BooleanAnd>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isHeaderSafe</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="408">/**
   * If the characters fall exclusively in the 7bit ascii range, return true
   * @param string Input to check
   * @return boolean
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>413</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>416</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>413</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>413</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>data</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>415</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>415</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>415</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>415</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>415</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>415</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>415</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>415</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>preg_match</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>415</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>415</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>415</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>415</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>/[^\x01-\x7F]/</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>415</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>415</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>415</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>415</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>data</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>is7BitAscii</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="417">/**
   * Encode a string for RFC 2047 compatability (url-encode)
   * @param string The input for encoding
   * @param string The charset used
   * @param string The language used
   * @param int The maximum line length
   * @param int The maximum length of the first line
   * @param string The line ending
   * @return string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>427</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>437</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>427</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>427</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>str</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>427</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>427</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>charset</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>427</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>427</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>iso-8859-1</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>427</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>427</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>language</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>427</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>427</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>en-us</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>427</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>427</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>chunk</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>427</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>427</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>76</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>427</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>427</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>le</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>427</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>427</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>&#13;
</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>429</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>429</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>429</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>429</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>lang_spec</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>429</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>429</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string></scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>430</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>434</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>432</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>432</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>432</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>432</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>lang_spec</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Concat>
              <attribute:startLine>
               <scalar:int>432</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>432</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_Concat>
                <attribute:startLine>
                 <scalar:int>432</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>432</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Expr_Concat>
                  <attribute:startLine>
                   <scalar:int>432</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>432</scalar:int>
                  </attribute:endLine>
                  <subNode:left>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>432</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>432</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>charset</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:left>
                  <subNode:right>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>432</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>432</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>'</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:right>
                 </node:Expr_Concat>
                </subNode:left>
                <subNode:right>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>432</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>432</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>language</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:right>
               </node:Expr_Concat>
              </subNode:left>
              <subNode:right>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>432</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>432</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>'</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:right>
             </node:Expr_Concat>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>433</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>433</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>433</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>433</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>str</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Concat>
              <attribute:startLine>
               <scalar:int>433</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>433</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>433</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>433</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>lang_spec</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:left>
              <subNode:right>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>433</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>433</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>433</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>433</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>str_replace</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>433</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>433</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>433</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>433</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>+</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>433</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>433</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>433</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>433</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>%20</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>433</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>433</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_FuncCall>
                     <attribute:startLine>
                      <scalar:int>433</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>433</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <node:Name>
                       <attribute:startLine>
                        <scalar:int>433</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>433</scalar:int>
                       </attribute:endLine>
                       <subNode:parts>
                        <scalar:array>
                         <scalar:string>urlencode</scalar:string>
                        </scalar:array>
                       </subNode:parts>
                      </node:Name>
                     </subNode:name>
                     <subNode:args>
                      <scalar:array>
                       <node:Arg>
                        <attribute:startLine>
                         <scalar:int>433</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>433</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>433</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>433</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>str</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:value>
                        <subNode:byRef>
                         <scalar:false/>
                        </subNode:byRef>
                       </node:Arg>
                      </scalar:array>
                     </subNode:args>
                    </node:Expr_FuncCall>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:right>
             </node:Expr_Concat>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>430</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>430</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_MethodCall>
             <attribute:startLine>
              <scalar:int>430</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>430</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>430</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>430</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>is7BitPrintable</scalar:string>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>430</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>430</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>430</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>430</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>str</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_MethodCall>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_FuncCall>
         <attribute:startLine>
          <scalar:int>435</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>435</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <node:Name>
           <attribute:startLine>
            <scalar:int>435</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>435</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>preg_match_all</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>435</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>435</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Concat>
              <attribute:startLine>
               <scalar:int>435</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>435</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_Concat>
                <attribute:startLine>
                 <scalar:int>435</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>435</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>435</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>435</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>~.{1,</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:left>
                <subNode:right>
                 <node:Expr_Minus>
                  <attribute:startLine>
                   <scalar:int>435</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>435</scalar:int>
                  </attribute:endLine>
                  <subNode:left>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>435</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>435</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>chunk</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:left>
                  <subNode:right>
                   <node:Scalar_LNumber>
                    <attribute:startLine>
                     <scalar:int>435</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>435</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:int>6</scalar:int>
                    </subNode:value>
                   </node:Scalar_LNumber>
                  </subNode:right>
                 </node:Expr_Minus>
                </subNode:right>
               </node:Expr_Concat>
              </subNode:left>
              <subNode:right>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>435</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>435</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>}([^%]{0,3})~</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:right>
             </node:Expr_Concat>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>435</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>435</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>435</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>435</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>str</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>435</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>435</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>435</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>435</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>matches</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_FuncCall>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>436</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>436</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>436</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>436</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>436</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>436</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>436</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>436</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>implode</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>436</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>436</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>436</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>436</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>le</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>436</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>436</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_ArrayDimFetch>
                   <attribute:startLine>
                    <scalar:int>436</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>436</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>436</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>436</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>matches</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:dim>
                    <node:Scalar_LNumber>
                     <attribute:startLine>
                      <scalar:int>436</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>436</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:int>0</scalar:int>
                     </subNode:value>
                    </node:Scalar_LNumber>
                   </subNode:dim>
                  </node:Expr_ArrayDimFetch>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>436</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>436</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>436</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>436</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>count</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>436</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>436</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_ArrayDimFetch>
                <attribute:startLine>
                 <scalar:int>436</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>436</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>436</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>436</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>matches</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:dim>
                 <node:Scalar_LNumber>
                  <attribute:startLine>
                   <scalar:int>436</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>436</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:int>0</scalar:int>
                  </subNode:value>
                 </node:Scalar_LNumber>
                </subNode:dim>
               </node:Expr_ArrayDimFetch>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:cond>
        </node:Stmt_If>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>rfc2047Encode</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="438">/**
   * Fixes line endings to be whatever is specified by the user
   * SMTP requires the CRLF be used, but using sendmail in -t mode uses LF
   * This method also escapes dots on a start of line to avoid injection
   * @param string The data to fix
   * @return string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>445</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>450</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>445</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>445</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>data</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>445</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>445</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>le</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>447</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>447</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>447</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>447</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>data</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>447</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>447</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>447</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>447</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>str_replace</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>447</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>447</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Array>
                <attribute:startLine>
                 <scalar:int>447</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>447</scalar:int>
                </attribute:endLine>
                <subNode:items>
                 <scalar:array>
                  <node:Expr_ArrayItem>
                   <attribute:startLine>
                    <scalar:int>447</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>447</scalar:int>
                   </attribute:endLine>
                   <subNode:key>
                    <scalar:null/>
                   </subNode:key>
                   <subNode:value>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>447</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>447</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>&#13;
</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Expr_ArrayItem>
                  <node:Expr_ArrayItem>
                   <attribute:startLine>
                    <scalar:int>447</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>447</scalar:int>
                   </attribute:endLine>
                   <subNode:key>
                    <scalar:null/>
                   </subNode:key>
                   <subNode:value>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>447</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>447</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>&#13;</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Expr_ArrayItem>
                 </scalar:array>
                </subNode:items>
               </node:Expr_Array>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>447</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>447</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>447</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>447</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>
</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>447</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>447</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>447</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>447</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>data</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>448</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>448</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>448</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>448</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>448</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>448</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>data</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>448</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>448</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>448</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>448</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>str_replace</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>448</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>448</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>448</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>448</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>
</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>448</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>448</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>448</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>448</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>le</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>448</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>448</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>448</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>448</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>data</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_NotEqual>
           <attribute:startLine>
            <scalar:int>448</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>448</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>448</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>448</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>le</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:left>
           <subNode:right>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>448</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>448</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string>
</scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:right>
          </node:Expr_NotEqual>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>449</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>449</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Assign>
           <attribute:startLine>
            <scalar:int>449</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>449</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>449</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>449</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>data</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:expr>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>449</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>449</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>449</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>449</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>str_replace</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>449</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>449</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Concat>
                  <attribute:startLine>
                   <scalar:int>449</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>449</scalar:int>
                  </attribute:endLine>
                  <subNode:left>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>449</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>449</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>le</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:left>
                  <subNode:right>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>449</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>449</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>.</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:right>
                 </node:Expr_Concat>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>449</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>449</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Concat>
                  <attribute:startLine>
                   <scalar:int>449</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>449</scalar:int>
                  </attribute:endLine>
                  <subNode:left>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>449</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>449</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>le</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:left>
                  <subNode:right>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>449</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>449</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>..</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:right>
                 </node:Expr_Concat>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>449</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>449</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>449</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>449</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>data</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:expr>
          </node:Expr_Assign>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>fixLE</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:startLine>
       <scalar:int>451</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>454</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>451</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>451</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>value</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>451</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>451</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>factor</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>453</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>453</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Minus>
           <attribute:startLine>
            <scalar:int>453</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>453</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>453</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>453</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>value</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:left>
           <subNode:right>
            <node:Expr_Mod>
             <attribute:startLine>
              <scalar:int>453</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>453</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>453</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>453</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>value</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:left>
             <subNode:right>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>453</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>453</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>factor</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:right>
            </node:Expr_Mod>
           </subNode:right>
          </node:Expr_Minus>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getHcf</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
    </scalar:array>
   </subNode:stmts>
   <subNode:name>
    <scalar:string>Swift_Message_Encoder</scalar:string>
   </subNode:name>
   <subNode:namespacedName>
    <node:Name>
     <attribute:comments>
      <scalar:array>
       <comment isDocComment="true" line="15">/**
 * Encodes strings in a variety of formats and detects some encoding formats
 * @package Swift_Message
 * @author Chris Corbyn &lt;chris@w3style.co.uk&gt;
 */</comment>
      </scalar:array>
     </attribute:comments>
     <attribute:startLine>
      <scalar:int>20</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>455</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Swift_Message_Encoder</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name>
   </subNode:namespacedName>
  </node:Stmt_Class>
 </scalar:array>
</AST>
