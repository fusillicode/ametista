<?xml version="1.0" encoding="UTF-8"?>
<AST xmlns:node="http://nikic.github.com/PHPParser/XML/node" xmlns:subNode="http://nikic.github.com/PHPParser/XML/subNode" xmlns:attribute="http://nikic.github.com/PHPParser/XML/attribute" xmlns:scalar="http://nikic.github.com/PHPParser/XML/scalar">
 <scalar:array>
  <node:Expr_Include>
   <attribute:comments>
    <scalar:array>
     <comment isDocComment="true" line="3">/**
 * Swift Mailer mail() connection component
 * Please read the LICENSE file
 * @author Chris Corbyn &lt;chris@w3style.co.uk&gt;
 * @package Swift_Connection
 * @license GNU Lesser General Public License
 */</comment>
    </scalar:array>
   </attribute:comments>
   <attribute:startLine>
    <scalar:int>11</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>11</scalar:int>
   </attribute:endLine>
   <subNode:expr>
    <node:Expr_Concat>
     <attribute:startLine>
      <scalar:int>11</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>11</scalar:int>
     </attribute:endLine>
     <subNode:left>
      <node:Expr_FuncCall>
       <attribute:startLine>
        <scalar:int>11</scalar:int>
       </attribute:startLine>
       <attribute:endLine>
        <scalar:int>11</scalar:int>
       </attribute:endLine>
       <subNode:name>
        <node:Name>
         <attribute:startLine>
          <scalar:int>11</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>11</scalar:int>
         </attribute:endLine>
         <subNode:parts>
          <scalar:array>
           <scalar:string>dirname</scalar:string>
          </scalar:array>
         </subNode:parts>
        </node:Name>
       </subNode:name>
       <subNode:args>
        <scalar:array>
         <node:Arg>
          <attribute:startLine>
           <scalar:int>11</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>11</scalar:int>
          </attribute:endLine>
          <subNode:value>
           <node:Scalar_FileConst>
            <attribute:startLine>
             <scalar:int>11</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>11</scalar:int>
            </attribute:endLine>
           </node:Scalar_FileConst>
          </subNode:value>
          <subNode:byRef>
           <scalar:false/>
          </subNode:byRef>
         </node:Arg>
        </scalar:array>
       </subNode:args>
      </node:Expr_FuncCall>
     </subNode:left>
     <subNode:right>
      <node:Scalar_String>
       <attribute:startLine>
        <scalar:int>11</scalar:int>
       </attribute:startLine>
       <attribute:endLine>
        <scalar:int>11</scalar:int>
       </attribute:endLine>
       <subNode:value>
        <scalar:string>/../ClassLoader.php</scalar:string>
       </subNode:value>
      </node:Scalar_String>
     </subNode:right>
    </node:Expr_Concat>
   </subNode:expr>
   <subNode:type>
    <scalar:int>4</scalar:int>
   </subNode:type>
  </node:Expr_Include>
  <node:Expr_StaticCall>
   <attribute:startLine>
    <scalar:int>12</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>12</scalar:int>
   </attribute:endLine>
   <subNode:class>
    <node:Name_FullyQualified>
     <attribute:startLine>
      <scalar:int>12</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>12</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Swift_ClassLoader</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name_FullyQualified>
   </subNode:class>
   <subNode:name>
    <scalar:string>load</scalar:string>
   </subNode:name>
   <subNode:args>
    <scalar:array>
     <node:Arg>
      <attribute:startLine>
       <scalar:int>12</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>12</scalar:int>
      </attribute:endLine>
      <subNode:value>
       <node:Scalar_String>
        <attribute:startLine>
         <scalar:int>12</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>12</scalar:int>
        </attribute:endLine>
        <subNode:value>
         <scalar:string>Swift_ConnectionBase</scalar:string>
        </subNode:value>
       </node:Scalar_String>
      </subNode:value>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
     </node:Arg>
    </scalar:array>
   </subNode:args>
  </node:Expr_StaticCall>
  <node:Expr_StaticCall>
   <attribute:startLine>
    <scalar:int>13</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>13</scalar:int>
   </attribute:endLine>
   <subNode:class>
    <node:Name_FullyQualified>
     <attribute:startLine>
      <scalar:int>13</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>13</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Swift_ClassLoader</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name_FullyQualified>
   </subNode:class>
   <subNode:name>
    <scalar:string>load</scalar:string>
   </subNode:name>
   <subNode:args>
    <scalar:array>
     <node:Arg>
      <attribute:startLine>
       <scalar:int>13</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>13</scalar:int>
      </attribute:endLine>
      <subNode:value>
       <node:Scalar_String>
        <attribute:startLine>
         <scalar:int>13</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>13</scalar:int>
        </attribute:endLine>
        <subNode:value>
         <scalar:string>Swift_Plugin_MailSend</scalar:string>
        </subNode:value>
       </node:Scalar_String>
      </subNode:value>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
     </node:Arg>
    </scalar:array>
   </subNode:args>
  </node:Expr_StaticCall>
  <node:Stmt_Class>
   <attribute:comments>
    <scalar:array>
     <comment isDocComment="true" line="15">/**
 * Swift mail() Connection
 * NOTE: This class is nothing more than a stub.  The MailSend plugin does the actual sending.
 * @package Swift_Connection
 * @author Chris Corbyn &lt;chris@w3style.co.uk&gt;
 */</comment>
    </scalar:array>
   </attribute:comments>
   <attribute:startLine>
    <scalar:int>21</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>136</scalar:int>
   </attribute:endLine>
   <subNode:type>
    <scalar:int>0</scalar:int>
   </subNode:type>
   <subNode:extends>
    <node:Name_FullyQualified>
     <attribute:startLine>
      <scalar:int>21</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>21</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Swift_ConnectionBase</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name_FullyQualified>
   </subNode:extends>
   <subNode:implements>
    <scalar:array/>
   </subNode:implements>
   <subNode:stmts>
    <scalar:array>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="23">/**
   * The response the stub will be giving next
   * @var string Response
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>27</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>27</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>27</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>27</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>response</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>27</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>27</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>220 Stubbed</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="28">/**
   * The 5th parameter in mail() is a sprintf() formatted string.
   * @var string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>32</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>32</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>32</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>32</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>pluginParams</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="33">/**
   * An instance of the MailSend plugin.
   * @var Swift_Plugin_MailSend
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>37</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>37</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>37</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>37</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>plugin</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>37</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>37</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>37</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>37</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="39">/**
   * Ctor.
   * @param string The 5th parameter in mail() as a sprintf() formatted string where %s is the sender address. This only comes into effect if safe_mode is OFF.
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>43</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>46</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>43</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>43</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>additional_params</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>43</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>43</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>-oi -f %s</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>45</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>45</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>45</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>45</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>setAdditionalMailParams</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>45</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>45</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>45</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>45</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>additional_params</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>__construct</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="47">/**
   * Sets the MailSend plugin in Swift once Swift has connected
   * @param Swift The current instance of Swift
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>51</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>55</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>51</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>51</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>instance</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <node:Name_FullyQualified>
           <attribute:startLine>
            <scalar:int>51</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>51</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>Swift</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name_FullyQualified>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>53</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>53</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>53</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>53</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>53</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>53</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>plugin</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_New>
           <attribute:startLine>
            <scalar:int>53</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>53</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>53</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>53</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Swift_Plugin_MailSend</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>53</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>53</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_MethodCall>
                <attribute:startLine>
                 <scalar:int>53</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>53</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>53</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>53</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>getAdditionalMailParams</scalar:string>
                </subNode:name>
                <subNode:args>
                 <scalar:array/>
                </subNode:args>
               </node:Expr_MethodCall>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_New>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>54</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>54</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>54</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>54</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>instance</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>attachPlugin</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>54</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>54</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>54</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>54</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>54</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>54</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>plugin</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>54</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>54</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>54</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>54</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>_MAIL_SEND</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>postConnect</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="56">/**
   * Set the 5th parameter in mail() as a sprintf() formatted string. Only used if safe_mode is off.
   * @param string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>60</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>67</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>60</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>60</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>params</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>62</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>62</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>62</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>62</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>62</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>62</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>pluginParams</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>62</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>62</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>params</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>63</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>66</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_MethodCall>
            <attribute:startLine>
             <scalar:int>65</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>65</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>65</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>65</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>65</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>65</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>plugin</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:var>
            <subNode:name>
             <scalar:string>setAdditionalParams</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>65</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>65</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>65</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>65</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>params</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_MethodCall>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_NotIdentical>
           <attribute:startLine>
            <scalar:int>63</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>63</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>63</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>63</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>63</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>63</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>plugin</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:left>
           <subNode:right>
            <node:Expr_ConstFetch>
             <attribute:startLine>
              <scalar:int>63</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>63</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>63</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>63</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>null</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
            </node:Expr_ConstFetch>
           </subNode:right>
          </node:Expr_NotIdentical>
         </subNode:cond>
        </node:Stmt_If>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>setAdditionalMailParams</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="68">/**
   * Get the 5th parameter in mail() as a sprintf() formatted string.
   * @return string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>72</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>75</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>74</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>74</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>74</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>74</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>74</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>74</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>pluginParams</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getAdditionalMailParams</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="76">/**
   * Read a full response from the buffer (this is spoofed if running in -t mode)
   * @return string
   * @throws Swift_ConnectionException Upon failure to read
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>81</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>84</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>83</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>83</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>83</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>83</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>83</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>83</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>response</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>read</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="85">/**
   * Set the response this stub will return
   * @param string The response to send
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>89</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>92</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>89</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>89</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>int</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>91</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>91</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>91</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>91</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>91</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>91</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>response</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Concat>
           <attribute:startLine>
            <scalar:int>91</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>91</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>91</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>91</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>int</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:left>
           <subNode:right>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>91</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>91</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string> Stubbed</scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:right>
          </node:Expr_Concat>
         </subNode:expr>
        </node:Expr_Assign>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>setResponse</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="93">/**
   * Write a command to the process (leave off trailing CRLF)
   * @param string The command to send
   * @throws Swift_ConnectionException Upon failure to write
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>98</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>111</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>98</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>98</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>command</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>98</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>98</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>end</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>98</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>98</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>&#13;
</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>100</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>100</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>100</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>100</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>command</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>100</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>100</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>100</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>100</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>strtoupper</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>100</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>100</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>100</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>100</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>command</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>101</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>101</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>101</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>101</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>101</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>101</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>command</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>101</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>101</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>101</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>101</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>substr</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>101</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>101</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>101</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>101</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>command</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>101</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>101</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Scalar_LNumber>
                   <attribute:startLine>
                    <scalar:int>101</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>101</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:int>0</scalar:int>
                   </subNode:value>
                  </node:Scalar_LNumber>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>101</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>101</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_FuncCall>
                   <attribute:startLine>
                    <scalar:int>101</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>101</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <node:Name>
                     <attribute:startLine>
                      <scalar:int>101</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>101</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>strpos</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>101</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>101</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>101</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>101</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>command</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>101</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>101</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Scalar_String>
                        <attribute:startLine>
                         <scalar:int>101</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>101</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <scalar:string> </scalar:string>
                        </subNode:value>
                       </node:Scalar_String>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                    </scalar:array>
                   </subNode:args>
                  </node:Expr_FuncCall>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>101</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>101</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>101</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>101</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>strpos</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>101</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>101</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>101</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>101</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>command</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>101</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>101</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>101</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>101</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string> </scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Switch>
         <attribute:startLine>
          <scalar:int>102</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>110</scalar:int>
         </attribute:endLine>
         <subNode:cond>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>102</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>102</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>command</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:cond>
         <subNode:cases>
          <scalar:array>
           <node:Stmt_Case>
            <attribute:startLine>
             <scalar:int>104</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>106</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>104</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>104</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>DATA</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>105</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>105</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>105</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>105</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>this</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>setResponse</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>105</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>105</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Scalar_LNumber>
                    <attribute:startLine>
                     <scalar:int>105</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>105</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:int>354</scalar:int>
                    </subNode:value>
                   </node:Scalar_LNumber>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_MethodCall>
              <node:Stmt_Break>
               <attribute:startLine>
                <scalar:int>106</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>106</scalar:int>
               </attribute:endLine>
               <subNode:num>
                <scalar:null/>
               </subNode:num>
              </node:Stmt_Break>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_Case>
           <node:Stmt_Case>
            <attribute:startLine>
             <scalar:int>107</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>107</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>107</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>107</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>EHLO</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array/>
            </subNode:stmts>
           </node:Stmt_Case>
           <node:Stmt_Case>
            <attribute:startLine>
             <scalar:int>107</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>107</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>107</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>107</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>MAIL</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array/>
            </subNode:stmts>
           </node:Stmt_Case>
           <node:Stmt_Case>
            <attribute:startLine>
             <scalar:int>107</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>107</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>107</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>107</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>RCPT</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array/>
            </subNode:stmts>
           </node:Stmt_Case>
           <node:Stmt_Case>
            <attribute:startLine>
             <scalar:int>107</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>107</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>107</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>107</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>QUIT</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array/>
            </subNode:stmts>
           </node:Stmt_Case>
           <node:Stmt_Case>
            <attribute:startLine>
             <scalar:int>107</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>107</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>107</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>107</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>RSET</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array/>
            </subNode:stmts>
           </node:Stmt_Case>
           <node:Stmt_Case>
            <attribute:startLine>
             <scalar:int>107</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>109</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <scalar:null/>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>108</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>108</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>108</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>108</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>this</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>setResponse</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>108</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>108</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Scalar_LNumber>
                    <attribute:startLine>
                     <scalar:int>108</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>108</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:int>250</scalar:int>
                    </subNode:value>
                   </node:Scalar_LNumber>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_MethodCall>
              <node:Stmt_Break>
               <attribute:startLine>
                <scalar:int>109</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>109</scalar:int>
               </attribute:endLine>
               <subNode:num>
                <scalar:null/>
               </subNode:num>
              </node:Stmt_Break>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_Case>
          </scalar:array>
         </subNode:cases>
        </node:Stmt_Switch>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>write</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="112">/**
   * Try to start the connection
   * @throws Swift_ConnectionException Upon failure to start
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>116</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>119</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>118</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>118</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>118</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>118</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>118</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>118</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>response</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>118</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>118</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>220 Stubbed</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:expr>
        </node:Expr_Assign>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>start</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="120">/**
   * Try to close the connection
   * @throws Swift_ConnectionException Upon failure to close
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>124</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>127</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>126</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>126</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>126</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>126</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>126</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>126</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>response</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>126</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>126</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>220 Stubbed</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:expr>
        </node:Expr_Assign>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>stop</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="128">/**
   * Check if the process is still alive
   * @return boolean
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>132</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>135</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>134</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>134</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>134</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>134</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>134</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>134</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>function_exists</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>134</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>134</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>134</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>134</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>mail</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isAlive</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
    </scalar:array>
   </subNode:stmts>
   <subNode:name>
    <scalar:string>Swift_Connection_NativeMail</scalar:string>
   </subNode:name>
   <subNode:namespacedName>
    <node:Name>
     <attribute:comments>
      <scalar:array>
       <comment isDocComment="true" line="15">/**
 * Swift mail() Connection
 * NOTE: This class is nothing more than a stub.  The MailSend plugin does the actual sending.
 * @package Swift_Connection
 * @author Chris Corbyn &lt;chris@w3style.co.uk&gt;
 */</comment>
      </scalar:array>
     </attribute:comments>
     <attribute:startLine>
      <scalar:int>21</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>136</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Swift_Connection_NativeMail</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name>
   </subNode:namespacedName>
  </node:Stmt_Class>
 </scalar:array>
</AST>
