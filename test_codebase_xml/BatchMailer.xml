<?xml version="1.0" encoding="UTF-8"?>
<AST xmlns:node="http://nikic.github.com/PHPParser/XML/node" xmlns:subNode="http://nikic.github.com/PHPParser/XML/subNode" xmlns:attribute="http://nikic.github.com/PHPParser/XML/attribute" xmlns:scalar="http://nikic.github.com/PHPParser/XML/scalar">
 <scalar:array>
  <node:Stmt_Class>
   <attribute:comments>
    <scalar:array>
     <comment isDocComment="true" line="3">/**
 * Handles batch mailing with Swift Mailer with fail-safe support.
 * Restarts the connection if it dies and then continues where it left off.
 * Please read the LICENSE file
 * @copyright Chris Corbyn &lt;chris@w3style.co.uk&gt;
 * @author Chris Corbyn &lt;chris@w3style.co.uk&gt;
 * @package Swift
 * @license GNU Lesser General Public License
 */</comment>
    </scalar:array>
   </attribute:comments>
   <attribute:startLine>
    <scalar:int>12</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>229</scalar:int>
   </attribute:endLine>
   <subNode:type>
    <scalar:int>0</scalar:int>
   </subNode:type>
   <subNode:extends>
    <scalar:null/>
   </subNode:extends>
   <subNode:implements>
    <scalar:array/>
   </subNode:implements>
   <subNode:stmts>
    <scalar:array>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="14">/**
   * The current instance of Swift.
   * @var Swift
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>18</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>18</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>18</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>18</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>swift</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="19">/**
   * The maximum number of times a single recipient can be attempted before giving up.
   * @var int
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>23</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>23</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>23</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>23</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>maxTries</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>23</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>23</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>2</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="24">/**
   * The number of seconds to sleep for if an error occurs.
   * @var int
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>28</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>28</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>28</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>28</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>sleepTime</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>28</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>28</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>0</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="29">/**
   * Failed recipients (undeliverable)
   * @var array
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>33</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>33</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>33</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>33</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>failed</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_Array>
           <attribute:startLine>
            <scalar:int>33</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>33</scalar:int>
           </attribute:endLine>
           <subNode:items>
            <scalar:array/>
           </subNode:items>
          </node:Expr_Array>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="34">/**
   * The maximum number of successive failures before giving up.
   * @var int
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>38</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>38</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>38</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>38</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>maxFails</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>38</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>38</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>0</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="39">/**
   * A temporary copy of some message headers.
   * @var array
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>43</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>43</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>43</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>43</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>headers</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_Array>
           <attribute:startLine>
            <scalar:int>43</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>43</scalar:int>
           </attribute:endLine>
           <subNode:items>
            <scalar:array/>
           </subNode:items>
          </node:Expr_Array>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="45">/**
   * Constructor.
   * @param Swift The current instance of Swift
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>49</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>52</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>49</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>49</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>swift</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <node:Name_FullyQualified>
           <attribute:startLine>
            <scalar:int>49</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>49</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>Swift</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name_FullyQualified>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>51</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>51</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>51</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>51</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>setSwift</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>51</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>51</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>51</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>51</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>swift</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>__construct</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="53">/**
   * Set the current Swift instance.
   * @param Swift The instance
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>57</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>60</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>57</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>57</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>swift</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <node:Name_FullyQualified>
           <attribute:startLine>
            <scalar:int>57</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>57</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>Swift</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name_FullyQualified>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>59</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>59</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>59</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>59</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>59</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>59</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>swift</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>59</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>59</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>swift</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Expr_Assign>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>setSwift</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="61">/**
   * Get the Swift instance which is running.
   * @return Swift
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>65</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>68</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>67</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>67</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>67</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>67</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>67</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>67</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>swift</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getSwift</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="69">/**
   * Set the maximum number of times a single address is allowed to be retried.
   * @param int The maximum number of tries.
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>73</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>76</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>73</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>73</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>max</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>75</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>75</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>75</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>75</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>75</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>75</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>maxTries</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>75</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>75</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>75</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>75</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>abs</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>75</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>75</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>75</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>75</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>max</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Expr_Assign>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>setMaxTries</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="77">/**
   * Get the number of times a single address will be attempted in a batch.
   * @return int
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>81</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>84</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>83</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>83</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>83</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>83</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>83</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>83</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>maxTries</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getMaxTries</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="85">/**
   * Set the amount of time to sleep for if an error occurs.
   * @param int Number of seconds
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>89</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>92</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>89</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>89</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>secs</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>91</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>91</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>91</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>91</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>91</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>91</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>sleepTime</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>91</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>91</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>91</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>91</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>abs</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>91</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>91</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>91</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>91</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>secs</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Expr_Assign>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>setSleepTime</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="93">/**
   * Get the amount of time to sleep for on errors.
   * @return int
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>97</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>100</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>99</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>99</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>99</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>99</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>99</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>99</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>sleepTime</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getSleepTime</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="101">/**
   * Log a failed recipient.
   * @param string The email address.
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>105</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>109</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>105</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>105</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>address</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>107</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>107</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_ArrayDimFetch>
           <attribute:startLine>
            <scalar:int>107</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>107</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>107</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>107</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>107</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>107</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>failed</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:var>
           <subNode:dim>
            <scalar:null/>
           </subNode:dim>
          </node:Expr_ArrayDimFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>107</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>107</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>address</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>108</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>108</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>108</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>108</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>108</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>108</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>failed</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>108</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>108</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>108</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>108</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>array_unique</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>108</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>108</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>108</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>108</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>108</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>108</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>failed</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Expr_Assign>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>addFailedRecipient</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="110">/**
   * Get all recipients which failed in this batch.
   * @return array
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>114</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>117</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>116</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>116</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>116</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>116</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>116</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>116</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>failed</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getFailedRecipients</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="118">/**
   * Clear out the list of failed recipients.
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>121</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>125</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>123</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>123</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>123</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>123</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>123</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>123</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>failed</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>123</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>123</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>123</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>123</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>124</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>124</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>124</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>124</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>124</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>124</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>failed</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Array>
           <attribute:startLine>
            <scalar:int>124</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>124</scalar:int>
           </attribute:endLine>
           <subNode:items>
            <scalar:array/>
           </subNode:items>
          </node:Expr_Array>
         </subNode:expr>
        </node:Expr_Assign>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>flushFailedRecipients</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="126">/**
   * Set the maximum number of times an error can be thrown in succession and still be hidden.
   * @param int
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>130</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>133</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>130</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>130</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>fails</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>132</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>132</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>132</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>132</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>132</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>132</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>maxFails</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>132</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>132</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>132</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>132</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>abs</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>132</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>132</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>132</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>132</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>fails</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Expr_Assign>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>setMaxSuccessiveFailures</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="134">/**
   * Get the maximum number of times an error can be thrown and still be hidden.
   * @return int
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>138</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>141</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>140</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>140</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>140</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>140</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>140</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>140</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>maxFails</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getMaxSuccessiveFailures</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="142">/**
   * Restarts Swift forcibly.
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>145</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>153</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:comments>
          <scalar:array>
           <comment isDocComment="false" line="147">//Pre-empting problems trying to issue &quot;QUIT&quot; to a dead connection
</comment>
          </scalar:array>
         </attribute:comments>
         <attribute:startLine>
          <scalar:int>148</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>148</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:comments>
            <scalar:array>
             <comment isDocComment="false" line="147">//Pre-empting problems trying to issue &quot;QUIT&quot; to a dead connection
</comment>
            </scalar:array>
           </attribute:comments>
           <attribute:startLine>
            <scalar:int>148</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>148</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_PropertyFetch>
             <attribute:comments>
              <scalar:array>
               <comment isDocComment="false" line="147">//Pre-empting problems trying to issue &quot;QUIT&quot; to a dead connection
</comment>
              </scalar:array>
             </attribute:comments>
             <attribute:startLine>
              <scalar:int>148</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>148</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:comments>
                <scalar:array>
                 <comment isDocComment="false" line="147">//Pre-empting problems trying to issue &quot;QUIT&quot; to a dead connection
</comment>
                </scalar:array>
               </attribute:comments>
               <attribute:startLine>
                <scalar:int>148</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>148</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>swift</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:var>
           <subNode:name>
            <scalar:string>connection</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:name>
          <scalar:string>stop</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array/>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>149</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>149</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>149</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>149</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>149</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>149</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>149</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>149</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>swift</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:var>
           <subNode:name>
            <scalar:string>connection</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:name>
          <scalar:string>start</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array/>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>150</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>150</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>150</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>150</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>150</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>150</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>swift</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:name>
          <scalar:string>disconnect</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array/>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Expr_MethodCall>
         <attribute:comments>
          <scalar:array>
           <comment isDocComment="false" line="151">//Restart swift
</comment>
          </scalar:array>
         </attribute:comments>
         <attribute:startLine>
          <scalar:int>152</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>152</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:comments>
            <scalar:array>
             <comment isDocComment="false" line="151">//Restart swift
</comment>
            </scalar:array>
           </attribute:comments>
           <attribute:startLine>
            <scalar:int>152</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>152</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:comments>
              <scalar:array>
               <comment isDocComment="false" line="151">//Restart swift
</comment>
              </scalar:array>
             </attribute:comments>
             <attribute:startLine>
              <scalar:int>152</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>152</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>swift</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:name>
          <scalar:string>connect</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array/>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>forceRestartSwift</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="154">/**
   * Takes a temporary copy of original message headers in case an error occurs and they need restoring.
   * @param Swift_Message The message object
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>158</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>168</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>158</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>158</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>message</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:true/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>160</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>161</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_ArrayDimFetch>
           <attribute:startLine>
            <scalar:int>160</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>160</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>160</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>160</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>160</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>160</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>headers</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:var>
           <subNode:dim>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>160</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>160</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string>To</scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:dim>
          </node:Expr_ArrayDimFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Ternary>
           <attribute:startLine>
            <scalar:int>160</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>161</scalar:int>
           </attribute:endLine>
           <subNode:cond>
            <node:Expr_MethodCall>
             <attribute:startLine>
              <scalar:int>160</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>160</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_PropertyFetch>
               <attribute:startLine>
                <scalar:int>160</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>160</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>160</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>160</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>message</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>headers</scalar:string>
               </subNode:name>
              </node:Expr_PropertyFetch>
             </subNode:var>
             <subNode:name>
              <scalar:string>has</scalar:string>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>160</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>160</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>160</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>160</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>To</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_MethodCall>
           </subNode:cond>
           <subNode:if>
            <node:Expr_MethodCall>
             <attribute:startLine>
              <scalar:int>161</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>161</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_PropertyFetch>
               <attribute:startLine>
                <scalar:int>161</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>161</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>161</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>161</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>message</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>headers</scalar:string>
               </subNode:name>
              </node:Expr_PropertyFetch>
             </subNode:var>
             <subNode:name>
              <scalar:string>get</scalar:string>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>161</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>161</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>161</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>161</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>To</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_MethodCall>
           </subNode:if>
           <subNode:else>
            <node:Expr_ConstFetch>
             <attribute:startLine>
              <scalar:int>161</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>161</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>161</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>161</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>null</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
            </node:Expr_ConstFetch>
           </subNode:else>
          </node:Expr_Ternary>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>162</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>163</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_ArrayDimFetch>
           <attribute:startLine>
            <scalar:int>162</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>162</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>162</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>162</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>162</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>162</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>headers</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:var>
           <subNode:dim>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>162</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>162</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string>Reply-To</scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:dim>
          </node:Expr_ArrayDimFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Ternary>
           <attribute:startLine>
            <scalar:int>162</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>163</scalar:int>
           </attribute:endLine>
           <subNode:cond>
            <node:Expr_MethodCall>
             <attribute:startLine>
              <scalar:int>162</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>162</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_PropertyFetch>
               <attribute:startLine>
                <scalar:int>162</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>162</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>162</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>162</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>message</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>headers</scalar:string>
               </subNode:name>
              </node:Expr_PropertyFetch>
             </subNode:var>
             <subNode:name>
              <scalar:string>has</scalar:string>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>162</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>162</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>162</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>162</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>Reply-To</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_MethodCall>
           </subNode:cond>
           <subNode:if>
            <node:Expr_MethodCall>
             <attribute:startLine>
              <scalar:int>163</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>163</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_PropertyFetch>
               <attribute:startLine>
                <scalar:int>163</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>163</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>163</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>163</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>message</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>headers</scalar:string>
               </subNode:name>
              </node:Expr_PropertyFetch>
             </subNode:var>
             <subNode:name>
              <scalar:string>get</scalar:string>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>163</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>163</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>163</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>163</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>Reply-To</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_MethodCall>
           </subNode:if>
           <subNode:else>
            <node:Expr_ConstFetch>
             <attribute:startLine>
              <scalar:int>163</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>163</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>163</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>163</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>null</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
            </node:Expr_ConstFetch>
           </subNode:else>
          </node:Expr_Ternary>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>164</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>165</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_ArrayDimFetch>
           <attribute:startLine>
            <scalar:int>164</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>164</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>164</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>164</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>164</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>164</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>headers</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:var>
           <subNode:dim>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>164</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>164</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string>Return-Path</scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:dim>
          </node:Expr_ArrayDimFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Ternary>
           <attribute:startLine>
            <scalar:int>164</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>165</scalar:int>
           </attribute:endLine>
           <subNode:cond>
            <node:Expr_MethodCall>
             <attribute:startLine>
              <scalar:int>164</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>164</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_PropertyFetch>
               <attribute:startLine>
                <scalar:int>164</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>164</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>164</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>164</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>message</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>headers</scalar:string>
               </subNode:name>
              </node:Expr_PropertyFetch>
             </subNode:var>
             <subNode:name>
              <scalar:string>has</scalar:string>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>164</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>164</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>164</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>164</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>Return-Path</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_MethodCall>
           </subNode:cond>
           <subNode:if>
            <node:Expr_MethodCall>
             <attribute:startLine>
              <scalar:int>165</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>165</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_PropertyFetch>
               <attribute:startLine>
                <scalar:int>165</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>165</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>165</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>165</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>message</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>headers</scalar:string>
               </subNode:name>
              </node:Expr_PropertyFetch>
             </subNode:var>
             <subNode:name>
              <scalar:string>get</scalar:string>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>165</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>165</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>165</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>165</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>Return-Path</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_MethodCall>
           </subNode:if>
           <subNode:else>
            <node:Expr_ConstFetch>
             <attribute:startLine>
              <scalar:int>165</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>165</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>165</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>165</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>null</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
            </node:Expr_ConstFetch>
           </subNode:else>
          </node:Expr_Ternary>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>166</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>167</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_ArrayDimFetch>
           <attribute:startLine>
            <scalar:int>166</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>166</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>166</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>166</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>166</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>166</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>headers</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:var>
           <subNode:dim>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>166</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>166</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string>From</scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:dim>
          </node:Expr_ArrayDimFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Ternary>
           <attribute:startLine>
            <scalar:int>166</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>167</scalar:int>
           </attribute:endLine>
           <subNode:cond>
            <node:Expr_MethodCall>
             <attribute:startLine>
              <scalar:int>166</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>166</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_PropertyFetch>
               <attribute:startLine>
                <scalar:int>166</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>166</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>166</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>166</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>message</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>headers</scalar:string>
               </subNode:name>
              </node:Expr_PropertyFetch>
             </subNode:var>
             <subNode:name>
              <scalar:string>has</scalar:string>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>166</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>166</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>166</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>166</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>From</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_MethodCall>
           </subNode:cond>
           <subNode:if>
            <node:Expr_MethodCall>
             <attribute:startLine>
              <scalar:int>167</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>167</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_PropertyFetch>
               <attribute:startLine>
                <scalar:int>167</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>167</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>167</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>167</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>message</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>headers</scalar:string>
               </subNode:name>
              </node:Expr_PropertyFetch>
             </subNode:var>
             <subNode:name>
              <scalar:string>get</scalar:string>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>167</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>167</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>167</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>167</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>From</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_MethodCall>
           </subNode:if>
           <subNode:else>
            <node:Expr_ConstFetch>
             <attribute:startLine>
              <scalar:int>167</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>167</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>167</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>167</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>null</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
            </node:Expr_ConstFetch>
           </subNode:else>
          </node:Expr_Ternary>
         </subNode:expr>
        </node:Expr_Assign>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>copyMessageHeaders</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="169">/**
   * Restore message headers to original values in the event of a failure.
   * @param Swift_Message The message
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>173</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>179</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>173</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>173</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>message</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:true/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Foreach>
         <attribute:startLine>
          <scalar:int>175</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>178</scalar:int>
         </attribute:endLine>
         <subNode:keyVar>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>175</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>175</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>name</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:keyVar>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_MethodCall>
            <attribute:startLine>
             <scalar:int>177</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>177</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>177</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>177</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>177</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>177</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>message</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>headers</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:var>
            <subNode:name>
             <scalar:string>set</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>177</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>177</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>177</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>177</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>name</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>177</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>177</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>177</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>177</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>value</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_MethodCall>
          </scalar:array>
         </subNode:stmts>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>175</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>175</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>175</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>175</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>headers</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
         <subNode:valueVar>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>175</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>175</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>value</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:valueVar>
        </node:Stmt_Foreach>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>restoreMessageHeaders</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="180">/**
   * Run a batch send in a fail-safe manner.
   * This operates as Swift::batchSend() except it deals with errors itself.
   * @param Swift_Message To send
   * @param Swift_RecipientList Recipients (To: only)
   * @param Swift_Address The sender's address
   * @return int The number sent to
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>188</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>228</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>188</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>188</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>message</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <node:Name_FullyQualified>
           <attribute:startLine>
            <scalar:int>188</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>188</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>Swift_Message</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name_FullyQualified>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>188</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>188</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>recipients</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <node:Name_FullyQualified>
           <attribute:startLine>
            <scalar:int>188</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>188</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>Swift_RecipientList</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name_FullyQualified>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>188</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>188</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>sender</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>190</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>190</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>190</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>190</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>sent</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>190</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>190</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>0</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>191</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>191</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>191</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>191</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>successive_fails</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>191</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>191</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>0</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>193</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>193</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>193</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>193</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>it</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>193</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>193</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>193</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>193</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>recipients</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>getIterator</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>193</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>193</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>193</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>193</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>to</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_While>
         <attribute:startLine>
          <scalar:int>194</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>225</scalar:int>
         </attribute:endLine>
         <subNode:cond>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>194</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>194</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>194</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>194</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>it</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>hasNext</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:cond>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_MethodCall>
            <attribute:startLine>
             <scalar:int>196</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>196</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>196</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>196</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>it</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:name>
             <scalar:string>next</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array/>
            </subNode:args>
           </node:Expr_MethodCall>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>197</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>197</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>197</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>197</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>recipient</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>197</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>197</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>197</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>197</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>it</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>getValue</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array/>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>198</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>198</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>198</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>198</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>tried</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Scalar_LNumber>
              <attribute:startLine>
               <scalar:int>198</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>198</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:int>0</scalar:int>
              </subNode:value>
             </node:Scalar_LNumber>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>199</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>199</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>199</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>199</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>loop</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_ConstFetch>
              <attribute:startLine>
               <scalar:int>199</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>199</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>199</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>199</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>true</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
             </node:Expr_ConstFetch>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Stmt_While>
            <attribute:startLine>
             <scalar:int>200</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>224</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Expr_BooleanAnd>
              <attribute:startLine>
               <scalar:int>200</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>200</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>200</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>200</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>loop</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:left>
              <subNode:right>
               <node:Expr_Smaller>
                <attribute:startLine>
                 <scalar:int>200</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>200</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>200</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>200</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>tried</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:left>
                <subNode:right>
                 <node:Expr_MethodCall>
                  <attribute:startLine>
                   <scalar:int>200</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>200</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>200</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>200</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>this</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>getMaxTries</scalar:string>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array/>
                  </subNode:args>
                 </node:Expr_MethodCall>
                </subNode:right>
               </node:Expr_Smaller>
              </subNode:right>
             </node:Expr_BooleanAnd>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_TryCatch>
               <attribute:startLine>
                <scalar:int>202</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>223</scalar:int>
               </attribute:endLine>
               <subNode:stmts>
                <scalar:array>
                 <node:Expr_PostInc>
                  <attribute:startLine>
                   <scalar:int>203</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>203</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>203</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>203</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>tried</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                 </node:Expr_PostInc>
                 <node:Expr_Assign>
                  <attribute:startLine>
                   <scalar:int>204</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>204</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>204</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>204</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>loop</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:expr>
                   <node:Expr_ConstFetch>
                    <attribute:startLine>
                     <scalar:int>204</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>204</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <node:Name>
                      <attribute:startLine>
                       <scalar:int>204</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>204</scalar:int>
                      </attribute:endLine>
                      <subNode:parts>
                       <scalar:array>
                        <scalar:string>false</scalar:string>
                       </scalar:array>
                      </subNode:parts>
                     </node:Name>
                    </subNode:name>
                   </node:Expr_ConstFetch>
                  </subNode:expr>
                 </node:Expr_Assign>
                 <node:Expr_MethodCall>
                  <attribute:startLine>
                   <scalar:int>205</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>205</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>205</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>205</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>this</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>copyMessageHeaders</scalar:string>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>205</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>205</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>205</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>205</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>message</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_MethodCall>
                 <node:Expr_AssignPlus>
                  <attribute:startLine>
                   <scalar:int>206</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>206</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>206</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>206</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>sent</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:expr>
                   <node:Expr_Assign>
                    <attribute:startLine>
                     <scalar:int>206</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>206</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>206</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>206</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>n</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:expr>
                     <node:Expr_MethodCall>
                      <attribute:startLine>
                       <scalar:int>206</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>206</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_PropertyFetch>
                        <attribute:startLine>
                         <scalar:int>206</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>206</scalar:int>
                        </attribute:endLine>
                        <subNode:var>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>206</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>206</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>this</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:var>
                        <subNode:name>
                         <scalar:string>swift</scalar:string>
                        </subNode:name>
                       </node:Expr_PropertyFetch>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>send</scalar:string>
                      </subNode:name>
                      <subNode:args>
                       <scalar:array>
                        <node:Arg>
                         <attribute:startLine>
                          <scalar:int>206</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>206</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>206</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>206</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>message</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:value>
                         <subNode:byRef>
                          <scalar:false/>
                         </subNode:byRef>
                        </node:Arg>
                        <node:Arg>
                         <attribute:startLine>
                          <scalar:int>206</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>206</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>206</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>206</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>recipient</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:value>
                         <subNode:byRef>
                          <scalar:false/>
                         </subNode:byRef>
                        </node:Arg>
                        <node:Arg>
                         <attribute:startLine>
                          <scalar:int>206</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>206</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>206</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>206</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>sender</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:value>
                         <subNode:byRef>
                          <scalar:false/>
                         </subNode:byRef>
                        </node:Arg>
                       </scalar:array>
                      </subNode:args>
                     </node:Expr_MethodCall>
                    </subNode:expr>
                   </node:Expr_Assign>
                  </subNode:expr>
                 </node:Expr_AssignPlus>
                 <node:Stmt_If>
                  <attribute:startLine>
                   <scalar:int>207</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>207</scalar:int>
                  </attribute:endLine>
                  <subNode:stmts>
                   <scalar:array>
                    <node:Expr_MethodCall>
                     <attribute:startLine>
                      <scalar:int>207</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>207</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>207</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>207</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>this</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>addFailedRecipient</scalar:string>
                     </subNode:name>
                     <subNode:args>
                      <scalar:array>
                       <node:Arg>
                        <attribute:startLine>
                         <scalar:int>207</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>207</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <node:Expr_MethodCall>
                          <attribute:startLine>
                           <scalar:int>207</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>207</scalar:int>
                          </attribute:endLine>
                          <subNode:var>
                           <node:Expr_Variable>
                            <attribute:startLine>
                             <scalar:int>207</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>207</scalar:int>
                            </attribute:endLine>
                            <subNode:name>
                             <scalar:string>recipient</scalar:string>
                            </subNode:name>
                           </node:Expr_Variable>
                          </subNode:var>
                          <subNode:name>
                           <scalar:string>getAddress</scalar:string>
                          </subNode:name>
                          <subNode:args>
                           <scalar:array/>
                          </subNode:args>
                         </node:Expr_MethodCall>
                        </subNode:value>
                        <subNode:byRef>
                         <scalar:false/>
                        </subNode:byRef>
                       </node:Arg>
                      </scalar:array>
                     </subNode:args>
                    </node:Expr_MethodCall>
                   </scalar:array>
                  </subNode:stmts>
                  <subNode:elseifs>
                   <scalar:array/>
                  </subNode:elseifs>
                  <subNode:else>
                   <scalar:null/>
                  </subNode:else>
                  <subNode:cond>
                   <node:Expr_BooleanNot>
                    <attribute:startLine>
                     <scalar:int>207</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>207</scalar:int>
                    </attribute:endLine>
                    <subNode:expr>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>207</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>207</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>n</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:expr>
                   </node:Expr_BooleanNot>
                  </subNode:cond>
                 </node:Stmt_If>
                 <node:Expr_Assign>
                  <attribute:startLine>
                   <scalar:int>208</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>208</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>208</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>208</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>successive_fails</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:expr>
                   <node:Scalar_LNumber>
                    <attribute:startLine>
                     <scalar:int>208</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>208</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:int>0</scalar:int>
                    </subNode:value>
                   </node:Scalar_LNumber>
                  </subNode:expr>
                 </node:Expr_Assign>
                </scalar:array>
               </subNode:stmts>
               <subNode:catches>
                <scalar:array>
                 <node:Stmt_Catch>
                  <attribute:startLine>
                   <scalar:int>209</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>223</scalar:int>
                  </attribute:endLine>
                  <subNode:type>
                   <node:Name_FullyQualified>
                    <attribute:startLine>
                     <scalar:int>209</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>209</scalar:int>
                    </attribute:endLine>
                    <subNode:parts>
                     <scalar:array>
                      <scalar:string>Exception</scalar:string>
                     </scalar:array>
                    </subNode:parts>
                   </node:Name_FullyQualified>
                  </subNode:type>
                  <subNode:var>
                   <scalar:string>e</scalar:string>
                  </subNode:var>
                  <subNode:stmts>
                   <scalar:array>
                    <node:Expr_PostInc>
                     <attribute:startLine>
                      <scalar:int>210</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>210</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>210</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>210</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>successive_fails</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                    </node:Expr_PostInc>
                    <node:Expr_MethodCall>
                     <attribute:startLine>
                      <scalar:int>211</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>211</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>211</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>211</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>this</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>restoreMessageHeaders</scalar:string>
                     </subNode:name>
                     <subNode:args>
                      <scalar:array>
                       <node:Arg>
                        <attribute:startLine>
                         <scalar:int>211</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>211</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>211</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>211</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>message</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:value>
                        <subNode:byRef>
                         <scalar:false/>
                        </subNode:byRef>
                       </node:Arg>
                      </scalar:array>
                     </subNode:args>
                    </node:Expr_MethodCall>
                    <node:Stmt_If>
                     <attribute:startLine>
                      <scalar:int>212</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>218</scalar:int>
                     </attribute:endLine>
                     <subNode:stmts>
                      <scalar:array>
                       <node:Stmt_Throw>
                        <attribute:startLine>
                         <scalar:int>215</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>217</scalar:int>
                        </attribute:endLine>
                        <subNode:expr>
                         <node:Expr_New>
                          <attribute:startLine>
                           <scalar:int>215</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>217</scalar:int>
                          </attribute:endLine>
                          <subNode:class>
                           <node:Name_FullyQualified>
                            <attribute:startLine>
                             <scalar:int>215</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>215</scalar:int>
                            </attribute:endLine>
                            <subNode:parts>
                             <scalar:array>
                              <scalar:string>Exception</scalar:string>
                             </scalar:array>
                            </subNode:parts>
                           </node:Name_FullyQualified>
                          </subNode:class>
                          <subNode:args>
                           <scalar:array>
                            <node:Arg>
                             <attribute:startLine>
                              <scalar:int>216</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>217</scalar:int>
                             </attribute:endLine>
                             <subNode:value>
                              <node:Expr_Concat>
                               <attribute:startLine>
                                <scalar:int>216</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>217</scalar:int>
                               </attribute:endLine>
                               <subNode:left>
                                <node:Expr_Concat>
                                 <attribute:startLine>
                                  <scalar:int>216</scalar:int>
                                 </attribute:startLine>
                                 <attribute:endLine>
                                  <scalar:int>216</scalar:int>
                                 </attribute:endLine>
                                 <subNode:left>
                                  <node:Scalar_String>
                                   <attribute:startLine>
                                    <scalar:int>216</scalar:int>
                                   </attribute:startLine>
                                   <attribute:endLine>
                                    <scalar:int>216</scalar:int>
                                   </attribute:endLine>
                                   <subNode:value>
                                    <scalar:string>Too many successive failures. BatchMailer is configured to allow no more than </scalar:string>
                                   </subNode:value>
                                  </node:Scalar_String>
                                 </subNode:left>
                                 <subNode:right>
                                  <node:Expr_Variable>
                                   <attribute:startLine>
                                    <scalar:int>216</scalar:int>
                                   </attribute:startLine>
                                   <attribute:endLine>
                                    <scalar:int>216</scalar:int>
                                   </attribute:endLine>
                                   <subNode:name>
                                    <scalar:string>max</scalar:string>
                                   </subNode:name>
                                  </node:Expr_Variable>
                                 </subNode:right>
                                </node:Expr_Concat>
                               </subNode:left>
                               <subNode:right>
                                <node:Scalar_String>
                                 <attribute:startLine>
                                  <scalar:int>217</scalar:int>
                                 </attribute:startLine>
                                 <attribute:endLine>
                                  <scalar:int>217</scalar:int>
                                 </attribute:endLine>
                                 <subNode:value>
                                  <scalar:string> successive failures.</scalar:string>
                                 </subNode:value>
                                </node:Scalar_String>
                               </subNode:right>
                              </node:Expr_Concat>
                             </subNode:value>
                             <subNode:byRef>
                              <scalar:false/>
                             </subNode:byRef>
                            </node:Arg>
                           </scalar:array>
                          </subNode:args>
                         </node:Expr_New>
                        </subNode:expr>
                       </node:Stmt_Throw>
                      </scalar:array>
                     </subNode:stmts>
                     <subNode:elseifs>
                      <scalar:array/>
                     </subNode:elseifs>
                     <subNode:else>
                      <scalar:null/>
                     </subNode:else>
                     <subNode:cond>
                      <node:Expr_BooleanAnd>
                       <attribute:startLine>
                        <scalar:int>212</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>213</scalar:int>
                       </attribute:endLine>
                       <subNode:left>
                        <node:Expr_Assign>
                         <attribute:startLine>
                          <scalar:int>212</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>212</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>212</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>212</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>max</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:var>
                         <subNode:expr>
                          <node:Expr_MethodCall>
                           <attribute:startLine>
                            <scalar:int>212</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>212</scalar:int>
                           </attribute:endLine>
                           <subNode:var>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>212</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>212</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>this</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:var>
                           <subNode:name>
                            <scalar:string>getMaxSuccessiveFailures</scalar:string>
                           </subNode:name>
                           <subNode:args>
                            <scalar:array/>
                           </subNode:args>
                          </node:Expr_MethodCall>
                         </subNode:expr>
                        </node:Expr_Assign>
                       </subNode:left>
                       <subNode:right>
                        <node:Expr_Greater>
                         <attribute:startLine>
                          <scalar:int>213</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>213</scalar:int>
                         </attribute:endLine>
                         <subNode:left>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>213</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>213</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>successive_fails</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:left>
                         <subNode:right>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>213</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>213</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>max</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:right>
                        </node:Expr_Greater>
                       </subNode:right>
                      </node:Expr_BooleanAnd>
                     </subNode:cond>
                    </node:Stmt_If>
                    <node:Stmt_If>
                     <attribute:comments>
                      <scalar:array>
                       <comment isDocComment="false" line="219">//If an exception was thrown, give it one more go
</comment>
                      </scalar:array>
                     </attribute:comments>
                     <attribute:startLine>
                      <scalar:int>220</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>220</scalar:int>
                     </attribute:endLine>
                     <subNode:stmts>
                      <scalar:array>
                       <node:Expr_FuncCall>
                        <attribute:startLine>
                         <scalar:int>220</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>220</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <node:Name>
                          <attribute:startLine>
                           <scalar:int>220</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>220</scalar:int>
                          </attribute:endLine>
                          <subNode:parts>
                           <scalar:array>
                            <scalar:string>sleep</scalar:string>
                           </scalar:array>
                          </subNode:parts>
                         </node:Name>
                        </subNode:name>
                        <subNode:args>
                         <scalar:array>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>220</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>220</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>220</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>220</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>t</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                         </scalar:array>
                        </subNode:args>
                       </node:Expr_FuncCall>
                      </scalar:array>
                     </subNode:stmts>
                     <subNode:elseifs>
                      <scalar:array/>
                     </subNode:elseifs>
                     <subNode:else>
                      <scalar:null/>
                     </subNode:else>
                     <subNode:cond>
                      <node:Expr_Assign>
                       <attribute:startLine>
                        <scalar:int>220</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>220</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>220</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>220</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>t</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:expr>
                        <node:Expr_MethodCall>
                         <attribute:startLine>
                          <scalar:int>220</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>220</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>220</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>220</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>this</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>getSleepTime</scalar:string>
                         </subNode:name>
                         <subNode:args>
                          <scalar:array/>
                         </subNode:args>
                        </node:Expr_MethodCall>
                       </subNode:expr>
                      </node:Expr_Assign>
                     </subNode:cond>
                    </node:Stmt_If>
                    <node:Expr_MethodCall>
                     <attribute:startLine>
                      <scalar:int>221</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>221</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>221</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>221</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>this</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>forceRestartSwift</scalar:string>
                     </subNode:name>
                     <subNode:args>
                      <scalar:array/>
                     </subNode:args>
                    </node:Expr_MethodCall>
                    <node:Expr_Assign>
                     <attribute:startLine>
                      <scalar:int>222</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>222</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>222</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>222</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>loop</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:expr>
                      <node:Expr_ConstFetch>
                       <attribute:startLine>
                        <scalar:int>222</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>222</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <node:Name>
                         <attribute:startLine>
                          <scalar:int>222</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>222</scalar:int>
                         </attribute:endLine>
                         <subNode:parts>
                          <scalar:array>
                           <scalar:string>true</scalar:string>
                          </scalar:array>
                         </subNode:parts>
                        </node:Name>
                       </subNode:name>
                      </node:Expr_ConstFetch>
                     </subNode:expr>
                    </node:Expr_Assign>
                   </scalar:array>
                  </subNode:stmts>
                 </node:Stmt_Catch>
                </scalar:array>
               </subNode:catches>
               <subNode:finallyStmts>
                <scalar:null/>
               </subNode:finallyStmts>
              </node:Stmt_TryCatch>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_While>
          </scalar:array>
         </subNode:stmts>
        </node:Stmt_While>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>227</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>227</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>227</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>227</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>sent</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>send</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
    </scalar:array>
   </subNode:stmts>
   <subNode:name>
    <scalar:string>Swift_BatchMailer</scalar:string>
   </subNode:name>
   <subNode:namespacedName>
    <node:Name>
     <attribute:comments>
      <scalar:array>
       <comment isDocComment="true" line="3">/**
 * Handles batch mailing with Swift Mailer with fail-safe support.
 * Restarts the connection if it dies and then continues where it left off.
 * Please read the LICENSE file
 * @copyright Chris Corbyn &lt;chris@w3style.co.uk&gt;
 * @author Chris Corbyn &lt;chris@w3style.co.uk&gt;
 * @package Swift
 * @license GNU Lesser General Public License
 */</comment>
      </scalar:array>
     </attribute:comments>
     <attribute:startLine>
      <scalar:int>12</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>229</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Swift_BatchMailer</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name>
   </subNode:namespacedName>
  </node:Stmt_Class>
 </scalar:array>
</AST>
