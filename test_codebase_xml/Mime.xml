<?xml version="1.0" encoding="UTF-8"?>
<AST xmlns:node="http://nikic.github.com/PHPParser/XML/node" xmlns:subNode="http://nikic.github.com/PHPParser/XML/subNode" xmlns:attribute="http://nikic.github.com/PHPParser/XML/attribute" xmlns:scalar="http://nikic.github.com/PHPParser/XML/scalar">
 <scalar:array>
  <node:Expr_Include>
   <attribute:comments>
    <scalar:array>
     <comment isDocComment="true" line="3">/**
 * Swift Mailer MIME Library central component
 * Please read the LICENSE file
 * @copyright Chris Corbyn &lt;chris@w3style.co.uk&gt;
 * @author Chris Corbyn &lt;chris@w3style.co.uk&gt;
 * @package Swift_Message
 * @license GNU Lesser General Public License
 */</comment>
    </scalar:array>
   </attribute:comments>
   <attribute:startLine>
    <scalar:int>12</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>12</scalar:int>
   </attribute:endLine>
   <subNode:expr>
    <node:Expr_Concat>
     <attribute:startLine>
      <scalar:int>12</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>12</scalar:int>
     </attribute:endLine>
     <subNode:left>
      <node:Expr_FuncCall>
       <attribute:startLine>
        <scalar:int>12</scalar:int>
       </attribute:startLine>
       <attribute:endLine>
        <scalar:int>12</scalar:int>
       </attribute:endLine>
       <subNode:name>
        <node:Name>
         <attribute:startLine>
          <scalar:int>12</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>12</scalar:int>
         </attribute:endLine>
         <subNode:parts>
          <scalar:array>
           <scalar:string>dirname</scalar:string>
          </scalar:array>
         </subNode:parts>
        </node:Name>
       </subNode:name>
       <subNode:args>
        <scalar:array>
         <node:Arg>
          <attribute:startLine>
           <scalar:int>12</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>12</scalar:int>
          </attribute:endLine>
          <subNode:value>
           <node:Scalar_FileConst>
            <attribute:startLine>
             <scalar:int>12</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>12</scalar:int>
            </attribute:endLine>
           </node:Scalar_FileConst>
          </subNode:value>
          <subNode:byRef>
           <scalar:false/>
          </subNode:byRef>
         </node:Arg>
        </scalar:array>
       </subNode:args>
      </node:Expr_FuncCall>
     </subNode:left>
     <subNode:right>
      <node:Scalar_String>
       <attribute:startLine>
        <scalar:int>12</scalar:int>
       </attribute:startLine>
       <attribute:endLine>
        <scalar:int>12</scalar:int>
       </attribute:endLine>
       <subNode:value>
        <scalar:string>/../ClassLoader.php</scalar:string>
       </subNode:value>
      </node:Scalar_String>
     </subNode:right>
    </node:Expr_Concat>
   </subNode:expr>
   <subNode:type>
    <scalar:int>4</scalar:int>
   </subNode:type>
  </node:Expr_Include>
  <node:Expr_StaticCall>
   <attribute:startLine>
    <scalar:int>13</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>13</scalar:int>
   </attribute:endLine>
   <subNode:class>
    <node:Name_FullyQualified>
     <attribute:startLine>
      <scalar:int>13</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>13</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Swift_ClassLoader</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name_FullyQualified>
   </subNode:class>
   <subNode:name>
    <scalar:string>load</scalar:string>
   </subNode:name>
   <subNode:args>
    <scalar:array>
     <node:Arg>
      <attribute:startLine>
       <scalar:int>13</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>13</scalar:int>
      </attribute:endLine>
      <subNode:value>
       <node:Scalar_String>
        <attribute:startLine>
         <scalar:int>13</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>13</scalar:int>
        </attribute:endLine>
        <subNode:value>
         <scalar:string>Swift_File</scalar:string>
        </subNode:value>
       </node:Scalar_String>
      </subNode:value>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
     </node:Arg>
    </scalar:array>
   </subNode:args>
  </node:Expr_StaticCall>
  <node:Expr_StaticCall>
   <attribute:startLine>
    <scalar:int>14</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>14</scalar:int>
   </attribute:endLine>
   <subNode:class>
    <node:Name_FullyQualified>
     <attribute:startLine>
      <scalar:int>14</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>14</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Swift_ClassLoader</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name_FullyQualified>
   </subNode:class>
   <subNode:name>
    <scalar:string>load</scalar:string>
   </subNode:name>
   <subNode:args>
    <scalar:array>
     <node:Arg>
      <attribute:startLine>
       <scalar:int>14</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>14</scalar:int>
      </attribute:endLine>
      <subNode:value>
       <node:Scalar_String>
        <attribute:startLine>
         <scalar:int>14</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>14</scalar:int>
        </attribute:endLine>
        <subNode:value>
         <scalar:string>Swift_Message_MimeException</scalar:string>
        </subNode:value>
       </node:Scalar_String>
      </subNode:value>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
     </node:Arg>
    </scalar:array>
   </subNode:args>
  </node:Expr_StaticCall>
  <node:Stmt_Class>
   <attribute:comments>
    <scalar:array>
     <comment isDocComment="true" line="16">/**
 * Mime is the underbelly for Messages, Attachments, Parts, Embedded Images, Forwarded Mail, etc
 * In fact, every single component of the composed email is simply a new Mime document nested inside another
 * When you piece an email together in this way you see just how straight-forward it really is
 * @package Swift_Message
 * @author Chris Corbyn &lt;chris@w3style.co.uk&gt;
 */</comment>
    </scalar:array>
   </attribute:comments>
   <attribute:startLine>
    <scalar:int>23</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>500</scalar:int>
   </attribute:endLine>
   <subNode:type>
    <scalar:int>16</scalar:int>
   </subNode:type>
   <subNode:extends>
    <scalar:null/>
   </subNode:extends>
   <subNode:implements>
    <scalar:array/>
   </subNode:implements>
   <subNode:stmts>
    <scalar:array>
     <node:Stmt_ClassConst>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="25">/**
   * Constant for plain-text emails
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>28</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>28</scalar:int>
      </attribute:endLine>
      <subNode:consts>
       <scalar:array>
        <node:Const>
         <attribute:startLine>
          <scalar:int>28</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>28</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>PLAIN</scalar:string>
         </subNode:name>
         <subNode:value>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>28</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>28</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>text/plain</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:value>
        </node:Const>
       </scalar:array>
      </subNode:consts>
     </node:Stmt_ClassConst>
     <node:Stmt_ClassConst>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="29">/**
   * Constant for HTML emails
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>32</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>32</scalar:int>
      </attribute:endLine>
      <subNode:consts>
       <scalar:array>
        <node:Const>
         <attribute:startLine>
          <scalar:int>32</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>32</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>HTML</scalar:string>
         </subNode:name>
         <subNode:value>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>32</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>32</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>text/html</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:value>
        </node:Const>
       </scalar:array>
      </subNode:consts>
     </node:Stmt_ClassConst>
     <node:Stmt_ClassConst>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="33">/**
   * Constant for miscellaneous mime type
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>36</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>36</scalar:int>
      </attribute:endLine>
      <subNode:consts>
       <scalar:array>
        <node:Const>
         <attribute:startLine>
          <scalar:int>36</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>36</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>MISC</scalar:string>
         </subNode:name>
         <subNode:value>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>36</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>36</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>application/octet-stream</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:value>
        </node:Const>
       </scalar:array>
      </subNode:consts>
     </node:Stmt_ClassConst>
     <node:Stmt_ClassConst>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="37">/**
   * Constant for MIME sections which must appear in the multipart/alternative section.
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>40</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>40</scalar:int>
      </attribute:endLine>
      <subNode:consts>
       <scalar:array>
        <node:Const>
         <attribute:startLine>
          <scalar:int>40</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>40</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>LEVEL_ALTERNATIVE</scalar:string>
         </subNode:name>
         <subNode:value>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>40</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>40</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>alternative</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:value>
        </node:Const>
       </scalar:array>
      </subNode:consts>
     </node:Stmt_ClassConst>
     <node:Stmt_ClassConst>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="41">/**
   * Constant for MIME sections which must appear in the multipart/related section.
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>44</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>44</scalar:int>
      </attribute:endLine>
      <subNode:consts>
       <scalar:array>
        <node:Const>
         <attribute:startLine>
          <scalar:int>44</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>44</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>LEVEL_RELATED</scalar:string>
         </subNode:name>
         <subNode:value>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>44</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>44</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>related</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:value>
        </node:Const>
       </scalar:array>
      </subNode:consts>
     </node:Stmt_ClassConst>
     <node:Stmt_ClassConst>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="45">/**
   * Constant for MIME sections which must appear in the multipart/mixed section.
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>48</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>48</scalar:int>
      </attribute:endLine>
      <subNode:consts>
       <scalar:array>
        <node:Const>
         <attribute:startLine>
          <scalar:int>48</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>48</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>LEVEL_MIXED</scalar:string>
         </subNode:name>
         <subNode:value>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>48</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>48</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>mixed</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:value>
        </node:Const>
       </scalar:array>
      </subNode:consts>
     </node:Stmt_ClassConst>
     <node:Stmt_ClassConst>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="49">/**
   * Constant for MIME sections which must appear in the multipart/mixed section.
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>52</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>52</scalar:int>
      </attribute:endLine>
      <subNode:consts>
       <scalar:array>
        <node:Const>
         <attribute:startLine>
          <scalar:int>52</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>52</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>LEVEL_TOP</scalar:string>
         </subNode:name>
         <subNode:value>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>52</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>52</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>top</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:value>
        </node:Const>
       </scalar:array>
      </subNode:consts>
     </node:Stmt_ClassConst>
     <node:Stmt_ClassConst>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="53">/**
   * Constant for safe line length in almost all places
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>56</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>56</scalar:int>
      </attribute:endLine>
      <subNode:consts>
       <scalar:array>
        <node:Const>
         <attribute:startLine>
          <scalar:int>56</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>56</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>SAFE_LENGTH</scalar:string>
         </subNode:name>
         <subNode:value>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>56</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>56</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>1000</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:value>
        </node:Const>
       </scalar:array>
      </subNode:consts>
     </node:Stmt_ClassConst>
     <node:Stmt_ClassConst>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="false" line="56">//RFC 2822
</comment>
        <comment isDocComment="true" line="57">/**
   * Constant for really safe line length
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>60</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>60</scalar:int>
      </attribute:endLine>
      <subNode:consts>
       <scalar:array>
        <node:Const>
         <attribute:startLine>
          <scalar:int>60</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>60</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>VERY_SAFE_LENGTH</scalar:string>
         </subNode:name>
         <subNode:value>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>60</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>60</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>76</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:value>
        </node:Const>
       </scalar:array>
      </subNode:consts>
     </node:Stmt_ClassConst>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="false" line="60">//For command line mail clients such as pine
</comment>
        <comment isDocComment="true" line="61">/**
   * The header part of this MIME document
   * @var Swift_Message_Headers
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>65</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>65</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>65</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>65</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>headers</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>65</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>65</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>65</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>65</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="66">/**
   * The body of the documented (unencoded)
   * @var string data
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>70</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>70</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>70</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>70</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>data</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>70</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>70</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string></scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="71">/**
   * Maximum line length
   * @var int
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>75</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>75</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>75</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>75</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>wrap</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>75</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>75</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>1000</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="false" line="75">//RFC 2822
</comment>
        <comment isDocComment="true" line="76">/**
   * Nested mime parts
   * @var array
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>80</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>80</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>80</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>80</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>children</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_Array>
           <attribute:startLine>
            <scalar:int>80</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>80</scalar:int>
           </attribute:endLine>
           <subNode:items>
            <scalar:array/>
           </subNode:items>
          </node:Expr_Array>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="81">/**
   * The boundary used to separate mime parts
   * @var string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>85</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>85</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>85</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>85</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>boundary</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>85</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>85</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>85</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>85</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="86">/**
   * The line ending characters needed
   * @var string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>90</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>90</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>90</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>90</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>LE</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>90</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>90</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>&#13;
</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="91">/**
   * An instance of Swift_Cache
   * @var Swift_Cache
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>95</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>95</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>95</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>95</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>cache</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="96">/**
   * A list of used MIME boundaries after they're generated.
   * @var array
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>100</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>100</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>10</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>100</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>100</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>usedBoundaries</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_Array>
           <attribute:startLine>
            <scalar:int>100</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>100</scalar:int>
           </attribute:endLine>
           <subNode:items>
            <scalar:array/>
           </subNode:items>
          </node:Expr_Array>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="102">/**
   * Constructor
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>105</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>111</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_StaticCall>
         <attribute:startLine>
          <scalar:int>107</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>107</scalar:int>
         </attribute:endLine>
         <subNode:class>
          <node:Name_FullyQualified>
           <attribute:startLine>
            <scalar:int>107</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>107</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>Swift_ClassLoader</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name_FullyQualified>
         </subNode:class>
         <subNode:name>
          <scalar:string>load</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>107</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>107</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>107</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>107</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>Swift_Message_Headers</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_StaticCall>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>108</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>108</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>108</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>108</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>setHeaders</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>108</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>108</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_New>
              <attribute:startLine>
               <scalar:int>108</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>108</scalar:int>
              </attribute:endLine>
              <subNode:class>
               <node:Name_FullyQualified>
                <attribute:startLine>
                 <scalar:int>108</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>108</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>Swift_Message_Headers</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name_FullyQualified>
              </subNode:class>
              <subNode:args>
               <scalar:array/>
              </subNode:args>
             </node:Expr_New>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Expr_StaticCall>
         <attribute:startLine>
          <scalar:int>109</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>109</scalar:int>
         </attribute:endLine>
         <subNode:class>
          <node:Name_FullyQualified>
           <attribute:startLine>
            <scalar:int>109</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>109</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>Swift_ClassLoader</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name_FullyQualified>
         </subNode:class>
         <subNode:name>
          <scalar:string>load</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>109</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>109</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>109</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>109</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>Swift_CacheFactory</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_StaticCall>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>110</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>110</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>110</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>110</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>110</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>110</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>cache</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_StaticCall>
           <attribute:startLine>
            <scalar:int>110</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>110</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>110</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>110</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Swift_CacheFactory</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
           <subNode:name>
            <scalar:string>getCache</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_StaticCall>
         </subNode:expr>
        </node:Expr_Assign>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>__construct</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="112">/**
   * Compute a unique boundary
   * @return string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>116</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>124</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Do>
         <attribute:startLine>
          <scalar:int>118</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>121</scalar:int>
         </attribute:endLine>
         <subNode:cond>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>121</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>121</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>121</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>121</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>in_array</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>121</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>121</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>121</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>121</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>boundary</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>121</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>121</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_StaticPropertyFetch>
                <attribute:startLine>
                 <scalar:int>121</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>121</scalar:int>
                </attribute:endLine>
                <subNode:class>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>121</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>121</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>self</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:class>
                <subNode:name>
                 <scalar:string>usedBoundaries</scalar:string>
                </subNode:name>
               </node:Expr_StaticPropertyFetch>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:cond>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>120</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>120</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>120</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>120</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>boundary</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>120</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>120</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>120</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>120</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>uniqid</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>120</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>120</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_FuncCall>
                   <attribute:startLine>
                    <scalar:int>120</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>120</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <node:Name>
                     <attribute:startLine>
                      <scalar:int>120</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>120</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>rand</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array/>
                   </subNode:args>
                  </node:Expr_FuncCall>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>120</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>120</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_ConstFetch>
                   <attribute:startLine>
                    <scalar:int>120</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>120</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <node:Name>
                     <attribute:startLine>
                      <scalar:int>120</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>120</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>true</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name>
                   </subNode:name>
                  </node:Expr_ConstFetch>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
        </node:Stmt_Do>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>122</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>122</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_ArrayDimFetch>
           <attribute:startLine>
            <scalar:int>122</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>122</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_StaticPropertyFetch>
             <attribute:startLine>
              <scalar:int>122</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>122</scalar:int>
             </attribute:endLine>
             <subNode:class>
              <node:Name>
               <attribute:startLine>
                <scalar:int>122</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>122</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>self</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:class>
             <subNode:name>
              <scalar:string>usedBoundaries</scalar:string>
             </subNode:name>
            </node:Expr_StaticPropertyFetch>
           </subNode:var>
           <subNode:dim>
            <scalar:null/>
           </subNode:dim>
          </node:Expr_ArrayDimFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>122</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>122</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>boundary</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>123</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>123</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Concat>
           <attribute:startLine>
            <scalar:int>123</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>123</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Concat>
             <attribute:startLine>
              <scalar:int>123</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>123</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Scalar_String>
               <attribute:startLine>
                <scalar:int>123</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>123</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <scalar:string>_=_swift-</scalar:string>
               </subNode:value>
              </node:Scalar_String>
             </subNode:left>
             <subNode:right>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>123</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>123</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>boundary</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:right>
            </node:Expr_Concat>
           </subNode:left>
           <subNode:right>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>123</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>123</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string>_=_</scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:right>
          </node:Expr_Concat>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>generateBoundary</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="125">/**
   * Replace the current headers with new ones
   * DO NOT DO THIS UNLESS YOU KNOW WHAT YOU'RE DOING!
   * @param Swift_Message_Headers The headers to use
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>130</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>133</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>130</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>130</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>headers</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>132</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>132</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>132</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>132</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>132</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>132</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>headers</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>132</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>132</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>headers</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Expr_Assign>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>setHeaders</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="134">/**
   * Set the line ending character to use
   * @param string The line ending sequence
   * @return boolean
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>139</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>155</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>139</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>139</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>le</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>141</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>154</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_MethodCall>
            <attribute:startLine>
             <scalar:int>143</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>143</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>143</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>143</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>143</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>143</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>cache</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:var>
            <subNode:name>
             <scalar:string>clear</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>143</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>143</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>143</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>143</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>body</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_MethodCall>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>144</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>144</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>144</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>144</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>144</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>144</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>LE</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>144</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>144</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>le</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_MethodCall>
            <attribute:comments>
             <scalar:array>
              <comment isDocComment="false" line="145">//This change should be recursive
</comment>
             </scalar:array>
            </attribute:comments>
            <attribute:startLine>
             <scalar:int>146</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>146</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_PropertyFetch>
              <attribute:comments>
               <scalar:array>
                <comment isDocComment="false" line="145">//This change should be recursive
</comment>
               </scalar:array>
              </attribute:comments>
              <attribute:startLine>
               <scalar:int>146</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>146</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:comments>
                 <scalar:array>
                  <comment isDocComment="false" line="145">//This change should be recursive
</comment>
                 </scalar:array>
                </attribute:comments>
                <attribute:startLine>
                 <scalar:int>146</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>146</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>headers</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:var>
            <subNode:name>
             <scalar:string>setLE</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>146</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>146</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>146</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>146</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>le</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_MethodCall>
           <node:Stmt_Foreach>
            <attribute:startLine>
             <scalar:int>147</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>150</scalar:int>
            </attribute:endLine>
            <subNode:keyVar>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>147</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>147</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>id</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:keyVar>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>149</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>149</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_ArrayDimFetch>
                 <attribute:startLine>
                  <scalar:int>149</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>149</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_PropertyFetch>
                   <attribute:startLine>
                    <scalar:int>149</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>149</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>149</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>149</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>children</scalar:string>
                   </subNode:name>
                  </node:Expr_PropertyFetch>
                 </subNode:var>
                 <subNode:dim>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>149</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>149</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>id</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:dim>
                </node:Expr_ArrayDimFetch>
               </subNode:var>
               <subNode:name>
                <scalar:string>setLE</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>149</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>149</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>149</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>149</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>le</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_MethodCall>
             </scalar:array>
            </subNode:stmts>
            <subNode:expr>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>147</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>147</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>147</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>147</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>children</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:expr>
            <subNode:valueVar>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>147</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>147</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>child</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:valueVar>
           </node:Stmt_Foreach>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>152</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>152</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_ConstFetch>
              <attribute:startLine>
               <scalar:int>152</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>152</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>152</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>152</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>true</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
             </node:Expr_ConstFetch>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <node:Stmt_Else>
           <attribute:startLine>
            <scalar:int>154</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>154</scalar:int>
           </attribute:endLine>
           <subNode:stmts>
            <scalar:array>
             <node:Stmt_Return>
              <attribute:startLine>
               <scalar:int>154</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>154</scalar:int>
              </attribute:endLine>
              <subNode:expr>
               <node:Expr_ConstFetch>
                <attribute:startLine>
                 <scalar:int>154</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>154</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>154</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>154</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>false</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
               </node:Expr_ConstFetch>
              </subNode:expr>
             </node:Stmt_Return>
            </scalar:array>
           </subNode:stmts>
          </node:Stmt_Else>
         </subNode:else>
         <subNode:cond>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>141</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>141</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>141</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>141</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>in_array</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>141</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>141</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>141</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>141</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>le</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>141</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>141</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Array>
                <attribute:startLine>
                 <scalar:int>141</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>141</scalar:int>
                </attribute:endLine>
                <subNode:items>
                 <scalar:array>
                  <node:Expr_ArrayItem>
                   <attribute:startLine>
                    <scalar:int>141</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>141</scalar:int>
                   </attribute:endLine>
                   <subNode:key>
                    <scalar:null/>
                   </subNode:key>
                   <subNode:value>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>141</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>141</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>&#13;</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Expr_ArrayItem>
                  <node:Expr_ArrayItem>
                   <attribute:startLine>
                    <scalar:int>141</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>141</scalar:int>
                   </attribute:endLine>
                   <subNode:key>
                    <scalar:null/>
                   </subNode:key>
                   <subNode:value>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>141</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>141</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>
</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Expr_ArrayItem>
                  <node:Expr_ArrayItem>
                   <attribute:startLine>
                    <scalar:int>141</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>141</scalar:int>
                   </attribute:endLine>
                   <subNode:key>
                    <scalar:null/>
                   </subNode:key>
                   <subNode:value>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>141</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>141</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>&#13;
</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Expr_ArrayItem>
                 </scalar:array>
                </subNode:items>
               </node:Expr_Array>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:cond>
        </node:Stmt_If>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>setLE</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="156">/**
   * Get the line ending sequence
   * @return string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>160</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>163</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>162</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>162</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>162</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>162</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>162</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>162</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>LE</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getLE</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="164">/**
   * Reset the entire cache state from this branch of the tree and traversing down through the children
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>167</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>178</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>169</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>169</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>169</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>169</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>169</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>169</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>cache</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:name>
          <scalar:string>clear</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>169</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>169</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>169</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>169</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>body</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>170</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>170</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>170</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>170</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>170</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>170</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>cache</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:name>
          <scalar:string>clear</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>170</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>170</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>170</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>170</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>append</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>171</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>171</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>171</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>171</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>171</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>171</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>cache</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:name>
          <scalar:string>clear</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>171</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>171</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>171</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>171</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>headers</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>172</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>172</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>172</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>172</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>172</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>172</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>cache</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:name>
          <scalar:string>clear</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>172</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>172</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>172</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>172</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>dbl_le</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>173</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>173</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>173</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>173</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>173</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>173</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>headers</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:name>
          <scalar:string>uncacheAll</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array/>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Stmt_Foreach>
         <attribute:startLine>
          <scalar:int>174</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>177</scalar:int>
         </attribute:endLine>
         <subNode:keyVar>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>174</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>174</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>id</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:keyVar>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_MethodCall>
            <attribute:startLine>
             <scalar:int>176</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>176</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_ArrayDimFetch>
              <attribute:startLine>
               <scalar:int>176</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>176</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>176</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>176</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>176</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>176</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>children</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:var>
              <subNode:dim>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>176</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>176</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>id</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:dim>
             </node:Expr_ArrayDimFetch>
            </subNode:var>
            <subNode:name>
             <scalar:string>uncacheAll</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array/>
            </subNode:args>
           </node:Expr_MethodCall>
          </scalar:array>
         </subNode:stmts>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>174</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>174</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>174</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>174</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>children</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
         <subNode:valueVar>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>174</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>174</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>child</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:valueVar>
        </node:Stmt_Foreach>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>uncacheAll</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="179">/**
   * Set the content type of this MIME document
   * @param string The content type to use in the same format as MIME 1.0 expects
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>183</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>186</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>183</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>183</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>type</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>185</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>185</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>185</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>185</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>185</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>185</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>headers</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:name>
          <scalar:string>set</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>185</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>185</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>185</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>185</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>Content-Type</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>185</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>185</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>185</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>185</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>type</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>setContentType</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="187">/**
   * Get the content type which has been set
   * The MIME 1.0 Content-Type is provided as a string
   * @return string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>192</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>199</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_TryCatch>
         <attribute:startLine>
          <scalar:int>194</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>198</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>195</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>195</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>195</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>195</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>195</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>195</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>195</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>195</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>headers</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:var>
              <subNode:name>
               <scalar:string>get</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>195</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>195</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>195</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>195</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>Content-Type</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:catches>
          <scalar:array>
           <node:Stmt_Catch>
            <attribute:startLine>
             <scalar:int>196</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>198</scalar:int>
            </attribute:endLine>
            <subNode:type>
             <node:Name_FullyQualified>
              <attribute:startLine>
               <scalar:int>196</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>196</scalar:int>
              </attribute:endLine>
              <subNode:parts>
               <scalar:array>
                <scalar:string>Swift_Message_MimeException</scalar:string>
               </scalar:array>
              </subNode:parts>
             </node:Name_FullyQualified>
            </subNode:type>
            <subNode:var>
             <scalar:string>e</scalar:string>
            </subNode:var>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_Return>
               <attribute:startLine>
                <scalar:int>197</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>197</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_ConstFetch>
                 <attribute:startLine>
                  <scalar:int>197</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>197</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>197</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>197</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>false</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                </node:Expr_ConstFetch>
               </subNode:expr>
              </node:Stmt_Return>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_Catch>
          </scalar:array>
         </subNode:catches>
         <subNode:finallyStmts>
          <scalar:null/>
         </subNode:finallyStmts>
        </node:Stmt_TryCatch>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getContentType</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="200">/**
   * Set the encoding format to be used on the body of the document
   * @param string The encoding type used
   * @param boolean If this encoding format should be used recursively. Note, this only takes effect if no encoding is set in the children.
   * @param boolean If the encoding should only be applied when the string is not ascii.
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>206</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>240</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>206</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>206</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>encoding</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>206</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>206</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>recursive</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>206</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>206</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>206</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>206</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>false</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>206</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>206</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>non_ascii</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>206</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>206</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>206</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>206</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>false</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>208</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>208</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>208</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>208</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>208</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>208</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>cache</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:name>
          <scalar:string>clear</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>208</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>208</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>208</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>208</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>body</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Stmt_Switch>
         <attribute:startLine>
          <scalar:int>209</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>220</scalar:int>
         </attribute:endLine>
         <subNode:cond>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>209</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>209</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>209</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>209</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>strtolower</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>209</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>209</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>209</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>209</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>encoding</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:cond>
         <subNode:cases>
          <scalar:array>
           <node:Stmt_Case>
            <attribute:startLine>
             <scalar:int>211</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>211</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>211</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>211</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>q</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array/>
            </subNode:stmts>
           </node:Stmt_Case>
           <node:Stmt_Case>
            <attribute:startLine>
             <scalar:int>211</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>211</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>211</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>211</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>qp</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array/>
            </subNode:stmts>
           </node:Stmt_Case>
           <node:Stmt_Case>
            <attribute:startLine>
             <scalar:int>211</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>213</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>211</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>211</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>quoted-printable</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>212</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>212</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>212</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>212</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>encoding</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:expr>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>212</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>212</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>quoted-printable</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:expr>
              </node:Expr_Assign>
              <node:Stmt_Break>
               <attribute:startLine>
                <scalar:int>213</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>213</scalar:int>
               </attribute:endLine>
               <subNode:num>
                <scalar:null/>
               </subNode:num>
              </node:Stmt_Break>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_Case>
           <node:Stmt_Case>
            <attribute:startLine>
             <scalar:int>214</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>214</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>214</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>214</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>b</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array/>
            </subNode:stmts>
           </node:Stmt_Case>
           <node:Stmt_Case>
            <attribute:startLine>
             <scalar:int>214</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>216</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>214</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>214</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>base64</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>215</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>215</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>215</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>215</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>encoding</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:expr>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>215</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>215</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>base64</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:expr>
              </node:Expr_Assign>
              <node:Stmt_Break>
               <attribute:startLine>
                <scalar:int>216</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>216</scalar:int>
               </attribute:endLine>
               <subNode:num>
                <scalar:null/>
               </subNode:num>
              </node:Stmt_Break>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_Case>
           <node:Stmt_Case>
            <attribute:startLine>
             <scalar:int>217</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>217</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>217</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>217</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>7bit</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array/>
            </subNode:stmts>
           </node:Stmt_Case>
           <node:Stmt_Case>
            <attribute:startLine>
             <scalar:int>217</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>217</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>217</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>217</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>8bit</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array/>
            </subNode:stmts>
           </node:Stmt_Case>
           <node:Stmt_Case>
            <attribute:startLine>
             <scalar:int>217</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>219</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>217</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>217</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>binary</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>218</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>218</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>218</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>218</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>encoding</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:expr>
                <node:Expr_FuncCall>
                 <attribute:startLine>
                  <scalar:int>218</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>218</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>218</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>218</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>strtolower</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>218</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>218</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>218</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>218</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>encoding</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_FuncCall>
               </subNode:expr>
              </node:Expr_Assign>
              <node:Stmt_Break>
               <attribute:startLine>
                <scalar:int>219</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>219</scalar:int>
               </attribute:endLine>
               <subNode:num>
                <scalar:null/>
               </subNode:num>
              </node:Stmt_Break>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_Case>
          </scalar:array>
         </subNode:cases>
        </node:Stmt_Switch>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>222</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>222</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>222</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>222</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>data</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>222</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>222</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>222</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>222</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>getData</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_StaticCall>
         <attribute:startLine>
          <scalar:int>223</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>223</scalar:int>
         </attribute:endLine>
         <subNode:class>
          <node:Name_FullyQualified>
           <attribute:startLine>
            <scalar:int>223</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>223</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>Swift_ClassLoader</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name_FullyQualified>
         </subNode:class>
         <subNode:name>
          <scalar:string>load</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>223</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>223</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>223</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>223</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>Swift_Message_Encoder</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_StaticCall>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>224</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>231</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_MethodCall>
            <attribute:startLine>
             <scalar:int>226</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>226</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>226</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>226</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>226</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>226</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>headers</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:var>
            <subNode:name>
             <scalar:string>set</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>226</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>226</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>226</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>226</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>Content-Transfer-Encoding</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>226</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>226</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>226</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>226</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>encoding</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_MethodCall>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array>
           <node:Stmt_ElseIf>
            <attribute:startLine>
             <scalar:int>228</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>231</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Expr_BooleanOr>
              <attribute:startLine>
               <scalar:int>228</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>228</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_BooleanNot>
                <attribute:startLine>
                 <scalar:int>228</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>228</scalar:int>
                </attribute:endLine>
                <subNode:expr>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>228</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>228</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>non_ascii</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:expr>
               </node:Expr_BooleanNot>
              </subNode:left>
              <subNode:right>
               <node:Expr_BooleanNot>
                <attribute:startLine>
                 <scalar:int>228</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>228</scalar:int>
                </attribute:endLine>
                <subNode:expr>
                 <node:Expr_FuncCall>
                  <attribute:startLine>
                   <scalar:int>228</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>228</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <node:Name>
                    <attribute:startLine>
                     <scalar:int>228</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>228</scalar:int>
                    </attribute:endLine>
                    <subNode:parts>
                     <scalar:array>
                      <scalar:string>is_string</scalar:string>
                     </scalar:array>
                    </subNode:parts>
                   </node:Name>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>228</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>228</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>228</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>228</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>data</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_FuncCall>
                </subNode:expr>
               </node:Expr_BooleanNot>
              </subNode:right>
             </node:Expr_BooleanOr>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>230</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>230</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>230</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>230</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>230</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>230</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>headers</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:var>
               <subNode:name>
                <scalar:string>set</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>230</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>230</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>230</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>230</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>Content-Transfer-Encoding</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>230</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>230</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>230</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>230</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>encoding</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_MethodCall>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_ElseIf>
          </scalar:array>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanAnd>
           <attribute:startLine>
            <scalar:int>224</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>224</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_BooleanAnd>
             <attribute:startLine>
              <scalar:int>224</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>224</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_BooleanAnd>
               <attribute:startLine>
                <scalar:int>224</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>224</scalar:int>
               </attribute:endLine>
               <subNode:left>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>224</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>224</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>non_ascii</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:left>
               <subNode:right>
                <node:Expr_FuncCall>
                 <attribute:startLine>
                  <scalar:int>224</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>224</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>224</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>224</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>is_string</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>224</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>224</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>224</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>224</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>data</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_FuncCall>
               </subNode:right>
              </node:Expr_BooleanAnd>
             </subNode:left>
             <subNode:right>
              <node:Expr_Greater>
               <attribute:startLine>
                <scalar:int>224</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>224</scalar:int>
               </attribute:endLine>
               <subNode:left>
                <node:Expr_FuncCall>
                 <attribute:startLine>
                  <scalar:int>224</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>224</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>224</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>224</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>strlen</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>224</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>224</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>224</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>224</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>data</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_FuncCall>
               </subNode:left>
               <subNode:right>
                <node:Scalar_LNumber>
                 <attribute:startLine>
                  <scalar:int>224</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>224</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:int>0</scalar:int>
                 </subNode:value>
                </node:Scalar_LNumber>
               </subNode:right>
              </node:Expr_Greater>
             </subNode:right>
            </node:Expr_BooleanAnd>
           </subNode:left>
           <subNode:right>
            <node:Expr_BooleanNot>
             <attribute:startLine>
              <scalar:int>224</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>224</scalar:int>
             </attribute:endLine>
             <subNode:expr>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>224</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>224</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_StaticCall>
                 <attribute:startLine>
                  <scalar:int>224</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>224</scalar:int>
                 </attribute:endLine>
                 <subNode:class>
                  <node:Name_FullyQualified>
                   <attribute:startLine>
                    <scalar:int>224</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>224</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>Swift_Message_Encoder</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name_FullyQualified>
                 </subNode:class>
                 <subNode:name>
                  <scalar:string>instance</scalar:string>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array/>
                 </subNode:args>
                </node:Expr_StaticCall>
               </subNode:var>
               <subNode:name>
                <scalar:string>is7BitAscii</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>224</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>224</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>224</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>224</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>data</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_MethodCall>
             </subNode:expr>
            </node:Expr_BooleanNot>
           </subNode:right>
          </node:Expr_BooleanAnd>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>233</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>239</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Foreach>
            <attribute:startLine>
             <scalar:int>235</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>238</scalar:int>
            </attribute:endLine>
            <subNode:keyVar>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>235</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>235</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>id</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:keyVar>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_If>
               <attribute:startLine>
                <scalar:int>237</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>237</scalar:int>
               </attribute:endLine>
               <subNode:stmts>
                <scalar:array>
                 <node:Expr_MethodCall>
                  <attribute:startLine>
                   <scalar:int>237</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>237</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_ArrayDimFetch>
                    <attribute:startLine>
                     <scalar:int>237</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>237</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_PropertyFetch>
                      <attribute:startLine>
                       <scalar:int>237</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>237</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>237</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>237</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>this</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>children</scalar:string>
                      </subNode:name>
                     </node:Expr_PropertyFetch>
                    </subNode:var>
                    <subNode:dim>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>237</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>237</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>id</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:dim>
                   </node:Expr_ArrayDimFetch>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>setEncoding</scalar:string>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>237</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>237</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>237</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>237</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>encoding</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>237</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>237</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>237</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>237</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>recursive</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>237</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>237</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>237</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>237</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>non_ascii</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_MethodCall>
                </scalar:array>
               </subNode:stmts>
               <subNode:elseifs>
                <scalar:array/>
               </subNode:elseifs>
               <subNode:else>
                <scalar:null/>
               </subNode:else>
               <subNode:cond>
                <node:Expr_BooleanNot>
                 <attribute:startLine>
                  <scalar:int>237</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>237</scalar:int>
                 </attribute:endLine>
                 <subNode:expr>
                  <node:Expr_MethodCall>
                   <attribute:startLine>
                    <scalar:int>237</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>237</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>237</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>237</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>child</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>getEncoding</scalar:string>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array/>
                   </subNode:args>
                  </node:Expr_MethodCall>
                 </subNode:expr>
                </node:Expr_BooleanNot>
               </subNode:cond>
              </node:Stmt_If>
             </scalar:array>
            </subNode:stmts>
            <subNode:expr>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>235</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>235</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>235</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>235</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>children</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:expr>
            <subNode:valueVar>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>235</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>235</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>child</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:valueVar>
           </node:Stmt_Foreach>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>233</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>233</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>recursive</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:cond>
        </node:Stmt_If>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>setEncoding</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="241">/**
   * Get the encoding format used in this document
   * @return string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>245</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>252</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_TryCatch>
         <attribute:startLine>
          <scalar:int>247</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>251</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>248</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>248</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>248</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>248</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>248</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>248</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>248</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>248</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>headers</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:var>
              <subNode:name>
               <scalar:string>get</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>248</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>248</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>248</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>248</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>Content-Transfer-Encoding</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:catches>
          <scalar:array>
           <node:Stmt_Catch>
            <attribute:startLine>
             <scalar:int>249</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>251</scalar:int>
            </attribute:endLine>
            <subNode:type>
             <node:Name_FullyQualified>
              <attribute:startLine>
               <scalar:int>249</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>249</scalar:int>
              </attribute:endLine>
              <subNode:parts>
               <scalar:array>
                <scalar:string>Swift_Message_MimeException</scalar:string>
               </scalar:array>
              </subNode:parts>
             </node:Name_FullyQualified>
            </subNode:type>
            <subNode:var>
             <scalar:string>e</scalar:string>
            </subNode:var>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_Return>
               <attribute:startLine>
                <scalar:int>250</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>250</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_ConstFetch>
                 <attribute:startLine>
                  <scalar:int>250</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>250</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>250</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>250</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>false</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                </node:Expr_ConstFetch>
               </subNode:expr>
              </node:Stmt_Return>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_Catch>
          </scalar:array>
         </subNode:catches>
         <subNode:finallyStmts>
          <scalar:null/>
         </subNode:finallyStmts>
        </node:Stmt_TryCatch>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getEncoding</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="253">/**
   * Specify the string which makes up the body of this message
   * HINT: You can always nest another MIME document here if you call it's build() method.
   * $data can be an object of Swift_File or a string
   * @param mixed The body of the document
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>259</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>264</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>259</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>259</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>data</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>261</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>261</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>261</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>261</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>261</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>261</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>cache</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:name>
          <scalar:string>clear</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>261</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>261</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>261</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>261</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>body</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>262</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>263</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>262</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>262</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>262</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>262</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>262</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>262</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>data</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>262</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>262</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>data</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <node:Stmt_Else>
           <attribute:startLine>
            <scalar:int>263</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>263</scalar:int>
           </attribute:endLine>
           <subNode:stmts>
            <scalar:array>
             <node:Expr_Assign>
              <attribute:startLine>
               <scalar:int>263</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>263</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>263</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>263</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>263</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>263</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>data</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:var>
              <subNode:expr>
               <node:Expr_Cast_String>
                <attribute:startLine>
                 <scalar:int>263</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>263</scalar:int>
                </attribute:endLine>
                <subNode:expr>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>263</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>263</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>data</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:expr>
               </node:Expr_Cast_String>
              </subNode:expr>
             </node:Expr_Assign>
            </scalar:array>
           </subNode:stmts>
          </node:Stmt_Else>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Instanceof>
           <attribute:startLine>
            <scalar:int>262</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>262</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>262</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>262</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>data</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:expr>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>262</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>262</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Swift_File</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
          </node:Expr_Instanceof>
         </subNode:cond>
        </node:Stmt_If>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>setData</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="265">/**
   * Return the string which makes up the body of this MIME document
   * @return string,Swift_File
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>269</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>272</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>271</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>271</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>271</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>271</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>271</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>271</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>data</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getData</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="273">/**
   * Get the data in the format suitable for sending
   * @return Swift_Cache_OutputStream
   * @throws Swift_FileException If the file stream given cannot be read
   * @throws Swift_Message_MimeException If some required headers have been forcefully removed
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>279</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>376</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_StaticCall>
         <attribute:startLine>
          <scalar:int>281</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>281</scalar:int>
         </attribute:endLine>
         <subNode:class>
          <node:Name_FullyQualified>
           <attribute:startLine>
            <scalar:int>281</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>281</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>Swift_ClassLoader</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name_FullyQualified>
         </subNode:class>
         <subNode:name>
          <scalar:string>load</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>281</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>281</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>281</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>281</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>Swift_Message_Encoder</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_StaticCall>
        <node:Expr_StaticCall>
         <attribute:startLine>
          <scalar:int>282</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>282</scalar:int>
         </attribute:endLine>
         <subNode:class>
          <node:Name_FullyQualified>
           <attribute:startLine>
            <scalar:int>282</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>282</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>Swift_ClassLoader</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name_FullyQualified>
         </subNode:class>
         <subNode:name>
          <scalar:string>load</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>282</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>282</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>282</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>282</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>Swift_Cache_JointOutputStream</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_StaticCall>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>283</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>296</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>285</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>285</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>285</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>285</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>285</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>285</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>285</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>285</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>boundary</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:var>
               <subNode:expr>
                <node:Expr_StaticCall>
                 <attribute:startLine>
                  <scalar:int>285</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>285</scalar:int>
                 </attribute:endLine>
                 <subNode:class>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>285</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>285</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>self</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:class>
                 <subNode:name>
                  <scalar:string>generateBoundary</scalar:string>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array/>
                 </subNode:args>
                </node:Expr_StaticCall>
               </subNode:expr>
              </node:Expr_Assign>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_Identical>
              <attribute:startLine>
               <scalar:int>285</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>285</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>285</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>285</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>285</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>285</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>boundary</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:left>
              <subNode:right>
               <node:Expr_ConstFetch>
                <attribute:startLine>
                 <scalar:int>285</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>285</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>285</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>285</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>null</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
               </node:Expr_ConstFetch>
              </subNode:right>
             </node:Expr_Identical>
            </subNode:cond>
           </node:Stmt_If>
           <node:Expr_MethodCall>
            <attribute:startLine>
             <scalar:int>286</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>286</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>286</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>286</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>286</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>286</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>headers</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:var>
            <subNode:name>
             <scalar:string>setAttribute</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>286</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>286</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>286</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>286</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>Content-Type</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>286</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>286</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>286</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>286</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>boundary</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>286</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>286</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>286</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>286</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>286</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>286</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>boundary</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_MethodCall>
           <node:Expr_MethodCall>
            <attribute:startLine>
             <scalar:int>288</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>288</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>288</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>288</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>288</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>288</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>cache</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:var>
            <subNode:name>
             <scalar:string>clear</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>288</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>288</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>288</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>288</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>append</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_MethodCall>
           <node:Stmt_Foreach>
            <attribute:startLine>
             <scalar:int>289</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>294</scalar:int>
            </attribute:endLine>
            <subNode:keyVar>
             <scalar:null/>
            </subNode:keyVar>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>291</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>291</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>291</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>291</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>291</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>291</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>cache</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:var>
               <subNode:name>
                <scalar:string>write</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>291</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>291</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>291</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>291</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>append</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>291</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>291</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Concat>
                    <attribute:startLine>
                     <scalar:int>291</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>291</scalar:int>
                    </attribute:endLine>
                    <subNode:left>
                     <node:Expr_Concat>
                      <attribute:startLine>
                       <scalar:int>291</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>291</scalar:int>
                      </attribute:endLine>
                      <subNode:left>
                       <node:Expr_Concat>
                        <attribute:startLine>
                         <scalar:int>291</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>291</scalar:int>
                        </attribute:endLine>
                        <subNode:left>
                         <node:Expr_PropertyFetch>
                          <attribute:startLine>
                           <scalar:int>291</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>291</scalar:int>
                          </attribute:endLine>
                          <subNode:var>
                           <node:Expr_Variable>
                            <attribute:startLine>
                             <scalar:int>291</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>291</scalar:int>
                            </attribute:endLine>
                            <subNode:name>
                             <scalar:string>this</scalar:string>
                            </subNode:name>
                           </node:Expr_Variable>
                          </subNode:var>
                          <subNode:name>
                           <scalar:string>LE</scalar:string>
                          </subNode:name>
                         </node:Expr_PropertyFetch>
                        </subNode:left>
                        <subNode:right>
                         <node:Scalar_String>
                          <attribute:startLine>
                           <scalar:int>291</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>291</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <scalar:string>--</scalar:string>
                          </subNode:value>
                         </node:Scalar_String>
                        </subNode:right>
                       </node:Expr_Concat>
                      </subNode:left>
                      <subNode:right>
                       <node:Expr_PropertyFetch>
                        <attribute:startLine>
                         <scalar:int>291</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>291</scalar:int>
                        </attribute:endLine>
                        <subNode:var>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>291</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>291</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>this</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:var>
                        <subNode:name>
                         <scalar:string>boundary</scalar:string>
                        </subNode:name>
                       </node:Expr_PropertyFetch>
                      </subNode:right>
                     </node:Expr_Concat>
                    </subNode:left>
                    <subNode:right>
                     <node:Expr_PropertyFetch>
                      <attribute:startLine>
                       <scalar:int>291</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>291</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>291</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>291</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>this</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>LE</scalar:string>
                      </subNode:name>
                     </node:Expr_PropertyFetch>
                    </subNode:right>
                   </node:Expr_Concat>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_MethodCall>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>292</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>292</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>292</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>292</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>part_stream</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:expr>
                <node:Expr_MethodCall>
                 <attribute:startLine>
                  <scalar:int>292</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>292</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>292</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>292</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>part</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>build</scalar:string>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array/>
                 </subNode:args>
                </node:Expr_MethodCall>
               </subNode:expr>
              </node:Expr_Assign>
              <node:Stmt_While>
               <attribute:startLine>
                <scalar:int>293</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>293</scalar:int>
               </attribute:endLine>
               <subNode:cond>
                <node:Expr_NotIdentical>
                 <attribute:startLine>
                  <scalar:int>293</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>293</scalar:int>
                 </attribute:endLine>
                 <subNode:left>
                  <node:Expr_ConstFetch>
                   <attribute:startLine>
                    <scalar:int>293</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>293</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <node:Name>
                     <attribute:startLine>
                      <scalar:int>293</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>293</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>false</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name>
                   </subNode:name>
                  </node:Expr_ConstFetch>
                 </subNode:left>
                 <subNode:right>
                  <node:Expr_Assign>
                   <attribute:startLine>
                    <scalar:int>293</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>293</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>293</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>293</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>bytes</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:expr>
                    <node:Expr_MethodCall>
                     <attribute:startLine>
                      <scalar:int>293</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>293</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>293</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>293</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>part_stream</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>read</scalar:string>
                     </subNode:name>
                     <subNode:args>
                      <scalar:array/>
                     </subNode:args>
                    </node:Expr_MethodCall>
                   </subNode:expr>
                  </node:Expr_Assign>
                 </subNode:right>
                </node:Expr_NotIdentical>
               </subNode:cond>
               <subNode:stmts>
                <scalar:array>
                 <node:Expr_MethodCall>
                  <attribute:startLine>
                   <scalar:int>293</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>293</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_PropertyFetch>
                    <attribute:startLine>
                     <scalar:int>293</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>293</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>293</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>293</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>this</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>cache</scalar:string>
                    </subNode:name>
                   </node:Expr_PropertyFetch>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>write</scalar:string>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>293</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>293</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>293</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>293</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>append</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>293</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>293</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>293</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>293</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>bytes</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_MethodCall>
                </scalar:array>
               </subNode:stmts>
              </node:Stmt_While>
             </scalar:array>
            </subNode:stmts>
            <subNode:expr>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>289</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>289</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>289</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>289</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>children</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:expr>
            <subNode:valueVar>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>289</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>289</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>part</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:valueVar>
           </node:Stmt_Foreach>
           <node:Expr_MethodCall>
            <attribute:startLine>
             <scalar:int>295</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>295</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>295</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>295</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>295</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>295</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>cache</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:var>
            <subNode:name>
             <scalar:string>write</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>295</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>295</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>295</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>295</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>append</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>295</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>295</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Concat>
                 <attribute:startLine>
                  <scalar:int>295</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>295</scalar:int>
                 </attribute:endLine>
                 <subNode:left>
                  <node:Expr_Concat>
                   <attribute:startLine>
                    <scalar:int>295</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>295</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Expr_Concat>
                     <attribute:startLine>
                      <scalar:int>295</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>295</scalar:int>
                     </attribute:endLine>
                     <subNode:left>
                      <node:Expr_Concat>
                       <attribute:startLine>
                        <scalar:int>295</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>295</scalar:int>
                       </attribute:endLine>
                       <subNode:left>
                        <node:Expr_PropertyFetch>
                         <attribute:startLine>
                          <scalar:int>295</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>295</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>295</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>295</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>this</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>LE</scalar:string>
                         </subNode:name>
                        </node:Expr_PropertyFetch>
                       </subNode:left>
                       <subNode:right>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>295</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>295</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>--</scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:right>
                      </node:Expr_Concat>
                     </subNode:left>
                     <subNode:right>
                      <node:Expr_PropertyFetch>
                       <attribute:startLine>
                        <scalar:int>295</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>295</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>295</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>295</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>this</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:name>
                        <scalar:string>boundary</scalar:string>
                       </subNode:name>
                      </node:Expr_PropertyFetch>
                     </subNode:right>
                    </node:Expr_Concat>
                   </subNode:left>
                   <subNode:right>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>295</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>295</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>--</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:right>
                  </node:Expr_Concat>
                 </subNode:left>
                 <subNode:right>
                  <node:Expr_PropertyFetch>
                   <attribute:startLine>
                    <scalar:int>295</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>295</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>295</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>295</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>LE</scalar:string>
                   </subNode:name>
                  </node:Expr_PropertyFetch>
                 </subNode:right>
                </node:Expr_Concat>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_MethodCall>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>283</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>283</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Empty>
             <attribute:startLine>
              <scalar:int>283</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>283</scalar:int>
             </attribute:endLine>
             <subNode:expr>
              <node:Expr_PropertyFetch>
               <attribute:startLine>
                <scalar:int>283</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>283</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>283</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>283</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>this</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>children</scalar:string>
               </subNode:name>
              </node:Expr_PropertyFetch>
             </subNode:expr>
            </node:Expr_Empty>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>298</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>298</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>298</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>298</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>joint_os</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_New>
           <attribute:startLine>
            <scalar:int>298</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>298</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>298</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>298</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Swift_Cache_JointOutputStream</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_New>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:comments>
          <scalar:array>
           <comment isDocComment="false" line="300">//Try using a cached version to save some cycles (at the expense of memory)
</comment>
           <comment isDocComment="false" line="301">//if ($this-&gt;cache !== null) return $this-&gt;cache . $append;
</comment>
          </scalar:array>
         </attribute:comments>
         <attribute:startLine>
          <scalar:int>302</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>307</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_MethodCall>
            <attribute:startLine>
             <scalar:int>304</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>304</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>304</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>304</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>joint_os</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:name>
             <scalar:string>addStream</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>304</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>304</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_MethodCall>
                 <attribute:startLine>
                  <scalar:int>304</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>304</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_PropertyFetch>
                   <attribute:startLine>
                    <scalar:int>304</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>304</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>304</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>304</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>cache</scalar:string>
                   </subNode:name>
                  </node:Expr_PropertyFetch>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>getOutputStream</scalar:string>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>304</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>304</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Scalar_String>
                      <attribute:startLine>
                       <scalar:int>304</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>304</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <scalar:string>body</scalar:string>
                      </subNode:value>
                     </node:Scalar_String>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_MethodCall>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_MethodCall>
           <node:Expr_MethodCall>
            <attribute:startLine>
             <scalar:int>305</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>305</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>305</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>305</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>joint_os</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:name>
             <scalar:string>addStream</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>305</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>305</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_MethodCall>
                 <attribute:startLine>
                  <scalar:int>305</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>305</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_PropertyFetch>
                   <attribute:startLine>
                    <scalar:int>305</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>305</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>305</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>305</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>cache</scalar:string>
                   </subNode:name>
                  </node:Expr_PropertyFetch>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>getOutputStream</scalar:string>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>305</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>305</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Scalar_String>
                      <attribute:startLine>
                       <scalar:int>305</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>305</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <scalar:string>append</scalar:string>
                      </subNode:value>
                     </node:Scalar_String>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_MethodCall>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_MethodCall>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>306</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>306</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>306</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>306</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>joint_os</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>302</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>302</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>302</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>302</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>302</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>302</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>cache</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:var>
           <subNode:name>
            <scalar:string>has</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>302</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>302</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>302</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>302</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>body</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>309</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>309</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>309</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>309</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>is_file</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Instanceof>
           <attribute:startLine>
            <scalar:int>309</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>309</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_MethodCall>
             <attribute:startLine>
              <scalar:int>309</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>309</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>309</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>309</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>getData</scalar:string>
             </subNode:name>
             <subNode:args>
              <scalar:array/>
             </subNode:args>
            </node:Expr_MethodCall>
           </subNode:expr>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>309</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>309</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Swift_File</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
          </node:Expr_Instanceof>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_Switch>
         <attribute:startLine>
          <scalar:int>310</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>372</scalar:int>
         </attribute:endLine>
         <subNode:cond>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>310</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>310</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>310</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>310</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>getEncoding</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:cond>
         <subNode:cases>
          <scalar:array>
           <node:Stmt_Case>
            <attribute:startLine>
             <scalar:int>312</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>323</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>312</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>312</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>quoted-printable</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_If>
               <attribute:startLine>
                <scalar:int>313</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>322</scalar:int>
               </attribute:endLine>
               <subNode:stmts>
                <scalar:array>
                 <node:Expr_Assign>
                  <attribute:startLine>
                   <scalar:int>315</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>315</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>315</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>315</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>qp_os</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:expr>
                   <node:Expr_MethodCall>
                    <attribute:startLine>
                     <scalar:int>315</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>315</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_StaticCall>
                      <attribute:startLine>
                       <scalar:int>315</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>315</scalar:int>
                      </attribute:endLine>
                      <subNode:class>
                       <node:Name_FullyQualified>
                        <attribute:startLine>
                         <scalar:int>315</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>315</scalar:int>
                        </attribute:endLine>
                        <subNode:parts>
                         <scalar:array>
                          <scalar:string>Swift_Message_Encoder</scalar:string>
                         </scalar:array>
                        </subNode:parts>
                       </node:Name_FullyQualified>
                      </subNode:class>
                      <subNode:name>
                       <scalar:string>instance</scalar:string>
                      </subNode:name>
                      <subNode:args>
                       <scalar:array/>
                      </subNode:args>
                     </node:Expr_StaticCall>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>QPEncodeFile</scalar:string>
                    </subNode:name>
                    <subNode:args>
                     <scalar:array>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>315</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>315</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_MethodCall>
                         <attribute:startLine>
                          <scalar:int>315</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>315</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>315</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>315</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>this</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>getData</scalar:string>
                         </subNode:name>
                         <subNode:args>
                          <scalar:array/>
                         </subNode:args>
                        </node:Expr_MethodCall>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>315</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>315</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Scalar_LNumber>
                         <attribute:startLine>
                          <scalar:int>315</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>315</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:int>76</scalar:int>
                         </subNode:value>
                        </node:Scalar_LNumber>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>315</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>315</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_PropertyFetch>
                         <attribute:startLine>
                          <scalar:int>315</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>315</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>315</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>315</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>this</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>LE</scalar:string>
                         </subNode:name>
                        </node:Expr_PropertyFetch>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                     </scalar:array>
                    </subNode:args>
                   </node:Expr_MethodCall>
                  </subNode:expr>
                 </node:Expr_Assign>
                 <node:Stmt_While>
                  <attribute:startLine>
                   <scalar:int>316</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>317</scalar:int>
                  </attribute:endLine>
                  <subNode:cond>
                   <node:Expr_NotIdentical>
                    <attribute:startLine>
                     <scalar:int>316</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>316</scalar:int>
                    </attribute:endLine>
                    <subNode:left>
                     <node:Expr_ConstFetch>
                      <attribute:startLine>
                       <scalar:int>316</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>316</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <node:Name>
                        <attribute:startLine>
                         <scalar:int>316</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>316</scalar:int>
                        </attribute:endLine>
                        <subNode:parts>
                         <scalar:array>
                          <scalar:string>false</scalar:string>
                         </scalar:array>
                        </subNode:parts>
                       </node:Name>
                      </subNode:name>
                     </node:Expr_ConstFetch>
                    </subNode:left>
                    <subNode:right>
                     <node:Expr_Assign>
                      <attribute:startLine>
                       <scalar:int>316</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>316</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>316</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>316</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>bytes</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:expr>
                       <node:Expr_MethodCall>
                        <attribute:startLine>
                         <scalar:int>316</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>316</scalar:int>
                        </attribute:endLine>
                        <subNode:var>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>316</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>316</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>qp_os</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:var>
                        <subNode:name>
                         <scalar:string>read</scalar:string>
                        </subNode:name>
                        <subNode:args>
                         <scalar:array/>
                        </subNode:args>
                       </node:Expr_MethodCall>
                      </subNode:expr>
                     </node:Expr_Assign>
                    </subNode:right>
                   </node:Expr_NotIdentical>
                  </subNode:cond>
                  <subNode:stmts>
                   <scalar:array>
                    <node:Expr_MethodCall>
                     <attribute:startLine>
                      <scalar:int>317</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>317</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_PropertyFetch>
                       <attribute:startLine>
                        <scalar:int>317</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>317</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>317</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>317</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>this</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:name>
                        <scalar:string>cache</scalar:string>
                       </subNode:name>
                      </node:Expr_PropertyFetch>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>write</scalar:string>
                     </subNode:name>
                     <subNode:args>
                      <scalar:array>
                       <node:Arg>
                        <attribute:startLine>
                         <scalar:int>317</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>317</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <node:Scalar_String>
                          <attribute:startLine>
                           <scalar:int>317</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>317</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <scalar:string>body</scalar:string>
                          </subNode:value>
                         </node:Scalar_String>
                        </subNode:value>
                        <subNode:byRef>
                         <scalar:false/>
                        </subNode:byRef>
                       </node:Arg>
                       <node:Arg>
                        <attribute:startLine>
                         <scalar:int>317</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>317</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>317</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>317</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>bytes</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:value>
                        <subNode:byRef>
                         <scalar:false/>
                        </subNode:byRef>
                       </node:Arg>
                      </scalar:array>
                     </subNode:args>
                    </node:Expr_MethodCall>
                   </scalar:array>
                  </subNode:stmts>
                 </node:Stmt_While>
                </scalar:array>
               </subNode:stmts>
               <subNode:elseifs>
                <scalar:array/>
               </subNode:elseifs>
               <subNode:else>
                <node:Stmt_Else>
                 <attribute:startLine>
                  <scalar:int>319</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>322</scalar:int>
                 </attribute:endLine>
                 <subNode:stmts>
                  <scalar:array>
                   <node:Expr_MethodCall>
                    <attribute:startLine>
                     <scalar:int>321</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>321</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_PropertyFetch>
                      <attribute:startLine>
                       <scalar:int>321</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>321</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>321</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>321</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>this</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>cache</scalar:string>
                      </subNode:name>
                     </node:Expr_PropertyFetch>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>write</scalar:string>
                    </subNode:name>
                    <subNode:args>
                     <scalar:array>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>321</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>321</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>321</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>321</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>body</scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>321</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>321</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_MethodCall>
                         <attribute:startLine>
                          <scalar:int>321</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>321</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_StaticCall>
                           <attribute:startLine>
                            <scalar:int>321</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>321</scalar:int>
                           </attribute:endLine>
                           <subNode:class>
                            <node:Name_FullyQualified>
                             <attribute:startLine>
                              <scalar:int>321</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>321</scalar:int>
                             </attribute:endLine>
                             <subNode:parts>
                              <scalar:array>
                               <scalar:string>Swift_Message_Encoder</scalar:string>
                              </scalar:array>
                             </subNode:parts>
                            </node:Name_FullyQualified>
                           </subNode:class>
                           <subNode:name>
                            <scalar:string>instance</scalar:string>
                           </subNode:name>
                           <subNode:args>
                            <scalar:array/>
                           </subNode:args>
                          </node:Expr_StaticCall>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>QPEncode</scalar:string>
                         </subNode:name>
                         <subNode:args>
                          <scalar:array>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>321</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>321</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_MethodCall>
                              <attribute:startLine>
                               <scalar:int>321</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>321</scalar:int>
                              </attribute:endLine>
                              <subNode:var>
                               <node:Expr_Variable>
                                <attribute:startLine>
                                 <scalar:int>321</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>321</scalar:int>
                                </attribute:endLine>
                                <subNode:name>
                                 <scalar:string>this</scalar:string>
                                </subNode:name>
                               </node:Expr_Variable>
                              </subNode:var>
                              <subNode:name>
                               <scalar:string>getData</scalar:string>
                              </subNode:name>
                              <subNode:args>
                               <scalar:array/>
                              </subNode:args>
                             </node:Expr_MethodCall>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>321</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>321</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Scalar_LNumber>
                              <attribute:startLine>
                               <scalar:int>321</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>321</scalar:int>
                              </attribute:endLine>
                              <subNode:value>
                               <scalar:int>76</scalar:int>
                              </subNode:value>
                             </node:Scalar_LNumber>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>321</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>321</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Scalar_LNumber>
                              <attribute:startLine>
                               <scalar:int>321</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>321</scalar:int>
                              </attribute:endLine>
                              <subNode:value>
                               <scalar:int>0</scalar:int>
                              </subNode:value>
                             </node:Scalar_LNumber>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>321</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>321</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_ConstFetch>
                              <attribute:startLine>
                               <scalar:int>321</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>321</scalar:int>
                              </attribute:endLine>
                              <subNode:name>
                               <node:Name>
                                <attribute:startLine>
                                 <scalar:int>321</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>321</scalar:int>
                                </attribute:endLine>
                                <subNode:parts>
                                 <scalar:array>
                                  <scalar:string>false</scalar:string>
                                 </scalar:array>
                                </subNode:parts>
                               </node:Name>
                              </subNode:name>
                             </node:Expr_ConstFetch>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>321</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>321</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_PropertyFetch>
                              <attribute:startLine>
                               <scalar:int>321</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>321</scalar:int>
                              </attribute:endLine>
                              <subNode:var>
                               <node:Expr_Variable>
                                <attribute:startLine>
                                 <scalar:int>321</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>321</scalar:int>
                                </attribute:endLine>
                                <subNode:name>
                                 <scalar:string>this</scalar:string>
                                </subNode:name>
                               </node:Expr_Variable>
                              </subNode:var>
                              <subNode:name>
                               <scalar:string>LE</scalar:string>
                              </subNode:name>
                             </node:Expr_PropertyFetch>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                          </scalar:array>
                         </subNode:args>
                        </node:Expr_MethodCall>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                     </scalar:array>
                    </subNode:args>
                   </node:Expr_MethodCall>
                  </scalar:array>
                 </subNode:stmts>
                </node:Stmt_Else>
               </subNode:else>
               <subNode:cond>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>313</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>313</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>is_file</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:cond>
              </node:Stmt_If>
              <node:Stmt_Break>
               <attribute:startLine>
                <scalar:int>323</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>323</scalar:int>
               </attribute:endLine>
               <subNode:num>
                <scalar:null/>
               </subNode:num>
              </node:Stmt_Break>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_Case>
           <node:Stmt_Case>
            <attribute:startLine>
             <scalar:int>324</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>335</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>324</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>324</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>base64</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_If>
               <attribute:startLine>
                <scalar:int>325</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>334</scalar:int>
               </attribute:endLine>
               <subNode:stmts>
                <scalar:array>
                 <node:Expr_Assign>
                  <attribute:startLine>
                   <scalar:int>327</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>327</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>327</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>327</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>b64_os</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:expr>
                   <node:Expr_MethodCall>
                    <attribute:startLine>
                     <scalar:int>327</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>327</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_StaticCall>
                      <attribute:startLine>
                       <scalar:int>327</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>327</scalar:int>
                      </attribute:endLine>
                      <subNode:class>
                       <node:Name_FullyQualified>
                        <attribute:startLine>
                         <scalar:int>327</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>327</scalar:int>
                        </attribute:endLine>
                        <subNode:parts>
                         <scalar:array>
                          <scalar:string>Swift_Message_Encoder</scalar:string>
                         </scalar:array>
                        </subNode:parts>
                       </node:Name_FullyQualified>
                      </subNode:class>
                      <subNode:name>
                       <scalar:string>instance</scalar:string>
                      </subNode:name>
                      <subNode:args>
                       <scalar:array/>
                      </subNode:args>
                     </node:Expr_StaticCall>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>base64EncodeFile</scalar:string>
                    </subNode:name>
                    <subNode:args>
                     <scalar:array>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>327</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>327</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_MethodCall>
                         <attribute:startLine>
                          <scalar:int>327</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>327</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>327</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>327</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>this</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>getData</scalar:string>
                         </subNode:name>
                         <subNode:args>
                          <scalar:array/>
                         </subNode:args>
                        </node:Expr_MethodCall>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>327</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>327</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Scalar_LNumber>
                         <attribute:startLine>
                          <scalar:int>327</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>327</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:int>76</scalar:int>
                         </subNode:value>
                        </node:Scalar_LNumber>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>327</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>327</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_PropertyFetch>
                         <attribute:startLine>
                          <scalar:int>327</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>327</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>327</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>327</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>this</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>LE</scalar:string>
                         </subNode:name>
                        </node:Expr_PropertyFetch>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                     </scalar:array>
                    </subNode:args>
                   </node:Expr_MethodCall>
                  </subNode:expr>
                 </node:Expr_Assign>
                 <node:Stmt_While>
                  <attribute:startLine>
                   <scalar:int>328</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>329</scalar:int>
                  </attribute:endLine>
                  <subNode:cond>
                   <node:Expr_NotIdentical>
                    <attribute:startLine>
                     <scalar:int>328</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>328</scalar:int>
                    </attribute:endLine>
                    <subNode:left>
                     <node:Expr_ConstFetch>
                      <attribute:startLine>
                       <scalar:int>328</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>328</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <node:Name>
                        <attribute:startLine>
                         <scalar:int>328</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>328</scalar:int>
                        </attribute:endLine>
                        <subNode:parts>
                         <scalar:array>
                          <scalar:string>false</scalar:string>
                         </scalar:array>
                        </subNode:parts>
                       </node:Name>
                      </subNode:name>
                     </node:Expr_ConstFetch>
                    </subNode:left>
                    <subNode:right>
                     <node:Expr_Assign>
                      <attribute:startLine>
                       <scalar:int>328</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>328</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>328</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>328</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>bytes</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:expr>
                       <node:Expr_MethodCall>
                        <attribute:startLine>
                         <scalar:int>328</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>328</scalar:int>
                        </attribute:endLine>
                        <subNode:var>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>328</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>328</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>b64_os</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:var>
                        <subNode:name>
                         <scalar:string>read</scalar:string>
                        </subNode:name>
                        <subNode:args>
                         <scalar:array/>
                        </subNode:args>
                       </node:Expr_MethodCall>
                      </subNode:expr>
                     </node:Expr_Assign>
                    </subNode:right>
                   </node:Expr_NotIdentical>
                  </subNode:cond>
                  <subNode:stmts>
                   <scalar:array>
                    <node:Expr_MethodCall>
                     <attribute:startLine>
                      <scalar:int>329</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>329</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_PropertyFetch>
                       <attribute:startLine>
                        <scalar:int>329</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>329</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>329</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>329</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>this</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:name>
                        <scalar:string>cache</scalar:string>
                       </subNode:name>
                      </node:Expr_PropertyFetch>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>write</scalar:string>
                     </subNode:name>
                     <subNode:args>
                      <scalar:array>
                       <node:Arg>
                        <attribute:startLine>
                         <scalar:int>329</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>329</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <node:Scalar_String>
                          <attribute:startLine>
                           <scalar:int>329</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>329</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <scalar:string>body</scalar:string>
                          </subNode:value>
                         </node:Scalar_String>
                        </subNode:value>
                        <subNode:byRef>
                         <scalar:false/>
                        </subNode:byRef>
                       </node:Arg>
                       <node:Arg>
                        <attribute:startLine>
                         <scalar:int>329</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>329</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>329</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>329</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>bytes</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:value>
                        <subNode:byRef>
                         <scalar:false/>
                        </subNode:byRef>
                       </node:Arg>
                      </scalar:array>
                     </subNode:args>
                    </node:Expr_MethodCall>
                   </scalar:array>
                  </subNode:stmts>
                 </node:Stmt_While>
                </scalar:array>
               </subNode:stmts>
               <subNode:elseifs>
                <scalar:array/>
               </subNode:elseifs>
               <subNode:else>
                <node:Stmt_Else>
                 <attribute:startLine>
                  <scalar:int>331</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>334</scalar:int>
                 </attribute:endLine>
                 <subNode:stmts>
                  <scalar:array>
                   <node:Expr_MethodCall>
                    <attribute:startLine>
                     <scalar:int>333</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>333</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_PropertyFetch>
                      <attribute:startLine>
                       <scalar:int>333</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>333</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>333</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>333</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>this</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>cache</scalar:string>
                      </subNode:name>
                     </node:Expr_PropertyFetch>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>write</scalar:string>
                    </subNode:name>
                    <subNode:args>
                     <scalar:array>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>333</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>333</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>333</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>333</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>body</scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>333</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>333</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_MethodCall>
                         <attribute:startLine>
                          <scalar:int>333</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>333</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_StaticCall>
                           <attribute:startLine>
                            <scalar:int>333</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>333</scalar:int>
                           </attribute:endLine>
                           <subNode:class>
                            <node:Name_FullyQualified>
                             <attribute:startLine>
                              <scalar:int>333</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>333</scalar:int>
                             </attribute:endLine>
                             <subNode:parts>
                              <scalar:array>
                               <scalar:string>Swift_Message_Encoder</scalar:string>
                              </scalar:array>
                             </subNode:parts>
                            </node:Name_FullyQualified>
                           </subNode:class>
                           <subNode:name>
                            <scalar:string>instance</scalar:string>
                           </subNode:name>
                           <subNode:args>
                            <scalar:array/>
                           </subNode:args>
                          </node:Expr_StaticCall>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>base64Encode</scalar:string>
                         </subNode:name>
                         <subNode:args>
                          <scalar:array>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>333</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>333</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_MethodCall>
                              <attribute:startLine>
                               <scalar:int>333</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>333</scalar:int>
                              </attribute:endLine>
                              <subNode:var>
                               <node:Expr_Variable>
                                <attribute:startLine>
                                 <scalar:int>333</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>333</scalar:int>
                                </attribute:endLine>
                                <subNode:name>
                                 <scalar:string>this</scalar:string>
                                </subNode:name>
                               </node:Expr_Variable>
                              </subNode:var>
                              <subNode:name>
                               <scalar:string>getData</scalar:string>
                              </subNode:name>
                              <subNode:args>
                               <scalar:array/>
                              </subNode:args>
                             </node:Expr_MethodCall>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>333</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>333</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Scalar_LNumber>
                              <attribute:startLine>
                               <scalar:int>333</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>333</scalar:int>
                              </attribute:endLine>
                              <subNode:value>
                               <scalar:int>76</scalar:int>
                              </subNode:value>
                             </node:Scalar_LNumber>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>333</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>333</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Scalar_LNumber>
                              <attribute:startLine>
                               <scalar:int>333</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>333</scalar:int>
                              </attribute:endLine>
                              <subNode:value>
                               <scalar:int>0</scalar:int>
                              </subNode:value>
                             </node:Scalar_LNumber>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>333</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>333</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_ConstFetch>
                              <attribute:startLine>
                               <scalar:int>333</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>333</scalar:int>
                              </attribute:endLine>
                              <subNode:name>
                               <node:Name>
                                <attribute:startLine>
                                 <scalar:int>333</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>333</scalar:int>
                                </attribute:endLine>
                                <subNode:parts>
                                 <scalar:array>
                                  <scalar:string>false</scalar:string>
                                 </scalar:array>
                                </subNode:parts>
                               </node:Name>
                              </subNode:name>
                             </node:Expr_ConstFetch>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>333</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>333</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_PropertyFetch>
                              <attribute:startLine>
                               <scalar:int>333</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>333</scalar:int>
                              </attribute:endLine>
                              <subNode:var>
                               <node:Expr_Variable>
                                <attribute:startLine>
                                 <scalar:int>333</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>333</scalar:int>
                                </attribute:endLine>
                                <subNode:name>
                                 <scalar:string>this</scalar:string>
                                </subNode:name>
                               </node:Expr_Variable>
                              </subNode:var>
                              <subNode:name>
                               <scalar:string>LE</scalar:string>
                              </subNode:name>
                             </node:Expr_PropertyFetch>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                          </scalar:array>
                         </subNode:args>
                        </node:Expr_MethodCall>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                     </scalar:array>
                    </subNode:args>
                   </node:Expr_MethodCall>
                  </scalar:array>
                 </subNode:stmts>
                </node:Stmt_Else>
               </subNode:else>
               <subNode:cond>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>325</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>325</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>is_file</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:cond>
              </node:Stmt_If>
              <node:Stmt_Break>
               <attribute:startLine>
                <scalar:int>335</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>335</scalar:int>
               </attribute:endLine>
               <subNode:num>
                <scalar:null/>
               </subNode:num>
              </node:Stmt_Break>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_Case>
           <node:Stmt_Case>
            <attribute:startLine>
             <scalar:int>336</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>347</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>336</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>336</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>binary</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_If>
               <attribute:startLine>
                <scalar:int>337</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>346</scalar:int>
               </attribute:endLine>
               <subNode:stmts>
                <scalar:array>
                 <node:Expr_Assign>
                  <attribute:startLine>
                   <scalar:int>339</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>339</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>339</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>339</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>data</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:expr>
                   <node:Expr_MethodCall>
                    <attribute:startLine>
                     <scalar:int>339</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>339</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>339</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>339</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>this</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>getData</scalar:string>
                    </subNode:name>
                    <subNode:args>
                     <scalar:array/>
                    </subNode:args>
                   </node:Expr_MethodCall>
                  </subNode:expr>
                 </node:Expr_Assign>
                 <node:Stmt_While>
                  <attribute:startLine>
                   <scalar:int>340</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>341</scalar:int>
                  </attribute:endLine>
                  <subNode:cond>
                   <node:Expr_NotIdentical>
                    <attribute:startLine>
                     <scalar:int>340</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>340</scalar:int>
                    </attribute:endLine>
                    <subNode:left>
                     <node:Expr_ConstFetch>
                      <attribute:startLine>
                       <scalar:int>340</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>340</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <node:Name>
                        <attribute:startLine>
                         <scalar:int>340</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>340</scalar:int>
                        </attribute:endLine>
                        <subNode:parts>
                         <scalar:array>
                          <scalar:string>false</scalar:string>
                         </scalar:array>
                        </subNode:parts>
                       </node:Name>
                      </subNode:name>
                     </node:Expr_ConstFetch>
                    </subNode:left>
                    <subNode:right>
                     <node:Expr_Assign>
                      <attribute:startLine>
                       <scalar:int>340</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>340</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>340</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>340</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>bytes</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:expr>
                       <node:Expr_MethodCall>
                        <attribute:startLine>
                         <scalar:int>340</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>340</scalar:int>
                        </attribute:endLine>
                        <subNode:var>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>340</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>340</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>data</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:var>
                        <subNode:name>
                         <scalar:string>read</scalar:string>
                        </subNode:name>
                        <subNode:args>
                         <scalar:array>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>340</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>340</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Scalar_LNumber>
                             <attribute:startLine>
                              <scalar:int>340</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>340</scalar:int>
                             </attribute:endLine>
                             <subNode:value>
                              <scalar:int>8192</scalar:int>
                             </subNode:value>
                            </node:Scalar_LNumber>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                         </scalar:array>
                        </subNode:args>
                       </node:Expr_MethodCall>
                      </subNode:expr>
                     </node:Expr_Assign>
                    </subNode:right>
                   </node:Expr_NotIdentical>
                  </subNode:cond>
                  <subNode:stmts>
                   <scalar:array>
                    <node:Expr_MethodCall>
                     <attribute:startLine>
                      <scalar:int>341</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>341</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_PropertyFetch>
                       <attribute:startLine>
                        <scalar:int>341</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>341</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>341</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>341</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>this</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:name>
                        <scalar:string>cache</scalar:string>
                       </subNode:name>
                      </node:Expr_PropertyFetch>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>write</scalar:string>
                     </subNode:name>
                     <subNode:args>
                      <scalar:array>
                       <node:Arg>
                        <attribute:startLine>
                         <scalar:int>341</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>341</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <node:Scalar_String>
                          <attribute:startLine>
                           <scalar:int>341</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>341</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <scalar:string>body</scalar:string>
                          </subNode:value>
                         </node:Scalar_String>
                        </subNode:value>
                        <subNode:byRef>
                         <scalar:false/>
                        </subNode:byRef>
                       </node:Arg>
                       <node:Arg>
                        <attribute:startLine>
                         <scalar:int>341</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>341</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>341</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>341</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>bytes</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:value>
                        <subNode:byRef>
                         <scalar:false/>
                        </subNode:byRef>
                       </node:Arg>
                      </scalar:array>
                     </subNode:args>
                    </node:Expr_MethodCall>
                   </scalar:array>
                  </subNode:stmts>
                 </node:Stmt_While>
                </scalar:array>
               </subNode:stmts>
               <subNode:elseifs>
                <scalar:array/>
               </subNode:elseifs>
               <subNode:else>
                <node:Stmt_Else>
                 <attribute:startLine>
                  <scalar:int>343</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>346</scalar:int>
                 </attribute:endLine>
                 <subNode:stmts>
                  <scalar:array>
                   <node:Expr_MethodCall>
                    <attribute:startLine>
                     <scalar:int>345</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>345</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_PropertyFetch>
                      <attribute:startLine>
                       <scalar:int>345</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>345</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>345</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>345</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>this</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>cache</scalar:string>
                      </subNode:name>
                     </node:Expr_PropertyFetch>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>write</scalar:string>
                    </subNode:name>
                    <subNode:args>
                     <scalar:array>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>345</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>345</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>345</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>345</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>body</scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>345</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>345</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_MethodCall>
                         <attribute:startLine>
                          <scalar:int>345</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>345</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>345</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>345</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>this</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>getData</scalar:string>
                         </subNode:name>
                         <subNode:args>
                          <scalar:array/>
                         </subNode:args>
                        </node:Expr_MethodCall>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                     </scalar:array>
                    </subNode:args>
                   </node:Expr_MethodCall>
                  </scalar:array>
                 </subNode:stmts>
                </node:Stmt_Else>
               </subNode:else>
               <subNode:cond>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>337</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>337</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>is_file</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:cond>
              </node:Stmt_If>
              <node:Stmt_Break>
               <attribute:startLine>
                <scalar:int>347</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>347</scalar:int>
               </attribute:endLine>
               <subNode:num>
                <scalar:null/>
               </subNode:num>
              </node:Stmt_Break>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_Case>
           <node:Stmt_Case>
            <attribute:startLine>
             <scalar:int>348</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>359</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>348</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>348</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>7bit</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_If>
               <attribute:startLine>
                <scalar:int>349</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>358</scalar:int>
               </attribute:endLine>
               <subNode:stmts>
                <scalar:array>
                 <node:Expr_Assign>
                  <attribute:startLine>
                   <scalar:int>351</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>351</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>351</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>351</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>os</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:expr>
                   <node:Expr_MethodCall>
                    <attribute:startLine>
                     <scalar:int>351</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>351</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_StaticCall>
                      <attribute:startLine>
                       <scalar:int>351</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>351</scalar:int>
                      </attribute:endLine>
                      <subNode:class>
                       <node:Name_FullyQualified>
                        <attribute:startLine>
                         <scalar:int>351</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>351</scalar:int>
                        </attribute:endLine>
                        <subNode:parts>
                         <scalar:array>
                          <scalar:string>Swift_Message_Encoder</scalar:string>
                         </scalar:array>
                        </subNode:parts>
                       </node:Name_FullyQualified>
                      </subNode:class>
                      <subNode:name>
                       <scalar:string>instance</scalar:string>
                      </subNode:name>
                      <subNode:args>
                       <scalar:array/>
                      </subNode:args>
                     </node:Expr_StaticCall>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>encode7BitFile</scalar:string>
                    </subNode:name>
                    <subNode:args>
                     <scalar:array>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>351</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>351</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_MethodCall>
                         <attribute:startLine>
                          <scalar:int>351</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>351</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>351</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>351</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>this</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>getData</scalar:string>
                         </subNode:name>
                         <subNode:args>
                          <scalar:array/>
                         </subNode:args>
                        </node:Expr_MethodCall>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>351</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>351</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_PropertyFetch>
                         <attribute:startLine>
                          <scalar:int>351</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>351</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>351</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>351</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>this</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>wrap</scalar:string>
                         </subNode:name>
                        </node:Expr_PropertyFetch>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>351</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>351</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_PropertyFetch>
                         <attribute:startLine>
                          <scalar:int>351</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>351</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>351</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>351</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>this</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>LE</scalar:string>
                         </subNode:name>
                        </node:Expr_PropertyFetch>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                     </scalar:array>
                    </subNode:args>
                   </node:Expr_MethodCall>
                  </subNode:expr>
                 </node:Expr_Assign>
                 <node:Stmt_While>
                  <attribute:startLine>
                   <scalar:int>352</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>353</scalar:int>
                  </attribute:endLine>
                  <subNode:cond>
                   <node:Expr_NotIdentical>
                    <attribute:startLine>
                     <scalar:int>352</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>352</scalar:int>
                    </attribute:endLine>
                    <subNode:left>
                     <node:Expr_ConstFetch>
                      <attribute:startLine>
                       <scalar:int>352</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>352</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <node:Name>
                        <attribute:startLine>
                         <scalar:int>352</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>352</scalar:int>
                        </attribute:endLine>
                        <subNode:parts>
                         <scalar:array>
                          <scalar:string>false</scalar:string>
                         </scalar:array>
                        </subNode:parts>
                       </node:Name>
                      </subNode:name>
                     </node:Expr_ConstFetch>
                    </subNode:left>
                    <subNode:right>
                     <node:Expr_Assign>
                      <attribute:startLine>
                       <scalar:int>352</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>352</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>352</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>352</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>bytes</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:expr>
                       <node:Expr_MethodCall>
                        <attribute:startLine>
                         <scalar:int>352</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>352</scalar:int>
                        </attribute:endLine>
                        <subNode:var>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>352</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>352</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>os</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:var>
                        <subNode:name>
                         <scalar:string>read</scalar:string>
                        </subNode:name>
                        <subNode:args>
                         <scalar:array/>
                        </subNode:args>
                       </node:Expr_MethodCall>
                      </subNode:expr>
                     </node:Expr_Assign>
                    </subNode:right>
                   </node:Expr_NotIdentical>
                  </subNode:cond>
                  <subNode:stmts>
                   <scalar:array>
                    <node:Expr_MethodCall>
                     <attribute:startLine>
                      <scalar:int>353</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>353</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_PropertyFetch>
                       <attribute:startLine>
                        <scalar:int>353</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>353</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>353</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>353</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>this</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:name>
                        <scalar:string>cache</scalar:string>
                       </subNode:name>
                      </node:Expr_PropertyFetch>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>write</scalar:string>
                     </subNode:name>
                     <subNode:args>
                      <scalar:array>
                       <node:Arg>
                        <attribute:startLine>
                         <scalar:int>353</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>353</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <node:Scalar_String>
                          <attribute:startLine>
                           <scalar:int>353</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>353</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <scalar:string>body</scalar:string>
                          </subNode:value>
                         </node:Scalar_String>
                        </subNode:value>
                        <subNode:byRef>
                         <scalar:false/>
                        </subNode:byRef>
                       </node:Arg>
                       <node:Arg>
                        <attribute:startLine>
                         <scalar:int>353</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>353</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>353</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>353</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>bytes</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:value>
                        <subNode:byRef>
                         <scalar:false/>
                        </subNode:byRef>
                       </node:Arg>
                      </scalar:array>
                     </subNode:args>
                    </node:Expr_MethodCall>
                   </scalar:array>
                  </subNode:stmts>
                 </node:Stmt_While>
                </scalar:array>
               </subNode:stmts>
               <subNode:elseifs>
                <scalar:array/>
               </subNode:elseifs>
               <subNode:else>
                <node:Stmt_Else>
                 <attribute:startLine>
                  <scalar:int>355</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>358</scalar:int>
                 </attribute:endLine>
                 <subNode:stmts>
                  <scalar:array>
                   <node:Expr_MethodCall>
                    <attribute:startLine>
                     <scalar:int>357</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>357</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_PropertyFetch>
                      <attribute:startLine>
                       <scalar:int>357</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>357</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>357</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>357</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>this</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>cache</scalar:string>
                      </subNode:name>
                     </node:Expr_PropertyFetch>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>write</scalar:string>
                    </subNode:name>
                    <subNode:args>
                     <scalar:array>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>357</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>357</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>357</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>357</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>body</scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>357</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>357</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_MethodCall>
                         <attribute:startLine>
                          <scalar:int>357</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>357</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_StaticCall>
                           <attribute:startLine>
                            <scalar:int>357</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>357</scalar:int>
                           </attribute:endLine>
                           <subNode:class>
                            <node:Name_FullyQualified>
                             <attribute:startLine>
                              <scalar:int>357</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>357</scalar:int>
                             </attribute:endLine>
                             <subNode:parts>
                              <scalar:array>
                               <scalar:string>Swift_Message_Encoder</scalar:string>
                              </scalar:array>
                             </subNode:parts>
                            </node:Name_FullyQualified>
                           </subNode:class>
                           <subNode:name>
                            <scalar:string>instance</scalar:string>
                           </subNode:name>
                           <subNode:args>
                            <scalar:array/>
                           </subNode:args>
                          </node:Expr_StaticCall>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>encode7Bit</scalar:string>
                         </subNode:name>
                         <subNode:args>
                          <scalar:array>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>357</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>357</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_MethodCall>
                              <attribute:startLine>
                               <scalar:int>357</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>357</scalar:int>
                              </attribute:endLine>
                              <subNode:var>
                               <node:Expr_Variable>
                                <attribute:startLine>
                                 <scalar:int>357</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>357</scalar:int>
                                </attribute:endLine>
                                <subNode:name>
                                 <scalar:string>this</scalar:string>
                                </subNode:name>
                               </node:Expr_Variable>
                              </subNode:var>
                              <subNode:name>
                               <scalar:string>getData</scalar:string>
                              </subNode:name>
                              <subNode:args>
                               <scalar:array/>
                              </subNode:args>
                             </node:Expr_MethodCall>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>357</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>357</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_PropertyFetch>
                              <attribute:startLine>
                               <scalar:int>357</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>357</scalar:int>
                              </attribute:endLine>
                              <subNode:var>
                               <node:Expr_Variable>
                                <attribute:startLine>
                                 <scalar:int>357</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>357</scalar:int>
                                </attribute:endLine>
                                <subNode:name>
                                 <scalar:string>this</scalar:string>
                                </subNode:name>
                               </node:Expr_Variable>
                              </subNode:var>
                              <subNode:name>
                               <scalar:string>wrap</scalar:string>
                              </subNode:name>
                             </node:Expr_PropertyFetch>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>357</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>357</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_PropertyFetch>
                              <attribute:startLine>
                               <scalar:int>357</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>357</scalar:int>
                              </attribute:endLine>
                              <subNode:var>
                               <node:Expr_Variable>
                                <attribute:startLine>
                                 <scalar:int>357</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>357</scalar:int>
                                </attribute:endLine>
                                <subNode:name>
                                 <scalar:string>this</scalar:string>
                                </subNode:name>
                               </node:Expr_Variable>
                              </subNode:var>
                              <subNode:name>
                               <scalar:string>LE</scalar:string>
                              </subNode:name>
                             </node:Expr_PropertyFetch>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                          </scalar:array>
                         </subNode:args>
                        </node:Expr_MethodCall>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                     </scalar:array>
                    </subNode:args>
                   </node:Expr_MethodCall>
                  </scalar:array>
                 </subNode:stmts>
                </node:Stmt_Else>
               </subNode:else>
               <subNode:cond>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>349</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>349</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>is_file</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:cond>
              </node:Stmt_If>
              <node:Stmt_Break>
               <attribute:startLine>
                <scalar:int>359</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>359</scalar:int>
               </attribute:endLine>
               <subNode:num>
                <scalar:null/>
               </subNode:num>
              </node:Stmt_Break>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_Case>
           <node:Stmt_Case>
            <attribute:startLine>
             <scalar:int>360</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>360</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>360</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>360</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>8bit</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array/>
            </subNode:stmts>
           </node:Stmt_Case>
           <node:Stmt_Case>
            <attribute:startLine>
             <scalar:int>360</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>371</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <scalar:null/>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_If>
               <attribute:startLine>
                <scalar:int>361</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>370</scalar:int>
               </attribute:endLine>
               <subNode:stmts>
                <scalar:array>
                 <node:Expr_Assign>
                  <attribute:startLine>
                   <scalar:int>363</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>363</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>363</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>363</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>os</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:expr>
                   <node:Expr_MethodCall>
                    <attribute:startLine>
                     <scalar:int>363</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>363</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_StaticCall>
                      <attribute:startLine>
                       <scalar:int>363</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>363</scalar:int>
                      </attribute:endLine>
                      <subNode:class>
                       <node:Name_FullyQualified>
                        <attribute:startLine>
                         <scalar:int>363</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>363</scalar:int>
                        </attribute:endLine>
                        <subNode:parts>
                         <scalar:array>
                          <scalar:string>Swift_Message_Encoder</scalar:string>
                         </scalar:array>
                        </subNode:parts>
                       </node:Name_FullyQualified>
                      </subNode:class>
                      <subNode:name>
                       <scalar:string>instance</scalar:string>
                      </subNode:name>
                      <subNode:args>
                       <scalar:array/>
                      </subNode:args>
                     </node:Expr_StaticCall>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>encode8BitFile</scalar:string>
                    </subNode:name>
                    <subNode:args>
                     <scalar:array>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>363</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>363</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_MethodCall>
                         <attribute:startLine>
                          <scalar:int>363</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>363</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>363</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>363</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>this</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>getData</scalar:string>
                         </subNode:name>
                         <subNode:args>
                          <scalar:array/>
                         </subNode:args>
                        </node:Expr_MethodCall>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>363</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>363</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_PropertyFetch>
                         <attribute:startLine>
                          <scalar:int>363</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>363</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>363</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>363</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>this</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>wrap</scalar:string>
                         </subNode:name>
                        </node:Expr_PropertyFetch>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>363</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>363</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_PropertyFetch>
                         <attribute:startLine>
                          <scalar:int>363</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>363</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>363</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>363</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>this</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>LE</scalar:string>
                         </subNode:name>
                        </node:Expr_PropertyFetch>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                     </scalar:array>
                    </subNode:args>
                   </node:Expr_MethodCall>
                  </subNode:expr>
                 </node:Expr_Assign>
                 <node:Stmt_While>
                  <attribute:startLine>
                   <scalar:int>364</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>365</scalar:int>
                  </attribute:endLine>
                  <subNode:cond>
                   <node:Expr_NotIdentical>
                    <attribute:startLine>
                     <scalar:int>364</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>364</scalar:int>
                    </attribute:endLine>
                    <subNode:left>
                     <node:Expr_ConstFetch>
                      <attribute:startLine>
                       <scalar:int>364</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>364</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <node:Name>
                        <attribute:startLine>
                         <scalar:int>364</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>364</scalar:int>
                        </attribute:endLine>
                        <subNode:parts>
                         <scalar:array>
                          <scalar:string>false</scalar:string>
                         </scalar:array>
                        </subNode:parts>
                       </node:Name>
                      </subNode:name>
                     </node:Expr_ConstFetch>
                    </subNode:left>
                    <subNode:right>
                     <node:Expr_Assign>
                      <attribute:startLine>
                       <scalar:int>364</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>364</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>364</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>364</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>bytes</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:expr>
                       <node:Expr_MethodCall>
                        <attribute:startLine>
                         <scalar:int>364</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>364</scalar:int>
                        </attribute:endLine>
                        <subNode:var>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>364</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>364</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>os</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:var>
                        <subNode:name>
                         <scalar:string>read</scalar:string>
                        </subNode:name>
                        <subNode:args>
                         <scalar:array/>
                        </subNode:args>
                       </node:Expr_MethodCall>
                      </subNode:expr>
                     </node:Expr_Assign>
                    </subNode:right>
                   </node:Expr_NotIdentical>
                  </subNode:cond>
                  <subNode:stmts>
                   <scalar:array>
                    <node:Expr_MethodCall>
                     <attribute:startLine>
                      <scalar:int>365</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>365</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_PropertyFetch>
                       <attribute:startLine>
                        <scalar:int>365</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>365</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>365</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>365</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>this</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:name>
                        <scalar:string>cache</scalar:string>
                       </subNode:name>
                      </node:Expr_PropertyFetch>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>write</scalar:string>
                     </subNode:name>
                     <subNode:args>
                      <scalar:array>
                       <node:Arg>
                        <attribute:startLine>
                         <scalar:int>365</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>365</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <node:Scalar_String>
                          <attribute:startLine>
                           <scalar:int>365</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>365</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <scalar:string>body</scalar:string>
                          </subNode:value>
                         </node:Scalar_String>
                        </subNode:value>
                        <subNode:byRef>
                         <scalar:false/>
                        </subNode:byRef>
                       </node:Arg>
                       <node:Arg>
                        <attribute:startLine>
                         <scalar:int>365</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>365</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>365</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>365</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>bytes</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:value>
                        <subNode:byRef>
                         <scalar:false/>
                        </subNode:byRef>
                       </node:Arg>
                      </scalar:array>
                     </subNode:args>
                    </node:Expr_MethodCall>
                   </scalar:array>
                  </subNode:stmts>
                 </node:Stmt_While>
                </scalar:array>
               </subNode:stmts>
               <subNode:elseifs>
                <scalar:array/>
               </subNode:elseifs>
               <subNode:else>
                <node:Stmt_Else>
                 <attribute:startLine>
                  <scalar:int>367</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>370</scalar:int>
                 </attribute:endLine>
                 <subNode:stmts>
                  <scalar:array>
                   <node:Expr_MethodCall>
                    <attribute:startLine>
                     <scalar:int>369</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>369</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_PropertyFetch>
                      <attribute:startLine>
                       <scalar:int>369</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>369</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>369</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>369</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>this</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>cache</scalar:string>
                      </subNode:name>
                     </node:Expr_PropertyFetch>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>write</scalar:string>
                    </subNode:name>
                    <subNode:args>
                     <scalar:array>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>369</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>369</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>369</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>369</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>body</scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>369</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>369</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_MethodCall>
                         <attribute:startLine>
                          <scalar:int>369</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>369</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_StaticCall>
                           <attribute:startLine>
                            <scalar:int>369</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>369</scalar:int>
                           </attribute:endLine>
                           <subNode:class>
                            <node:Name_FullyQualified>
                             <attribute:startLine>
                              <scalar:int>369</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>369</scalar:int>
                             </attribute:endLine>
                             <subNode:parts>
                              <scalar:array>
                               <scalar:string>Swift_Message_Encoder</scalar:string>
                              </scalar:array>
                             </subNode:parts>
                            </node:Name_FullyQualified>
                           </subNode:class>
                           <subNode:name>
                            <scalar:string>instance</scalar:string>
                           </subNode:name>
                           <subNode:args>
                            <scalar:array/>
                           </subNode:args>
                          </node:Expr_StaticCall>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>encode8Bit</scalar:string>
                         </subNode:name>
                         <subNode:args>
                          <scalar:array>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>369</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>369</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_MethodCall>
                              <attribute:startLine>
                               <scalar:int>369</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>369</scalar:int>
                              </attribute:endLine>
                              <subNode:var>
                               <node:Expr_Variable>
                                <attribute:startLine>
                                 <scalar:int>369</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>369</scalar:int>
                                </attribute:endLine>
                                <subNode:name>
                                 <scalar:string>this</scalar:string>
                                </subNode:name>
                               </node:Expr_Variable>
                              </subNode:var>
                              <subNode:name>
                               <scalar:string>getData</scalar:string>
                              </subNode:name>
                              <subNode:args>
                               <scalar:array/>
                              </subNode:args>
                             </node:Expr_MethodCall>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>369</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>369</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_PropertyFetch>
                              <attribute:startLine>
                               <scalar:int>369</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>369</scalar:int>
                              </attribute:endLine>
                              <subNode:var>
                               <node:Expr_Variable>
                                <attribute:startLine>
                                 <scalar:int>369</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>369</scalar:int>
                                </attribute:endLine>
                                <subNode:name>
                                 <scalar:string>this</scalar:string>
                                </subNode:name>
                               </node:Expr_Variable>
                              </subNode:var>
                              <subNode:name>
                               <scalar:string>wrap</scalar:string>
                              </subNode:name>
                             </node:Expr_PropertyFetch>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>369</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>369</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_PropertyFetch>
                              <attribute:startLine>
                               <scalar:int>369</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>369</scalar:int>
                              </attribute:endLine>
                              <subNode:var>
                               <node:Expr_Variable>
                                <attribute:startLine>
                                 <scalar:int>369</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>369</scalar:int>
                                </attribute:endLine>
                                <subNode:name>
                                 <scalar:string>this</scalar:string>
                                </subNode:name>
                               </node:Expr_Variable>
                              </subNode:var>
                              <subNode:name>
                               <scalar:string>LE</scalar:string>
                              </subNode:name>
                             </node:Expr_PropertyFetch>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                          </scalar:array>
                         </subNode:args>
                        </node:Expr_MethodCall>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                     </scalar:array>
                    </subNode:args>
                   </node:Expr_MethodCall>
                  </scalar:array>
                 </subNode:stmts>
                </node:Stmt_Else>
               </subNode:else>
               <subNode:cond>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>361</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>361</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>is_file</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:cond>
              </node:Stmt_If>
              <node:Stmt_Break>
               <attribute:startLine>
                <scalar:int>371</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>371</scalar:int>
               </attribute:endLine>
               <subNode:num>
                <scalar:null/>
               </subNode:num>
              </node:Stmt_Break>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_Case>
          </scalar:array>
         </subNode:cases>
        </node:Stmt_Switch>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>373</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>373</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>373</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>373</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>joint_os</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>addStream</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>373</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>373</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>373</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>373</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>373</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>373</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>373</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>373</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>cache</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:var>
              <subNode:name>
               <scalar:string>getOutputStream</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>373</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>373</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>373</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>373</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>body</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>374</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>374</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>374</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>374</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>joint_os</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>addStream</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>374</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>374</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>374</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>374</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>374</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>374</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>374</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>374</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>cache</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:var>
              <subNode:name>
               <scalar:string>getOutputStream</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>374</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>374</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>374</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>374</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>append</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>375</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>375</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>375</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>375</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>joint_os</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>buildData</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="377">/**
   * Set the size at which lines wrap around (includes the CRLF)
   * @param int The length of a line
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>381</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>385</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>381</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>381</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>len</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>383</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>383</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>383</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>383</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>383</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>383</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>cache</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:name>
          <scalar:string>clear</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>383</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>383</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>383</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>383</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>body</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>384</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>384</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>384</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>384</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>384</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>384</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>wrap</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Cast_Int>
           <attribute:startLine>
            <scalar:int>384</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>384</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>384</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>384</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>len</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:expr>
          </node:Expr_Cast_Int>
         </subNode:expr>
        </node:Expr_Assign>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>setLineWrap</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="386">/**
   * Nest a child mime part in this document
   * @param Swift_Message_Mime
   * @param string The identifier to use, optional
   * @param int Add the part before (-1) or after (+1) the other parts
   * @return string The identifier for this part
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>393</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>407</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>393</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>393</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>mime</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <node:Name_FullyQualified>
           <attribute:startLine>
            <scalar:int>393</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>393</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>Swift_Message_Mime</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name_FullyQualified>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>393</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>393</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>id</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>393</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>393</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>393</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>393</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>393</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>393</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>after</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>393</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>393</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>1</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>395</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>401</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Do>
            <attribute:startLine>
             <scalar:int>397</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>400</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>400</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>400</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>400</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>400</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>array_key_exists</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>400</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>400</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>400</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>400</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>id</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>400</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>400</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_PropertyFetch>
                   <attribute:startLine>
                    <scalar:int>400</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>400</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>400</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>400</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>children</scalar:string>
                   </subNode:name>
                  </node:Expr_PropertyFetch>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>399</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>399</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>399</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>399</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>id</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:expr>
                <node:Expr_FuncCall>
                 <attribute:startLine>
                  <scalar:int>399</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>399</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>399</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>399</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>uniqid</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array/>
                 </subNode:args>
                </node:Expr_FuncCall>
               </subNode:expr>
              </node:Expr_Assign>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_Do>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Empty>
           <attribute:startLine>
            <scalar:int>395</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>395</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>395</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>395</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>id</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:expr>
          </node:Expr_Empty>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>402</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>402</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>402</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>402</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>id</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Cast_String>
           <attribute:startLine>
            <scalar:int>402</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>402</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>402</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>402</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>id</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:expr>
          </node:Expr_Cast_String>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>403</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>404</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>403</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>403</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>403</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>403</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>403</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>403</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>children</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>403</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>403</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>403</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>403</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>array_merge</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>403</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>403</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Array>
                   <attribute:startLine>
                    <scalar:int>403</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>403</scalar:int>
                   </attribute:endLine>
                   <subNode:items>
                    <scalar:array>
                     <node:Expr_ArrayItem>
                      <attribute:startLine>
                       <scalar:int>403</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>403</scalar:int>
                      </attribute:endLine>
                      <subNode:key>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>403</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>403</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>id</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:key>
                      <subNode:value>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>403</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>403</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>mime</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Expr_ArrayItem>
                    </scalar:array>
                   </subNode:items>
                  </node:Expr_Array>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>403</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>403</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_PropertyFetch>
                   <attribute:startLine>
                    <scalar:int>403</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>403</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>403</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>403</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>children</scalar:string>
                   </subNode:name>
                  </node:Expr_PropertyFetch>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <node:Stmt_Else>
           <attribute:startLine>
            <scalar:int>404</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>404</scalar:int>
           </attribute:endLine>
           <subNode:stmts>
            <scalar:array>
             <node:Expr_Assign>
              <attribute:startLine>
               <scalar:int>404</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>404</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_ArrayDimFetch>
                <attribute:startLine>
                 <scalar:int>404</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>404</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_PropertyFetch>
                  <attribute:startLine>
                   <scalar:int>404</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>404</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>404</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>404</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>this</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>children</scalar:string>
                  </subNode:name>
                 </node:Expr_PropertyFetch>
                </subNode:var>
                <subNode:dim>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>404</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>404</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>id</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:dim>
               </node:Expr_ArrayDimFetch>
              </subNode:var>
              <subNode:expr>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>404</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>404</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>mime</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:expr>
             </node:Expr_Assign>
            </scalar:array>
           </subNode:stmts>
          </node:Stmt_Else>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Equal>
           <attribute:startLine>
            <scalar:int>403</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>403</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>403</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>403</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>after</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:left>
           <subNode:right>
            <node:Expr_UnaryMinus>
             <attribute:startLine>
              <scalar:int>403</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>403</scalar:int>
             </attribute:endLine>
             <subNode:expr>
              <node:Scalar_LNumber>
               <attribute:startLine>
                <scalar:int>403</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>403</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <scalar:int>1</scalar:int>
               </subNode:value>
              </node:Scalar_LNumber>
             </subNode:expr>
            </node:Expr_UnaryMinus>
           </subNode:right>
          </node:Expr_Equal>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>406</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>406</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>406</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>406</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>id</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>addChild</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="408">/**
   * Check if a child exists identified by $id
   * @param string Identifier to look for
   * @return boolean
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>413</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>416</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>413</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>413</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>id</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>415</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>415</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>415</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>415</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>415</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>415</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>array_key_exists</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>415</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>415</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>415</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>415</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>id</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>415</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>415</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>415</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>415</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>415</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>415</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>children</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>hasChild</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="417">/**
   * Get a child document, identified by $id
   * @param string The identifier for this child
   * @return Swift_Message_Mime The child document
   * @throws Swift_Message_MimeException If no such child exists
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>423</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>434</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>423</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>423</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>id</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>425</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>433</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>427</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>427</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_ArrayDimFetch>
              <attribute:startLine>
               <scalar:int>427</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>427</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>427</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>427</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>427</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>427</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>children</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:var>
              <subNode:dim>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>427</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>427</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>id</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:dim>
             </node:Expr_ArrayDimFetch>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <node:Stmt_Else>
           <attribute:startLine>
            <scalar:int>429</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>433</scalar:int>
           </attribute:endLine>
           <subNode:stmts>
            <scalar:array>
             <node:Stmt_Throw>
              <attribute:startLine>
               <scalar:int>431</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>432</scalar:int>
              </attribute:endLine>
              <subNode:expr>
               <node:Expr_New>
                <attribute:startLine>
                 <scalar:int>431</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>432</scalar:int>
                </attribute:endLine>
                <subNode:class>
                 <node:Name_FullyQualified>
                  <attribute:startLine>
                   <scalar:int>431</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>431</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>Swift_Message_MimeException</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name_FullyQualified>
                </subNode:class>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>432</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>432</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Concat>
                     <attribute:startLine>
                      <scalar:int>432</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>432</scalar:int>
                     </attribute:endLine>
                     <subNode:left>
                      <node:Expr_Concat>
                       <attribute:startLine>
                        <scalar:int>432</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>432</scalar:int>
                       </attribute:endLine>
                       <subNode:left>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>432</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>432</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>Cannot retrieve child part identified by '</scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:left>
                       <subNode:right>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>432</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>432</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>id</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:right>
                      </node:Expr_Concat>
                     </subNode:left>
                     <subNode:right>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>432</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>432</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>' as it does not exist.  Consider using hasChild() to check.</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:right>
                    </node:Expr_Concat>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_New>
              </subNode:expr>
             </node:Stmt_Throw>
            </scalar:array>
           </subNode:stmts>
          </node:Stmt_Else>
         </subNode:else>
         <subNode:cond>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>425</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>425</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>425</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>425</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>hasChild</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>425</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>425</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>425</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>425</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>id</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:cond>
        </node:Stmt_If>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getChild</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="435">/**
   * Remove a part from the document
   * @param string The identifier of the child
   * @throws Swift_Message_MimeException If no such part exists
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>440</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>453</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>440</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>440</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>id</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>442</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>442</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>442</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>442</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>id</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Cast_String>
           <attribute:startLine>
            <scalar:int>442</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>442</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>442</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>442</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>id</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:expr>
          </node:Expr_Cast_String>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>443</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>452</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Throw>
            <attribute:startLine>
             <scalar:int>445</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>446</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_New>
              <attribute:startLine>
               <scalar:int>445</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>446</scalar:int>
              </attribute:endLine>
              <subNode:class>
               <node:Name_FullyQualified>
                <attribute:startLine>
                 <scalar:int>445</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>445</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>Swift_Message_MimeException</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name_FullyQualified>
              </subNode:class>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>446</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>446</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Concat>
                   <attribute:startLine>
                    <scalar:int>446</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>446</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Expr_Concat>
                     <attribute:startLine>
                      <scalar:int>446</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>446</scalar:int>
                     </attribute:endLine>
                     <subNode:left>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>446</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>446</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>Cannot remove child part identified by '</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:left>
                     <subNode:right>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>446</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>446</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>id</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:right>
                    </node:Expr_Concat>
                   </subNode:left>
                   <subNode:right>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>446</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>446</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>' as it does not exist. Consider using hasChild() to check.</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:right>
                  </node:Expr_Concat>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_New>
            </subNode:expr>
           </node:Stmt_Throw>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <node:Stmt_Else>
           <attribute:startLine>
            <scalar:int>448</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>452</scalar:int>
           </attribute:endLine>
           <subNode:stmts>
            <scalar:array>
             <node:Expr_Assign>
              <attribute:startLine>
               <scalar:int>450</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>450</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_ArrayDimFetch>
                <attribute:startLine>
                 <scalar:int>450</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>450</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_PropertyFetch>
                  <attribute:startLine>
                   <scalar:int>450</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>450</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>450</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>450</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>this</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>children</scalar:string>
                  </subNode:name>
                 </node:Expr_PropertyFetch>
                </subNode:var>
                <subNode:dim>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>450</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>450</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>id</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:dim>
               </node:Expr_ArrayDimFetch>
              </subNode:var>
              <subNode:expr>
               <node:Expr_ConstFetch>
                <attribute:startLine>
                 <scalar:int>450</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>450</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>450</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>450</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>null</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
               </node:Expr_ConstFetch>
              </subNode:expr>
             </node:Expr_Assign>
             <node:Stmt_Unset>
              <attribute:startLine>
               <scalar:int>451</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>451</scalar:int>
              </attribute:endLine>
              <subNode:vars>
               <scalar:array>
                <node:Expr_ArrayDimFetch>
                 <attribute:startLine>
                  <scalar:int>451</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>451</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_PropertyFetch>
                   <attribute:startLine>
                    <scalar:int>451</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>451</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>451</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>451</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>children</scalar:string>
                   </subNode:name>
                  </node:Expr_PropertyFetch>
                 </subNode:var>
                 <subNode:dim>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>451</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>451</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>id</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:dim>
                </node:Expr_ArrayDimFetch>
               </scalar:array>
              </subNode:vars>
             </node:Stmt_Unset>
            </scalar:array>
           </subNode:stmts>
          </node:Stmt_Else>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>443</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>443</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_MethodCall>
             <attribute:startLine>
              <scalar:int>443</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>443</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>443</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>443</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>hasChild</scalar:string>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>443</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>443</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>443</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>443</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>id</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_MethodCall>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>removeChild</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="454">/**
   * List the IDs of all children in this document
   * @return array
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>458</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>461</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>460</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>460</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>460</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>460</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>460</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>460</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>array_keys</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>460</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>460</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>460</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>460</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>460</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>460</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>children</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>listChildren</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="462">/**
   * Get the total number of children present in this document
   * @return int
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>466</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>469</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>468</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>468</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>468</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>468</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>468</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>468</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>count</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>468</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>468</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>468</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>468</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>468</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>468</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>children</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>numChildren</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="470">/**
   * Get the level at which this mime part would appear in a document
   * One of &quot;mixed&quot;, &quot;alternative&quot; or &quot;related&quot;
   * @return string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>475</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>475</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>17</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:null/>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getLevel</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="476">/**
   * Compile the entire MIME document into a string
   * The returned string may be used in other documents if needed.
   * @return Swift_Cache_OutputStream
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>481</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>495</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>483</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>483</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>483</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>483</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>preBuild</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array/>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>484</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>484</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>484</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>484</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>data</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>484</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>484</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>484</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>484</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>buildData</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>485</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>485</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>485</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>485</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>joint_os</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_New>
           <attribute:startLine>
            <scalar:int>485</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>485</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>485</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>485</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Swift_Cache_JointOutputStream</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_New>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>486</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>486</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>486</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>486</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>486</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>486</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>cache</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:name>
          <scalar:string>clear</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>486</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>486</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>486</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>486</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>headers</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>487</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>487</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>487</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>487</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>487</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>487</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>cache</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:name>
          <scalar:string>write</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>487</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>487</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>487</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>487</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>headers</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>487</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>487</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>487</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>487</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>487</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>487</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>487</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>487</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>headers</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:var>
              <subNode:name>
               <scalar:string>build</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array/>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>488</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>488</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>488</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>488</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>joint_os</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>addStream</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>488</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>488</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>488</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>488</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>488</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>488</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>488</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>488</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>cache</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:var>
              <subNode:name>
               <scalar:string>getOutputStream</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>488</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>488</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>488</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>488</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>headers</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>489</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>489</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>489</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>489</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>489</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>489</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>cache</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:name>
          <scalar:string>clear</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>489</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>489</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>489</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>489</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>dbl_le</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>490</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>490</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>490</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>490</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>490</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>490</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>cache</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:name>
          <scalar:string>write</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>490</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>490</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>490</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>490</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>dbl_le</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>490</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>490</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>490</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>490</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>490</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>490</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>str_repeat</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>490</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>490</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_PropertyFetch>
                   <attribute:startLine>
                    <scalar:int>490</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>490</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>490</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>490</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>LE</scalar:string>
                   </subNode:name>
                  </node:Expr_PropertyFetch>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>490</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>490</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Scalar_LNumber>
                   <attribute:startLine>
                    <scalar:int>490</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>490</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:int>2</scalar:int>
                   </subNode:value>
                  </node:Scalar_LNumber>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>491</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>491</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>491</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>491</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>joint_os</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>addStream</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>491</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>491</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>491</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>491</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>491</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>491</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>491</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>491</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>cache</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:var>
              <subNode:name>
               <scalar:string>getOutputStream</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>491</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>491</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>491</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>491</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>dbl_le</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>492</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>492</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>492</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>492</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>joint_os</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>addStream</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>492</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>492</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>492</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>492</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>data</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>493</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>493</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>493</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>493</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>joint_os</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>build</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="496">/**
   * Execute any logic needed prior to building
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>499</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>499</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>17</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:null/>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>preBuild</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
    </scalar:array>
   </subNode:stmts>
   <subNode:name>
    <scalar:string>Swift_Message_Mime</scalar:string>
   </subNode:name>
   <subNode:namespacedName>
    <node:Name>
     <attribute:comments>
      <scalar:array>
       <comment isDocComment="true" line="16">/**
 * Mime is the underbelly for Messages, Attachments, Parts, Embedded Images, Forwarded Mail, etc
 * In fact, every single component of the composed email is simply a new Mime document nested inside another
 * When you piece an email together in this way you see just how straight-forward it really is
 * @package Swift_Message
 * @author Chris Corbyn &lt;chris@w3style.co.uk&gt;
 */</comment>
      </scalar:array>
     </attribute:comments>
     <attribute:startLine>
      <scalar:int>23</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>500</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Swift_Message_Mime</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name>
   </subNode:namespacedName>
  </node:Stmt_Class>
 </scalar:array>
</AST>
