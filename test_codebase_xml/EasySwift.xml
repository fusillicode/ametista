<?xml version="1.0" encoding="UTF-8"?>
<AST xmlns:node="http://nikic.github.com/PHPParser/XML/node" xmlns:subNode="http://nikic.github.com/PHPParser/XML/subNode" xmlns:attribute="http://nikic.github.com/PHPParser/XML/attribute" xmlns:scalar="http://nikic.github.com/PHPParser/XML/scalar">
 <scalar:array>
  <node:Expr_Include>
   <attribute:comments>
    <scalar:array>
     <comment isDocComment="true" line="3">/**
 * EasySwift: Swift Mailer Facade
 * Please read the LICENSE file
 * @author Chris Corbyn &lt;chris@w3style.co.uk&gt;
 * @package EasySwift
 * @version 1.0.3
 * @license GNU Lesser General Public License
 */</comment>
    </scalar:array>
   </attribute:comments>
   <attribute:startLine>
    <scalar:int>12</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>12</scalar:int>
   </attribute:endLine>
   <subNode:expr>
    <node:Expr_Concat>
     <attribute:startLine>
      <scalar:int>12</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>12</scalar:int>
     </attribute:endLine>
     <subNode:left>
      <node:Expr_FuncCall>
       <attribute:startLine>
        <scalar:int>12</scalar:int>
       </attribute:startLine>
       <attribute:endLine>
        <scalar:int>12</scalar:int>
       </attribute:endLine>
       <subNode:name>
        <node:Name>
         <attribute:startLine>
          <scalar:int>12</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>12</scalar:int>
         </attribute:endLine>
         <subNode:parts>
          <scalar:array>
           <scalar:string>dirname</scalar:string>
          </scalar:array>
         </subNode:parts>
        </node:Name>
       </subNode:name>
       <subNode:args>
        <scalar:array>
         <node:Arg>
          <attribute:startLine>
           <scalar:int>12</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>12</scalar:int>
          </attribute:endLine>
          <subNode:value>
           <node:Scalar_FileConst>
            <attribute:startLine>
             <scalar:int>12</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>12</scalar:int>
            </attribute:endLine>
           </node:Scalar_FileConst>
          </subNode:value>
          <subNode:byRef>
           <scalar:false/>
          </subNode:byRef>
         </node:Arg>
        </scalar:array>
       </subNode:args>
      </node:Expr_FuncCall>
     </subNode:left>
     <subNode:right>
      <node:Scalar_String>
       <attribute:startLine>
        <scalar:int>12</scalar:int>
       </attribute:startLine>
       <attribute:endLine>
        <scalar:int>12</scalar:int>
       </attribute:endLine>
       <subNode:value>
        <scalar:string>/Swift/ClassLoader.php</scalar:string>
       </subNode:value>
      </node:Scalar_String>
     </subNode:right>
    </node:Expr_Concat>
   </subNode:expr>
   <subNode:type>
    <scalar:int>4</scalar:int>
   </subNode:type>
  </node:Expr_Include>
  <node:Expr_StaticCall>
   <attribute:startLine>
    <scalar:int>13</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>13</scalar:int>
   </attribute:endLine>
   <subNode:class>
    <node:Name_FullyQualified>
     <attribute:startLine>
      <scalar:int>13</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>13</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Swift_ClassLoader</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name_FullyQualified>
   </subNode:class>
   <subNode:name>
    <scalar:string>load</scalar:string>
   </subNode:name>
   <subNode:args>
    <scalar:array>
     <node:Arg>
      <attribute:startLine>
       <scalar:int>13</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>13</scalar:int>
      </attribute:endLine>
      <subNode:value>
       <node:Scalar_String>
        <attribute:startLine>
         <scalar:int>13</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>13</scalar:int>
        </attribute:endLine>
        <subNode:value>
         <scalar:string>Swift</scalar:string>
        </subNode:value>
       </node:Scalar_String>
      </subNode:value>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
     </node:Arg>
    </scalar:array>
   </subNode:args>
  </node:Expr_StaticCall>
  <node:Expr_StaticCall>
   <attribute:startLine>
    <scalar:int>14</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>14</scalar:int>
   </attribute:endLine>
   <subNode:class>
    <node:Name_FullyQualified>
     <attribute:startLine>
      <scalar:int>14</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>14</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Swift_ClassLoader</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name_FullyQualified>
   </subNode:class>
   <subNode:name>
    <scalar:string>load</scalar:string>
   </subNode:name>
   <subNode:args>
    <scalar:array>
     <node:Arg>
      <attribute:startLine>
       <scalar:int>14</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>14</scalar:int>
      </attribute:endLine>
      <subNode:value>
       <node:Scalar_String>
        <attribute:startLine>
         <scalar:int>14</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>14</scalar:int>
        </attribute:endLine>
        <subNode:value>
         <scalar:string>Swift_Connection_SMTP</scalar:string>
        </subNode:value>
       </node:Scalar_String>
      </subNode:value>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
     </node:Arg>
    </scalar:array>
   </subNode:args>
  </node:Expr_StaticCall>
  <node:Expr_StaticCall>
   <attribute:startLine>
    <scalar:int>15</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>15</scalar:int>
   </attribute:endLine>
   <subNode:class>
    <node:Name_FullyQualified>
     <attribute:startLine>
      <scalar:int>15</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>15</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Swift_ClassLoader</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name_FullyQualified>
   </subNode:class>
   <subNode:name>
    <scalar:string>load</scalar:string>
   </subNode:name>
   <subNode:args>
    <scalar:array>
     <node:Arg>
      <attribute:startLine>
       <scalar:int>15</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>15</scalar:int>
      </attribute:endLine>
      <subNode:value>
       <node:Scalar_String>
        <attribute:startLine>
         <scalar:int>15</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>15</scalar:int>
        </attribute:endLine>
        <subNode:value>
         <scalar:string>Swift_Connection_Sendmail</scalar:string>
        </subNode:value>
       </node:Scalar_String>
      </subNode:value>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
     </node:Arg>
    </scalar:array>
   </subNode:args>
  </node:Expr_StaticCall>
  <node:Stmt_If>
   <attribute:comments>
    <scalar:array>
     <comment isDocComment="false" line="17">//Some constants for backwards compatibility with v2 code
</comment>
    </scalar:array>
   </attribute:comments>
   <attribute:startLine>
    <scalar:int>18</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>18</scalar:int>
   </attribute:endLine>
   <subNode:stmts>
    <scalar:array>
     <node:Expr_FuncCall>
      <attribute:startLine>
       <scalar:int>18</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>18</scalar:int>
      </attribute:endLine>
      <subNode:name>
       <node:Name>
        <attribute:startLine>
         <scalar:int>18</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>18</scalar:int>
        </attribute:endLine>
        <subNode:parts>
         <scalar:array>
          <scalar:string>define</scalar:string>
         </scalar:array>
        </subNode:parts>
       </node:Name>
      </subNode:name>
      <subNode:args>
       <scalar:array>
        <node:Arg>
         <attribute:startLine>
          <scalar:int>18</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>18</scalar:int>
         </attribute:endLine>
         <subNode:value>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>18</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>18</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>SWIFT_TLS</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:value>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Arg>
        <node:Arg>
         <attribute:startLine>
          <scalar:int>18</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>18</scalar:int>
         </attribute:endLine>
         <subNode:value>
          <node:Expr_ClassConstFetch>
           <attribute:startLine>
            <scalar:int>18</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>18</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>18</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>18</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Swift_Connection_SMTP</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
           <subNode:name>
            <scalar:string>ENC_TLS</scalar:string>
           </subNode:name>
          </node:Expr_ClassConstFetch>
         </subNode:value>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Arg>
       </scalar:array>
      </subNode:args>
     </node:Expr_FuncCall>
    </scalar:array>
   </subNode:stmts>
   <subNode:elseifs>
    <scalar:array/>
   </subNode:elseifs>
   <subNode:else>
    <scalar:null/>
   </subNode:else>
   <subNode:cond>
    <node:Expr_BooleanNot>
     <attribute:startLine>
      <scalar:int>18</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>18</scalar:int>
     </attribute:endLine>
     <subNode:expr>
      <node:Expr_FuncCall>
       <attribute:startLine>
        <scalar:int>18</scalar:int>
       </attribute:startLine>
       <attribute:endLine>
        <scalar:int>18</scalar:int>
       </attribute:endLine>
       <subNode:name>
        <node:Name>
         <attribute:startLine>
          <scalar:int>18</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>18</scalar:int>
         </attribute:endLine>
         <subNode:parts>
          <scalar:array>
           <scalar:string>defined</scalar:string>
          </scalar:array>
         </subNode:parts>
        </node:Name>
       </subNode:name>
       <subNode:args>
        <scalar:array>
         <node:Arg>
          <attribute:startLine>
           <scalar:int>18</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>18</scalar:int>
          </attribute:endLine>
          <subNode:value>
           <node:Scalar_String>
            <attribute:startLine>
             <scalar:int>18</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>18</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <scalar:string>SWIFT_TLS</scalar:string>
            </subNode:value>
           </node:Scalar_String>
          </subNode:value>
          <subNode:byRef>
           <scalar:false/>
          </subNode:byRef>
         </node:Arg>
        </scalar:array>
       </subNode:args>
      </node:Expr_FuncCall>
     </subNode:expr>
    </node:Expr_BooleanNot>
   </subNode:cond>
  </node:Stmt_If>
  <node:Stmt_If>
   <attribute:startLine>
    <scalar:int>19</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>19</scalar:int>
   </attribute:endLine>
   <subNode:stmts>
    <scalar:array>
     <node:Expr_FuncCall>
      <attribute:startLine>
       <scalar:int>19</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>19</scalar:int>
      </attribute:endLine>
      <subNode:name>
       <node:Name>
        <attribute:startLine>
         <scalar:int>19</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>19</scalar:int>
        </attribute:endLine>
        <subNode:parts>
         <scalar:array>
          <scalar:string>define</scalar:string>
         </scalar:array>
        </subNode:parts>
       </node:Name>
      </subNode:name>
      <subNode:args>
       <scalar:array>
        <node:Arg>
         <attribute:startLine>
          <scalar:int>19</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>19</scalar:int>
         </attribute:endLine>
         <subNode:value>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>19</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>19</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>SWIFT_SSL</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:value>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Arg>
        <node:Arg>
         <attribute:startLine>
          <scalar:int>19</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>19</scalar:int>
         </attribute:endLine>
         <subNode:value>
          <node:Expr_ClassConstFetch>
           <attribute:startLine>
            <scalar:int>19</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>19</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>19</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>19</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Swift_Connection_SMTP</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
           <subNode:name>
            <scalar:string>ENC_SSL</scalar:string>
           </subNode:name>
          </node:Expr_ClassConstFetch>
         </subNode:value>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Arg>
       </scalar:array>
      </subNode:args>
     </node:Expr_FuncCall>
    </scalar:array>
   </subNode:stmts>
   <subNode:elseifs>
    <scalar:array/>
   </subNode:elseifs>
   <subNode:else>
    <scalar:null/>
   </subNode:else>
   <subNode:cond>
    <node:Expr_BooleanNot>
     <attribute:startLine>
      <scalar:int>19</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>19</scalar:int>
     </attribute:endLine>
     <subNode:expr>
      <node:Expr_FuncCall>
       <attribute:startLine>
        <scalar:int>19</scalar:int>
       </attribute:startLine>
       <attribute:endLine>
        <scalar:int>19</scalar:int>
       </attribute:endLine>
       <subNode:name>
        <node:Name>
         <attribute:startLine>
          <scalar:int>19</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>19</scalar:int>
         </attribute:endLine>
         <subNode:parts>
          <scalar:array>
           <scalar:string>defined</scalar:string>
          </scalar:array>
         </subNode:parts>
        </node:Name>
       </subNode:name>
       <subNode:args>
        <scalar:array>
         <node:Arg>
          <attribute:startLine>
           <scalar:int>19</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>19</scalar:int>
          </attribute:endLine>
          <subNode:value>
           <node:Scalar_String>
            <attribute:startLine>
             <scalar:int>19</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>19</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <scalar:string>SWIFT_SSL</scalar:string>
            </subNode:value>
           </node:Scalar_String>
          </subNode:value>
          <subNode:byRef>
           <scalar:false/>
          </subNode:byRef>
         </node:Arg>
        </scalar:array>
       </subNode:args>
      </node:Expr_FuncCall>
     </subNode:expr>
    </node:Expr_BooleanNot>
   </subNode:cond>
  </node:Stmt_If>
  <node:Stmt_If>
   <attribute:startLine>
    <scalar:int>20</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>20</scalar:int>
   </attribute:endLine>
   <subNode:stmts>
    <scalar:array>
     <node:Expr_FuncCall>
      <attribute:startLine>
       <scalar:int>20</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>20</scalar:int>
      </attribute:endLine>
      <subNode:name>
       <node:Name>
        <attribute:startLine>
         <scalar:int>20</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>20</scalar:int>
        </attribute:endLine>
        <subNode:parts>
         <scalar:array>
          <scalar:string>define</scalar:string>
         </scalar:array>
        </subNode:parts>
       </node:Name>
      </subNode:name>
      <subNode:args>
       <scalar:array>
        <node:Arg>
         <attribute:startLine>
          <scalar:int>20</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>20</scalar:int>
         </attribute:endLine>
         <subNode:value>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>20</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>20</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>SWIFT_OPEN</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:value>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Arg>
        <node:Arg>
         <attribute:startLine>
          <scalar:int>20</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>20</scalar:int>
         </attribute:endLine>
         <subNode:value>
          <node:Expr_ClassConstFetch>
           <attribute:startLine>
            <scalar:int>20</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>20</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>20</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>20</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Swift_Connection_SMTP</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
           <subNode:name>
            <scalar:string>ENC_OFF</scalar:string>
           </subNode:name>
          </node:Expr_ClassConstFetch>
         </subNode:value>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Arg>
       </scalar:array>
      </subNode:args>
     </node:Expr_FuncCall>
    </scalar:array>
   </subNode:stmts>
   <subNode:elseifs>
    <scalar:array/>
   </subNode:elseifs>
   <subNode:else>
    <scalar:null/>
   </subNode:else>
   <subNode:cond>
    <node:Expr_BooleanNot>
     <attribute:startLine>
      <scalar:int>20</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>20</scalar:int>
     </attribute:endLine>
     <subNode:expr>
      <node:Expr_FuncCall>
       <attribute:startLine>
        <scalar:int>20</scalar:int>
       </attribute:startLine>
       <attribute:endLine>
        <scalar:int>20</scalar:int>
       </attribute:endLine>
       <subNode:name>
        <node:Name>
         <attribute:startLine>
          <scalar:int>20</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>20</scalar:int>
         </attribute:endLine>
         <subNode:parts>
          <scalar:array>
           <scalar:string>defined</scalar:string>
          </scalar:array>
         </subNode:parts>
        </node:Name>
       </subNode:name>
       <subNode:args>
        <scalar:array>
         <node:Arg>
          <attribute:startLine>
           <scalar:int>20</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>20</scalar:int>
          </attribute:endLine>
          <subNode:value>
           <node:Scalar_String>
            <attribute:startLine>
             <scalar:int>20</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>20</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <scalar:string>SWIFT_OPEN</scalar:string>
            </subNode:value>
           </node:Scalar_String>
          </subNode:value>
          <subNode:byRef>
           <scalar:false/>
          </subNode:byRef>
         </node:Arg>
        </scalar:array>
       </subNode:args>
      </node:Expr_FuncCall>
     </subNode:expr>
    </node:Expr_BooleanNot>
   </subNode:cond>
  </node:Stmt_If>
  <node:Stmt_If>
   <attribute:startLine>
    <scalar:int>21</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>21</scalar:int>
   </attribute:endLine>
   <subNode:stmts>
    <scalar:array>
     <node:Expr_FuncCall>
      <attribute:startLine>
       <scalar:int>21</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>21</scalar:int>
      </attribute:endLine>
      <subNode:name>
       <node:Name>
        <attribute:startLine>
         <scalar:int>21</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>21</scalar:int>
        </attribute:endLine>
        <subNode:parts>
         <scalar:array>
          <scalar:string>define</scalar:string>
         </scalar:array>
        </subNode:parts>
       </node:Name>
      </subNode:name>
      <subNode:args>
       <scalar:array>
        <node:Arg>
         <attribute:startLine>
          <scalar:int>21</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>21</scalar:int>
         </attribute:endLine>
         <subNode:value>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>21</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>21</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>SWIFT_SECURE_PORT</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:value>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Arg>
        <node:Arg>
         <attribute:startLine>
          <scalar:int>21</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>21</scalar:int>
         </attribute:endLine>
         <subNode:value>
          <node:Expr_ClassConstFetch>
           <attribute:startLine>
            <scalar:int>21</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>21</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>21</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>21</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Swift_Connection_SMTP</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
           <subNode:name>
            <scalar:string>PORT_SECURE</scalar:string>
           </subNode:name>
          </node:Expr_ClassConstFetch>
         </subNode:value>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Arg>
       </scalar:array>
      </subNode:args>
     </node:Expr_FuncCall>
    </scalar:array>
   </subNode:stmts>
   <subNode:elseifs>
    <scalar:array/>
   </subNode:elseifs>
   <subNode:else>
    <scalar:null/>
   </subNode:else>
   <subNode:cond>
    <node:Expr_BooleanNot>
     <attribute:startLine>
      <scalar:int>21</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>21</scalar:int>
     </attribute:endLine>
     <subNode:expr>
      <node:Expr_FuncCall>
       <attribute:startLine>
        <scalar:int>21</scalar:int>
       </attribute:startLine>
       <attribute:endLine>
        <scalar:int>21</scalar:int>
       </attribute:endLine>
       <subNode:name>
        <node:Name>
         <attribute:startLine>
          <scalar:int>21</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>21</scalar:int>
         </attribute:endLine>
         <subNode:parts>
          <scalar:array>
           <scalar:string>defined</scalar:string>
          </scalar:array>
         </subNode:parts>
        </node:Name>
       </subNode:name>
       <subNode:args>
        <scalar:array>
         <node:Arg>
          <attribute:startLine>
           <scalar:int>21</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>21</scalar:int>
          </attribute:endLine>
          <subNode:value>
           <node:Scalar_String>
            <attribute:startLine>
             <scalar:int>21</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>21</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <scalar:string>SWIFT_SECURE_PORT</scalar:string>
            </subNode:value>
           </node:Scalar_String>
          </subNode:value>
          <subNode:byRef>
           <scalar:false/>
          </subNode:byRef>
         </node:Arg>
        </scalar:array>
       </subNode:args>
      </node:Expr_FuncCall>
     </subNode:expr>
    </node:Expr_BooleanNot>
   </subNode:cond>
  </node:Stmt_If>
  <node:Stmt_If>
   <attribute:startLine>
    <scalar:int>22</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>22</scalar:int>
   </attribute:endLine>
   <subNode:stmts>
    <scalar:array>
     <node:Expr_FuncCall>
      <attribute:startLine>
       <scalar:int>22</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>22</scalar:int>
      </attribute:endLine>
      <subNode:name>
       <node:Name>
        <attribute:startLine>
         <scalar:int>22</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>22</scalar:int>
        </attribute:endLine>
        <subNode:parts>
         <scalar:array>
          <scalar:string>define</scalar:string>
         </scalar:array>
        </subNode:parts>
       </node:Name>
      </subNode:name>
      <subNode:args>
       <scalar:array>
        <node:Arg>
         <attribute:startLine>
          <scalar:int>22</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>22</scalar:int>
         </attribute:endLine>
         <subNode:value>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>22</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>22</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>SWIFT_DEFAULT_PORT</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:value>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Arg>
        <node:Arg>
         <attribute:startLine>
          <scalar:int>22</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>22</scalar:int>
         </attribute:endLine>
         <subNode:value>
          <node:Expr_ClassConstFetch>
           <attribute:startLine>
            <scalar:int>22</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>22</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>22</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>22</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Swift_Connection_SMTP</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
           <subNode:name>
            <scalar:string>PORT_DEFAULT</scalar:string>
           </subNode:name>
          </node:Expr_ClassConstFetch>
         </subNode:value>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Arg>
       </scalar:array>
      </subNode:args>
     </node:Expr_FuncCall>
    </scalar:array>
   </subNode:stmts>
   <subNode:elseifs>
    <scalar:array/>
   </subNode:elseifs>
   <subNode:else>
    <scalar:null/>
   </subNode:else>
   <subNode:cond>
    <node:Expr_BooleanNot>
     <attribute:startLine>
      <scalar:int>22</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>22</scalar:int>
     </attribute:endLine>
     <subNode:expr>
      <node:Expr_FuncCall>
       <attribute:startLine>
        <scalar:int>22</scalar:int>
       </attribute:startLine>
       <attribute:endLine>
        <scalar:int>22</scalar:int>
       </attribute:endLine>
       <subNode:name>
        <node:Name>
         <attribute:startLine>
          <scalar:int>22</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>22</scalar:int>
         </attribute:endLine>
         <subNode:parts>
          <scalar:array>
           <scalar:string>defined</scalar:string>
          </scalar:array>
         </subNode:parts>
        </node:Name>
       </subNode:name>
       <subNode:args>
        <scalar:array>
         <node:Arg>
          <attribute:startLine>
           <scalar:int>22</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>22</scalar:int>
          </attribute:endLine>
          <subNode:value>
           <node:Scalar_String>
            <attribute:startLine>
             <scalar:int>22</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>22</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <scalar:string>SWIFT_DEFAULT_PORT</scalar:string>
            </subNode:value>
           </node:Scalar_String>
          </subNode:value>
          <subNode:byRef>
           <scalar:false/>
          </subNode:byRef>
         </node:Arg>
        </scalar:array>
       </subNode:args>
      </node:Expr_FuncCall>
     </subNode:expr>
    </node:Expr_BooleanNot>
   </subNode:cond>
  </node:Stmt_If>
  <node:Stmt_Class>
   <attribute:comments>
    <scalar:array>
     <comment isDocComment="true" line="24">/**
 * EasySwift: Facade for Swift Mailer Version 3.
 * Provides (most of) the API from older versions of Swift, wrapped around the new version 3 API.
 * Due to the popularity of the new API, EasySwift will not be around indefinitely.
 * @package EasySwift
 * @author Chris Corbyn &lt;chris@w3style.co.uk&gt;
 * @deprecated
 */</comment>
    </scalar:array>
   </attribute:comments>
   <attribute:startLine>
    <scalar:int>32</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>949</scalar:int>
   </attribute:endLine>
   <subNode:type>
    <scalar:int>0</scalar:int>
   </subNode:type>
   <subNode:extends>
    <scalar:null/>
   </subNode:extends>
   <subNode:implements>
    <scalar:array/>
   </subNode:implements>
   <subNode:stmts>
    <scalar:array>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="34">/**
   * The instance of Swift this class wrappers
   * @var Swift
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>38</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>38</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>38</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>38</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>swift</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>38</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>38</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>38</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>38</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="39">/**
   * This value becomes set to true when Swift fails
   * @var boolean
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>43</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>43</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>43</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>43</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>failed</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>43</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>43</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>43</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>43</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>false</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="44">/**
   * The number of loaded plugins
   * @var int
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>48</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>48</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>48</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>48</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>pluginCount</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>48</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>48</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>0</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="49">/**
   * An instance of Swift_Message
   * @var Swift_Message
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>53</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>53</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>53</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>53</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>message</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>53</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>53</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>53</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>53</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="54">/**
   * An address list to send to (Cc, Bcc, To..)
   * @var Swift_RecipientList
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>58</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>58</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>58</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>58</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>recipients</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>58</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>58</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>58</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>58</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="59">/**
   * If all recipients should get the same copy of the message, including headers
   * This is already implied if any Cc or Bcc recipients are set
   * @var boolean
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>64</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>64</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>64</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>64</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>exactCopy</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>64</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>64</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>64</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>64</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>false</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="65">/**
   * If EasySwift should get rid of the message and recipients once it's done sending
   * @var boolean
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>69</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>69</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>69</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>69</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>autoFlush</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>69</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>69</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>69</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>69</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>true</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="70">/**
   * A list of the IDs of all parts added to the message
   * @var array
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>74</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>74</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>74</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>74</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>partIds</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_Array>
           <attribute:startLine>
            <scalar:int>74</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>74</scalar:int>
           </attribute:endLine>
           <subNode:items>
            <scalar:array/>
           </subNode:items>
          </node:Expr_Array>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="75">/**
   * A list of all the IDs of the attachments add to the message
   * @var array
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>79</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>79</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>79</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>79</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>attachmentIds</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_Array>
           <attribute:startLine>
            <scalar:int>79</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>79</scalar:int>
           </attribute:endLine>
           <subNode:items>
            <scalar:array/>
           </subNode:items>
          </node:Expr_Array>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="80">/**
   * The last response received from the server
   * @var string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>84</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>84</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>84</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>84</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>lastResponse</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>84</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>84</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string></scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="85">/**
   * The 3 digit code in the last response received from the server
   * @var int
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>89</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>89</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>89</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>89</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>responseCode</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>89</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>89</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>0</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="90">/**
   * The list of errors handled at runtime
   * @var array
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>94</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>94</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>94</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>94</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>errors</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_Array>
           <attribute:startLine>
            <scalar:int>94</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>94</scalar:int>
           </attribute:endLine>
           <subNode:items>
            <scalar:array/>
           </subNode:items>
          </node:Expr_Array>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="95">/**
   * The last error received
   * @var string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>99</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>99</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>99</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>99</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>lastError</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>99</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>99</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>99</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>99</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="101">/**
   * Constructor
   * @param Swift_Connection The connection to use
   * @param string The domain name of this server (not the SMTP server)
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>106</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>118</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>106</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>106</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>connection</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <node:Name_FullyQualified>
           <attribute:startLine>
            <scalar:int>106</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>106</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>Swift_Connection</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name_FullyQualified>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>106</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>106</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>domain</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>106</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>106</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>106</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>106</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_TryCatch>
         <attribute:startLine>
          <scalar:int>108</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>115</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>109</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>109</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>109</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>109</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>109</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>109</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>swift</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:var>
            <subNode:expr>
             <node:Expr_New>
              <attribute:startLine>
               <scalar:int>109</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>109</scalar:int>
              </attribute:endLine>
              <subNode:class>
               <node:Name_FullyQualified>
                <attribute:startLine>
                 <scalar:int>109</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>109</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>Swift</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name_FullyQualified>
              </subNode:class>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>109</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>109</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>109</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>109</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>connection</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>109</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>109</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>109</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>109</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>domain</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>109</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>109</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_ClassConstFetch>
                   <attribute:startLine>
                    <scalar:int>109</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>109</scalar:int>
                   </attribute:endLine>
                   <subNode:class>
                    <node:Name_FullyQualified>
                     <attribute:startLine>
                      <scalar:int>109</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>109</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>Swift</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name_FullyQualified>
                   </subNode:class>
                   <subNode:name>
                    <scalar:string>ENABLE_LOGGING</scalar:string>
                   </subNode:name>
                  </node:Expr_ClassConstFetch>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_New>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_StaticCall>
            <attribute:startLine>
             <scalar:int>110</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>110</scalar:int>
            </attribute:endLine>
            <subNode:class>
             <node:Name_FullyQualified>
              <attribute:startLine>
               <scalar:int>110</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>110</scalar:int>
              </attribute:endLine>
              <subNode:parts>
               <scalar:array>
                <scalar:string>Swift_ClassLoader</scalar:string>
               </scalar:array>
              </subNode:parts>
             </node:Name_FullyQualified>
            </subNode:class>
            <subNode:name>
             <scalar:string>load</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>110</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>110</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>110</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>110</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>Swift_Plugin_EasySwiftResponseTracker</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_StaticCall>
           <node:Expr_MethodCall>
            <attribute:startLine>
             <scalar:int>111</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>111</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>111</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>111</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>111</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>111</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>swift</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:var>
            <subNode:name>
             <scalar:string>attachPlugin</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>111</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>111</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_New>
                 <attribute:startLine>
                  <scalar:int>111</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>111</scalar:int>
                 </attribute:endLine>
                 <subNode:class>
                  <node:Name_FullyQualified>
                   <attribute:startLine>
                    <scalar:int>111</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>111</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>Swift_Plugin_EasySwiftResponseTracker</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name_FullyQualified>
                 </subNode:class>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>111</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>111</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>111</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>111</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>this</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_New>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>111</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>111</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>111</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>111</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>_ResponseTracker</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_MethodCall>
          </scalar:array>
         </subNode:stmts>
         <subNode:catches>
          <scalar:array>
           <node:Stmt_Catch>
            <attribute:startLine>
             <scalar:int>112</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>115</scalar:int>
            </attribute:endLine>
            <subNode:type>
             <node:Name_FullyQualified>
              <attribute:startLine>
               <scalar:int>112</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>112</scalar:int>
              </attribute:endLine>
              <subNode:parts>
               <scalar:array>
                <scalar:string>Swift_ConnectionException</scalar:string>
               </scalar:array>
              </subNode:parts>
             </node:Name_FullyQualified>
            </subNode:type>
            <subNode:var>
             <scalar:string>e</scalar:string>
            </subNode:var>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>113</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>113</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>113</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>113</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>113</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>113</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>failed</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:var>
               <subNode:expr>
                <node:Expr_ConstFetch>
                 <attribute:startLine>
                  <scalar:int>113</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>113</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>113</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>113</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>true</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                </node:Expr_ConstFetch>
               </subNode:expr>
              </node:Expr_Assign>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>114</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>114</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>114</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>114</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>this</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>setError</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>114</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>114</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Concat>
                    <attribute:startLine>
                     <scalar:int>114</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>114</scalar:int>
                    </attribute:endLine>
                    <subNode:left>
                     <node:Scalar_String>
                      <attribute:startLine>
                       <scalar:int>114</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>114</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <scalar:string>The connection failed to start.  An exception was thrown:&lt;br /&gt;</scalar:string>
                      </subNode:value>
                     </node:Scalar_String>
                    </subNode:left>
                    <subNode:right>
                     <node:Expr_MethodCall>
                      <attribute:startLine>
                       <scalar:int>114</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>114</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>114</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>114</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>e</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>getMessage</scalar:string>
                      </subNode:name>
                      <subNode:args>
                       <scalar:array/>
                      </subNode:args>
                     </node:Expr_MethodCall>
                    </subNode:right>
                   </node:Expr_Concat>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_MethodCall>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_Catch>
          </scalar:array>
         </subNode:catches>
         <subNode:finallyStmts>
          <scalar:null/>
         </subNode:finallyStmts>
        </node:Stmt_TryCatch>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>116</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>116</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>116</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>116</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>newMessage</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array/>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>117</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>117</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>117</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>117</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>newRecipientList</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array/>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>__construct</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="119">/**
   * Set an error message
   * @param string Error message
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>123</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>126</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>123</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>123</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>msg</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>125</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>125</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_ArrayDimFetch>
           <attribute:startLine>
            <scalar:int>125</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>125</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>125</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>125</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>125</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>125</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>errors</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:var>
           <subNode:dim>
            <scalar:null/>
           </subNode:dim>
          </node:Expr_ArrayDimFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Assign>
           <attribute:startLine>
            <scalar:int>125</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>125</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>125</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>125</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>125</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>125</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>lastError</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:var>
           <subNode:expr>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>125</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>125</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>msg</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:expr>
          </node:Expr_Assign>
         </subNode:expr>
        </node:Expr_Assign>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>setError</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="127">/**
   * Get the full list of errors
   * @return array
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>131</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>134</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>133</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>133</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>133</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>133</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>133</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>133</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>errors</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getErrors</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="135">/**
   * Get the last error that occurred
   * @return string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>139</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>142</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>141</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>141</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>141</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>141</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>141</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>141</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>lastError</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getLastError</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="143">/**
   * Clear the current list of errors
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>146</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>150</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>148</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>148</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>148</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>148</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>148</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>148</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>errors</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>148</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>148</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>148</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>148</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>149</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>149</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>149</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>149</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>149</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>149</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>errors</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Array>
           <attribute:startLine>
            <scalar:int>149</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>149</scalar:int>
           </attribute:endLine>
           <subNode:items>
            <scalar:array/>
           </subNode:items>
          </node:Expr_Array>
         </subNode:expr>
        </node:Expr_Assign>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>flushErrors</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="151">/**
   * Turn automatic flsuhing on or off.
   * This in ON by deault.  It removes the message and all parts after sending.
   * @param boolean
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>156</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>159</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>156</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>156</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>flush</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>156</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>156</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>156</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>156</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>true</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>158</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>158</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>158</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>158</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>158</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>158</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>autoFlush</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>158</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>158</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>flush</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Expr_Assign>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>autoFlush</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="160">/**
   * Set the maximum size of the log
   * @param int
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>164</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>168</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>164</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>164</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>size</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>166</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>166</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>166</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>166</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>log</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_StaticCall>
           <attribute:startLine>
            <scalar:int>166</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>166</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>166</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>166</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Swift_LogContainer</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
           <subNode:name>
            <scalar:string>getLog</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_StaticCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>167</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>167</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>167</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>167</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>log</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>setMaxSize</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>167</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>167</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>167</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>167</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>size</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>setMaxLogSize</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="169">/**
   * Turn logging on or off (saves memory)
   * @param boolean
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>173</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>178</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>173</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>173</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>use</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>173</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>173</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>173</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>173</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>true</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>175</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>175</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>175</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>175</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>log</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_StaticCall>
           <attribute:startLine>
            <scalar:int>175</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>175</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>175</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>175</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Swift_LogContainer</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
           <subNode:name>
            <scalar:string>getLog</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_StaticCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>176</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>177</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_MethodCall>
            <attribute:startLine>
             <scalar:int>176</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>176</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>176</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>176</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>log</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:name>
             <scalar:string>setLogLevel</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>176</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>176</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_ClassConstFetch>
                 <attribute:startLine>
                  <scalar:int>176</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>176</scalar:int>
                 </attribute:endLine>
                 <subNode:class>
                  <node:Name_FullyQualified>
                   <attribute:startLine>
                    <scalar:int>176</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>176</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>Swift_Log</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name_FullyQualified>
                 </subNode:class>
                 <subNode:name>
                  <scalar:string>LOG_NETWORK</scalar:string>
                 </subNode:name>
                </node:Expr_ClassConstFetch>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_MethodCall>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <node:Stmt_Else>
           <attribute:startLine>
            <scalar:int>177</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>177</scalar:int>
           </attribute:endLine>
           <subNode:stmts>
            <scalar:array>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>177</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>177</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>177</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>177</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>log</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>setLogLevel</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>177</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>177</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_ClassConstFetch>
                   <attribute:startLine>
                    <scalar:int>177</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>177</scalar:int>
                   </attribute:endLine>
                   <subNode:class>
                    <node:Name_FullyQualified>
                     <attribute:startLine>
                      <scalar:int>177</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>177</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>Swift_Log</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name_FullyQualified>
                   </subNode:class>
                   <subNode:name>
                    <scalar:string>LOG_NOTHING</scalar:string>
                   </subNode:name>
                  </node:Expr_ClassConstFetch>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_MethodCall>
            </scalar:array>
           </subNode:stmts>
          </node:Stmt_Else>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>176</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>176</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>use</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:cond>
        </node:Stmt_If>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>useLogging</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="179">/**
   * Enable line resizing (on 1000 by default)
   * @param int The number of characters allowed on a line
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>183</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>186</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>183</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>183</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>size</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>183</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>183</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>1000</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>185</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>185</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>185</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>185</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>185</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>185</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>message</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:name>
          <scalar:string>setLineWrap</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>185</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>185</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>185</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>185</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>size</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>useAutoLineResizing</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="187">/**
   * Dump the log contents
   * @deprecated
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>191</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>194</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>193</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>193</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>193</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>193</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>193</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>193</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>dumpLog</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getTransactions</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="195">/**
   * Dump the contents of the log to the browser
   * The log contains some &amp;lt; and &amp;gt; characters so you may need to view source
   * Note that this method dumps data to the browser, it does NOT return anything.
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>200</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>204</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>202</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>202</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>202</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>202</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>log</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_StaticCall>
           <attribute:startLine>
            <scalar:int>202</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>202</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>202</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>202</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Swift_LogContainer</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
           <subNode:name>
            <scalar:string>getLog</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_StaticCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>203</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>203</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>203</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>203</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>log</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>dump</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array/>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>dumpLog</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="205">/**
   * This method should be called if you do not wish to send messages in batch mode (i.e. if all recipients should see each others' addresses)
   * @param boolean If this mode should be used
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>209</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>212</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>209</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>209</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>bool</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>209</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>209</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>209</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>209</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>true</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>211</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>211</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>211</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>211</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>211</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>211</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>exactCopy</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>211</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>211</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>bool</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Expr_Assign>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>useExactCopy</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="213">/**
   * Reset the current message and start a fresh one
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>216</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>222</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>216</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>216</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>msg</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>216</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>216</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>216</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>216</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>false</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>218</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>218</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>218</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>218</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>218</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>218</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>msg</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_New>
              <attribute:startLine>
               <scalar:int>218</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>218</scalar:int>
              </attribute:endLine>
              <subNode:class>
               <node:Name_FullyQualified>
                <attribute:startLine>
                 <scalar:int>218</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>218</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>Swift_Message</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name_FullyQualified>
              </subNode:class>
              <subNode:args>
               <scalar:array/>
              </subNode:args>
             </node:Expr_New>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>218</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>218</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>218</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>218</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>msg</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>219</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>219</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>219</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>219</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>219</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>219</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>message</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>219</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>219</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>msg</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>220</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>220</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>220</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>220</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>220</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>220</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>partIds</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Array>
           <attribute:startLine>
            <scalar:int>220</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>220</scalar:int>
           </attribute:endLine>
           <subNode:items>
            <scalar:array/>
           </subNode:items>
          </node:Expr_Array>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>221</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>221</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>221</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>221</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>221</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>221</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>attachmentIds</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Array>
           <attribute:startLine>
            <scalar:int>221</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>221</scalar:int>
           </attribute:endLine>
           <subNode:items>
            <scalar:array/>
           </subNode:items>
          </node:Expr_Array>
         </subNode:expr>
        </node:Expr_Assign>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>newMessage</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="223">/**
   * Clear out all message parts
   * @return boolean
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>227</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>241</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>229</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>229</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>229</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>229</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>success</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>229</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>229</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>229</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>229</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>true</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_Foreach>
         <attribute:startLine>
          <scalar:int>230</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>238</scalar:int>
         </attribute:endLine>
         <subNode:keyVar>
          <scalar:null/>
         </subNode:keyVar>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_TryCatch>
            <attribute:startLine>
             <scalar:int>232</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>237</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>233</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>233</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>233</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>233</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>233</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>233</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>message</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:var>
               <subNode:name>
                <scalar:string>detach</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>233</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>233</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>233</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>233</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>id</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_MethodCall>
             </scalar:array>
            </subNode:stmts>
            <subNode:catches>
             <scalar:array>
              <node:Stmt_Catch>
               <attribute:startLine>
                <scalar:int>234</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>237</scalar:int>
               </attribute:endLine>
               <subNode:type>
                <node:Name_FullyQualified>
                 <attribute:startLine>
                  <scalar:int>234</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>234</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>Swift_Message_MimeException</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name_FullyQualified>
               </subNode:type>
               <subNode:var>
                <scalar:string>e</scalar:string>
               </subNode:var>
               <subNode:stmts>
                <scalar:array>
                 <node:Expr_Assign>
                  <attribute:startLine>
                   <scalar:int>235</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>235</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>235</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>235</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>success</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:expr>
                   <node:Expr_ConstFetch>
                    <attribute:startLine>
                     <scalar:int>235</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>235</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <node:Name>
                      <attribute:startLine>
                       <scalar:int>235</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>235</scalar:int>
                      </attribute:endLine>
                      <subNode:parts>
                       <scalar:array>
                        <scalar:string>false</scalar:string>
                       </scalar:array>
                      </subNode:parts>
                     </node:Name>
                    </subNode:name>
                   </node:Expr_ConstFetch>
                  </subNode:expr>
                 </node:Expr_Assign>
                 <node:Expr_MethodCall>
                  <attribute:startLine>
                   <scalar:int>236</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>236</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>236</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>236</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>this</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>setError</scalar:string>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>236</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>236</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Expr_Concat>
                       <attribute:startLine>
                        <scalar:int>236</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>236</scalar:int>
                       </attribute:endLine>
                       <subNode:left>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>236</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>236</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>A MIME part failed to detach due to the error:&lt;br /&gt;</scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:left>
                       <subNode:right>
                        <node:Expr_MethodCall>
                         <attribute:startLine>
                          <scalar:int>236</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>236</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>236</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>236</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>e</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>getMessage</scalar:string>
                         </subNode:name>
                         <subNode:args>
                          <scalar:array/>
                         </subNode:args>
                        </node:Expr_MethodCall>
                       </subNode:right>
                      </node:Expr_Concat>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_MethodCall>
                </scalar:array>
               </subNode:stmts>
              </node:Stmt_Catch>
             </scalar:array>
            </subNode:catches>
            <subNode:finallyStmts>
             <scalar:null/>
            </subNode:finallyStmts>
           </node:Stmt_TryCatch>
          </scalar:array>
         </subNode:stmts>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>230</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>230</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>230</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>230</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>partIds</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
         <subNode:valueVar>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>230</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>230</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>id</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:valueVar>
        </node:Stmt_Foreach>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>239</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>239</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>239</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>239</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>239</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>239</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>partIds</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Array>
           <attribute:startLine>
            <scalar:int>239</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>239</scalar:int>
           </attribute:endLine>
           <subNode:items>
            <scalar:array/>
           </subNode:items>
          </node:Expr_Array>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>240</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>240</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>240</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>240</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>success</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>flushParts</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="242">/**
   * Clear out all attachments
   * @return boolean
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>246</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>260</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>248</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>248</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>248</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>248</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>success</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>248</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>248</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>248</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>248</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>true</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_Foreach>
         <attribute:startLine>
          <scalar:int>249</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>257</scalar:int>
         </attribute:endLine>
         <subNode:keyVar>
          <scalar:null/>
         </subNode:keyVar>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_TryCatch>
            <attribute:startLine>
             <scalar:int>251</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>256</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>252</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>252</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>252</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>252</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>252</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>252</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>message</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:var>
               <subNode:name>
                <scalar:string>detach</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>252</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>252</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>252</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>252</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>id</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_MethodCall>
             </scalar:array>
            </subNode:stmts>
            <subNode:catches>
             <scalar:array>
              <node:Stmt_Catch>
               <attribute:startLine>
                <scalar:int>253</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>256</scalar:int>
               </attribute:endLine>
               <subNode:type>
                <node:Name_FullyQualified>
                 <attribute:startLine>
                  <scalar:int>253</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>253</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>Swift_Message_MimeException</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name_FullyQualified>
               </subNode:type>
               <subNode:var>
                <scalar:string>e</scalar:string>
               </subNode:var>
               <subNode:stmts>
                <scalar:array>
                 <node:Expr_Assign>
                  <attribute:startLine>
                   <scalar:int>254</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>254</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>254</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>254</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>success</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:expr>
                   <node:Expr_ConstFetch>
                    <attribute:startLine>
                     <scalar:int>254</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>254</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <node:Name>
                      <attribute:startLine>
                       <scalar:int>254</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>254</scalar:int>
                      </attribute:endLine>
                      <subNode:parts>
                       <scalar:array>
                        <scalar:string>false</scalar:string>
                       </scalar:array>
                      </subNode:parts>
                     </node:Name>
                    </subNode:name>
                   </node:Expr_ConstFetch>
                  </subNode:expr>
                 </node:Expr_Assign>
                 <node:Expr_MethodCall>
                  <attribute:startLine>
                   <scalar:int>255</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>255</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>255</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>255</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>this</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>setError</scalar:string>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>255</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>255</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Expr_Concat>
                       <attribute:startLine>
                        <scalar:int>255</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>255</scalar:int>
                       </attribute:endLine>
                       <subNode:left>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>255</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>255</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>An attachment failed to detach due to the error:&lt;br /&gt;</scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:left>
                       <subNode:right>
                        <node:Expr_MethodCall>
                         <attribute:startLine>
                          <scalar:int>255</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>255</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>255</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>255</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>e</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>getMessage</scalar:string>
                         </subNode:name>
                         <subNode:args>
                          <scalar:array/>
                         </subNode:args>
                        </node:Expr_MethodCall>
                       </subNode:right>
                      </node:Expr_Concat>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_MethodCall>
                </scalar:array>
               </subNode:stmts>
              </node:Stmt_Catch>
             </scalar:array>
            </subNode:catches>
            <subNode:finallyStmts>
             <scalar:null/>
            </subNode:finallyStmts>
           </node:Stmt_TryCatch>
          </scalar:array>
         </subNode:stmts>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>249</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>249</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>249</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>249</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>attachmentIds</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
         <subNode:valueVar>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>249</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>249</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>id</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:valueVar>
        </node:Stmt_Foreach>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>258</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>258</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>258</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>258</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>258</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>258</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>attachmentIds</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Array>
           <attribute:startLine>
            <scalar:int>258</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>258</scalar:int>
           </attribute:endLine>
           <subNode:items>
            <scalar:array/>
           </subNode:items>
          </node:Expr_Array>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>259</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>259</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>259</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>259</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>success</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>flushAttachments</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="261">/**
   * Clear out all message headers
   * @deprecated
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>265</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>268</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>267</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>267</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>267</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>267</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>newMessage</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array/>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>flushHeaders</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="269">/**
   * Reset the current list of recipients and start a new one
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>272</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>276</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>272</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>272</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>list</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>272</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>272</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>272</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>272</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>false</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>274</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>274</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>274</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>274</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>274</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>274</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>list</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_New>
              <attribute:startLine>
               <scalar:int>274</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>274</scalar:int>
              </attribute:endLine>
              <subNode:class>
               <node:Name_FullyQualified>
                <attribute:startLine>
                 <scalar:int>274</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>274</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>Swift_RecipientList</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name_FullyQualified>
              </subNode:class>
              <subNode:args>
               <scalar:array/>
              </subNode:args>
             </node:Expr_New>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>274</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>274</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>274</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>274</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>list</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>275</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>275</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>275</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>275</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>275</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>275</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>recipients</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>275</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>275</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>list</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Expr_Assign>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>newRecipientList</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="277">/**
   * Check if Swift has failed or not
   * This facade stops processing if so
   * @return boolean
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>282</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>285</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>284</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>284</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>284</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>284</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>284</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>284</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>failed</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>hasFailed</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="286">/**
   * Check if the current connection is open or not
   * @return boolean
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>290</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>293</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>292</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>292</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanAnd>
           <attribute:startLine>
            <scalar:int>292</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>292</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_NotIdentical>
             <attribute:startLine>
              <scalar:int>292</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>292</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_PropertyFetch>
               <attribute:startLine>
                <scalar:int>292</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>292</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>292</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>292</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>this</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>swift</scalar:string>
               </subNode:name>
              </node:Expr_PropertyFetch>
             </subNode:left>
             <subNode:right>
              <node:Expr_ConstFetch>
               <attribute:startLine>
                <scalar:int>292</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>292</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>292</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>292</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>null</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
              </node:Expr_ConstFetch>
             </subNode:right>
            </node:Expr_NotIdentical>
           </subNode:left>
           <subNode:right>
            <node:Expr_MethodCall>
             <attribute:startLine>
              <scalar:int>292</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>292</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_PropertyFetch>
               <attribute:startLine>
                <scalar:int>292</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>292</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>292</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>292</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>292</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>292</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>swift</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:var>
               <subNode:name>
                <scalar:string>connection</scalar:string>
               </subNode:name>
              </node:Expr_PropertyFetch>
             </subNode:var>
             <subNode:name>
              <scalar:string>isAlive</scalar:string>
             </subNode:name>
             <subNode:args>
              <scalar:array/>
             </subNode:args>
            </node:Expr_MethodCall>
           </subNode:right>
          </node:Expr_BooleanAnd>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isConnected</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="294">/**
   * Connect to the MTA if not already connected
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>297</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>310</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>299</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>308</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_TryCatch>
            <attribute:startLine>
             <scalar:int>301</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>307</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>302</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>302</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>302</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>302</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>302</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>302</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>swift</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:var>
               <subNode:name>
                <scalar:string>connect</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array/>
               </subNode:args>
              </node:Expr_MethodCall>
              <node:Stmt_Return>
               <attribute:startLine>
                <scalar:int>303</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>303</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_ConstFetch>
                 <attribute:startLine>
                  <scalar:int>303</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>303</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>303</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>303</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>true</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                </node:Expr_ConstFetch>
               </subNode:expr>
              </node:Stmt_Return>
             </scalar:array>
            </subNode:stmts>
            <subNode:catches>
             <scalar:array>
              <node:Stmt_Catch>
               <attribute:startLine>
                <scalar:int>304</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>307</scalar:int>
               </attribute:endLine>
               <subNode:type>
                <node:Name_FullyQualified>
                 <attribute:startLine>
                  <scalar:int>304</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>304</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>Swift_ConnectionException</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name_FullyQualified>
               </subNode:type>
               <subNode:var>
                <scalar:string>e</scalar:string>
               </subNode:var>
               <subNode:stmts>
                <scalar:array>
                 <node:Expr_Assign>
                  <attribute:startLine>
                   <scalar:int>305</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>305</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_PropertyFetch>
                    <attribute:startLine>
                     <scalar:int>305</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>305</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>305</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>305</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>this</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>failed</scalar:string>
                    </subNode:name>
                   </node:Expr_PropertyFetch>
                  </subNode:var>
                  <subNode:expr>
                   <node:Expr_ConstFetch>
                    <attribute:startLine>
                     <scalar:int>305</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>305</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <node:Name>
                      <attribute:startLine>
                       <scalar:int>305</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>305</scalar:int>
                      </attribute:endLine>
                      <subNode:parts>
                       <scalar:array>
                        <scalar:string>true</scalar:string>
                       </scalar:array>
                      </subNode:parts>
                     </node:Name>
                    </subNode:name>
                   </node:Expr_ConstFetch>
                  </subNode:expr>
                 </node:Expr_Assign>
                 <node:Expr_MethodCall>
                  <attribute:startLine>
                   <scalar:int>306</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>306</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>306</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>306</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>this</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>setError</scalar:string>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>306</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>306</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Expr_Concat>
                       <attribute:startLine>
                        <scalar:int>306</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>306</scalar:int>
                       </attribute:endLine>
                       <subNode:left>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>306</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>306</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>Swift failed to run the connection process:&lt;br /&gt;</scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:left>
                       <subNode:right>
                        <node:Expr_MethodCall>
                         <attribute:startLine>
                          <scalar:int>306</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>306</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>306</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>306</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>e</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>getMessage</scalar:string>
                         </subNode:name>
                         <subNode:args>
                          <scalar:array/>
                         </subNode:args>
                        </node:Expr_MethodCall>
                       </subNode:right>
                      </node:Expr_Concat>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_MethodCall>
                </scalar:array>
               </subNode:stmts>
              </node:Stmt_Catch>
             </scalar:array>
            </subNode:catches>
            <subNode:finallyStmts>
             <scalar:null/>
            </subNode:finallyStmts>
           </node:Stmt_TryCatch>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>299</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>299</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_MethodCall>
             <attribute:startLine>
              <scalar:int>299</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>299</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>299</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>299</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>isConnected</scalar:string>
             </subNode:name>
             <subNode:args>
              <scalar:array/>
             </subNode:args>
            </node:Expr_MethodCall>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>309</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>309</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>309</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>309</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>309</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>309</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>false</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>connect</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="311">/**
   * Perform the SMTP greeting process (don't do this unless you understand why you're doing it)
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>314</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>317</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>316</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>316</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>316</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>316</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>316</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>316</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>swift</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:name>
          <scalar:string>handshake</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array/>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>handshake</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="318">/**
   * Close the connection to the MTA
   * @return boolean
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>322</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>334</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>324</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>332</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_TryCatch>
            <attribute:startLine>
             <scalar:int>326</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>331</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>327</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>327</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>327</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>327</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>327</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>327</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>swift</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:var>
               <subNode:name>
                <scalar:string>disconnect</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array/>
               </subNode:args>
              </node:Expr_MethodCall>
              <node:Stmt_Return>
               <attribute:startLine>
                <scalar:int>328</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>328</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_ConstFetch>
                 <attribute:startLine>
                  <scalar:int>328</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>328</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>328</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>328</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>true</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                </node:Expr_ConstFetch>
               </subNode:expr>
              </node:Stmt_Return>
             </scalar:array>
            </subNode:stmts>
            <subNode:catches>
             <scalar:array>
              <node:Stmt_Catch>
               <attribute:startLine>
                <scalar:int>329</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>331</scalar:int>
               </attribute:endLine>
               <subNode:type>
                <node:Name_FullyQualified>
                 <attribute:startLine>
                  <scalar:int>329</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>329</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>Swift_ConnectionException</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name_FullyQualified>
               </subNode:type>
               <subNode:var>
                <scalar:string>e</scalar:string>
               </subNode:var>
               <subNode:stmts>
                <scalar:array>
                 <node:Expr_MethodCall>
                  <attribute:startLine>
                   <scalar:int>330</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>330</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>330</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>330</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>this</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>setError</scalar:string>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>330</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>330</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Expr_Concat>
                       <attribute:startLine>
                        <scalar:int>330</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>330</scalar:int>
                       </attribute:endLine>
                       <subNode:left>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>330</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>330</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>Disconnect failed:&lt;br /&gt;</scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:left>
                       <subNode:right>
                        <node:Expr_MethodCall>
                         <attribute:startLine>
                          <scalar:int>330</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>330</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>330</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>330</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>e</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>getMessage</scalar:string>
                         </subNode:name>
                         <subNode:args>
                          <scalar:array/>
                         </subNode:args>
                        </node:Expr_MethodCall>
                       </subNode:right>
                      </node:Expr_Concat>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_MethodCall>
                </scalar:array>
               </subNode:stmts>
              </node:Stmt_Catch>
             </scalar:array>
            </subNode:catches>
            <subNode:finallyStmts>
             <scalar:null/>
            </subNode:finallyStmts>
           </node:Stmt_TryCatch>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>324</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>324</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>324</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>324</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>isConnected</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>333</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>333</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>333</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>333</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>333</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>333</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>false</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>close</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="335">/**
   * Send a command to Swift and get a response
   * @param string The command to send (leave of CRLF)
   * @return string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>340</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>351</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>340</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>340</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>command</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>342</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>342</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>342</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>342</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>342</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>342</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>command</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>342</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>342</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>342</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>342</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>substr</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>342</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>342</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>342</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>342</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>command</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>342</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>342</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Scalar_LNumber>
                   <attribute:startLine>
                    <scalar:int>342</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>342</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:int>0</scalar:int>
                   </subNode:value>
                  </node:Scalar_LNumber>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>342</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>342</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_UnaryMinus>
                   <attribute:startLine>
                    <scalar:int>342</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>342</scalar:int>
                   </attribute:endLine>
                   <subNode:expr>
                    <node:Scalar_LNumber>
                     <attribute:startLine>
                      <scalar:int>342</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>342</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:int>2</scalar:int>
                     </subNode:value>
                    </node:Scalar_LNumber>
                   </subNode:expr>
                  </node:Expr_UnaryMinus>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Equal>
           <attribute:startLine>
            <scalar:int>342</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>342</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>342</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>342</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>342</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>342</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>substr</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>342</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>342</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>342</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>342</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>command</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>342</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>342</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_UnaryMinus>
                  <attribute:startLine>
                   <scalar:int>342</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>342</scalar:int>
                  </attribute:endLine>
                  <subNode:expr>
                   <node:Scalar_LNumber>
                    <attribute:startLine>
                     <scalar:int>342</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>342</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:int>2</scalar:int>
                    </subNode:value>
                   </node:Scalar_LNumber>
                  </subNode:expr>
                 </node:Expr_UnaryMinus>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:left>
           <subNode:right>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>342</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>342</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string>&#13;
</scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:right>
          </node:Expr_Equal>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_TryCatch>
         <attribute:startLine>
          <scalar:int>344</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>350</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>345</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>345</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>345</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>345</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>rs</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>345</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>345</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>345</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>345</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>345</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>345</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>swift</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:var>
              <subNode:name>
               <scalar:string>command</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>345</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>345</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>345</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>345</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>command</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>346</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>346</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>346</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>346</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>346</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>346</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>rs</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>getString</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array/>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:catches>
          <scalar:array>
           <node:Stmt_Catch>
            <attribute:startLine>
             <scalar:int>347</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>350</scalar:int>
            </attribute:endLine>
            <subNode:type>
             <node:Name_FullyQualified>
              <attribute:startLine>
               <scalar:int>347</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>347</scalar:int>
              </attribute:endLine>
              <subNode:parts>
               <scalar:array>
                <scalar:string>Swift_ConnectionException</scalar:string>
               </scalar:array>
              </subNode:parts>
             </node:Name_FullyQualified>
            </subNode:type>
            <subNode:var>
             <scalar:string>e</scalar:string>
            </subNode:var>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>348</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>348</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>348</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>348</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>this</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>setError</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>348</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>348</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Concat>
                    <attribute:startLine>
                     <scalar:int>348</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>348</scalar:int>
                    </attribute:endLine>
                    <subNode:left>
                     <node:Scalar_String>
                      <attribute:startLine>
                       <scalar:int>348</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>348</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <scalar:string>Command failed:&lt;br /&gt;</scalar:string>
                      </subNode:value>
                     </node:Scalar_String>
                    </subNode:left>
                    <subNode:right>
                     <node:Expr_MethodCall>
                      <attribute:startLine>
                       <scalar:int>348</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>348</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>348</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>348</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>e</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>getMessage</scalar:string>
                      </subNode:name>
                      <subNode:args>
                       <scalar:array/>
                      </subNode:args>
                     </node:Expr_MethodCall>
                    </subNode:right>
                   </node:Expr_Concat>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_MethodCall>
              <node:Stmt_Return>
               <attribute:startLine>
                <scalar:int>349</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>349</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_ConstFetch>
                 <attribute:startLine>
                  <scalar:int>349</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>349</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>349</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>349</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>false</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                </node:Expr_ConstFetch>
               </subNode:expr>
              </node:Stmt_Return>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_Catch>
          </scalar:array>
         </subNode:catches>
         <subNode:finallyStmts>
          <scalar:null/>
         </subNode:finallyStmts>
        </node:Stmt_TryCatch>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>command</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="352">/**
   * Add a new plugin to respond to events
   * @param Swift_Events_Listener The plugin to load
   * @param string The ID to identify the plugin by if needed
   * @return string The ID of the plugin
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>358</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>364</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>358</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>358</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>plugin</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <node:Name_FullyQualified>
           <attribute:startLine>
            <scalar:int>358</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>358</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>Swift_Events_Listener</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name_FullyQualified>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>358</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>358</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>name</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>358</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>358</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>358</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>358</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_PostInc>
         <attribute:startLine>
          <scalar:int>360</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>360</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>360</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>360</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>360</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>360</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>pluginCount</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
        </node:Expr_PostInc>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>361</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>361</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>361</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>361</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>361</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>361</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>name</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Concat>
              <attribute:startLine>
               <scalar:int>361</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>361</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>361</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>361</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>p</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:left>
              <subNode:right>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>361</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>361</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>361</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>361</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>pluginCount</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:right>
             </node:Expr_Concat>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>361</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>361</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>361</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>361</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>name</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>362</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>362</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>362</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>362</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>362</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>362</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>swift</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:name>
          <scalar:string>attachPlugin</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>362</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>362</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>362</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>362</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>plugin</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>362</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>362</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>362</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>362</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>name</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>363</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>363</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>363</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>363</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>name</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>loadPlugin</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="365">/**
   * Get a reference to the plugin identified by $name
   * @param string the ID of the plugin
   * @return Swift_Events_Listener
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>370</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>378</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>370</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>370</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>name</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_TryCatch>
         <attribute:startLine>
          <scalar:int>372</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>377</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>373</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>373</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>373</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>373</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>plugin</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>373</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>373</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>373</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>373</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>373</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>373</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>swift</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:var>
              <subNode:name>
               <scalar:string>getPlugin</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>373</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>373</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>373</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>373</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>name</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>374</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>374</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>374</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>374</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>plugin</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:catches>
          <scalar:array>
           <node:Stmt_Catch>
            <attribute:startLine>
             <scalar:int>375</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>377</scalar:int>
            </attribute:endLine>
            <subNode:type>
             <node:Name_FullyQualified>
              <attribute:startLine>
               <scalar:int>375</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>375</scalar:int>
              </attribute:endLine>
              <subNode:parts>
               <scalar:array>
                <scalar:string>Exception</scalar:string>
               </scalar:array>
              </subNode:parts>
             </node:Name_FullyQualified>
            </subNode:type>
            <subNode:var>
             <scalar:string>e</scalar:string>
            </subNode:var>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_Return>
               <attribute:startLine>
                <scalar:int>376</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>376</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_ConstFetch>
                 <attribute:startLine>
                  <scalar:int>376</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>376</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>376</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>376</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>null</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                </node:Expr_ConstFetch>
               </subNode:expr>
              </node:Stmt_Return>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_Catch>
          </scalar:array>
         </subNode:catches>
         <subNode:finallyStmts>
          <scalar:null/>
         </subNode:finallyStmts>
        </node:Stmt_TryCatch>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getPlugin</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="379">/**
   * Remove the plugin identified by $name
   * @param string The ID of the plugin
   * @return boolean
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>384</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>392</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>384</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>384</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>name</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_TryCatch>
         <attribute:startLine>
          <scalar:int>386</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>391</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_MethodCall>
            <attribute:startLine>
             <scalar:int>387</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>387</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>387</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>387</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>387</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>387</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>swift</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:var>
            <subNode:name>
             <scalar:string>removePlugin</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>387</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>387</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>387</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>387</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>name</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_MethodCall>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>388</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>388</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_ConstFetch>
              <attribute:startLine>
               <scalar:int>388</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>388</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>388</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>388</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>true</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
             </node:Expr_ConstFetch>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:catches>
          <scalar:array>
           <node:Stmt_Catch>
            <attribute:startLine>
             <scalar:int>389</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>391</scalar:int>
            </attribute:endLine>
            <subNode:type>
             <node:Name_FullyQualified>
              <attribute:startLine>
               <scalar:int>389</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>389</scalar:int>
              </attribute:endLine>
              <subNode:parts>
               <scalar:array>
                <scalar:string>Exception</scalar:string>
               </scalar:array>
              </subNode:parts>
             </node:Name_FullyQualified>
            </subNode:type>
            <subNode:var>
             <scalar:string>e</scalar:string>
            </subNode:var>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_Return>
               <attribute:startLine>
                <scalar:int>390</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>390</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_ConstFetch>
                 <attribute:startLine>
                  <scalar:int>390</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>390</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>390</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>390</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>false</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                </node:Expr_ConstFetch>
               </subNode:expr>
              </node:Stmt_Return>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_Catch>
          </scalar:array>
         </subNode:catches>
         <subNode:finallyStmts>
          <scalar:null/>
         </subNode:finallyStmts>
        </node:Stmt_TryCatch>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>removePlugin</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="393">/**
   * Load in a new authentication mechanism for SMTP
   * This needn't be called since Swift will locate any available in Swift/Authenticator/*.php
   * @param Swift_Authenticator The authentication mechanism to load
   * @throws Exception If the wrong connection is used
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>399</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>406</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>399</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>399</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>auth</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <node:Name_FullyQualified>
           <attribute:startLine>
            <scalar:int>399</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>399</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>Swift_Authenticator</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name_FullyQualified>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>401</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>405</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_MethodCall>
            <attribute:startLine>
             <scalar:int>403</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>403</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>403</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>403</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>403</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>403</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>403</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>403</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>swift</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:var>
              <subNode:name>
               <scalar:string>connection</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:var>
            <subNode:name>
             <scalar:string>attachAuthenticator</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>403</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>403</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>403</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>403</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>auth</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_MethodCall>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <node:Stmt_Else>
           <attribute:startLine>
            <scalar:int>405</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>405</scalar:int>
           </attribute:endLine>
           <subNode:stmts>
            <scalar:array>
             <node:Stmt_Throw>
              <attribute:startLine>
               <scalar:int>405</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>405</scalar:int>
              </attribute:endLine>
              <subNode:expr>
               <node:Expr_New>
                <attribute:startLine>
                 <scalar:int>405</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>405</scalar:int>
                </attribute:endLine>
                <subNode:class>
                 <node:Name_FullyQualified>
                  <attribute:startLine>
                   <scalar:int>405</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>405</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>Exception</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name_FullyQualified>
                </subNode:class>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>405</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>405</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Concat>
                     <attribute:startLine>
                      <scalar:int>405</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>405</scalar:int>
                     </attribute:endLine>
                     <subNode:left>
                      <node:Expr_Concat>
                       <attribute:startLine>
                        <scalar:int>405</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>405</scalar:int>
                       </attribute:endLine>
                       <subNode:left>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>405</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>405</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>SMTP authentication cannot be used with connection class '</scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:left>
                       <subNode:right>
                        <node:Expr_FuncCall>
                         <attribute:startLine>
                          <scalar:int>405</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>405</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <node:Name>
                           <attribute:startLine>
                            <scalar:int>405</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>405</scalar:int>
                           </attribute:endLine>
                           <subNode:parts>
                            <scalar:array>
                             <scalar:string>get_class</scalar:string>
                            </scalar:array>
                           </subNode:parts>
                          </node:Name>
                         </subNode:name>
                         <subNode:args>
                          <scalar:array>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>405</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>405</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_PropertyFetch>
                              <attribute:startLine>
                               <scalar:int>405</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>405</scalar:int>
                              </attribute:endLine>
                              <subNode:var>
                               <node:Expr_Variable>
                                <attribute:startLine>
                                 <scalar:int>405</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>405</scalar:int>
                                </attribute:endLine>
                                <subNode:name>
                                 <scalar:string>this</scalar:string>
                                </subNode:name>
                               </node:Expr_Variable>
                              </subNode:var>
                              <subNode:name>
                               <scalar:string>connection</scalar:string>
                              </subNode:name>
                             </node:Expr_PropertyFetch>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                          </scalar:array>
                         </subNode:args>
                        </node:Expr_FuncCall>
                       </subNode:right>
                      </node:Expr_Concat>
                     </subNode:left>
                     <subNode:right>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>405</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>405</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>'. Swift_Connection_SMTP is needed</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:right>
                    </node:Expr_Concat>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_New>
              </subNode:expr>
             </node:Stmt_Throw>
            </scalar:array>
           </subNode:stmts>
          </node:Stmt_Else>
         </subNode:else>
         <subNode:cond>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>401</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>401</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>401</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>401</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>method_exists</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>401</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>401</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>401</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>401</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_PropertyFetch>
                  <attribute:startLine>
                   <scalar:int>401</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>401</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>401</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>401</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>this</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>swift</scalar:string>
                  </subNode:name>
                 </node:Expr_PropertyFetch>
                </subNode:var>
                <subNode:name>
                 <scalar:string>connection</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>401</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>401</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>401</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>401</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>attachAuthenticator</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:cond>
        </node:Stmt_If>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>loadAuthenticator</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="407">/**
   * Authenticate with SMTP authentication
   * @param string The SMTP username
   * @param string The SMTP password
   * @return boolean
   * @throws Exception If the wrong connection is used
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>414</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>427</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>414</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>414</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>username</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>414</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>414</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>password</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>416</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>426</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_TryCatch>
            <attribute:startLine>
             <scalar:int>418</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>424</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>419</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>419</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>419</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>419</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_PropertyFetch>
                   <attribute:startLine>
                    <scalar:int>419</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>419</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>419</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>419</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>swift</scalar:string>
                   </subNode:name>
                  </node:Expr_PropertyFetch>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>connection</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:var>
               <subNode:name>
                <scalar:string>runAuthenticators</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>419</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>419</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>419</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>419</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>username</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>419</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>419</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>419</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>419</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>password</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>419</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>419</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_PropertyFetch>
                    <attribute:startLine>
                     <scalar:int>419</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>419</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>419</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>419</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>this</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>swift</scalar:string>
                    </subNode:name>
                   </node:Expr_PropertyFetch>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_MethodCall>
              <node:Stmt_Return>
               <attribute:startLine>
                <scalar:int>420</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>420</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_ConstFetch>
                 <attribute:startLine>
                  <scalar:int>420</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>420</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>420</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>420</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>true</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                </node:Expr_ConstFetch>
               </subNode:expr>
              </node:Stmt_Return>
             </scalar:array>
            </subNode:stmts>
            <subNode:catches>
             <scalar:array>
              <node:Stmt_Catch>
               <attribute:startLine>
                <scalar:int>421</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>424</scalar:int>
               </attribute:endLine>
               <subNode:type>
                <node:Name_FullyQualified>
                 <attribute:startLine>
                  <scalar:int>421</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>421</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>Swift_ConnectionException</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name_FullyQualified>
               </subNode:type>
               <subNode:var>
                <scalar:string>e</scalar:string>
               </subNode:var>
               <subNode:stmts>
                <scalar:array>
                 <node:Expr_MethodCall>
                  <attribute:startLine>
                   <scalar:int>422</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>422</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>422</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>422</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>this</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>setError</scalar:string>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>422</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>422</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Expr_Concat>
                       <attribute:startLine>
                        <scalar:int>422</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>422</scalar:int>
                       </attribute:endLine>
                       <subNode:left>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>422</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>422</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>Authentication failed:&lt;br /&gt;</scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:left>
                       <subNode:right>
                        <node:Expr_MethodCall>
                         <attribute:startLine>
                          <scalar:int>422</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>422</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>422</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>422</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>e</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>getMessage</scalar:string>
                         </subNode:name>
                         <subNode:args>
                          <scalar:array/>
                         </subNode:args>
                        </node:Expr_MethodCall>
                       </subNode:right>
                      </node:Expr_Concat>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_MethodCall>
                 <node:Stmt_Return>
                  <attribute:startLine>
                   <scalar:int>423</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>423</scalar:int>
                  </attribute:endLine>
                  <subNode:expr>
                   <node:Expr_ConstFetch>
                    <attribute:startLine>
                     <scalar:int>423</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>423</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <node:Name>
                      <attribute:startLine>
                       <scalar:int>423</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>423</scalar:int>
                      </attribute:endLine>
                      <subNode:parts>
                       <scalar:array>
                        <scalar:string>false</scalar:string>
                       </scalar:array>
                      </subNode:parts>
                     </node:Name>
                    </subNode:name>
                   </node:Expr_ConstFetch>
                  </subNode:expr>
                 </node:Stmt_Return>
                </scalar:array>
               </subNode:stmts>
              </node:Stmt_Catch>
             </scalar:array>
            </subNode:catches>
            <subNode:finallyStmts>
             <scalar:null/>
            </subNode:finallyStmts>
           </node:Stmt_TryCatch>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <node:Stmt_Else>
           <attribute:startLine>
            <scalar:int>426</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>426</scalar:int>
           </attribute:endLine>
           <subNode:stmts>
            <scalar:array>
             <node:Stmt_Throw>
              <attribute:startLine>
               <scalar:int>426</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>426</scalar:int>
              </attribute:endLine>
              <subNode:expr>
               <node:Expr_New>
                <attribute:startLine>
                 <scalar:int>426</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>426</scalar:int>
                </attribute:endLine>
                <subNode:class>
                 <node:Name_FullyQualified>
                  <attribute:startLine>
                   <scalar:int>426</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>426</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>Exception</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name_FullyQualified>
                </subNode:class>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>426</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>426</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Concat>
                     <attribute:startLine>
                      <scalar:int>426</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>426</scalar:int>
                     </attribute:endLine>
                     <subNode:left>
                      <node:Expr_Concat>
                       <attribute:startLine>
                        <scalar:int>426</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>426</scalar:int>
                       </attribute:endLine>
                       <subNode:left>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>426</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>426</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>SMTP authentication cannot be used with connection class '</scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:left>
                       <subNode:right>
                        <node:Expr_FuncCall>
                         <attribute:startLine>
                          <scalar:int>426</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>426</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <node:Name>
                           <attribute:startLine>
                            <scalar:int>426</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>426</scalar:int>
                           </attribute:endLine>
                           <subNode:parts>
                            <scalar:array>
                             <scalar:string>get_class</scalar:string>
                            </scalar:array>
                           </subNode:parts>
                          </node:Name>
                         </subNode:name>
                         <subNode:args>
                          <scalar:array>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>426</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>426</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_PropertyFetch>
                              <attribute:startLine>
                               <scalar:int>426</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>426</scalar:int>
                              </attribute:endLine>
                              <subNode:var>
                               <node:Expr_Variable>
                                <attribute:startLine>
                                 <scalar:int>426</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>426</scalar:int>
                                </attribute:endLine>
                                <subNode:name>
                                 <scalar:string>this</scalar:string>
                                </subNode:name>
                               </node:Expr_Variable>
                              </subNode:var>
                              <subNode:name>
                               <scalar:string>connection</scalar:string>
                              </subNode:name>
                             </node:Expr_PropertyFetch>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                          </scalar:array>
                         </subNode:args>
                        </node:Expr_FuncCall>
                       </subNode:right>
                      </node:Expr_Concat>
                     </subNode:left>
                     <subNode:right>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>426</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>426</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>'. Swift_Connection_SMTP is needed</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:right>
                    </node:Expr_Concat>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_New>
              </subNode:expr>
             </node:Stmt_Throw>
            </scalar:array>
           </subNode:stmts>
          </node:Stmt_Else>
         </subNode:else>
         <subNode:cond>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>416</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>416</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>416</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>416</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>method_exists</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>416</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>416</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>416</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>416</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_PropertyFetch>
                  <attribute:startLine>
                   <scalar:int>416</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>416</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>416</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>416</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>this</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>swift</scalar:string>
                  </subNode:name>
                 </node:Expr_PropertyFetch>
                </subNode:var>
                <subNode:name>
                 <scalar:string>connection</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>416</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>416</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>416</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>416</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>runAuthenticators</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:cond>
        </node:Stmt_If>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>authenticate</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="428">/**
   * Turn a string representation of an email address into a Swift_Address object
   * @paramm string The email address
   * @return Swift_Address
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>433</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>454</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>433</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>433</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>string</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>435</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>435</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>435</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>435</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>name</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>435</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>435</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>435</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>435</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>436</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>436</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>436</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>436</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>address</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>436</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>436</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>436</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>436</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_StaticCall>
         <attribute:comments>
          <scalar:array>
           <comment isDocComment="false" line="437">// Foo Bar &lt;foo@bar&gt;
</comment>
           <comment isDocComment="false" line="438">// or: &quot;Foo Bar&quot; &lt;foo@bar&gt;
</comment>
           <comment isDocComment="false" line="439">// or: &lt;foo@bar&gt;
</comment>
          </scalar:array>
         </attribute:comments>
         <attribute:startLine>
          <scalar:int>440</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>440</scalar:int>
         </attribute:endLine>
         <subNode:class>
          <node:Name_FullyQualified>
           <attribute:comments>
            <scalar:array>
             <comment isDocComment="false" line="437">// Foo Bar &lt;foo@bar&gt;
</comment>
             <comment isDocComment="false" line="438">// or: &quot;Foo Bar&quot; &lt;foo@bar&gt;
</comment>
             <comment isDocComment="false" line="439">// or: &lt;foo@bar&gt;
</comment>
            </scalar:array>
           </attribute:comments>
           <attribute:startLine>
            <scalar:int>440</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>440</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>Swift_ClassLoader</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name_FullyQualified>
         </subNode:class>
         <subNode:name>
          <scalar:string>load</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>440</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>440</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>440</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>440</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>Swift_Message_Encoder</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_StaticCall>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>441</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>450</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>443</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>443</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>443</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>443</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>443</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>443</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>name</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:expr>
                <node:Expr_ArrayDimFetch>
                 <attribute:startLine>
                  <scalar:int>443</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>443</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>443</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>443</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>matches</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:dim>
                  <node:Scalar_LNumber>
                   <attribute:startLine>
                    <scalar:int>443</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>443</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:int>2</scalar:int>
                   </subNode:value>
                  </node:Scalar_LNumber>
                 </subNode:dim>
                </node:Expr_ArrayDimFetch>
               </subNode:expr>
              </node:Expr_Assign>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_BooleanNot>
              <attribute:startLine>
               <scalar:int>443</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>443</scalar:int>
              </attribute:endLine>
              <subNode:expr>
               <node:Expr_Empty>
                <attribute:startLine>
                 <scalar:int>443</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>443</scalar:int>
                </attribute:endLine>
                <subNode:expr>
                 <node:Expr_ArrayDimFetch>
                  <attribute:startLine>
                   <scalar:int>443</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>443</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>443</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>443</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>matches</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:dim>
                   <node:Scalar_LNumber>
                    <attribute:startLine>
                     <scalar:int>443</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>443</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:int>2</scalar:int>
                    </subNode:value>
                   </node:Scalar_LNumber>
                  </subNode:dim>
                 </node:Expr_ArrayDimFetch>
                </subNode:expr>
               </node:Expr_Empty>
              </subNode:expr>
             </node:Expr_BooleanNot>
            </subNode:cond>
           </node:Stmt_If>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>444</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>444</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>444</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>444</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>address</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_ArrayDimFetch>
              <attribute:startLine>
               <scalar:int>444</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>444</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>444</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>444</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>matches</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:dim>
               <node:Scalar_LNumber>
                <attribute:startLine>
                 <scalar:int>444</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>444</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:int>3</scalar:int>
                </subNode:value>
               </node:Scalar_LNumber>
              </subNode:dim>
             </node:Expr_ArrayDimFetch>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array>
           <node:Stmt_ElseIf>
            <attribute:startLine>
             <scalar:int>446</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>449</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>446</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>446</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>446</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>446</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>preg_match</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>446</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>446</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Concat>
                   <attribute:startLine>
                    <scalar:int>446</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>446</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Expr_Concat>
                     <attribute:startLine>
                      <scalar:int>446</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>446</scalar:int>
                     </attribute:endLine>
                     <subNode:left>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>446</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>446</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>/^\s*</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:left>
                     <subNode:right>
                      <node:Expr_ClassConstFetch>
                       <attribute:startLine>
                        <scalar:int>446</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>446</scalar:int>
                       </attribute:endLine>
                       <subNode:class>
                        <node:Name_FullyQualified>
                         <attribute:startLine>
                          <scalar:int>446</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>446</scalar:int>
                         </attribute:endLine>
                         <subNode:parts>
                          <scalar:array>
                           <scalar:string>Swift_Message_Encoder</scalar:string>
                          </scalar:array>
                         </subNode:parts>
                        </node:Name_FullyQualified>
                       </subNode:class>
                       <subNode:name>
                        <scalar:string>CHEAP_ADDRESS_RE</scalar:string>
                       </subNode:name>
                      </node:Expr_ClassConstFetch>
                     </subNode:right>
                    </node:Expr_Concat>
                   </subNode:left>
                   <subNode:right>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>446</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>446</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>\s*$/</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:right>
                  </node:Expr_Concat>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>446</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>446</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>446</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>446</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>string</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>448</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>448</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>448</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>448</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>address</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:expr>
                <node:Expr_FuncCall>
                 <attribute:startLine>
                  <scalar:int>448</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>448</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>448</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>448</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>trim</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>448</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>448</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>448</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>448</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>string</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_FuncCall>
               </subNode:expr>
              </node:Expr_Assign>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_ElseIf>
          </scalar:array>
         </subNode:elseifs>
         <subNode:else>
          <node:Stmt_Else>
           <attribute:startLine>
            <scalar:int>450</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>450</scalar:int>
           </attribute:endLine>
           <subNode:stmts>
            <scalar:array>
             <node:Stmt_Return>
              <attribute:startLine>
               <scalar:int>450</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>450</scalar:int>
              </attribute:endLine>
              <subNode:expr>
               <node:Expr_ConstFetch>
                <attribute:startLine>
                 <scalar:int>450</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>450</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>450</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>450</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>false</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
               </node:Expr_ConstFetch>
              </subNode:expr>
             </node:Stmt_Return>
            </scalar:array>
           </subNode:stmts>
          </node:Stmt_Else>
         </subNode:else>
         <subNode:cond>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>441</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>441</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>441</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>441</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>441</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>441</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Concat>
                <attribute:startLine>
                 <scalar:int>441</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>441</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Expr_Concat>
                  <attribute:startLine>
                   <scalar:int>441</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>441</scalar:int>
                  </attribute:endLine>
                  <subNode:left>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>441</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>441</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>/^\s*(&quot;?)(.*?)\1 *&lt;(</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:left>
                  <subNode:right>
                   <node:Expr_ClassConstFetch>
                    <attribute:startLine>
                     <scalar:int>441</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>441</scalar:int>
                    </attribute:endLine>
                    <subNode:class>
                     <node:Name_FullyQualified>
                      <attribute:startLine>
                       <scalar:int>441</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>441</scalar:int>
                      </attribute:endLine>
                      <subNode:parts>
                       <scalar:array>
                        <scalar:string>Swift_Message_Encoder</scalar:string>
                       </scalar:array>
                      </subNode:parts>
                     </node:Name_FullyQualified>
                    </subNode:class>
                    <subNode:name>
                     <scalar:string>CHEAP_ADDRESS_RE</scalar:string>
                    </subNode:name>
                   </node:Expr_ClassConstFetch>
                  </subNode:right>
                 </node:Expr_Concat>
                </subNode:left>
                <subNode:right>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>441</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>441</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>)&gt;\s*$/</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:right>
               </node:Expr_Concat>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>441</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>441</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>441</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>441</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>string</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>441</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>441</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>441</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>441</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>matches</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>452</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>452</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>452</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>452</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>swift_address</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_New>
           <attribute:startLine>
            <scalar:int>452</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>452</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>452</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>452</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Swift_Address</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>452</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>452</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>452</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>452</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>address</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>452</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>452</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>452</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>452</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>name</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_New>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>453</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>453</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>453</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>453</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>swift_address</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>stringToAddress</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="455">/**
   * Set the encoding used in the message header
   * The encoding can be one of Q (quoted-printable) or B (base64)
   * @param string The encoding to use
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>460</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>470</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>460</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>460</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>mode</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>460</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>460</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>B</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Switch>
         <attribute:startLine>
          <scalar:int>462</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>469</scalar:int>
         </attribute:endLine>
         <subNode:cond>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>462</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>462</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>462</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>462</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>strtoupper</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>462</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>462</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>462</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>462</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>mode</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:cond>
         <subNode:cases>
          <scalar:array>
           <node:Stmt_Case>
            <attribute:startLine>
             <scalar:int>464</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>464</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>464</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>464</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>Q</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array/>
            </subNode:stmts>
           </node:Stmt_Case>
           <node:Stmt_Case>
            <attribute:startLine>
             <scalar:int>464</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>464</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>464</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>464</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>QP</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array/>
            </subNode:stmts>
           </node:Stmt_Case>
           <node:Stmt_Case>
            <attribute:startLine>
             <scalar:int>464</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>466</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>464</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>464</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>QUOTED-PRINTABLE</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>465</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>465</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>465</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>465</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_PropertyFetch>
                   <attribute:startLine>
                    <scalar:int>465</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>465</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>465</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>465</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>message</scalar:string>
                   </subNode:name>
                  </node:Expr_PropertyFetch>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>headers</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:var>
               <subNode:name>
                <scalar:string>setEncoding</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>465</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>465</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>465</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>465</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>Q</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_MethodCall>
              <node:Stmt_Break>
               <attribute:startLine>
                <scalar:int>466</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>466</scalar:int>
               </attribute:endLine>
               <subNode:num>
                <scalar:null/>
               </subNode:num>
              </node:Stmt_Break>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_Case>
           <node:Stmt_Case>
            <attribute:startLine>
             <scalar:int>467</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>468</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <scalar:null/>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>468</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>468</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>468</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>468</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_PropertyFetch>
                   <attribute:startLine>
                    <scalar:int>468</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>468</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>468</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>468</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>message</scalar:string>
                   </subNode:name>
                  </node:Expr_PropertyFetch>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>headers</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:var>
               <subNode:name>
                <scalar:string>setEncoding</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>468</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>468</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>468</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>468</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>B</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_MethodCall>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_Case>
          </scalar:array>
         </subNode:cases>
        </node:Stmt_Switch>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>setHeaderEncoding</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="471">/**
   * Set the return path address (where bounces go to)
   * @param mixed The address as a string or Swift_Address
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>475</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>478</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>475</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>475</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>address</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>477</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>477</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>477</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>477</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>477</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>477</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>477</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>477</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>message</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:var>
           <subNode:name>
            <scalar:string>setReturnPath</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>477</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>477</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>477</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>477</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>address</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>setReturnPath</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="479">/**
   * Request for a read recipient to be sent to the reply-to address
   * @param boolean
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>483</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>486</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>483</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>483</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>request</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>483</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>483</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>483</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>483</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>true</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array/>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>requestReadReceipt</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="487">/**
   * Set the message priority
   * This is an integer between 1 (high) and 5 (low)
   * @param int The level of priority to use
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>492</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>495</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>492</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>492</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>priority</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>494</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>494</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>494</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>494</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>494</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>494</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>message</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:name>
          <scalar:string>setPriority</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>494</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>494</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>494</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>494</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>priority</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>setPriority</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="496">/**
   * Get the return-path address as a string
   * @return string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>500</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>507</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_TryCatch>
         <attribute:startLine>
          <scalar:int>502</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>506</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>503</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>503</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>503</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>503</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>503</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>503</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>503</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>503</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>message</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:var>
              <subNode:name>
               <scalar:string>getReturnPath</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array/>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:catches>
          <scalar:array>
           <node:Stmt_Catch>
            <attribute:startLine>
             <scalar:int>504</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>506</scalar:int>
            </attribute:endLine>
            <subNode:type>
             <node:Name_FullyQualified>
              <attribute:startLine>
               <scalar:int>504</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>504</scalar:int>
              </attribute:endLine>
              <subNode:parts>
               <scalar:array>
                <scalar:string>Swift_Message_MimeException</scalar:string>
               </scalar:array>
              </subNode:parts>
             </node:Name_FullyQualified>
            </subNode:type>
            <subNode:var>
             <scalar:string>e</scalar:string>
            </subNode:var>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_Return>
               <attribute:startLine>
                <scalar:int>505</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>505</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_ConstFetch>
                 <attribute:startLine>
                  <scalar:int>505</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>505</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>505</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>505</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>false</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                </node:Expr_ConstFetch>
               </subNode:expr>
              </node:Stmt_Return>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_Catch>
          </scalar:array>
         </subNode:catches>
         <subNode:finallyStmts>
          <scalar:null/>
         </subNode:finallyStmts>
        </node:Stmt_TryCatch>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getReturnPath</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="508">/**
   * Set the reply-to header
   * @param mixed The address replies come to. String, or Swift_Address, or an array of either.
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>512</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>515</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>512</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>512</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>address</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>514</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>514</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>514</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>514</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>514</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>514</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>514</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>514</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>message</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:var>
           <subNode:name>
            <scalar:string>setReplyTo</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>514</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>514</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>514</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>514</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>address</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>setReplyTo</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="516">/**
   * Get the reply-to address(es) as an array of strings
   * @return array
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>520</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>527</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_TryCatch>
         <attribute:startLine>
          <scalar:int>522</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>526</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>523</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>523</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>523</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>523</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>523</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>523</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>523</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>523</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>message</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:var>
              <subNode:name>
               <scalar:string>getReplyTo</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array/>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:catches>
          <scalar:array>
           <node:Stmt_Catch>
            <attribute:startLine>
             <scalar:int>524</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>526</scalar:int>
            </attribute:endLine>
            <subNode:type>
             <node:Name_FullyQualified>
              <attribute:startLine>
               <scalar:int>524</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>524</scalar:int>
              </attribute:endLine>
              <subNode:parts>
               <scalar:array>
                <scalar:string>Swift_Message_MimeException</scalar:string>
               </scalar:array>
              </subNode:parts>
             </node:Name_FullyQualified>
            </subNode:type>
            <subNode:var>
             <scalar:string>e</scalar:string>
            </subNode:var>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_Return>
               <attribute:startLine>
                <scalar:int>525</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>525</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_ConstFetch>
                 <attribute:startLine>
                  <scalar:int>525</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>525</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>525</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>525</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>false</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                </node:Expr_ConstFetch>
               </subNode:expr>
              </node:Stmt_Return>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_Catch>
          </scalar:array>
         </subNode:catches>
         <subNode:finallyStmts>
          <scalar:null/>
         </subNode:finallyStmts>
        </node:Stmt_TryCatch>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getReplyTo</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="528">/**
   * Add To: recipients to the email
   * @param mixed To address(es)
   * @return boolean
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>533</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>536</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>533</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>533</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>address</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>535</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>535</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>535</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>535</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>535</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>535</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>addRecipients</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>535</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>535</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>535</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>535</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>address</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>535</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>535</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>535</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>535</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>To</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>addTo</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="537">/**
   * Get an array of To addresses
   * This currently returns an array of Swift_Address objects and may be simplified to an array of strings in later versions
   * @return array
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>542</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>545</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>544</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>544</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>544</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>544</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>544</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>544</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>544</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>544</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>recipients</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:var>
           <subNode:name>
            <scalar:string>getTo</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getToAddresses</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="546">/**
   * Clear out all To: recipients
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>549</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>552</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>551</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>551</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>551</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>551</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>551</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>551</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>recipients</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:name>
          <scalar:string>flushTo</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array/>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>flushTo</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="553">/**
   * Add Cc: recipients to the email
   * @param mixed Cc address(es)
   * @return boolean
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>558</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>561</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>558</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>558</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>address</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>560</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>560</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>560</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>560</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>560</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>560</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>addRecipients</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>560</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>560</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>560</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>560</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>address</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>560</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>560</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>560</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>560</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>Cc</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>addCc</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="562">/**
   * Get an array of Cc addresses
   * This currently returns an array of Swift_Address objects and may be simplified to an array of strings in later versions
   * @return array
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>567</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>570</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>569</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>569</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>569</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>569</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>569</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>569</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>569</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>569</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>recipients</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:var>
           <subNode:name>
            <scalar:string>getCc</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getCcAddresses</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="571">/**
   * Clear out all Cc: recipients
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>574</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>577</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>576</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>576</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>576</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>576</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>576</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>576</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>recipients</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:name>
          <scalar:string>flushCc</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array/>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>flushCc</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="578">/**
   * Add Bcc: recipients to the email
   * @param mixed Bcc address(es)
   * @return boolean
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>583</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>586</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>583</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>583</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>address</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>585</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>585</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>585</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>585</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>585</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>585</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>addRecipients</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>585</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>585</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>585</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>585</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>address</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>585</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>585</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>585</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>585</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>Bcc</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>addBcc</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="587">/**
   * Get an array of Bcc addresses
   * This currently returns an array of Swift_Address objects and may be simplified to an array of strings in later versions
   * @return array
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>592</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>595</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>594</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>594</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>594</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>594</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>594</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>594</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>594</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>594</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>recipients</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:var>
           <subNode:name>
            <scalar:string>getBcc</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getBccAddresses</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="596">/**
   * Clear out all Bcc: recipients
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>599</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>602</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>601</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>601</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>601</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>601</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>601</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>601</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>recipients</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:name>
          <scalar:string>flushBcc</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array/>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>flushBcc</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="603">/**
   * Add recipients to the email
   * @param mixed Address(es)
   * @param string Recipient type (To, Cc, Bcc)
   * @return boolean
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>609</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>646</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>609</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>609</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>address</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>609</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>609</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>type</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>611</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>611</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>611</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>611</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_ConstFetch>
              <attribute:startLine>
               <scalar:int>611</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>611</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>611</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>611</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>false</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
             </node:Expr_ConstFetch>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>611</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>611</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>611</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>611</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>611</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>611</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>in_array</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>611</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>611</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>611</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>611</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>type</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>611</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>611</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Array>
                  <attribute:startLine>
                   <scalar:int>611</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>611</scalar:int>
                  </attribute:endLine>
                  <subNode:items>
                   <scalar:array>
                    <node:Expr_ArrayItem>
                     <attribute:startLine>
                      <scalar:int>611</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>611</scalar:int>
                     </attribute:endLine>
                     <subNode:key>
                      <scalar:null/>
                     </subNode:key>
                     <subNode:value>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>611</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>611</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>To</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Expr_ArrayItem>
                    <node:Expr_ArrayItem>
                     <attribute:startLine>
                      <scalar:int>611</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>611</scalar:int>
                     </attribute:endLine>
                     <subNode:key>
                      <scalar:null/>
                     </subNode:key>
                     <subNode:value>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>611</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>611</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>Cc</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Expr_ArrayItem>
                    <node:Expr_ArrayItem>
                     <attribute:startLine>
                      <scalar:int>611</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>611</scalar:int>
                     </attribute:endLine>
                     <subNode:key>
                      <scalar:null/>
                     </subNode:key>
                     <subNode:value>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>611</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>611</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>Bcc</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Expr_ArrayItem>
                   </scalar:array>
                  </subNode:items>
                 </node:Expr_Array>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>612</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>612</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>612</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>612</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>method</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Concat>
           <attribute:startLine>
            <scalar:int>612</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>612</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>612</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>612</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string>add</scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:left>
           <subNode:right>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>612</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>612</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>type</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:right>
          </node:Expr_Concat>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>614</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>645</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_MethodCall>
            <attribute:startLine>
             <scalar:int>616</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>616</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>616</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>616</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>616</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>616</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>recipients</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:var>
            <subNode:name>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>616</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>616</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>method</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>616</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>616</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>616</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>616</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>address</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_MethodCall>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>617</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>617</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_ConstFetch>
              <attribute:startLine>
               <scalar:int>617</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>617</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>617</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>617</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>true</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
             </node:Expr_ConstFetch>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <node:Stmt_Else>
           <attribute:startLine>
            <scalar:int>619</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>645</scalar:int>
           </attribute:endLine>
           <subNode:stmts>
            <scalar:array>
             <node:Expr_Assign>
              <attribute:startLine>
               <scalar:int>621</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>621</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>621</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>621</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>added</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:expr>
               <node:Scalar_LNumber>
                <attribute:startLine>
                 <scalar:int>621</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>621</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:int>0</scalar:int>
                </subNode:value>
               </node:Scalar_LNumber>
              </subNode:expr>
             </node:Expr_Assign>
             <node:Stmt_Foreach>
              <attribute:startLine>
               <scalar:int>622</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>643</scalar:int>
              </attribute:endLine>
              <subNode:keyVar>
               <scalar:null/>
              </subNode:keyVar>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
              <subNode:stmts>
               <scalar:array>
                <node:Stmt_If>
                 <attribute:startLine>
                  <scalar:int>624</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>635</scalar:int>
                 </attribute:endLine>
                 <subNode:stmts>
                  <scalar:array>
                   <node:Expr_Assign>
                    <attribute:startLine>
                     <scalar:int>626</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>626</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>626</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>626</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>addr</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:expr>
                     <node:Expr_FuncCall>
                      <attribute:startLine>
                       <scalar:int>626</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>626</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <node:Name>
                        <attribute:startLine>
                         <scalar:int>626</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>626</scalar:int>
                        </attribute:endLine>
                        <subNode:parts>
                         <scalar:array>
                          <scalar:string>array_values</scalar:string>
                         </scalar:array>
                        </subNode:parts>
                       </node:Name>
                      </subNode:name>
                      <subNode:args>
                       <scalar:array>
                        <node:Arg>
                         <attribute:startLine>
                          <scalar:int>626</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>626</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>626</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>626</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>addr</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:value>
                         <subNode:byRef>
                          <scalar:false/>
                         </subNode:byRef>
                        </node:Arg>
                       </scalar:array>
                      </subNode:args>
                     </node:Expr_FuncCall>
                    </subNode:expr>
                   </node:Expr_Assign>
                   <node:Stmt_If>
                    <attribute:startLine>
                     <scalar:int>627</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>634</scalar:int>
                    </attribute:endLine>
                    <subNode:stmts>
                     <scalar:array>
                      <node:Expr_MethodCall>
                       <attribute:startLine>
                        <scalar:int>629</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>629</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_PropertyFetch>
                         <attribute:startLine>
                          <scalar:int>629</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>629</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>629</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>629</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>this</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>recipients</scalar:string>
                         </subNode:name>
                        </node:Expr_PropertyFetch>
                       </subNode:var>
                       <subNode:name>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>629</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>629</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>method</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:name>
                       <subNode:args>
                        <scalar:array>
                         <node:Arg>
                          <attribute:startLine>
                           <scalar:int>629</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>629</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <node:Expr_ArrayDimFetch>
                            <attribute:startLine>
                             <scalar:int>629</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>629</scalar:int>
                            </attribute:endLine>
                            <subNode:var>
                             <node:Expr_Variable>
                              <attribute:startLine>
                               <scalar:int>629</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>629</scalar:int>
                              </attribute:endLine>
                              <subNode:name>
                               <scalar:string>addr</scalar:string>
                              </subNode:name>
                             </node:Expr_Variable>
                            </subNode:var>
                            <subNode:dim>
                             <node:Scalar_LNumber>
                              <attribute:startLine>
                               <scalar:int>629</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>629</scalar:int>
                              </attribute:endLine>
                              <subNode:value>
                               <scalar:int>0</scalar:int>
                              </subNode:value>
                             </node:Scalar_LNumber>
                            </subNode:dim>
                           </node:Expr_ArrayDimFetch>
                          </subNode:value>
                          <subNode:byRef>
                           <scalar:false/>
                          </subNode:byRef>
                         </node:Arg>
                         <node:Arg>
                          <attribute:startLine>
                           <scalar:int>629</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>629</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <node:Expr_ArrayDimFetch>
                            <attribute:startLine>
                             <scalar:int>629</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>629</scalar:int>
                            </attribute:endLine>
                            <subNode:var>
                             <node:Expr_Variable>
                              <attribute:startLine>
                               <scalar:int>629</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>629</scalar:int>
                              </attribute:endLine>
                              <subNode:name>
                               <scalar:string>addr</scalar:string>
                              </subNode:name>
                             </node:Expr_Variable>
                            </subNode:var>
                            <subNode:dim>
                             <node:Scalar_LNumber>
                              <attribute:startLine>
                               <scalar:int>629</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>629</scalar:int>
                              </attribute:endLine>
                              <subNode:value>
                               <scalar:int>1</scalar:int>
                              </subNode:value>
                             </node:Scalar_LNumber>
                            </subNode:dim>
                           </node:Expr_ArrayDimFetch>
                          </subNode:value>
                          <subNode:byRef>
                           <scalar:false/>
                          </subNode:byRef>
                         </node:Arg>
                        </scalar:array>
                       </subNode:args>
                      </node:Expr_MethodCall>
                      <node:Expr_PostInc>
                       <attribute:startLine>
                        <scalar:int>630</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>630</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>630</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>630</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>added</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                      </node:Expr_PostInc>
                      <node:Stmt_Continue>
                       <attribute:startLine>
                        <scalar:int>631</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>631</scalar:int>
                       </attribute:endLine>
                       <subNode:num>
                        <scalar:null/>
                       </subNode:num>
                      </node:Stmt_Continue>
                     </scalar:array>
                    </subNode:stmts>
                    <subNode:elseifs>
                     <scalar:array>
                      <node:Stmt_ElseIf>
                       <attribute:startLine>
                        <scalar:int>633</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>633</scalar:int>
                       </attribute:endLine>
                       <subNode:cond>
                        <node:Expr_Equal>
                         <attribute:startLine>
                          <scalar:int>633</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>633</scalar:int>
                         </attribute:endLine>
                         <subNode:left>
                          <node:Expr_FuncCall>
                           <attribute:startLine>
                            <scalar:int>633</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>633</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <node:Name>
                             <attribute:startLine>
                              <scalar:int>633</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>633</scalar:int>
                             </attribute:endLine>
                             <subNode:parts>
                              <scalar:array>
                               <scalar:string>count</scalar:string>
                              </scalar:array>
                             </subNode:parts>
                            </node:Name>
                           </subNode:name>
                           <subNode:args>
                            <scalar:array>
                             <node:Arg>
                              <attribute:startLine>
                               <scalar:int>633</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>633</scalar:int>
                              </attribute:endLine>
                              <subNode:value>
                               <node:Expr_Variable>
                                <attribute:startLine>
                                 <scalar:int>633</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>633</scalar:int>
                                </attribute:endLine>
                                <subNode:name>
                                 <scalar:string>addr</scalar:string>
                                </subNode:name>
                               </node:Expr_Variable>
                              </subNode:value>
                              <subNode:byRef>
                               <scalar:false/>
                              </subNode:byRef>
                             </node:Arg>
                            </scalar:array>
                           </subNode:args>
                          </node:Expr_FuncCall>
                         </subNode:left>
                         <subNode:right>
                          <node:Scalar_LNumber>
                           <attribute:startLine>
                            <scalar:int>633</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>633</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <scalar:int>1</scalar:int>
                           </subNode:value>
                          </node:Scalar_LNumber>
                         </subNode:right>
                        </node:Expr_Equal>
                       </subNode:cond>
                       <subNode:stmts>
                        <scalar:array>
                         <node:Expr_Assign>
                          <attribute:startLine>
                           <scalar:int>633</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>633</scalar:int>
                          </attribute:endLine>
                          <subNode:var>
                           <node:Expr_Variable>
                            <attribute:startLine>
                             <scalar:int>633</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>633</scalar:int>
                            </attribute:endLine>
                            <subNode:name>
                             <scalar:string>addr</scalar:string>
                            </subNode:name>
                           </node:Expr_Variable>
                          </subNode:var>
                          <subNode:expr>
                           <node:Expr_ArrayDimFetch>
                            <attribute:startLine>
                             <scalar:int>633</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>633</scalar:int>
                            </attribute:endLine>
                            <subNode:var>
                             <node:Expr_Variable>
                              <attribute:startLine>
                               <scalar:int>633</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>633</scalar:int>
                              </attribute:endLine>
                              <subNode:name>
                               <scalar:string>addr</scalar:string>
                              </subNode:name>
                             </node:Expr_Variable>
                            </subNode:var>
                            <subNode:dim>
                             <node:Scalar_LNumber>
                              <attribute:startLine>
                               <scalar:int>633</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>633</scalar:int>
                              </attribute:endLine>
                              <subNode:value>
                               <scalar:int>0</scalar:int>
                              </subNode:value>
                             </node:Scalar_LNumber>
                            </subNode:dim>
                           </node:Expr_ArrayDimFetch>
                          </subNode:expr>
                         </node:Expr_Assign>
                        </scalar:array>
                       </subNode:stmts>
                      </node:Stmt_ElseIf>
                     </scalar:array>
                    </subNode:elseifs>
                    <subNode:else>
                     <node:Stmt_Else>
                      <attribute:startLine>
                       <scalar:int>634</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>634</scalar:int>
                      </attribute:endLine>
                      <subNode:stmts>
                       <scalar:array>
                        <node:Stmt_Continue>
                         <attribute:startLine>
                          <scalar:int>634</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>634</scalar:int>
                         </attribute:endLine>
                         <subNode:num>
                          <scalar:null/>
                         </subNode:num>
                        </node:Stmt_Continue>
                       </scalar:array>
                      </subNode:stmts>
                     </node:Stmt_Else>
                    </subNode:else>
                    <subNode:cond>
                     <node:Expr_GreaterOrEqual>
                      <attribute:startLine>
                       <scalar:int>627</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>627</scalar:int>
                      </attribute:endLine>
                      <subNode:left>
                       <node:Expr_FuncCall>
                        <attribute:startLine>
                         <scalar:int>627</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>627</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <node:Name>
                          <attribute:startLine>
                           <scalar:int>627</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>627</scalar:int>
                          </attribute:endLine>
                          <subNode:parts>
                           <scalar:array>
                            <scalar:string>count</scalar:string>
                           </scalar:array>
                          </subNode:parts>
                         </node:Name>
                        </subNode:name>
                        <subNode:args>
                         <scalar:array>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>627</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>627</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>627</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>627</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>addr</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                         </scalar:array>
                        </subNode:args>
                       </node:Expr_FuncCall>
                      </subNode:left>
                      <subNode:right>
                       <node:Scalar_LNumber>
                        <attribute:startLine>
                         <scalar:int>627</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>627</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <scalar:int>2</scalar:int>
                        </subNode:value>
                       </node:Scalar_LNumber>
                      </subNode:right>
                     </node:Expr_GreaterOrEqual>
                    </subNode:cond>
                   </node:Stmt_If>
                  </scalar:array>
                 </subNode:stmts>
                 <subNode:elseifs>
                  <scalar:array/>
                 </subNode:elseifs>
                 <subNode:else>
                  <scalar:null/>
                 </subNode:else>
                 <subNode:cond>
                  <node:Expr_FuncCall>
                   <attribute:startLine>
                    <scalar:int>624</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>624</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <node:Name>
                     <attribute:startLine>
                      <scalar:int>624</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>624</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>is_array</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>624</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>624</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>624</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>624</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>addr</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                    </scalar:array>
                   </subNode:args>
                  </node:Expr_FuncCall>
                 </subNode:cond>
                </node:Stmt_If>
                <node:Stmt_If>
                 <attribute:startLine>
                  <scalar:int>637</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>642</scalar:int>
                 </attribute:endLine>
                 <subNode:stmts>
                  <scalar:array>
                   <node:Expr_Assign>
                    <attribute:startLine>
                     <scalar:int>639</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>639</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>639</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>639</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>addr</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:expr>
                     <node:Expr_MethodCall>
                      <attribute:startLine>
                       <scalar:int>639</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>639</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>639</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>639</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>this</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>stringToAddress</scalar:string>
                      </subNode:name>
                      <subNode:args>
                       <scalar:array>
                        <node:Arg>
                         <attribute:startLine>
                          <scalar:int>639</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>639</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>639</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>639</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>addr</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:value>
                         <subNode:byRef>
                          <scalar:false/>
                         </subNode:byRef>
                        </node:Arg>
                       </scalar:array>
                      </subNode:args>
                     </node:Expr_MethodCall>
                    </subNode:expr>
                   </node:Expr_Assign>
                   <node:Expr_MethodCall>
                    <attribute:startLine>
                     <scalar:int>640</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>640</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_PropertyFetch>
                      <attribute:startLine>
                       <scalar:int>640</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>640</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>640</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>640</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>this</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>recipients</scalar:string>
                      </subNode:name>
                     </node:Expr_PropertyFetch>
                    </subNode:var>
                    <subNode:name>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>640</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>640</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>method</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:name>
                    <subNode:args>
                     <scalar:array>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>640</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>640</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>640</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>640</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>addr</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                     </scalar:array>
                    </subNode:args>
                   </node:Expr_MethodCall>
                   <node:Expr_PostInc>
                    <attribute:startLine>
                     <scalar:int>641</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>641</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>641</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>641</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>added</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                   </node:Expr_PostInc>
                  </scalar:array>
                 </subNode:stmts>
                 <subNode:elseifs>
                  <scalar:array/>
                 </subNode:elseifs>
                 <subNode:else>
                  <scalar:null/>
                 </subNode:else>
                 <subNode:cond>
                  <node:Expr_FuncCall>
                   <attribute:startLine>
                    <scalar:int>637</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>637</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <node:Name>
                     <attribute:startLine>
                      <scalar:int>637</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>637</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>is_string</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>637</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>637</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>637</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>637</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>addr</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                    </scalar:array>
                   </subNode:args>
                  </node:Expr_FuncCall>
                 </subNode:cond>
                </node:Stmt_If>
               </scalar:array>
              </subNode:stmts>
              <subNode:expr>
               <node:Expr_Cast_Array>
                <attribute:startLine>
                 <scalar:int>622</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>622</scalar:int>
                </attribute:endLine>
                <subNode:expr>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>622</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>622</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>address</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:expr>
               </node:Expr_Cast_Array>
              </subNode:expr>
              <subNode:valueVar>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>622</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>622</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>addr</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:valueVar>
             </node:Stmt_Foreach>
             <node:Stmt_Return>
              <attribute:startLine>
               <scalar:int>644</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>644</scalar:int>
              </attribute:endLine>
              <subNode:expr>
               <node:Expr_Greater>
                <attribute:startLine>
                 <scalar:int>644</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>644</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>644</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>644</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>added</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:left>
                <subNode:right>
                 <node:Scalar_LNumber>
                  <attribute:startLine>
                   <scalar:int>644</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>644</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:int>0</scalar:int>
                  </subNode:value>
                 </node:Scalar_LNumber>
                </subNode:right>
               </node:Expr_Greater>
              </subNode:expr>
             </node:Stmt_Return>
            </scalar:array>
           </subNode:stmts>
          </node:Stmt_Else>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Instanceof>
           <attribute:startLine>
            <scalar:int>614</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>614</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>614</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>614</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>address</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:expr>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>614</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>614</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Swift_Address</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
          </node:Expr_Instanceof>
         </subNode:cond>
        </node:Stmt_If>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>addRecipients</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="647">/**
   * Flush message, recipients and headers
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>650</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>654</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>652</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>652</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>652</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>652</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>newMessage</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array/>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>653</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>653</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>653</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>653</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>newRecipientList</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array/>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>flush</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="655">/**
   * Get a list of any addresses which have failed since instantiation
   * @return array
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>659</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>663</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>661</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>661</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>661</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>661</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>log</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_StaticCall>
           <attribute:startLine>
            <scalar:int>661</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>661</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>661</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>661</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Swift_LogContainer</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
           <subNode:name>
            <scalar:string>getLog</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_StaticCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>662</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>662</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>662</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>662</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>662</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>662</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>log</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>getFailedRecipients</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getFailedRecipients</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="664">/**
   * Set the multipart MIME warning message (only seen by old clients)
   * @param string The message to show
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>668</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>671</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>668</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>668</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>text</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>670</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>670</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>670</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>670</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>670</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>670</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>message</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:name>
          <scalar:string>setMimeWarning</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>670</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>670</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>670</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>670</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>text</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>setMimeWarning</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="672">/**
   * Get the currently set MIME warning (seen by old clients)
   * @return string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>676</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>679</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>678</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>678</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>678</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>678</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>678</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>678</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>678</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>678</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>message</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:var>
           <subNode:name>
            <scalar:string>getMimeWarning</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getMimeWarning</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="680">/**
   * Set the charset of the charset to use in the message
   * @param string The charset (e.g. utf-8, iso-8859-1 etc)
   * @return boolean
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>685</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>694</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>685</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>685</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>charset</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_TryCatch>
         <attribute:startLine>
          <scalar:int>687</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>693</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_MethodCall>
            <attribute:startLine>
             <scalar:int>688</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>688</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>688</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>688</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>688</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>688</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>message</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:var>
            <subNode:name>
             <scalar:string>setCharset</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>688</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>688</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>688</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>688</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>charset</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_MethodCall>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>689</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>689</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_ConstFetch>
              <attribute:startLine>
               <scalar:int>689</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>689</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>689</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>689</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>true</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
             </node:Expr_ConstFetch>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:catches>
          <scalar:array>
           <node:Stmt_Catch>
            <attribute:startLine>
             <scalar:int>690</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>693</scalar:int>
            </attribute:endLine>
            <subNode:type>
             <node:Name_FullyQualified>
              <attribute:startLine>
               <scalar:int>690</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>690</scalar:int>
              </attribute:endLine>
              <subNode:parts>
               <scalar:array>
                <scalar:string>Swift_Message_MimeException</scalar:string>
               </scalar:array>
              </subNode:parts>
             </node:Name_FullyQualified>
            </subNode:type>
            <subNode:var>
             <scalar:string>e</scalar:string>
            </subNode:var>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>691</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>691</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>691</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>691</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>this</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>setError</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>691</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>691</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Concat>
                    <attribute:startLine>
                     <scalar:int>691</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>691</scalar:int>
                    </attribute:endLine>
                    <subNode:left>
                     <node:Scalar_String>
                      <attribute:startLine>
                       <scalar:int>691</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>691</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <scalar:string>Unable to set the message charset:&lt;br /&gt;</scalar:string>
                      </subNode:value>
                     </node:Scalar_String>
                    </subNode:left>
                    <subNode:right>
                     <node:Expr_MethodCall>
                      <attribute:startLine>
                       <scalar:int>691</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>691</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>691</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>691</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>e</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>getMessage</scalar:string>
                      </subNode:name>
                      <subNode:args>
                       <scalar:array/>
                      </subNode:args>
                     </node:Expr_MethodCall>
                    </subNode:right>
                   </node:Expr_Concat>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_MethodCall>
              <node:Stmt_Return>
               <attribute:startLine>
                <scalar:int>692</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>692</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_ConstFetch>
                 <attribute:startLine>
                  <scalar:int>692</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>692</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>692</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>692</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>false</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                </node:Expr_ConstFetch>
               </subNode:expr>
              </node:Stmt_Return>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_Catch>
          </scalar:array>
         </subNode:catches>
         <subNode:finallyStmts>
          <scalar:null/>
         </subNode:finallyStmts>
        </node:Stmt_TryCatch>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>setCharset</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="695">/**
   * Get the charset of the charset to use in the message
   * @return string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>699</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>702</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>701</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>701</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>701</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>701</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>701</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>701</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>701</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>701</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>message</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:var>
           <subNode:name>
            <scalar:string>getCharset</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getCharset</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="703">/**
   * Add a new MIME part to the message
   * @param mixed The part to add.  If this is a string it's used as the body.  If it's an instance of Swift_Message_Part it's used as the entire part
   * @param string Content-type, default text/plain
   * @param string The encoding used (default is to let Swift decide)
   * @param string The charset to use (default is to let swift decide)
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>710</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>730</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>710</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>710</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>body</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>710</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>710</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>type</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>710</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>710</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>text/plain</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>710</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>710</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>encoding</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>710</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>710</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>710</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>710</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>710</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>710</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>charset</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>710</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>710</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>710</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>710</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>712</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>729</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_TryCatch>
            <attribute:startLine>
             <scalar:int>714</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>719</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>715</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>715</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_ArrayDimFetch>
                 <attribute:startLine>
                  <scalar:int>715</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>715</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_PropertyFetch>
                   <attribute:startLine>
                    <scalar:int>715</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>715</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>715</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>715</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>partIds</scalar:string>
                   </subNode:name>
                  </node:Expr_PropertyFetch>
                 </subNode:var>
                 <subNode:dim>
                  <scalar:null/>
                 </subNode:dim>
                </node:Expr_ArrayDimFetch>
               </subNode:var>
               <subNode:expr>
                <node:Expr_MethodCall>
                 <attribute:startLine>
                  <scalar:int>715</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>715</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_PropertyFetch>
                   <attribute:startLine>
                    <scalar:int>715</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>715</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>715</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>715</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>message</scalar:string>
                   </subNode:name>
                  </node:Expr_PropertyFetch>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>attach</scalar:string>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>715</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>715</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>715</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>715</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>body</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_MethodCall>
               </subNode:expr>
              </node:Expr_Assign>
             </scalar:array>
            </subNode:stmts>
            <subNode:catches>
             <scalar:array>
              <node:Stmt_Catch>
               <attribute:startLine>
                <scalar:int>716</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>719</scalar:int>
               </attribute:endLine>
               <subNode:type>
                <node:Name_FullyQualified>
                 <attribute:startLine>
                  <scalar:int>716</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>716</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>Swift_Message_MimeException</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name_FullyQualified>
               </subNode:type>
               <subNode:var>
                <scalar:string>e</scalar:string>
               </subNode:var>
               <subNode:stmts>
                <scalar:array>
                 <node:Expr_MethodCall>
                  <attribute:startLine>
                   <scalar:int>717</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>717</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>717</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>717</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>this</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>setError</scalar:string>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>717</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>717</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Expr_Concat>
                       <attribute:startLine>
                        <scalar:int>717</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>717</scalar:int>
                       </attribute:endLine>
                       <subNode:left>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>717</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>717</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>A MIME part failed to attach:&lt;br /&gt;</scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:left>
                       <subNode:right>
                        <node:Expr_MethodCall>
                         <attribute:startLine>
                          <scalar:int>717</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>717</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>717</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>717</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>e</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>getMessage</scalar:string>
                         </subNode:name>
                         <subNode:args>
                          <scalar:array/>
                         </subNode:args>
                        </node:Expr_MethodCall>
                       </subNode:right>
                      </node:Expr_Concat>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_MethodCall>
                 <node:Stmt_Return>
                  <attribute:startLine>
                   <scalar:int>718</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>718</scalar:int>
                  </attribute:endLine>
                  <subNode:expr>
                   <node:Expr_ConstFetch>
                    <attribute:startLine>
                     <scalar:int>718</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>718</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <node:Name>
                      <attribute:startLine>
                       <scalar:int>718</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>718</scalar:int>
                      </attribute:endLine>
                      <subNode:parts>
                       <scalar:array>
                        <scalar:string>false</scalar:string>
                       </scalar:array>
                      </subNode:parts>
                     </node:Name>
                    </subNode:name>
                   </node:Expr_ConstFetch>
                  </subNode:expr>
                 </node:Stmt_Return>
                </scalar:array>
               </subNode:stmts>
              </node:Stmt_Catch>
             </scalar:array>
            </subNode:catches>
            <subNode:finallyStmts>
             <scalar:null/>
            </subNode:finallyStmts>
           </node:Stmt_TryCatch>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <node:Stmt_Else>
           <attribute:startLine>
            <scalar:int>721</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>729</scalar:int>
           </attribute:endLine>
           <subNode:stmts>
            <scalar:array>
             <node:Stmt_TryCatch>
              <attribute:startLine>
               <scalar:int>723</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>728</scalar:int>
              </attribute:endLine>
              <subNode:stmts>
               <scalar:array>
                <node:Expr_Assign>
                 <attribute:startLine>
                  <scalar:int>724</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>724</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_ArrayDimFetch>
                   <attribute:startLine>
                    <scalar:int>724</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>724</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_PropertyFetch>
                     <attribute:startLine>
                      <scalar:int>724</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>724</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>724</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>724</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>this</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>partIds</scalar:string>
                     </subNode:name>
                    </node:Expr_PropertyFetch>
                   </subNode:var>
                   <subNode:dim>
                    <scalar:null/>
                   </subNode:dim>
                  </node:Expr_ArrayDimFetch>
                 </subNode:var>
                 <subNode:expr>
                  <node:Expr_MethodCall>
                   <attribute:startLine>
                    <scalar:int>724</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>724</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_PropertyFetch>
                     <attribute:startLine>
                      <scalar:int>724</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>724</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>724</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>724</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>this</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>message</scalar:string>
                     </subNode:name>
                    </node:Expr_PropertyFetch>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>attach</scalar:string>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>724</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>724</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_New>
                        <attribute:startLine>
                         <scalar:int>724</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>724</scalar:int>
                        </attribute:endLine>
                        <subNode:class>
                         <node:Name_FullyQualified>
                          <attribute:startLine>
                           <scalar:int>724</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>724</scalar:int>
                          </attribute:endLine>
                          <subNode:parts>
                           <scalar:array>
                            <scalar:string>Swift_Message_Part</scalar:string>
                           </scalar:array>
                          </subNode:parts>
                         </node:Name_FullyQualified>
                        </subNode:class>
                        <subNode:args>
                         <scalar:array>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>724</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>724</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>724</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>724</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>body</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>724</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>724</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>724</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>724</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>type</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>724</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>724</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>724</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>724</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>encoding</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>724</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>724</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>724</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>724</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>charset</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                         </scalar:array>
                        </subNode:args>
                       </node:Expr_New>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                    </scalar:array>
                   </subNode:args>
                  </node:Expr_MethodCall>
                 </subNode:expr>
                </node:Expr_Assign>
               </scalar:array>
              </subNode:stmts>
              <subNode:catches>
               <scalar:array>
                <node:Stmt_Catch>
                 <attribute:startLine>
                  <scalar:int>725</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>728</scalar:int>
                 </attribute:endLine>
                 <subNode:type>
                  <node:Name_FullyQualified>
                   <attribute:startLine>
                    <scalar:int>725</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>725</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>Swift_Message_MimeException</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name_FullyQualified>
                 </subNode:type>
                 <subNode:var>
                  <scalar:string>e</scalar:string>
                 </subNode:var>
                 <subNode:stmts>
                  <scalar:array>
                   <node:Expr_MethodCall>
                    <attribute:startLine>
                     <scalar:int>726</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>726</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>726</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>726</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>this</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>setError</scalar:string>
                    </subNode:name>
                    <subNode:args>
                     <scalar:array>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>726</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>726</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_Concat>
                         <attribute:startLine>
                          <scalar:int>726</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>726</scalar:int>
                         </attribute:endLine>
                         <subNode:left>
                          <node:Scalar_String>
                           <attribute:startLine>
                            <scalar:int>726</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>726</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <scalar:string>A MIME part failed to attach:&lt;br /&gt;</scalar:string>
                           </subNode:value>
                          </node:Scalar_String>
                         </subNode:left>
                         <subNode:right>
                          <node:Expr_MethodCall>
                           <attribute:startLine>
                            <scalar:int>726</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>726</scalar:int>
                           </attribute:endLine>
                           <subNode:var>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>726</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>726</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>e</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:var>
                           <subNode:name>
                            <scalar:string>getMessage</scalar:string>
                           </subNode:name>
                           <subNode:args>
                            <scalar:array/>
                           </subNode:args>
                          </node:Expr_MethodCall>
                         </subNode:right>
                        </node:Expr_Concat>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                     </scalar:array>
                    </subNode:args>
                   </node:Expr_MethodCall>
                   <node:Stmt_Return>
                    <attribute:startLine>
                     <scalar:int>727</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>727</scalar:int>
                    </attribute:endLine>
                    <subNode:expr>
                     <node:Expr_ConstFetch>
                      <attribute:startLine>
                       <scalar:int>727</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>727</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <node:Name>
                        <attribute:startLine>
                         <scalar:int>727</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>727</scalar:int>
                        </attribute:endLine>
                        <subNode:parts>
                         <scalar:array>
                          <scalar:string>false</scalar:string>
                         </scalar:array>
                        </subNode:parts>
                       </node:Name>
                      </subNode:name>
                     </node:Expr_ConstFetch>
                    </subNode:expr>
                   </node:Stmt_Return>
                  </scalar:array>
                 </subNode:stmts>
                </node:Stmt_Catch>
               </scalar:array>
              </subNode:catches>
              <subNode:finallyStmts>
               <scalar:null/>
              </subNode:finallyStmts>
             </node:Stmt_TryCatch>
            </scalar:array>
           </subNode:stmts>
          </node:Stmt_Else>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Instanceof>
           <attribute:startLine>
            <scalar:int>712</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>712</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>712</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>712</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>body</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:expr>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>712</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>712</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Swift_Message_Mime</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
          </node:Expr_Instanceof>
         </subNode:cond>
        </node:Stmt_If>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>addPart</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="731">/**
   * Add a new attachment to the message
   * @param mixed The attachment to add.  If this is a string it's used as the file contents.  If it's an instance of Swift_Message_Attachment it's used as the entire part.  If it's an instance of Swift_File it's used as the contents.
   * @param string Filename, optional
   * @param string Content-type. Default application/octet-stream
   * @param string The encoding used (default is base64)
   * @return boolean
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>739</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>763</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>739</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>739</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>data</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>739</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>739</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>filename</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>739</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>739</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>739</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>739</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>739</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>739</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>type</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>739</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>739</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>application/octet-stream</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>739</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>739</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>encoding</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>739</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>739</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>739</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>739</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>741</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>761</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_TryCatch>
            <attribute:startLine>
             <scalar:int>743</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>748</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>744</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>744</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_ArrayDimFetch>
                 <attribute:startLine>
                  <scalar:int>744</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>744</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_PropertyFetch>
                   <attribute:startLine>
                    <scalar:int>744</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>744</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>744</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>744</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>attachmentIds</scalar:string>
                   </subNode:name>
                  </node:Expr_PropertyFetch>
                 </subNode:var>
                 <subNode:dim>
                  <scalar:null/>
                 </subNode:dim>
                </node:Expr_ArrayDimFetch>
               </subNode:var>
               <subNode:expr>
                <node:Expr_MethodCall>
                 <attribute:startLine>
                  <scalar:int>744</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>744</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_PropertyFetch>
                   <attribute:startLine>
                    <scalar:int>744</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>744</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>744</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>744</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>message</scalar:string>
                   </subNode:name>
                  </node:Expr_PropertyFetch>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>attach</scalar:string>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>744</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>744</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>744</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>744</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>data</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_MethodCall>
               </subNode:expr>
              </node:Expr_Assign>
             </scalar:array>
            </subNode:stmts>
            <subNode:catches>
             <scalar:array>
              <node:Stmt_Catch>
               <attribute:startLine>
                <scalar:int>745</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>748</scalar:int>
               </attribute:endLine>
               <subNode:type>
                <node:Name_FullyQualified>
                 <attribute:startLine>
                  <scalar:int>745</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>745</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>Swift_Message_MimeException</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name_FullyQualified>
               </subNode:type>
               <subNode:var>
                <scalar:string>e</scalar:string>
               </subNode:var>
               <subNode:stmts>
                <scalar:array>
                 <node:Expr_MethodCall>
                  <attribute:startLine>
                   <scalar:int>746</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>746</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>746</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>746</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>this</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>setError</scalar:string>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>746</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>746</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Expr_Concat>
                       <attribute:startLine>
                        <scalar:int>746</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>746</scalar:int>
                       </attribute:endLine>
                       <subNode:left>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>746</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>746</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>An attachment failed to attach:&lt;br /&gt;</scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:left>
                       <subNode:right>
                        <node:Expr_MethodCall>
                         <attribute:startLine>
                          <scalar:int>746</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>746</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>746</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>746</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>e</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>getMessage</scalar:string>
                         </subNode:name>
                         <subNode:args>
                          <scalar:array/>
                         </subNode:args>
                        </node:Expr_MethodCall>
                       </subNode:right>
                      </node:Expr_Concat>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_MethodCall>
                 <node:Stmt_Return>
                  <attribute:startLine>
                   <scalar:int>747</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>747</scalar:int>
                  </attribute:endLine>
                  <subNode:expr>
                   <node:Expr_ConstFetch>
                    <attribute:startLine>
                     <scalar:int>747</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>747</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <node:Name>
                      <attribute:startLine>
                       <scalar:int>747</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>747</scalar:int>
                      </attribute:endLine>
                      <subNode:parts>
                       <scalar:array>
                        <scalar:string>false</scalar:string>
                       </scalar:array>
                      </subNode:parts>
                     </node:Name>
                    </subNode:name>
                   </node:Expr_ConstFetch>
                  </subNode:expr>
                 </node:Stmt_Return>
                </scalar:array>
               </subNode:stmts>
              </node:Stmt_Catch>
             </scalar:array>
            </subNode:catches>
            <subNode:finallyStmts>
             <scalar:null/>
            </subNode:finallyStmts>
           </node:Stmt_TryCatch>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <node:Stmt_Else>
           <attribute:startLine>
            <scalar:int>750</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>761</scalar:int>
           </attribute:endLine>
           <subNode:stmts>
            <scalar:array>
             <node:Stmt_TryCatch>
              <attribute:startLine>
               <scalar:int>752</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>760</scalar:int>
              </attribute:endLine>
              <subNode:stmts>
               <scalar:array>
                <node:Expr_Assign>
                 <attribute:startLine>
                  <scalar:int>753</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>753</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_ArrayDimFetch>
                   <attribute:startLine>
                    <scalar:int>753</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>753</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_PropertyFetch>
                     <attribute:startLine>
                      <scalar:int>753</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>753</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>753</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>753</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>this</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>attachmentIds</scalar:string>
                     </subNode:name>
                    </node:Expr_PropertyFetch>
                   </subNode:var>
                   <subNode:dim>
                    <scalar:null/>
                   </subNode:dim>
                  </node:Expr_ArrayDimFetch>
                 </subNode:var>
                 <subNode:expr>
                  <node:Expr_MethodCall>
                   <attribute:startLine>
                    <scalar:int>753</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>753</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_PropertyFetch>
                     <attribute:startLine>
                      <scalar:int>753</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>753</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>753</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>753</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>this</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>message</scalar:string>
                     </subNode:name>
                    </node:Expr_PropertyFetch>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>attach</scalar:string>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>753</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>753</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_New>
                        <attribute:startLine>
                         <scalar:int>753</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>753</scalar:int>
                        </attribute:endLine>
                        <subNode:class>
                         <node:Name_FullyQualified>
                          <attribute:startLine>
                           <scalar:int>753</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>753</scalar:int>
                          </attribute:endLine>
                          <subNode:parts>
                           <scalar:array>
                            <scalar:string>Swift_Message_Attachment</scalar:string>
                           </scalar:array>
                          </subNode:parts>
                         </node:Name_FullyQualified>
                        </subNode:class>
                        <subNode:args>
                         <scalar:array>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>753</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>753</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>753</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>753</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>data</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>753</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>753</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>753</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>753</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>filename</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>753</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>753</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>753</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>753</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>type</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>753</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>753</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>753</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>753</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>encoding</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                         </scalar:array>
                        </subNode:args>
                       </node:Expr_New>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                    </scalar:array>
                   </subNode:args>
                  </node:Expr_MethodCall>
                 </subNode:expr>
                </node:Expr_Assign>
               </scalar:array>
              </subNode:stmts>
              <subNode:catches>
               <scalar:array>
                <node:Stmt_Catch>
                 <attribute:startLine>
                  <scalar:int>754</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>757</scalar:int>
                 </attribute:endLine>
                 <subNode:type>
                  <node:Name_FullyQualified>
                   <attribute:startLine>
                    <scalar:int>754</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>754</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>Swift_Message_MimeException</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name_FullyQualified>
                 </subNode:type>
                 <subNode:var>
                  <scalar:string>e</scalar:string>
                 </subNode:var>
                 <subNode:stmts>
                  <scalar:array>
                   <node:Expr_MethodCall>
                    <attribute:startLine>
                     <scalar:int>755</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>755</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>755</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>755</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>this</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>setError</scalar:string>
                    </subNode:name>
                    <subNode:args>
                     <scalar:array>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>755</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>755</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_Concat>
                         <attribute:startLine>
                          <scalar:int>755</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>755</scalar:int>
                         </attribute:endLine>
                         <subNode:left>
                          <node:Scalar_String>
                           <attribute:startLine>
                            <scalar:int>755</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>755</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <scalar:string>An attachment failed to attach&lt;br /&gt;</scalar:string>
                           </subNode:value>
                          </node:Scalar_String>
                         </subNode:left>
                         <subNode:right>
                          <node:Expr_MethodCall>
                           <attribute:startLine>
                            <scalar:int>755</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>755</scalar:int>
                           </attribute:endLine>
                           <subNode:var>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>755</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>755</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>e</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:var>
                           <subNode:name>
                            <scalar:string>getMessage</scalar:string>
                           </subNode:name>
                           <subNode:args>
                            <scalar:array/>
                           </subNode:args>
                          </node:Expr_MethodCall>
                         </subNode:right>
                        </node:Expr_Concat>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                     </scalar:array>
                    </subNode:args>
                   </node:Expr_MethodCall>
                   <node:Stmt_Return>
                    <attribute:startLine>
                     <scalar:int>756</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>756</scalar:int>
                    </attribute:endLine>
                    <subNode:expr>
                     <node:Expr_ConstFetch>
                      <attribute:startLine>
                       <scalar:int>756</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>756</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <node:Name>
                        <attribute:startLine>
                         <scalar:int>756</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>756</scalar:int>
                        </attribute:endLine>
                        <subNode:parts>
                         <scalar:array>
                          <scalar:string>false</scalar:string>
                         </scalar:array>
                        </subNode:parts>
                       </node:Name>
                      </subNode:name>
                     </node:Expr_ConstFetch>
                    </subNode:expr>
                   </node:Stmt_Return>
                  </scalar:array>
                 </subNode:stmts>
                </node:Stmt_Catch>
                <node:Stmt_Catch>
                 <attribute:startLine>
                  <scalar:int>757</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>760</scalar:int>
                 </attribute:endLine>
                 <subNode:type>
                  <node:Name_FullyQualified>
                   <attribute:startLine>
                    <scalar:int>757</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>757</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>Swift_FileException</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name_FullyQualified>
                 </subNode:type>
                 <subNode:var>
                  <scalar:string>e</scalar:string>
                 </subNode:var>
                 <subNode:stmts>
                  <scalar:array>
                   <node:Expr_MethodCall>
                    <attribute:startLine>
                     <scalar:int>758</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>758</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>758</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>758</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>this</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>setError</scalar:string>
                    </subNode:name>
                    <subNode:args>
                     <scalar:array>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>758</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>758</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_Concat>
                         <attribute:startLine>
                          <scalar:int>758</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>758</scalar:int>
                         </attribute:endLine>
                         <subNode:left>
                          <node:Scalar_String>
                           <attribute:startLine>
                            <scalar:int>758</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>758</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <scalar:string>An attachment failed to attach:&lt;br /&gt;</scalar:string>
                           </subNode:value>
                          </node:Scalar_String>
                         </subNode:left>
                         <subNode:right>
                          <node:Expr_MethodCall>
                           <attribute:startLine>
                            <scalar:int>758</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>758</scalar:int>
                           </attribute:endLine>
                           <subNode:var>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>758</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>758</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>e</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:var>
                           <subNode:name>
                            <scalar:string>getMessage</scalar:string>
                           </subNode:name>
                           <subNode:args>
                            <scalar:array/>
                           </subNode:args>
                          </node:Expr_MethodCall>
                         </subNode:right>
                        </node:Expr_Concat>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                     </scalar:array>
                    </subNode:args>
                   </node:Expr_MethodCall>
                   <node:Stmt_Return>
                    <attribute:startLine>
                     <scalar:int>759</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>759</scalar:int>
                    </attribute:endLine>
                    <subNode:expr>
                     <node:Expr_ConstFetch>
                      <attribute:startLine>
                       <scalar:int>759</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>759</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <node:Name>
                        <attribute:startLine>
                         <scalar:int>759</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>759</scalar:int>
                        </attribute:endLine>
                        <subNode:parts>
                         <scalar:array>
                          <scalar:string>false</scalar:string>
                         </scalar:array>
                        </subNode:parts>
                       </node:Name>
                      </subNode:name>
                     </node:Expr_ConstFetch>
                    </subNode:expr>
                   </node:Stmt_Return>
                  </scalar:array>
                 </subNode:stmts>
                </node:Stmt_Catch>
               </scalar:array>
              </subNode:catches>
              <subNode:finallyStmts>
               <scalar:null/>
              </subNode:finallyStmts>
             </node:Stmt_TryCatch>
            </scalar:array>
           </subNode:stmts>
          </node:Stmt_Else>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Instanceof>
           <attribute:startLine>
            <scalar:int>741</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>741</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>741</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>741</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>data</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:expr>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>741</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>741</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Swift_Message_Mime</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
          </node:Expr_Instanceof>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>762</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>762</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>762</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>762</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>762</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>762</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>true</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>addAttachment</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="764">/**
   * Embed an image into the message and get the src attribute for HTML
   * Returns FALSE on failure
   * @param mixed The path to the image, a Swift_Message_Image object or a Swift_File object
   * @return string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>770</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>807</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>770</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>770</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>input</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>772</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>772</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>772</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>772</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>ret</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>772</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>772</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>772</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>772</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>false</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>773</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>806</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>775</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>775</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>775</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>775</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>ret</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>775</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>775</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>775</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>775</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>775</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>775</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>message</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:var>
              <subNode:name>
               <scalar:string>attach</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>775</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>775</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>775</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>775</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>input</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>776</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>776</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_ArrayDimFetch>
              <attribute:startLine>
               <scalar:int>776</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>776</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>776</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>776</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>776</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>776</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>attachmentIds</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:var>
              <subNode:dim>
               <scalar:null/>
              </subNode:dim>
             </node:Expr_ArrayDimFetch>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>776</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>776</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>ret</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>777</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>777</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>777</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>777</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>ret</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array>
           <node:Stmt_ElseIf>
            <attribute:startLine>
             <scalar:int>779</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>792</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Expr_Instanceof>
              <attribute:startLine>
               <scalar:int>779</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>779</scalar:int>
              </attribute:endLine>
              <subNode:expr>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>779</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>779</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>input</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:expr>
              <subNode:class>
               <node:Name_FullyQualified>
                <attribute:startLine>
                 <scalar:int>779</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>779</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>Swift_File</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name_FullyQualified>
              </subNode:class>
             </node:Expr_Instanceof>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_TryCatch>
               <attribute:startLine>
                <scalar:int>781</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>791</scalar:int>
               </attribute:endLine>
               <subNode:stmts>
                <scalar:array>
                 <node:Expr_Assign>
                  <attribute:startLine>
                   <scalar:int>782</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>782</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>782</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>782</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>ret</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:expr>
                   <node:Expr_MethodCall>
                    <attribute:startLine>
                     <scalar:int>782</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>782</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_PropertyFetch>
                      <attribute:startLine>
                       <scalar:int>782</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>782</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>782</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>782</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>this</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>message</scalar:string>
                      </subNode:name>
                     </node:Expr_PropertyFetch>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>attach</scalar:string>
                    </subNode:name>
                    <subNode:args>
                     <scalar:array>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>782</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>782</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_New>
                         <attribute:startLine>
                          <scalar:int>782</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>782</scalar:int>
                         </attribute:endLine>
                         <subNode:class>
                          <node:Name_FullyQualified>
                           <attribute:startLine>
                            <scalar:int>782</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>782</scalar:int>
                           </attribute:endLine>
                           <subNode:parts>
                            <scalar:array>
                             <scalar:string>Swift_Message_Image</scalar:string>
                            </scalar:array>
                           </subNode:parts>
                          </node:Name_FullyQualified>
                         </subNode:class>
                         <subNode:args>
                          <scalar:array>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>782</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>782</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_Variable>
                              <attribute:startLine>
                               <scalar:int>782</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>782</scalar:int>
                              </attribute:endLine>
                              <subNode:name>
                               <scalar:string>input</scalar:string>
                              </subNode:name>
                             </node:Expr_Variable>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                          </scalar:array>
                         </subNode:args>
                        </node:Expr_New>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                     </scalar:array>
                    </subNode:args>
                   </node:Expr_MethodCall>
                  </subNode:expr>
                 </node:Expr_Assign>
                 <node:Expr_Assign>
                  <attribute:startLine>
                   <scalar:int>783</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>783</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_ArrayDimFetch>
                    <attribute:startLine>
                     <scalar:int>783</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>783</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_PropertyFetch>
                      <attribute:startLine>
                       <scalar:int>783</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>783</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>783</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>783</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>this</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>attachmentIds</scalar:string>
                      </subNode:name>
                     </node:Expr_PropertyFetch>
                    </subNode:var>
                    <subNode:dim>
                     <scalar:null/>
                    </subNode:dim>
                   </node:Expr_ArrayDimFetch>
                  </subNode:var>
                  <subNode:expr>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>783</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>783</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>ret</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:expr>
                 </node:Expr_Assign>
                 <node:Stmt_Return>
                  <attribute:startLine>
                   <scalar:int>784</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>784</scalar:int>
                  </attribute:endLine>
                  <subNode:expr>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>784</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>784</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>ret</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:expr>
                 </node:Stmt_Return>
                </scalar:array>
               </subNode:stmts>
               <subNode:catches>
                <scalar:array>
                 <node:Stmt_Catch>
                  <attribute:startLine>
                   <scalar:int>785</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>788</scalar:int>
                  </attribute:endLine>
                  <subNode:type>
                   <node:Name_FullyQualified>
                    <attribute:startLine>
                     <scalar:int>785</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>785</scalar:int>
                    </attribute:endLine>
                    <subNode:parts>
                     <scalar:array>
                      <scalar:string>Swift_Message_MimeException</scalar:string>
                     </scalar:array>
                    </subNode:parts>
                   </node:Name_FullyQualified>
                  </subNode:type>
                  <subNode:var>
                   <scalar:string>e</scalar:string>
                  </subNode:var>
                  <subNode:stmts>
                   <scalar:array>
                    <node:Expr_MethodCall>
                     <attribute:startLine>
                      <scalar:int>786</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>786</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>786</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>786</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>this</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>setError</scalar:string>
                     </subNode:name>
                     <subNode:args>
                      <scalar:array>
                       <node:Arg>
                        <attribute:startLine>
                         <scalar:int>786</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>786</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <node:Expr_Concat>
                          <attribute:startLine>
                           <scalar:int>786</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>786</scalar:int>
                          </attribute:endLine>
                          <subNode:left>
                           <node:Scalar_String>
                            <attribute:startLine>
                             <scalar:int>786</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>786</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <scalar:string>An attachment failed to attach:&lt;br /&gt;</scalar:string>
                            </subNode:value>
                           </node:Scalar_String>
                          </subNode:left>
                          <subNode:right>
                           <node:Expr_MethodCall>
                            <attribute:startLine>
                             <scalar:int>786</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>786</scalar:int>
                            </attribute:endLine>
                            <subNode:var>
                             <node:Expr_Variable>
                              <attribute:startLine>
                               <scalar:int>786</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>786</scalar:int>
                              </attribute:endLine>
                              <subNode:name>
                               <scalar:string>e</scalar:string>
                              </subNode:name>
                             </node:Expr_Variable>
                            </subNode:var>
                            <subNode:name>
                             <scalar:string>getMessage</scalar:string>
                            </subNode:name>
                            <subNode:args>
                             <scalar:array/>
                            </subNode:args>
                           </node:Expr_MethodCall>
                          </subNode:right>
                         </node:Expr_Concat>
                        </subNode:value>
                        <subNode:byRef>
                         <scalar:false/>
                        </subNode:byRef>
                       </node:Arg>
                      </scalar:array>
                     </subNode:args>
                    </node:Expr_MethodCall>
                    <node:Stmt_Return>
                     <attribute:startLine>
                      <scalar:int>787</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>787</scalar:int>
                     </attribute:endLine>
                     <subNode:expr>
                      <node:Expr_ConstFetch>
                       <attribute:startLine>
                        <scalar:int>787</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>787</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <node:Name>
                         <attribute:startLine>
                          <scalar:int>787</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>787</scalar:int>
                         </attribute:endLine>
                         <subNode:parts>
                          <scalar:array>
                           <scalar:string>false</scalar:string>
                          </scalar:array>
                         </subNode:parts>
                        </node:Name>
                       </subNode:name>
                      </node:Expr_ConstFetch>
                     </subNode:expr>
                    </node:Stmt_Return>
                   </scalar:array>
                  </subNode:stmts>
                 </node:Stmt_Catch>
                 <node:Stmt_Catch>
                  <attribute:startLine>
                   <scalar:int>788</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>791</scalar:int>
                  </attribute:endLine>
                  <subNode:type>
                   <node:Name_FullyQualified>
                    <attribute:startLine>
                     <scalar:int>788</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>788</scalar:int>
                    </attribute:endLine>
                    <subNode:parts>
                     <scalar:array>
                      <scalar:string>Swift_FileException</scalar:string>
                     </scalar:array>
                    </subNode:parts>
                   </node:Name_FullyQualified>
                  </subNode:type>
                  <subNode:var>
                   <scalar:string>e</scalar:string>
                  </subNode:var>
                  <subNode:stmts>
                   <scalar:array>
                    <node:Expr_MethodCall>
                     <attribute:startLine>
                      <scalar:int>789</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>789</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>789</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>789</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>this</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>setError</scalar:string>
                     </subNode:name>
                     <subNode:args>
                      <scalar:array>
                       <node:Arg>
                        <attribute:startLine>
                         <scalar:int>789</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>789</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <node:Expr_Concat>
                          <attribute:startLine>
                           <scalar:int>789</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>789</scalar:int>
                          </attribute:endLine>
                          <subNode:left>
                           <node:Scalar_String>
                            <attribute:startLine>
                             <scalar:int>789</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>789</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <scalar:string>An attachment failed to attach:&lt;br /&gt;</scalar:string>
                            </subNode:value>
                           </node:Scalar_String>
                          </subNode:left>
                          <subNode:right>
                           <node:Expr_MethodCall>
                            <attribute:startLine>
                             <scalar:int>789</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>789</scalar:int>
                            </attribute:endLine>
                            <subNode:var>
                             <node:Expr_Variable>
                              <attribute:startLine>
                               <scalar:int>789</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>789</scalar:int>
                              </attribute:endLine>
                              <subNode:name>
                               <scalar:string>e</scalar:string>
                              </subNode:name>
                             </node:Expr_Variable>
                            </subNode:var>
                            <subNode:name>
                             <scalar:string>getMessage</scalar:string>
                            </subNode:name>
                            <subNode:args>
                             <scalar:array/>
                            </subNode:args>
                           </node:Expr_MethodCall>
                          </subNode:right>
                         </node:Expr_Concat>
                        </subNode:value>
                        <subNode:byRef>
                         <scalar:false/>
                        </subNode:byRef>
                       </node:Arg>
                      </scalar:array>
                     </subNode:args>
                    </node:Expr_MethodCall>
                    <node:Stmt_Return>
                     <attribute:startLine>
                      <scalar:int>790</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>790</scalar:int>
                     </attribute:endLine>
                     <subNode:expr>
                      <node:Expr_ConstFetch>
                       <attribute:startLine>
                        <scalar:int>790</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>790</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <node:Name>
                         <attribute:startLine>
                          <scalar:int>790</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>790</scalar:int>
                         </attribute:endLine>
                         <subNode:parts>
                          <scalar:array>
                           <scalar:string>false</scalar:string>
                          </scalar:array>
                         </subNode:parts>
                        </node:Name>
                       </subNode:name>
                      </node:Expr_ConstFetch>
                     </subNode:expr>
                    </node:Stmt_Return>
                   </scalar:array>
                  </subNode:stmts>
                 </node:Stmt_Catch>
                </scalar:array>
               </subNode:catches>
               <subNode:finallyStmts>
                <scalar:null/>
               </subNode:finallyStmts>
              </node:Stmt_TryCatch>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_ElseIf>
          </scalar:array>
         </subNode:elseifs>
         <subNode:else>
          <node:Stmt_Else>
           <attribute:startLine>
            <scalar:int>793</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>806</scalar:int>
           </attribute:endLine>
           <subNode:stmts>
            <scalar:array>
             <node:Stmt_TryCatch>
              <attribute:startLine>
               <scalar:int>795</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>805</scalar:int>
              </attribute:endLine>
              <subNode:stmts>
               <scalar:array>
                <node:Expr_Assign>
                 <attribute:startLine>
                  <scalar:int>796</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>796</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>796</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>796</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>ret</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:expr>
                  <node:Expr_MethodCall>
                   <attribute:startLine>
                    <scalar:int>796</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>796</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_PropertyFetch>
                     <attribute:startLine>
                      <scalar:int>796</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>796</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>796</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>796</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>this</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>message</scalar:string>
                     </subNode:name>
                    </node:Expr_PropertyFetch>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>attach</scalar:string>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>796</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>796</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_New>
                        <attribute:startLine>
                         <scalar:int>796</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>796</scalar:int>
                        </attribute:endLine>
                        <subNode:class>
                         <node:Name_FullyQualified>
                          <attribute:startLine>
                           <scalar:int>796</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>796</scalar:int>
                          </attribute:endLine>
                          <subNode:parts>
                           <scalar:array>
                            <scalar:string>Swift_Message_Image</scalar:string>
                           </scalar:array>
                          </subNode:parts>
                         </node:Name_FullyQualified>
                        </subNode:class>
                        <subNode:args>
                         <scalar:array>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>796</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>796</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Expr_New>
                             <attribute:startLine>
                              <scalar:int>796</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>796</scalar:int>
                             </attribute:endLine>
                             <subNode:class>
                              <node:Name_FullyQualified>
                               <attribute:startLine>
                                <scalar:int>796</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>796</scalar:int>
                               </attribute:endLine>
                               <subNode:parts>
                                <scalar:array>
                                 <scalar:string>Swift_File</scalar:string>
                                </scalar:array>
                               </subNode:parts>
                              </node:Name_FullyQualified>
                             </subNode:class>
                             <subNode:args>
                              <scalar:array>
                               <node:Arg>
                                <attribute:startLine>
                                 <scalar:int>796</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>796</scalar:int>
                                </attribute:endLine>
                                <subNode:value>
                                 <node:Expr_Variable>
                                  <attribute:startLine>
                                   <scalar:int>796</scalar:int>
                                  </attribute:startLine>
                                  <attribute:endLine>
                                   <scalar:int>796</scalar:int>
                                  </attribute:endLine>
                                  <subNode:name>
                                   <scalar:string>input</scalar:string>
                                  </subNode:name>
                                 </node:Expr_Variable>
                                </subNode:value>
                                <subNode:byRef>
                                 <scalar:false/>
                                </subNode:byRef>
                               </node:Arg>
                              </scalar:array>
                             </subNode:args>
                            </node:Expr_New>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                         </scalar:array>
                        </subNode:args>
                       </node:Expr_New>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                    </scalar:array>
                   </subNode:args>
                  </node:Expr_MethodCall>
                 </subNode:expr>
                </node:Expr_Assign>
                <node:Expr_Assign>
                 <attribute:startLine>
                  <scalar:int>797</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>797</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_ArrayDimFetch>
                   <attribute:startLine>
                    <scalar:int>797</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>797</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_PropertyFetch>
                     <attribute:startLine>
                      <scalar:int>797</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>797</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>797</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>797</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>this</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>attachmentIds</scalar:string>
                     </subNode:name>
                    </node:Expr_PropertyFetch>
                   </subNode:var>
                   <subNode:dim>
                    <scalar:null/>
                   </subNode:dim>
                  </node:Expr_ArrayDimFetch>
                 </subNode:var>
                 <subNode:expr>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>797</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>797</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>ret</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:expr>
                </node:Expr_Assign>
                <node:Stmt_Return>
                 <attribute:startLine>
                  <scalar:int>798</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>798</scalar:int>
                 </attribute:endLine>
                 <subNode:expr>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>798</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>798</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>ret</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:expr>
                </node:Stmt_Return>
               </scalar:array>
              </subNode:stmts>
              <subNode:catches>
               <scalar:array>
                <node:Stmt_Catch>
                 <attribute:startLine>
                  <scalar:int>799</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>802</scalar:int>
                 </attribute:endLine>
                 <subNode:type>
                  <node:Name_FullyQualified>
                   <attribute:startLine>
                    <scalar:int>799</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>799</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>Swift_Message_MimeException</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name_FullyQualified>
                 </subNode:type>
                 <subNode:var>
                  <scalar:string>e</scalar:string>
                 </subNode:var>
                 <subNode:stmts>
                  <scalar:array>
                   <node:Expr_MethodCall>
                    <attribute:startLine>
                     <scalar:int>800</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>800</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>800</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>800</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>this</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>setError</scalar:string>
                    </subNode:name>
                    <subNode:args>
                     <scalar:array>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>800</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>800</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_Concat>
                         <attribute:startLine>
                          <scalar:int>800</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>800</scalar:int>
                         </attribute:endLine>
                         <subNode:left>
                          <node:Scalar_String>
                           <attribute:startLine>
                            <scalar:int>800</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>800</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <scalar:string>An attachment failed to attach:&lt;br /&gt;</scalar:string>
                           </subNode:value>
                          </node:Scalar_String>
                         </subNode:left>
                         <subNode:right>
                          <node:Expr_MethodCall>
                           <attribute:startLine>
                            <scalar:int>800</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>800</scalar:int>
                           </attribute:endLine>
                           <subNode:var>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>800</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>800</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>e</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:var>
                           <subNode:name>
                            <scalar:string>getMessage</scalar:string>
                           </subNode:name>
                           <subNode:args>
                            <scalar:array/>
                           </subNode:args>
                          </node:Expr_MethodCall>
                         </subNode:right>
                        </node:Expr_Concat>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                     </scalar:array>
                    </subNode:args>
                   </node:Expr_MethodCall>
                   <node:Stmt_Return>
                    <attribute:startLine>
                     <scalar:int>801</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>801</scalar:int>
                    </attribute:endLine>
                    <subNode:expr>
                     <node:Expr_ConstFetch>
                      <attribute:startLine>
                       <scalar:int>801</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>801</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <node:Name>
                        <attribute:startLine>
                         <scalar:int>801</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>801</scalar:int>
                        </attribute:endLine>
                        <subNode:parts>
                         <scalar:array>
                          <scalar:string>false</scalar:string>
                         </scalar:array>
                        </subNode:parts>
                       </node:Name>
                      </subNode:name>
                     </node:Expr_ConstFetch>
                    </subNode:expr>
                   </node:Stmt_Return>
                  </scalar:array>
                 </subNode:stmts>
                </node:Stmt_Catch>
                <node:Stmt_Catch>
                 <attribute:startLine>
                  <scalar:int>802</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>805</scalar:int>
                 </attribute:endLine>
                 <subNode:type>
                  <node:Name_FullyQualified>
                   <attribute:startLine>
                    <scalar:int>802</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>802</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>Swift_FileException</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name_FullyQualified>
                 </subNode:type>
                 <subNode:var>
                  <scalar:string>e</scalar:string>
                 </subNode:var>
                 <subNode:stmts>
                  <scalar:array>
                   <node:Expr_MethodCall>
                    <attribute:startLine>
                     <scalar:int>803</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>803</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>803</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>803</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>this</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>setError</scalar:string>
                    </subNode:name>
                    <subNode:args>
                     <scalar:array>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>803</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>803</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_Concat>
                         <attribute:startLine>
                          <scalar:int>803</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>803</scalar:int>
                         </attribute:endLine>
                         <subNode:left>
                          <node:Scalar_String>
                           <attribute:startLine>
                            <scalar:int>803</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>803</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <scalar:string>An attachment failed to attach:&lt;br /&gt;</scalar:string>
                           </subNode:value>
                          </node:Scalar_String>
                         </subNode:left>
                         <subNode:right>
                          <node:Expr_MethodCall>
                           <attribute:startLine>
                            <scalar:int>803</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>803</scalar:int>
                           </attribute:endLine>
                           <subNode:var>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>803</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>803</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>e</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:var>
                           <subNode:name>
                            <scalar:string>getMessage</scalar:string>
                           </subNode:name>
                           <subNode:args>
                            <scalar:array/>
                           </subNode:args>
                          </node:Expr_MethodCall>
                         </subNode:right>
                        </node:Expr_Concat>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                     </scalar:array>
                    </subNode:args>
                   </node:Expr_MethodCall>
                   <node:Stmt_Return>
                    <attribute:startLine>
                     <scalar:int>804</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>804</scalar:int>
                    </attribute:endLine>
                    <subNode:expr>
                     <node:Expr_ConstFetch>
                      <attribute:startLine>
                       <scalar:int>804</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>804</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <node:Name>
                        <attribute:startLine>
                         <scalar:int>804</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>804</scalar:int>
                        </attribute:endLine>
                        <subNode:parts>
                         <scalar:array>
                          <scalar:string>false</scalar:string>
                         </scalar:array>
                        </subNode:parts>
                       </node:Name>
                      </subNode:name>
                     </node:Expr_ConstFetch>
                    </subNode:expr>
                   </node:Stmt_Return>
                  </scalar:array>
                 </subNode:stmts>
                </node:Stmt_Catch>
               </scalar:array>
              </subNode:catches>
              <subNode:finallyStmts>
               <scalar:null/>
              </subNode:finallyStmts>
             </node:Stmt_TryCatch>
            </scalar:array>
           </subNode:stmts>
          </node:Stmt_Else>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Instanceof>
           <attribute:startLine>
            <scalar:int>773</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>773</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>773</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>773</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>input</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:expr>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>773</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>773</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Swift_Message_Image</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
          </node:Expr_Instanceof>
         </subNode:cond>
        </node:Stmt_If>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>addImage</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="808">/**
   * Embed an inline file into the message, such as a Image or MIDI file
   * @param mixed The file contents, Swift_File object or Swift_Message_EmbeddedFile object
   * @param string The content-type of the file, optional
   * @param string The filename to use, optional
   * @param string the Content-ID to use, optional
   * @return string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>816</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>853</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>816</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>816</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>data</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>816</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>816</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>type</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>816</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>816</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>application/octet-stream</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>816</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>816</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>filename</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>816</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>816</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>816</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>816</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>816</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>816</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>cid</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>816</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>816</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>816</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>816</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>818</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>818</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>818</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>818</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>ret</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>818</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>818</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>818</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>818</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>false</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>819</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>852</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>821</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>821</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>821</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>821</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>ret</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>821</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>821</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>821</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>821</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>821</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>821</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>message</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:var>
              <subNode:name>
               <scalar:string>attach</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>821</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>821</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>821</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>821</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>data</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>822</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>822</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_ArrayDimFetch>
              <attribute:startLine>
               <scalar:int>822</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>822</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>822</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>822</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>822</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>822</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>attachmentIds</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:var>
              <subNode:dim>
               <scalar:null/>
              </subNode:dim>
             </node:Expr_ArrayDimFetch>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>822</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>822</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>ret</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>823</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>823</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>823</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>823</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>ret</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array>
           <node:Stmt_ElseIf>
            <attribute:startLine>
             <scalar:int>825</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>838</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Expr_Instanceof>
              <attribute:startLine>
               <scalar:int>825</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>825</scalar:int>
              </attribute:endLine>
              <subNode:expr>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>825</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>825</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>data</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:expr>
              <subNode:class>
               <node:Name_FullyQualified>
                <attribute:startLine>
                 <scalar:int>825</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>825</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>Swift_File</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name_FullyQualified>
              </subNode:class>
             </node:Expr_Instanceof>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_TryCatch>
               <attribute:startLine>
                <scalar:int>827</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>837</scalar:int>
               </attribute:endLine>
               <subNode:stmts>
                <scalar:array>
                 <node:Expr_Assign>
                  <attribute:startLine>
                   <scalar:int>828</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>828</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>828</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>828</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>ret</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:expr>
                   <node:Expr_MethodCall>
                    <attribute:startLine>
                     <scalar:int>828</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>828</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_PropertyFetch>
                      <attribute:startLine>
                       <scalar:int>828</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>828</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>828</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>828</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>this</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>message</scalar:string>
                      </subNode:name>
                     </node:Expr_PropertyFetch>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>attach</scalar:string>
                    </subNode:name>
                    <subNode:args>
                     <scalar:array>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>828</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>828</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_New>
                         <attribute:startLine>
                          <scalar:int>828</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>828</scalar:int>
                         </attribute:endLine>
                         <subNode:class>
                          <node:Name_FullyQualified>
                           <attribute:startLine>
                            <scalar:int>828</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>828</scalar:int>
                           </attribute:endLine>
                           <subNode:parts>
                            <scalar:array>
                             <scalar:string>Swift_Message_EmbeddedFile</scalar:string>
                            </scalar:array>
                           </subNode:parts>
                          </node:Name_FullyQualified>
                         </subNode:class>
                         <subNode:args>
                          <scalar:array>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>828</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>828</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_Variable>
                              <attribute:startLine>
                               <scalar:int>828</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>828</scalar:int>
                              </attribute:endLine>
                              <subNode:name>
                               <scalar:string>data</scalar:string>
                              </subNode:name>
                             </node:Expr_Variable>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>828</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>828</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_Variable>
                              <attribute:startLine>
                               <scalar:int>828</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>828</scalar:int>
                              </attribute:endLine>
                              <subNode:name>
                               <scalar:string>filename</scalar:string>
                              </subNode:name>
                             </node:Expr_Variable>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>828</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>828</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_Variable>
                              <attribute:startLine>
                               <scalar:int>828</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>828</scalar:int>
                              </attribute:endLine>
                              <subNode:name>
                               <scalar:string>type</scalar:string>
                              </subNode:name>
                             </node:Expr_Variable>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>828</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>828</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_Variable>
                              <attribute:startLine>
                               <scalar:int>828</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>828</scalar:int>
                              </attribute:endLine>
                              <subNode:name>
                               <scalar:string>cid</scalar:string>
                              </subNode:name>
                             </node:Expr_Variable>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                          </scalar:array>
                         </subNode:args>
                        </node:Expr_New>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                     </scalar:array>
                    </subNode:args>
                   </node:Expr_MethodCall>
                  </subNode:expr>
                 </node:Expr_Assign>
                 <node:Expr_Assign>
                  <attribute:startLine>
                   <scalar:int>829</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>829</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_ArrayDimFetch>
                    <attribute:startLine>
                     <scalar:int>829</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>829</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_PropertyFetch>
                      <attribute:startLine>
                       <scalar:int>829</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>829</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>829</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>829</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>this</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>attachmentIds</scalar:string>
                      </subNode:name>
                     </node:Expr_PropertyFetch>
                    </subNode:var>
                    <subNode:dim>
                     <scalar:null/>
                    </subNode:dim>
                   </node:Expr_ArrayDimFetch>
                  </subNode:var>
                  <subNode:expr>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>829</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>829</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>ret</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:expr>
                 </node:Expr_Assign>
                 <node:Stmt_Return>
                  <attribute:startLine>
                   <scalar:int>830</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>830</scalar:int>
                  </attribute:endLine>
                  <subNode:expr>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>830</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>830</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>ret</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:expr>
                 </node:Stmt_Return>
                </scalar:array>
               </subNode:stmts>
               <subNode:catches>
                <scalar:array>
                 <node:Stmt_Catch>
                  <attribute:startLine>
                   <scalar:int>831</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>834</scalar:int>
                  </attribute:endLine>
                  <subNode:type>
                   <node:Name_FullyQualified>
                    <attribute:startLine>
                     <scalar:int>831</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>831</scalar:int>
                    </attribute:endLine>
                    <subNode:parts>
                     <scalar:array>
                      <scalar:string>Swift_Message_MimeException</scalar:string>
                     </scalar:array>
                    </subNode:parts>
                   </node:Name_FullyQualified>
                  </subNode:type>
                  <subNode:var>
                   <scalar:string>e</scalar:string>
                  </subNode:var>
                  <subNode:stmts>
                   <scalar:array>
                    <node:Expr_MethodCall>
                     <attribute:startLine>
                      <scalar:int>832</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>832</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>832</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>832</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>this</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>setError</scalar:string>
                     </subNode:name>
                     <subNode:args>
                      <scalar:array>
                       <node:Arg>
                        <attribute:startLine>
                         <scalar:int>832</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>832</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <node:Expr_Concat>
                          <attribute:startLine>
                           <scalar:int>832</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>832</scalar:int>
                          </attribute:endLine>
                          <subNode:left>
                           <node:Scalar_String>
                            <attribute:startLine>
                             <scalar:int>832</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>832</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <scalar:string>An attachment failed to attach:&lt;br /&gt;</scalar:string>
                            </subNode:value>
                           </node:Scalar_String>
                          </subNode:left>
                          <subNode:right>
                           <node:Expr_MethodCall>
                            <attribute:startLine>
                             <scalar:int>832</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>832</scalar:int>
                            </attribute:endLine>
                            <subNode:var>
                             <node:Expr_Variable>
                              <attribute:startLine>
                               <scalar:int>832</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>832</scalar:int>
                              </attribute:endLine>
                              <subNode:name>
                               <scalar:string>e</scalar:string>
                              </subNode:name>
                             </node:Expr_Variable>
                            </subNode:var>
                            <subNode:name>
                             <scalar:string>getMessage</scalar:string>
                            </subNode:name>
                            <subNode:args>
                             <scalar:array/>
                            </subNode:args>
                           </node:Expr_MethodCall>
                          </subNode:right>
                         </node:Expr_Concat>
                        </subNode:value>
                        <subNode:byRef>
                         <scalar:false/>
                        </subNode:byRef>
                       </node:Arg>
                      </scalar:array>
                     </subNode:args>
                    </node:Expr_MethodCall>
                    <node:Stmt_Return>
                     <attribute:startLine>
                      <scalar:int>833</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>833</scalar:int>
                     </attribute:endLine>
                     <subNode:expr>
                      <node:Expr_ConstFetch>
                       <attribute:startLine>
                        <scalar:int>833</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>833</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <node:Name>
                         <attribute:startLine>
                          <scalar:int>833</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>833</scalar:int>
                         </attribute:endLine>
                         <subNode:parts>
                          <scalar:array>
                           <scalar:string>false</scalar:string>
                          </scalar:array>
                         </subNode:parts>
                        </node:Name>
                       </subNode:name>
                      </node:Expr_ConstFetch>
                     </subNode:expr>
                    </node:Stmt_Return>
                   </scalar:array>
                  </subNode:stmts>
                 </node:Stmt_Catch>
                 <node:Stmt_Catch>
                  <attribute:startLine>
                   <scalar:int>834</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>837</scalar:int>
                  </attribute:endLine>
                  <subNode:type>
                   <node:Name_FullyQualified>
                    <attribute:startLine>
                     <scalar:int>834</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>834</scalar:int>
                    </attribute:endLine>
                    <subNode:parts>
                     <scalar:array>
                      <scalar:string>Swift_FileException</scalar:string>
                     </scalar:array>
                    </subNode:parts>
                   </node:Name_FullyQualified>
                  </subNode:type>
                  <subNode:var>
                   <scalar:string>e</scalar:string>
                  </subNode:var>
                  <subNode:stmts>
                   <scalar:array>
                    <node:Expr_MethodCall>
                     <attribute:startLine>
                      <scalar:int>835</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>835</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>835</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>835</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>this</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>setError</scalar:string>
                     </subNode:name>
                     <subNode:args>
                      <scalar:array>
                       <node:Arg>
                        <attribute:startLine>
                         <scalar:int>835</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>835</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <node:Expr_Concat>
                          <attribute:startLine>
                           <scalar:int>835</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>835</scalar:int>
                          </attribute:endLine>
                          <subNode:left>
                           <node:Scalar_String>
                            <attribute:startLine>
                             <scalar:int>835</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>835</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <scalar:string>An attachment failed to attach:&lt;br /&gt;</scalar:string>
                            </subNode:value>
                           </node:Scalar_String>
                          </subNode:left>
                          <subNode:right>
                           <node:Expr_MethodCall>
                            <attribute:startLine>
                             <scalar:int>835</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>835</scalar:int>
                            </attribute:endLine>
                            <subNode:var>
                             <node:Expr_Variable>
                              <attribute:startLine>
                               <scalar:int>835</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>835</scalar:int>
                              </attribute:endLine>
                              <subNode:name>
                               <scalar:string>e</scalar:string>
                              </subNode:name>
                             </node:Expr_Variable>
                            </subNode:var>
                            <subNode:name>
                             <scalar:string>getMessage</scalar:string>
                            </subNode:name>
                            <subNode:args>
                             <scalar:array/>
                            </subNode:args>
                           </node:Expr_MethodCall>
                          </subNode:right>
                         </node:Expr_Concat>
                        </subNode:value>
                        <subNode:byRef>
                         <scalar:false/>
                        </subNode:byRef>
                       </node:Arg>
                      </scalar:array>
                     </subNode:args>
                    </node:Expr_MethodCall>
                    <node:Stmt_Return>
                     <attribute:startLine>
                      <scalar:int>836</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>836</scalar:int>
                     </attribute:endLine>
                     <subNode:expr>
                      <node:Expr_ConstFetch>
                       <attribute:startLine>
                        <scalar:int>836</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>836</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <node:Name>
                         <attribute:startLine>
                          <scalar:int>836</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>836</scalar:int>
                         </attribute:endLine>
                         <subNode:parts>
                          <scalar:array>
                           <scalar:string>false</scalar:string>
                          </scalar:array>
                         </subNode:parts>
                        </node:Name>
                       </subNode:name>
                      </node:Expr_ConstFetch>
                     </subNode:expr>
                    </node:Stmt_Return>
                   </scalar:array>
                  </subNode:stmts>
                 </node:Stmt_Catch>
                </scalar:array>
               </subNode:catches>
               <subNode:finallyStmts>
                <scalar:null/>
               </subNode:finallyStmts>
              </node:Stmt_TryCatch>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_ElseIf>
          </scalar:array>
         </subNode:elseifs>
         <subNode:else>
          <node:Stmt_Else>
           <attribute:startLine>
            <scalar:int>839</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>852</scalar:int>
           </attribute:endLine>
           <subNode:stmts>
            <scalar:array>
             <node:Stmt_TryCatch>
              <attribute:startLine>
               <scalar:int>841</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>851</scalar:int>
              </attribute:endLine>
              <subNode:stmts>
               <scalar:array>
                <node:Expr_Assign>
                 <attribute:startLine>
                  <scalar:int>842</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>842</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>842</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>842</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>ret</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:expr>
                  <node:Expr_MethodCall>
                   <attribute:startLine>
                    <scalar:int>842</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>842</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_PropertyFetch>
                     <attribute:startLine>
                      <scalar:int>842</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>842</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>842</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>842</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>this</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>message</scalar:string>
                     </subNode:name>
                    </node:Expr_PropertyFetch>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>attach</scalar:string>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>842</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>842</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_New>
                        <attribute:startLine>
                         <scalar:int>842</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>842</scalar:int>
                        </attribute:endLine>
                        <subNode:class>
                         <node:Name_FullyQualified>
                          <attribute:startLine>
                           <scalar:int>842</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>842</scalar:int>
                          </attribute:endLine>
                          <subNode:parts>
                           <scalar:array>
                            <scalar:string>Swift_Message_EmbeddedFile</scalar:string>
                           </scalar:array>
                          </subNode:parts>
                         </node:Name_FullyQualified>
                        </subNode:class>
                        <subNode:args>
                         <scalar:array>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>842</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>842</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>842</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>842</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>data</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>842</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>842</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>842</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>842</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>filename</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>842</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>842</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>842</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>842</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>type</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>842</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>842</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>842</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>842</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>cid</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                         </scalar:array>
                        </subNode:args>
                       </node:Expr_New>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                    </scalar:array>
                   </subNode:args>
                  </node:Expr_MethodCall>
                 </subNode:expr>
                </node:Expr_Assign>
                <node:Expr_Assign>
                 <attribute:startLine>
                  <scalar:int>843</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>843</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_ArrayDimFetch>
                   <attribute:startLine>
                    <scalar:int>843</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>843</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_PropertyFetch>
                     <attribute:startLine>
                      <scalar:int>843</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>843</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>843</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>843</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>this</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>attachmentIds</scalar:string>
                     </subNode:name>
                    </node:Expr_PropertyFetch>
                   </subNode:var>
                   <subNode:dim>
                    <scalar:null/>
                   </subNode:dim>
                  </node:Expr_ArrayDimFetch>
                 </subNode:var>
                 <subNode:expr>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>843</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>843</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>ret</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:expr>
                </node:Expr_Assign>
                <node:Stmt_Return>
                 <attribute:startLine>
                  <scalar:int>844</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>844</scalar:int>
                 </attribute:endLine>
                 <subNode:expr>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>844</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>844</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>ret</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:expr>
                </node:Stmt_Return>
               </scalar:array>
              </subNode:stmts>
              <subNode:catches>
               <scalar:array>
                <node:Stmt_Catch>
                 <attribute:startLine>
                  <scalar:int>845</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>848</scalar:int>
                 </attribute:endLine>
                 <subNode:type>
                  <node:Name_FullyQualified>
                   <attribute:startLine>
                    <scalar:int>845</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>845</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>Swift_Message_MimeException</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name_FullyQualified>
                 </subNode:type>
                 <subNode:var>
                  <scalar:string>e</scalar:string>
                 </subNode:var>
                 <subNode:stmts>
                  <scalar:array>
                   <node:Expr_MethodCall>
                    <attribute:startLine>
                     <scalar:int>846</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>846</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>846</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>846</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>this</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>setError</scalar:string>
                    </subNode:name>
                    <subNode:args>
                     <scalar:array>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>846</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>846</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_Concat>
                         <attribute:startLine>
                          <scalar:int>846</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>846</scalar:int>
                         </attribute:endLine>
                         <subNode:left>
                          <node:Scalar_String>
                           <attribute:startLine>
                            <scalar:int>846</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>846</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <scalar:string>An attachment failed to attach:&lt;br /&gt;</scalar:string>
                           </subNode:value>
                          </node:Scalar_String>
                         </subNode:left>
                         <subNode:right>
                          <node:Expr_MethodCall>
                           <attribute:startLine>
                            <scalar:int>846</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>846</scalar:int>
                           </attribute:endLine>
                           <subNode:var>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>846</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>846</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>e</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:var>
                           <subNode:name>
                            <scalar:string>getMessage</scalar:string>
                           </subNode:name>
                           <subNode:args>
                            <scalar:array/>
                           </subNode:args>
                          </node:Expr_MethodCall>
                         </subNode:right>
                        </node:Expr_Concat>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                     </scalar:array>
                    </subNode:args>
                   </node:Expr_MethodCall>
                   <node:Stmt_Return>
                    <attribute:startLine>
                     <scalar:int>847</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>847</scalar:int>
                    </attribute:endLine>
                    <subNode:expr>
                     <node:Expr_ConstFetch>
                      <attribute:startLine>
                       <scalar:int>847</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>847</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <node:Name>
                        <attribute:startLine>
                         <scalar:int>847</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>847</scalar:int>
                        </attribute:endLine>
                        <subNode:parts>
                         <scalar:array>
                          <scalar:string>false</scalar:string>
                         </scalar:array>
                        </subNode:parts>
                       </node:Name>
                      </subNode:name>
                     </node:Expr_ConstFetch>
                    </subNode:expr>
                   </node:Stmt_Return>
                  </scalar:array>
                 </subNode:stmts>
                </node:Stmt_Catch>
                <node:Stmt_Catch>
                 <attribute:startLine>
                  <scalar:int>848</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>851</scalar:int>
                 </attribute:endLine>
                 <subNode:type>
                  <node:Name_FullyQualified>
                   <attribute:startLine>
                    <scalar:int>848</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>848</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>Swift_FileException</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name_FullyQualified>
                 </subNode:type>
                 <subNode:var>
                  <scalar:string>e</scalar:string>
                 </subNode:var>
                 <subNode:stmts>
                  <scalar:array>
                   <node:Expr_MethodCall>
                    <attribute:startLine>
                     <scalar:int>849</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>849</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>849</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>849</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>this</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>setError</scalar:string>
                    </subNode:name>
                    <subNode:args>
                     <scalar:array>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>849</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>849</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_Concat>
                         <attribute:startLine>
                          <scalar:int>849</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>849</scalar:int>
                         </attribute:endLine>
                         <subNode:left>
                          <node:Scalar_String>
                           <attribute:startLine>
                            <scalar:int>849</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>849</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <scalar:string>An attachment failed to attach:&lt;br /&gt;</scalar:string>
                           </subNode:value>
                          </node:Scalar_String>
                         </subNode:left>
                         <subNode:right>
                          <node:Expr_MethodCall>
                           <attribute:startLine>
                            <scalar:int>849</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>849</scalar:int>
                           </attribute:endLine>
                           <subNode:var>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>849</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>849</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>e</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:var>
                           <subNode:name>
                            <scalar:string>getMessage</scalar:string>
                           </subNode:name>
                           <subNode:args>
                            <scalar:array/>
                           </subNode:args>
                          </node:Expr_MethodCall>
                         </subNode:right>
                        </node:Expr_Concat>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                     </scalar:array>
                    </subNode:args>
                   </node:Expr_MethodCall>
                   <node:Stmt_Return>
                    <attribute:startLine>
                     <scalar:int>850</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>850</scalar:int>
                    </attribute:endLine>
                    <subNode:expr>
                     <node:Expr_ConstFetch>
                      <attribute:startLine>
                       <scalar:int>850</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>850</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <node:Name>
                        <attribute:startLine>
                         <scalar:int>850</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>850</scalar:int>
                        </attribute:endLine>
                        <subNode:parts>
                         <scalar:array>
                          <scalar:string>false</scalar:string>
                         </scalar:array>
                        </subNode:parts>
                       </node:Name>
                      </subNode:name>
                     </node:Expr_ConstFetch>
                    </subNode:expr>
                   </node:Stmt_Return>
                  </scalar:array>
                 </subNode:stmts>
                </node:Stmt_Catch>
               </scalar:array>
              </subNode:catches>
              <subNode:finallyStmts>
               <scalar:null/>
              </subNode:finallyStmts>
             </node:Stmt_TryCatch>
            </scalar:array>
           </subNode:stmts>
          </node:Stmt_Else>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Instanceof>
           <attribute:startLine>
            <scalar:int>819</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>819</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>819</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>819</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>data</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:expr>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>819</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>819</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Swift_Message_EmbeddedFile</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
          </node:Expr_Instanceof>
         </subNode:cond>
        </node:Stmt_If>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>embedFile</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="854">/**
   * Add headers to the message
   * @param string The message headers to append, separated by CRLF
   * @deprecated
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>859</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>890</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>859</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>859</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>string</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:comments>
          <scalar:array>
           <comment isDocComment="false" line="861">//Split at the line ending only if it's not followed by LWSP (as in, a full header)
</comment>
          </scalar:array>
         </attribute:comments>
         <attribute:startLine>
          <scalar:int>862</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>862</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:comments>
            <scalar:array>
             <comment isDocComment="false" line="861">//Split at the line ending only if it's not followed by LWSP (as in, a full header)
</comment>
            </scalar:array>
           </attribute:comments>
           <attribute:startLine>
            <scalar:int>862</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>862</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>headers</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>862</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>862</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>862</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>862</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_split</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>862</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>862</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>862</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>862</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>~&#13;?
(?![ 	])~</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>862</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>862</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>862</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>862</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>string</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_Foreach>
         <attribute:startLine>
          <scalar:int>863</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>889</scalar:int>
         </attribute:endLine>
         <subNode:keyVar>
          <scalar:null/>
         </subNode:keyVar>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>865</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>865</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_Continue>
               <attribute:startLine>
                <scalar:int>865</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>865</scalar:int>
               </attribute:endLine>
               <subNode:num>
                <scalar:null/>
               </subNode:num>
              </node:Stmt_Continue>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_Empty>
              <attribute:startLine>
               <scalar:int>865</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>865</scalar:int>
              </attribute:endLine>
              <subNode:expr>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>865</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>865</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>header</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:expr>
             </node:Expr_Empty>
            </subNode:cond>
           </node:Stmt_If>
           <node:Expr_Assign>
            <attribute:comments>
             <scalar:array>
              <comment isDocComment="false" line="866">//Get the bit before the colon
</comment>
             </scalar:array>
            </attribute:comments>
            <attribute:startLine>
             <scalar:int>867</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>867</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:comments>
               <scalar:array>
                <comment isDocComment="false" line="866">//Get the bit before the colon
</comment>
               </scalar:array>
              </attribute:comments>
              <attribute:startLine>
               <scalar:int>867</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>867</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>header_name</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>867</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>867</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>867</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>867</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>substr</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>867</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>867</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>867</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>867</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>header</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>867</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>867</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Scalar_LNumber>
                   <attribute:startLine>
                    <scalar:int>867</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>867</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:int>0</scalar:int>
                   </subNode:value>
                  </node:Scalar_LNumber>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>867</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>867</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Assign>
                   <attribute:startLine>
                    <scalar:int>867</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>867</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>867</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>867</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>c_pos</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:expr>
                    <node:Expr_FuncCall>
                     <attribute:startLine>
                      <scalar:int>867</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>867</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <node:Name>
                       <attribute:startLine>
                        <scalar:int>867</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>867</scalar:int>
                       </attribute:endLine>
                       <subNode:parts>
                        <scalar:array>
                         <scalar:string>strpos</scalar:string>
                        </scalar:array>
                       </subNode:parts>
                      </node:Name>
                     </subNode:name>
                     <subNode:args>
                      <scalar:array>
                       <node:Arg>
                        <attribute:startLine>
                         <scalar:int>867</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>867</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>867</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>867</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>header</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:value>
                        <subNode:byRef>
                         <scalar:false/>
                        </subNode:byRef>
                       </node:Arg>
                       <node:Arg>
                        <attribute:startLine>
                         <scalar:int>867</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>867</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <node:Scalar_String>
                          <attribute:startLine>
                           <scalar:int>867</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>867</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <scalar:string>: </scalar:string>
                          </subNode:value>
                         </node:Scalar_String>
                        </subNode:value>
                        <subNode:byRef>
                         <scalar:false/>
                        </subNode:byRef>
                       </node:Arg>
                      </scalar:array>
                     </subNode:args>
                    </node:Expr_FuncCall>
                   </subNode:expr>
                  </node:Expr_Assign>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:comments>
             <scalar:array>
              <comment isDocComment="false" line="868">// ... and trim it away
</comment>
             </scalar:array>
            </attribute:comments>
            <attribute:startLine>
             <scalar:int>869</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>869</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:comments>
               <scalar:array>
                <comment isDocComment="false" line="868">// ... and trim it away
</comment>
               </scalar:array>
              </attribute:comments>
              <attribute:startLine>
               <scalar:int>869</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>869</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>header</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>869</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>869</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>869</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>869</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>substr</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>869</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>869</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>869</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>869</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>header</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>869</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>869</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Plus>
                   <attribute:startLine>
                    <scalar:int>869</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>869</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>869</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>869</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>c_pos</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:left>
                   <subNode:right>
                    <node:Scalar_LNumber>
                     <attribute:startLine>
                      <scalar:int>869</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>869</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:int>2</scalar:int>
                     </subNode:value>
                    </node:Scalar_LNumber>
                   </subNode:right>
                  </node:Expr_Plus>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:comments>
             <scalar:array>
              <comment isDocComment="false" line="870">//Try splitting at &quot;; &quot; for attributes
</comment>
             </scalar:array>
            </attribute:comments>
            <attribute:startLine>
             <scalar:int>871</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>871</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:comments>
               <scalar:array>
                <comment isDocComment="false" line="870">//Try splitting at &quot;; &quot; for attributes
</comment>
               </scalar:array>
              </attribute:comments>
              <attribute:startLine>
               <scalar:int>871</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>871</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>attribute_pairs</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>871</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>871</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>871</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>871</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>preg_split</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>871</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>871</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>871</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>871</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>~\s*;\s+~</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>871</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>871</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>871</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>871</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>header</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:comments>
             <scalar:array>
              <comment isDocComment="false" line="872">//The value would always be right after the colon
</comment>
             </scalar:array>
            </attribute:comments>
            <attribute:startLine>
             <scalar:int>873</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>873</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:comments>
               <scalar:array>
                <comment isDocComment="false" line="872">//The value would always be right after the colon
</comment>
               </scalar:array>
              </attribute:comments>
              <attribute:startLine>
               <scalar:int>873</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>873</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>header_value</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_ArrayDimFetch>
              <attribute:startLine>
               <scalar:int>873</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>873</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>873</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>873</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>attribute_pairs</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:dim>
               <node:Scalar_LNumber>
                <attribute:startLine>
                 <scalar:int>873</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>873</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:int>0</scalar:int>
                </subNode:value>
               </node:Scalar_LNumber>
              </subNode:dim>
             </node:Expr_ArrayDimFetch>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_MethodCall>
            <attribute:startLine>
             <scalar:int>874</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>874</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>874</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>874</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>874</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>874</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>874</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>874</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>message</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:var>
              <subNode:name>
               <scalar:string>headers</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:var>
            <subNode:name>
             <scalar:string>set</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>874</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>874</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>874</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>874</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>header_name</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>874</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>874</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>874</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>874</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>header_value</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_MethodCall>
           <node:Stmt_Unset>
            <attribute:startLine>
             <scalar:int>875</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>875</scalar:int>
            </attribute:endLine>
            <subNode:vars>
             <scalar:array>
              <node:Expr_ArrayDimFetch>
               <attribute:startLine>
                <scalar:int>875</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>875</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>875</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>875</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>attribute_pairs</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:dim>
                <node:Scalar_LNumber>
                 <attribute:startLine>
                  <scalar:int>875</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>875</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:int>0</scalar:int>
                 </subNode:value>
                </node:Scalar_LNumber>
               </subNode:dim>
              </node:Expr_ArrayDimFetch>
             </scalar:array>
            </subNode:vars>
           </node:Stmt_Unset>
           <node:Stmt_Foreach>
            <attribute:startLine>
             <scalar:int>876</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>888</scalar:int>
            </attribute:endLine>
            <subNode:keyVar>
             <scalar:null/>
            </subNode:keyVar>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_If>
               <attribute:comments>
                <scalar:array>
                 <comment isDocComment="false" line="878">//Now try finding the attribute name, and it's value (removing quotes)
</comment>
                </scalar:array>
               </attribute:comments>
               <attribute:startLine>
                <scalar:int>879</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>887</scalar:int>
               </attribute:endLine>
               <subNode:stmts>
                <scalar:array>
                 <node:Stmt_TryCatch>
                  <attribute:startLine>
                   <scalar:int>881</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>886</scalar:int>
                  </attribute:endLine>
                  <subNode:stmts>
                   <scalar:array>
                    <node:Expr_MethodCall>
                     <attribute:startLine>
                      <scalar:int>882</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>882</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_PropertyFetch>
                       <attribute:startLine>
                        <scalar:int>882</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>882</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_PropertyFetch>
                         <attribute:startLine>
                          <scalar:int>882</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>882</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>882</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>882</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>this</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>message</scalar:string>
                         </subNode:name>
                        </node:Expr_PropertyFetch>
                       </subNode:var>
                       <subNode:name>
                        <scalar:string>headers</scalar:string>
                       </subNode:name>
                      </node:Expr_PropertyFetch>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>setAttribute</scalar:string>
                     </subNode:name>
                     <subNode:args>
                      <scalar:array>
                       <node:Arg>
                        <attribute:startLine>
                         <scalar:int>882</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>882</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>882</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>882</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>header_name</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:value>
                        <subNode:byRef>
                         <scalar:false/>
                        </subNode:byRef>
                       </node:Arg>
                       <node:Arg>
                        <attribute:startLine>
                         <scalar:int>882</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>882</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <node:Expr_ArrayDimFetch>
                          <attribute:startLine>
                           <scalar:int>882</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>882</scalar:int>
                          </attribute:endLine>
                          <subNode:var>
                           <node:Expr_Variable>
                            <attribute:startLine>
                             <scalar:int>882</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>882</scalar:int>
                            </attribute:endLine>
                            <subNode:name>
                             <scalar:string>matches</scalar:string>
                            </subNode:name>
                           </node:Expr_Variable>
                          </subNode:var>
                          <subNode:dim>
                           <node:Scalar_LNumber>
                            <attribute:startLine>
                             <scalar:int>882</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>882</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <scalar:int>1</scalar:int>
                            </subNode:value>
                           </node:Scalar_LNumber>
                          </subNode:dim>
                         </node:Expr_ArrayDimFetch>
                        </subNode:value>
                        <subNode:byRef>
                         <scalar:false/>
                        </subNode:byRef>
                       </node:Arg>
                       <node:Arg>
                        <attribute:startLine>
                         <scalar:int>882</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>882</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <node:Expr_ArrayDimFetch>
                          <attribute:startLine>
                           <scalar:int>882</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>882</scalar:int>
                          </attribute:endLine>
                          <subNode:var>
                           <node:Expr_Variable>
                            <attribute:startLine>
                             <scalar:int>882</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>882</scalar:int>
                            </attribute:endLine>
                            <subNode:name>
                             <scalar:string>matches</scalar:string>
                            </subNode:name>
                           </node:Expr_Variable>
                          </subNode:var>
                          <subNode:dim>
                           <node:Scalar_LNumber>
                            <attribute:startLine>
                             <scalar:int>882</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>882</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <scalar:int>3</scalar:int>
                            </subNode:value>
                           </node:Scalar_LNumber>
                          </subNode:dim>
                         </node:Expr_ArrayDimFetch>
                        </subNode:value>
                        <subNode:byRef>
                         <scalar:false/>
                        </subNode:byRef>
                       </node:Arg>
                      </scalar:array>
                     </subNode:args>
                    </node:Expr_MethodCall>
                   </scalar:array>
                  </subNode:stmts>
                  <subNode:catches>
                   <scalar:array>
                    <node:Stmt_Catch>
                     <attribute:startLine>
                      <scalar:int>883</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>886</scalar:int>
                     </attribute:endLine>
                     <subNode:type>
                      <node:Name_FullyQualified>
                       <attribute:startLine>
                        <scalar:int>883</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>883</scalar:int>
                       </attribute:endLine>
                       <subNode:parts>
                        <scalar:array>
                         <scalar:string>Swift_Message_MimeException</scalar:string>
                        </scalar:array>
                       </subNode:parts>
                      </node:Name_FullyQualified>
                     </subNode:type>
                     <subNode:var>
                      <scalar:string>e</scalar:string>
                     </subNode:var>
                     <subNode:stmts>
                      <scalar:array>
                       <node:Expr_MethodCall>
                        <attribute:startLine>
                         <scalar:int>884</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>884</scalar:int>
                        </attribute:endLine>
                        <subNode:var>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>884</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>884</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>this</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:var>
                        <subNode:name>
                         <scalar:string>setError</scalar:string>
                        </subNode:name>
                        <subNode:args>
                         <scalar:array>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>884</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>884</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Expr_Concat>
                             <attribute:startLine>
                              <scalar:int>884</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>884</scalar:int>
                             </attribute:endLine>
                             <subNode:left>
                              <node:Scalar_String>
                               <attribute:startLine>
                                <scalar:int>884</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>884</scalar:int>
                               </attribute:endLine>
                               <subNode:value>
                                <scalar:string>There was a problem parsing or setting a header attribute:&lt;br /&gt;</scalar:string>
                               </subNode:value>
                              </node:Scalar_String>
                             </subNode:left>
                             <subNode:right>
                              <node:Expr_MethodCall>
                               <attribute:startLine>
                                <scalar:int>884</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>884</scalar:int>
                               </attribute:endLine>
                               <subNode:var>
                                <node:Expr_Variable>
                                 <attribute:startLine>
                                  <scalar:int>884</scalar:int>
                                 </attribute:startLine>
                                 <attribute:endLine>
                                  <scalar:int>884</scalar:int>
                                 </attribute:endLine>
                                 <subNode:name>
                                  <scalar:string>e</scalar:string>
                                 </subNode:name>
                                </node:Expr_Variable>
                               </subNode:var>
                               <subNode:name>
                                <scalar:string>getMessage</scalar:string>
                               </subNode:name>
                               <subNode:args>
                                <scalar:array/>
                               </subNode:args>
                              </node:Expr_MethodCall>
                             </subNode:right>
                            </node:Expr_Concat>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                         </scalar:array>
                        </subNode:args>
                       </node:Expr_MethodCall>
                      </scalar:array>
                     </subNode:stmts>
                    </node:Stmt_Catch>
                   </scalar:array>
                  </subNode:catches>
                  <subNode:finallyStmts>
                   <scalar:null/>
                  </subNode:finallyStmts>
                 </node:Stmt_TryCatch>
                </scalar:array>
               </subNode:stmts>
               <subNode:elseifs>
                <scalar:array/>
               </subNode:elseifs>
               <subNode:else>
                <scalar:null/>
               </subNode:else>
               <subNode:cond>
                <node:Expr_FuncCall>
                 <attribute:startLine>
                  <scalar:int>879</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>879</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>879</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>879</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>preg_match</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>879</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>879</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Scalar_String>
                      <attribute:startLine>
                       <scalar:int>879</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>879</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <scalar:string>~^(.*?)=(&quot;?)(.*?)\2\s*$~</scalar:string>
                      </subNode:value>
                     </node:Scalar_String>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>879</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>879</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>879</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>879</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>pair</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>879</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>879</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>879</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>879</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>matches</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_FuncCall>
               </subNode:cond>
              </node:Stmt_If>
             </scalar:array>
            </subNode:stmts>
            <subNode:expr>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>876</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>876</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>attribute_pairs</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:expr>
            <subNode:valueVar>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>876</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>876</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>pair</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:valueVar>
           </node:Stmt_Foreach>
          </scalar:array>
         </subNode:stmts>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>863</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>863</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>headers</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
         <subNode:valueVar>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>863</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>863</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>header</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:valueVar>
        </node:Stmt_Foreach>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>addHeaders</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="891">/**
   * Set a header in the message
   * @param string The name of the header
   * @param string The value of the header (without attributes)
   * @see {addHeaderAttribute}
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>897</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>900</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>897</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>897</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>name</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>897</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>897</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>value</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>899</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>899</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>899</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>899</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>899</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>899</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>899</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>899</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>message</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:var>
           <subNode:name>
            <scalar:string>headers</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:name>
          <scalar:string>set</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>899</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>899</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>899</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>899</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>name</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>899</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>899</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>899</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>899</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>value</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>setHeader</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="901">/**
   * Set an attribute in the message headers
   * For example charset in Content-Type: text/html; charset=utf-8 set by $swift-&gt;setHeaderAttribute(&quot;Content-Type&quot;, &quot;charset&quot;, &quot;utf-8&quot;)
   * @param string The name of the header
   * @param string The name of the attribute
   * @param string The value of the attribute
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>908</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>912</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>908</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>908</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>name</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>908</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>908</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>attribute</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>908</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>908</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>value</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>910</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>911</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_MethodCall>
            <attribute:startLine>
             <scalar:int>911</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>911</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>911</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>911</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>911</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>911</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>911</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>911</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>message</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:var>
              <subNode:name>
               <scalar:string>headers</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:var>
            <subNode:name>
             <scalar:string>setAttribute</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>911</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>911</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>911</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>911</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>name</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>911</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>911</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>911</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>911</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>attribute</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>911</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>911</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>911</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>911</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>value</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_MethodCall>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>910</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>910</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>910</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>910</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_PropertyFetch>
               <attribute:startLine>
                <scalar:int>910</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>910</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>910</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>910</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>this</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>message</scalar:string>
               </subNode:name>
              </node:Expr_PropertyFetch>
             </subNode:var>
             <subNode:name>
              <scalar:string>headers</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:var>
           <subNode:name>
            <scalar:string>has</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>910</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>910</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>910</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>910</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>name</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:cond>
        </node:Stmt_If>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>setHeaderAttribute</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="913">/**
   * Send an email to a number of recipients
   * Returns the number of successful recipients, or FALSE on failure
   * @param mixed The recipients to send to.  One of string, array, 2-dimensional array or Swift_Address
   * @param mixed The address to send from. string or Swift_Address
   * @param string The message subject
   * @param string The message body, optional
   * @return int
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>922</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>948</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>922</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>922</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>recipients</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>922</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>922</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>from</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>922</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>922</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>subject</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>922</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>922</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>body</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>922</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>922</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>922</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>922</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>924</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>924</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>924</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>924</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>addTo</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>924</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>924</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>924</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>924</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>recipients</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>926</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>926</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>926</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>926</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>sender</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>926</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>926</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>926</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>926</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>false</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>927</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>928</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>927</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>927</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>927</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>927</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>sender</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>927</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>927</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>927</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>927</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>stringToAddress</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>927</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>927</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>927</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>927</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>from</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array>
           <node:Stmt_ElseIf>
            <attribute:startLine>
             <scalar:int>928</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>928</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Expr_Instanceof>
              <attribute:startLine>
               <scalar:int>928</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>928</scalar:int>
              </attribute:endLine>
              <subNode:expr>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>928</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>928</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>from</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:expr>
              <subNode:class>
               <node:Name_FullyQualified>
                <attribute:startLine>
                 <scalar:int>928</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>928</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>Swift_Address</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name_FullyQualified>
              </subNode:class>
             </node:Expr_Instanceof>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>928</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>928</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>928</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>928</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>sender</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:expr>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>928</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>928</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>from</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:expr>
              </node:Expr_Assign>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_ElseIf>
          </scalar:array>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>927</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>927</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>927</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>927</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>is_string</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>927</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>927</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>927</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>927</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>from</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>929</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>929</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>929</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>929</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_ConstFetch>
              <attribute:startLine>
               <scalar:int>929</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>929</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>929</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>929</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>false</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
             </node:Expr_ConstFetch>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>929</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>929</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>929</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>929</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>sender</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>931</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>931</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>931</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>931</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>931</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>931</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>message</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:name>
          <scalar:string>setSubject</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>931</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>931</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>931</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>931</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>subject</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>932</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>932</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_MethodCall>
            <attribute:startLine>
             <scalar:int>932</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>932</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>932</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>932</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>932</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>932</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>message</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:var>
            <subNode:name>
             <scalar:string>setBody</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>932</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>932</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>932</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>932</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>body</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_MethodCall>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>932</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>932</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>body</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_TryCatch>
         <attribute:startLine>
          <scalar:int>933</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>947</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>934</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>941</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>936</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>936</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>936</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>936</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>sent</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:expr>
                <node:Expr_MethodCall>
                 <attribute:startLine>
                  <scalar:int>936</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>936</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_PropertyFetch>
                   <attribute:startLine>
                    <scalar:int>936</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>936</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>936</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>936</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>swift</scalar:string>
                   </subNode:name>
                  </node:Expr_PropertyFetch>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>batchSend</scalar:string>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>936</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>936</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_PropertyFetch>
                      <attribute:startLine>
                       <scalar:int>936</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>936</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>936</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>936</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>this</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>message</scalar:string>
                      </subNode:name>
                     </node:Expr_PropertyFetch>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>936</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>936</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_PropertyFetch>
                      <attribute:startLine>
                       <scalar:int>936</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>936</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>936</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>936</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>this</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>recipients</scalar:string>
                      </subNode:name>
                     </node:Expr_PropertyFetch>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>936</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>936</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>936</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>936</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>sender</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_MethodCall>
               </subNode:expr>
              </node:Expr_Assign>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <node:Stmt_Else>
              <attribute:startLine>
               <scalar:int>938</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>941</scalar:int>
              </attribute:endLine>
              <subNode:stmts>
               <scalar:array>
                <node:Expr_Assign>
                 <attribute:startLine>
                  <scalar:int>940</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>940</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>940</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>940</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>sent</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:expr>
                  <node:Expr_MethodCall>
                   <attribute:startLine>
                    <scalar:int>940</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>940</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_PropertyFetch>
                     <attribute:startLine>
                      <scalar:int>940</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>940</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>940</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>940</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>this</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>swift</scalar:string>
                     </subNode:name>
                    </node:Expr_PropertyFetch>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>send</scalar:string>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>940</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>940</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_PropertyFetch>
                        <attribute:startLine>
                         <scalar:int>940</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>940</scalar:int>
                        </attribute:endLine>
                        <subNode:var>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>940</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>940</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>this</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:var>
                        <subNode:name>
                         <scalar:string>message</scalar:string>
                        </subNode:name>
                       </node:Expr_PropertyFetch>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>940</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>940</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_PropertyFetch>
                        <attribute:startLine>
                         <scalar:int>940</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>940</scalar:int>
                        </attribute:endLine>
                        <subNode:var>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>940</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>940</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>this</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:var>
                        <subNode:name>
                         <scalar:string>recipients</scalar:string>
                        </subNode:name>
                       </node:Expr_PropertyFetch>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>940</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>940</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>940</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>940</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>sender</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                    </scalar:array>
                   </subNode:args>
                  </node:Expr_MethodCall>
                 </subNode:expr>
                </node:Expr_Assign>
               </scalar:array>
              </subNode:stmts>
             </node:Stmt_Else>
            </subNode:else>
            <subNode:cond>
             <node:Expr_BooleanAnd>
              <attribute:startLine>
               <scalar:int>934</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>934</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_BooleanAnd>
                <attribute:startLine>
                 <scalar:int>934</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>934</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Expr_BooleanNot>
                  <attribute:startLine>
                   <scalar:int>934</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>934</scalar:int>
                  </attribute:endLine>
                  <subNode:expr>
                   <node:Expr_PropertyFetch>
                    <attribute:startLine>
                     <scalar:int>934</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>934</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>934</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>934</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>this</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>exactCopy</scalar:string>
                    </subNode:name>
                   </node:Expr_PropertyFetch>
                  </subNode:expr>
                 </node:Expr_BooleanNot>
                </subNode:left>
                <subNode:right>
                 <node:Expr_BooleanNot>
                  <attribute:startLine>
                   <scalar:int>934</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>934</scalar:int>
                  </attribute:endLine>
                  <subNode:expr>
                   <node:Expr_MethodCall>
                    <attribute:startLine>
                     <scalar:int>934</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>934</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_PropertyFetch>
                      <attribute:startLine>
                       <scalar:int>934</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>934</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>934</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>934</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>this</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>recipients</scalar:string>
                      </subNode:name>
                     </node:Expr_PropertyFetch>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>getCc</scalar:string>
                    </subNode:name>
                    <subNode:args>
                     <scalar:array/>
                    </subNode:args>
                   </node:Expr_MethodCall>
                  </subNode:expr>
                 </node:Expr_BooleanNot>
                </subNode:right>
               </node:Expr_BooleanAnd>
              </subNode:left>
              <subNode:right>
               <node:Expr_BooleanNot>
                <attribute:startLine>
                 <scalar:int>934</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>934</scalar:int>
                </attribute:endLine>
                <subNode:expr>
                 <node:Expr_MethodCall>
                  <attribute:startLine>
                   <scalar:int>934</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>934</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_PropertyFetch>
                    <attribute:startLine>
                     <scalar:int>934</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>934</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>934</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>934</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>this</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>recipients</scalar:string>
                    </subNode:name>
                   </node:Expr_PropertyFetch>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>getBcc</scalar:string>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array/>
                  </subNode:args>
                 </node:Expr_MethodCall>
                </subNode:expr>
               </node:Expr_BooleanNot>
              </subNode:right>
             </node:Expr_BooleanAnd>
            </subNode:cond>
           </node:Stmt_If>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>942</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>942</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>942</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>942</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>942</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>942</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>this</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>flush</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array/>
               </subNode:args>
              </node:Expr_MethodCall>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>942</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>942</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>942</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>942</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>autoFlush</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:cond>
           </node:Stmt_If>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>943</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>943</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>943</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>943</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>sent</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:catches>
          <scalar:array>
           <node:Stmt_Catch>
            <attribute:startLine>
             <scalar:int>944</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>947</scalar:int>
            </attribute:endLine>
            <subNode:type>
             <node:Name_FullyQualified>
              <attribute:startLine>
               <scalar:int>944</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>944</scalar:int>
              </attribute:endLine>
              <subNode:parts>
               <scalar:array>
                <scalar:string>Swift_ConnectionException</scalar:string>
               </scalar:array>
              </subNode:parts>
             </node:Name_FullyQualified>
            </subNode:type>
            <subNode:var>
             <scalar:string>e</scalar:string>
            </subNode:var>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>945</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>945</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>945</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>945</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>this</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>setError</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>945</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>945</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Concat>
                    <attribute:startLine>
                     <scalar:int>945</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>945</scalar:int>
                    </attribute:endLine>
                    <subNode:left>
                     <node:Scalar_String>
                      <attribute:startLine>
                       <scalar:int>945</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>945</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <scalar:string>Sending failed:&lt;br /&gt;</scalar:string>
                      </subNode:value>
                     </node:Scalar_String>
                    </subNode:left>
                    <subNode:right>
                     <node:Expr_MethodCall>
                      <attribute:startLine>
                       <scalar:int>945</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>945</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>945</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>945</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>e</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>getMessage</scalar:string>
                      </subNode:name>
                      <subNode:args>
                       <scalar:array/>
                      </subNode:args>
                     </node:Expr_MethodCall>
                    </subNode:right>
                   </node:Expr_Concat>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_MethodCall>
              <node:Stmt_Return>
               <attribute:startLine>
                <scalar:int>946</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>946</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_ConstFetch>
                 <attribute:startLine>
                  <scalar:int>946</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>946</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>946</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>946</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>false</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                </node:Expr_ConstFetch>
               </subNode:expr>
              </node:Stmt_Return>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_Catch>
          </scalar:array>
         </subNode:catches>
         <subNode:finallyStmts>
          <scalar:null/>
         </subNode:finallyStmts>
        </node:Stmt_TryCatch>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>send</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
    </scalar:array>
   </subNode:stmts>
   <subNode:name>
    <scalar:string>EasySwift</scalar:string>
   </subNode:name>
   <subNode:namespacedName>
    <node:Name>
     <attribute:comments>
      <scalar:array>
       <comment isDocComment="true" line="24">/**
 * EasySwift: Facade for Swift Mailer Version 3.
 * Provides (most of) the API from older versions of Swift, wrapped around the new version 3 API.
 * Due to the popularity of the new API, EasySwift will not be around indefinitely.
 * @package EasySwift
 * @author Chris Corbyn &lt;chris@w3style.co.uk&gt;
 * @deprecated
 */</comment>
      </scalar:array>
     </attribute:comments>
     <attribute:startLine>
      <scalar:int>32</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>949</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>EasySwift</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name>
   </subNode:namespacedName>
  </node:Stmt_Class>
 </scalar:array>
</AST>
