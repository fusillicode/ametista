<?xml version="1.0" encoding="UTF-8"?>
<AST xmlns:node="http://nikic.github.com/PHPParser/XML/node" xmlns:subNode="http://nikic.github.com/PHPParser/XML/subNode" xmlns:attribute="http://nikic.github.com/PHPParser/XML/attribute" xmlns:scalar="http://nikic.github.com/PHPParser/XML/scalar">
 <scalar:array>
  <node:Stmt_Class>
   <attribute:comments>
    <scalar:array>
     <comment isDocComment="false" line="2">/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */</comment>
     <comment isDocComment="true" line="4">/**
 * Abstract class providing common methods for XML_Feed_Parser feeds.
 *
 * PHP versions 5
 *
 * LICENSE: This source file is subject to version 3.0 of the PHP license
 * that is available through the world-wide-web at the following URI:
 * http://www.php.net/license/3_0.txt.  If you did not receive a copy of
 * the PHP License and are unable to obtain it through the web, please
 * send a note to license@php.net so we can mail you a copy immediately.
 *
 * @category   XML
 * @package    XML_Feed_Parser
 * @author     James Stewart &lt;james@jystewart.net&gt;
 * @copyright  2005 James Stewart &lt;james@jystewart.net&gt;
 * @license    http://www.gnu.org/copyleft/lesser.html  GNU LGPL 2.1
 * @version    CVS: $Id: Type.php 6844 2011-06-03 14:46:51Z dMetzger $
 * @link       http://pear.php.net/package/XML_Feed_Parser/
 */</comment>
     <comment isDocComment="true" line="24">/**
 * This abstract class provides some general methods that are likely to be
 * implemented exactly the same way for all feed types.
 *
 * @package XML_Feed_Parser
 * @author  James Stewart &lt;james@jystewart.net&gt;
 * @version Release: @package_version@
 */</comment>
    </scalar:array>
   </attribute:comments>
   <attribute:startLine>
    <scalar:int>32</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>473</scalar:int>
   </attribute:endLine>
   <subNode:type>
    <scalar:int>16</scalar:int>
   </subNode:type>
   <subNode:extends>
    <scalar:null/>
   </subNode:extends>
   <subNode:implements>
    <scalar:array/>
   </subNode:implements>
   <subNode:stmts>
    <scalar:array>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="34">/**
     * Where we store our DOM object for this feed 
     * @var DOMDocument
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>38</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>38</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>38</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>38</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>model</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="40">/**
     * For iteration we'll want a count of the number of entries 
     * @var int
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>44</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>44</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>44</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>44</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>numberEntries</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="46">/**
     * Where we store our entry objects once instantiated 
     * @var array
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>50</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>50</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>50</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>50</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>entries</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_Array>
           <attribute:startLine>
            <scalar:int>50</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>50</scalar:int>
           </attribute:endLine>
           <subNode:items>
            <scalar:array/>
           </subNode:items>
          </node:Expr_Array>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="52">/**
     * Store mappings between entry IDs and their position in the feed
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>55</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>55</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>55</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>55</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>idMappings</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_Array>
           <attribute:startLine>
            <scalar:int>55</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>55</scalar:int>
           </attribute:endLine>
           <subNode:items>
            <scalar:array/>
           </subNode:items>
          </node:Expr_Array>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="57">/**
     * Proxy to allow use of element names as method names
     *
     * We are not going to provide methods for every entry type so this
     * function will allow for a lot of mapping. We rely pretty heavily
     * on this to handle our mappings between other feed types and atom.
     *
     * @param   string  $call - the method attempted
     * @param   array   $arguments - arguments to that method
     * @return  mixed
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>68</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>109</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>68</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>68</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>call</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>68</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>68</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>arguments</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_Array>
           <attribute:startLine>
            <scalar:int>68</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>68</scalar:int>
           </attribute:endLine>
           <subNode:items>
            <scalar:array/>
           </subNode:items>
          </node:Expr_Array>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>70</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>72</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>71</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>71</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>71</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>71</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>arguments</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Array>
              <attribute:startLine>
               <scalar:int>71</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>71</scalar:int>
              </attribute:endLine>
              <subNode:items>
               <scalar:array/>
              </subNode:items>
             </node:Expr_Array>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>70</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>70</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>70</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>70</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>70</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>70</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>is_array</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>70</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>70</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>70</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>70</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>arguments</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>74</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>81</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>75</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>75</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>75</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>75</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>tempMap</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>75</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>75</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>75</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>75</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>compatMap</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>76</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>76</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>76</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>76</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>tempcall</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>76</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>76</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>76</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>76</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>array_pop</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>76</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>76</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_ArrayDimFetch>
                   <attribute:startLine>
                    <scalar:int>76</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>76</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>76</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>76</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>tempMap</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:dim>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>76</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>76</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>call</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:dim>
                  </node:Expr_ArrayDimFetch>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>77</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>79</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>78</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>78</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>78</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>78</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>arguments</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:expr>
                <node:Expr_FuncCall>
                 <attribute:startLine>
                  <scalar:int>78</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>78</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>78</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>78</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>array_merge</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>78</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>78</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>78</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>78</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>arguments</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>78</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>78</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_ArrayDimFetch>
                      <attribute:startLine>
                       <scalar:int>78</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>78</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>78</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>78</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>tempMap</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:dim>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>78</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>78</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>call</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:dim>
                     </node:Expr_ArrayDimFetch>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_FuncCall>
               </subNode:expr>
              </node:Expr_Assign>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_BooleanNot>
              <attribute:startLine>
               <scalar:int>77</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>77</scalar:int>
              </attribute:endLine>
              <subNode:expr>
               <node:Expr_Empty>
                <attribute:startLine>
                 <scalar:int>77</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>77</scalar:int>
                </attribute:endLine>
                <subNode:expr>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>77</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>77</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>tempMap</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:expr>
               </node:Expr_Empty>
              </subNode:expr>
             </node:Expr_BooleanNot>
            </subNode:cond>
           </node:Stmt_If>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>80</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>80</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>80</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>80</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>call</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>80</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>80</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>tempcall</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Isset>
           <attribute:startLine>
            <scalar:int>74</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>74</scalar:int>
           </attribute:endLine>
           <subNode:vars>
            <scalar:array>
             <node:Expr_ArrayDimFetch>
              <attribute:startLine>
               <scalar:int>74</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>74</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>74</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>74</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>74</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>74</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>compatMap</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:var>
              <subNode:dim>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>74</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>74</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>call</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:dim>
             </node:Expr_ArrayDimFetch>
            </scalar:array>
           </subNode:vars>
          </node:Expr_Isset>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_If>
         <attribute:comments>
          <scalar:array>
           <comment isDocComment="false" line="83">/* To be helpful, we allow a case-insensitive search for this method */</comment>
          </scalar:array>
         </attribute:comments>
         <attribute:startLine>
          <scalar:int>84</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>91</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Foreach>
            <attribute:startLine>
             <scalar:int>85</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>90</scalar:int>
            </attribute:endLine>
            <subNode:keyVar>
             <scalar:null/>
            </subNode:keyVar>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_If>
               <attribute:startLine>
                <scalar:int>86</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>89</scalar:int>
               </attribute:endLine>
               <subNode:stmts>
                <scalar:array>
                 <node:Expr_Assign>
                  <attribute:startLine>
                   <scalar:int>87</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>87</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>87</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>87</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>call</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:expr>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>87</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>87</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>key</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:expr>
                 </node:Expr_Assign>
                 <node:Stmt_Break>
                  <attribute:startLine>
                   <scalar:int>88</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>88</scalar:int>
                  </attribute:endLine>
                  <subNode:num>
                   <scalar:null/>
                  </subNode:num>
                 </node:Stmt_Break>
                </scalar:array>
               </subNode:stmts>
               <subNode:elseifs>
                <scalar:array/>
               </subNode:elseifs>
               <subNode:else>
                <scalar:null/>
               </subNode:else>
               <subNode:cond>
                <node:Expr_Equal>
                 <attribute:startLine>
                  <scalar:int>86</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>86</scalar:int>
                 </attribute:endLine>
                 <subNode:left>
                  <node:Expr_FuncCall>
                   <attribute:startLine>
                    <scalar:int>86</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>86</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <node:Name>
                     <attribute:startLine>
                      <scalar:int>86</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>86</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>strtoupper</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>86</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>86</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>86</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>86</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>key</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                    </scalar:array>
                   </subNode:args>
                  </node:Expr_FuncCall>
                 </subNode:left>
                 <subNode:right>
                  <node:Expr_FuncCall>
                   <attribute:startLine>
                    <scalar:int>86</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>86</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <node:Name>
                     <attribute:startLine>
                      <scalar:int>86</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>86</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>strtoupper</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>86</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>86</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>86</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>86</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>call</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                    </scalar:array>
                   </subNode:args>
                  </node:Expr_FuncCall>
                 </subNode:right>
                </node:Expr_Equal>
               </subNode:cond>
              </node:Stmt_If>
             </scalar:array>
            </subNode:stmts>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>85</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>85</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>85</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>85</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>array_keys</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>85</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>85</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_PropertyFetch>
                   <attribute:startLine>
                    <scalar:int>85</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>85</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>85</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>85</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>map</scalar:string>
                   </subNode:name>
                  </node:Expr_PropertyFetch>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
            <subNode:valueVar>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>85</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>85</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>key</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:valueVar>
           </node:Stmt_Foreach>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>84</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>84</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Isset>
             <attribute:startLine>
              <scalar:int>84</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>84</scalar:int>
             </attribute:endLine>
             <subNode:vars>
              <scalar:array>
               <node:Expr_ArrayDimFetch>
                <attribute:startLine>
                 <scalar:int>84</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>84</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_PropertyFetch>
                  <attribute:startLine>
                   <scalar:int>84</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>84</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>84</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>84</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>this</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>map</scalar:string>
                  </subNode:name>
                 </node:Expr_PropertyFetch>
                </subNode:var>
                <subNode:dim>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>84</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>84</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>call</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:dim>
               </node:Expr_ArrayDimFetch>
              </scalar:array>
             </subNode:vars>
            </node:Expr_Isset>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>93</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>95</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>94</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>94</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_ConstFetch>
              <attribute:startLine>
               <scalar:int>94</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>94</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>94</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>94</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>false</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
             </node:Expr_ConstFetch>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Empty>
           <attribute:startLine>
            <scalar:int>93</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>93</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_ArrayDimFetch>
             <attribute:startLine>
              <scalar:int>93</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>93</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_PropertyFetch>
               <attribute:startLine>
                <scalar:int>93</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>93</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>93</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>93</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>this</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>map</scalar:string>
               </subNode:name>
              </node:Expr_PropertyFetch>
             </subNode:var>
             <subNode:dim>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>93</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>93</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>call</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:dim>
            </node:Expr_ArrayDimFetch>
           </subNode:expr>
          </node:Expr_Empty>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>97</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>97</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>97</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>97</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>method</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Concat>
           <attribute:startLine>
            <scalar:int>97</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>97</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>97</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>97</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string>get</scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:left>
           <subNode:right>
            <node:Expr_ArrayDimFetch>
             <attribute:startLine>
              <scalar:int>97</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>97</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_ArrayDimFetch>
               <attribute:startLine>
                <scalar:int>97</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>97</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>97</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>97</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>97</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>97</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>map</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:var>
               <subNode:dim>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>97</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>97</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>call</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:dim>
              </node:Expr_ArrayDimFetch>
             </subNode:var>
             <subNode:dim>
              <node:Scalar_LNumber>
               <attribute:startLine>
                <scalar:int>97</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>97</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <scalar:int>0</scalar:int>
               </subNode:value>
              </node:Scalar_LNumber>
             </subNode:dim>
            </node:Expr_ArrayDimFetch>
           </subNode:right>
          </node:Expr_Concat>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>98</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>103</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>99</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>99</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>99</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>99</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>offset</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Ternary>
              <attribute:startLine>
               <scalar:int>99</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>99</scalar:int>
              </attribute:endLine>
              <subNode:cond>
               <node:Expr_Empty>
                <attribute:startLine>
                 <scalar:int>99</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>99</scalar:int>
                </attribute:endLine>
                <subNode:expr>
                 <node:Expr_ArrayDimFetch>
                  <attribute:startLine>
                   <scalar:int>99</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>99</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>99</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>99</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>arguments</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:dim>
                   <node:Scalar_LNumber>
                    <attribute:startLine>
                     <scalar:int>99</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>99</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:int>0</scalar:int>
                    </subNode:value>
                   </node:Scalar_LNumber>
                  </subNode:dim>
                 </node:Expr_ArrayDimFetch>
                </subNode:expr>
               </node:Expr_Empty>
              </subNode:cond>
              <subNode:if>
               <node:Scalar_LNumber>
                <attribute:startLine>
                 <scalar:int>99</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>99</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:int>0</scalar:int>
                </subNode:value>
               </node:Scalar_LNumber>
              </subNode:if>
              <subNode:else>
               <node:Expr_ArrayDimFetch>
                <attribute:startLine>
                 <scalar:int>99</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>99</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>99</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>99</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>arguments</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:dim>
                 <node:Scalar_LNumber>
                  <attribute:startLine>
                   <scalar:int>99</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>99</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:int>0</scalar:int>
                  </subNode:value>
                 </node:Scalar_LNumber>
                </subNode:dim>
               </node:Expr_ArrayDimFetch>
              </subNode:else>
             </node:Expr_Ternary>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>100</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>100</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>100</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>100</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>attribute</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Ternary>
              <attribute:startLine>
               <scalar:int>100</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>100</scalar:int>
              </attribute:endLine>
              <subNode:cond>
               <node:Expr_Empty>
                <attribute:startLine>
                 <scalar:int>100</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>100</scalar:int>
                </attribute:endLine>
                <subNode:expr>
                 <node:Expr_ArrayDimFetch>
                  <attribute:startLine>
                   <scalar:int>100</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>100</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>100</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>100</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>arguments</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:dim>
                   <node:Scalar_LNumber>
                    <attribute:startLine>
                     <scalar:int>100</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>100</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:int>1</scalar:int>
                    </subNode:value>
                   </node:Scalar_LNumber>
                  </subNode:dim>
                 </node:Expr_ArrayDimFetch>
                </subNode:expr>
               </node:Expr_Empty>
              </subNode:cond>
              <subNode:if>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>100</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>100</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>href</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:if>
              <subNode:else>
               <node:Expr_ArrayDimFetch>
                <attribute:startLine>
                 <scalar:int>100</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>100</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>100</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>100</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>arguments</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:dim>
                 <node:Scalar_LNumber>
                  <attribute:startLine>
                   <scalar:int>100</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>100</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:int>1</scalar:int>
                  </subNode:value>
                 </node:Scalar_LNumber>
                </subNode:dim>
               </node:Expr_ArrayDimFetch>
              </subNode:else>
             </node:Expr_Ternary>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>101</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>101</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>101</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>101</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>params</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Ternary>
              <attribute:startLine>
               <scalar:int>101</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>101</scalar:int>
              </attribute:endLine>
              <subNode:cond>
               <node:Expr_Isset>
                <attribute:startLine>
                 <scalar:int>101</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>101</scalar:int>
                </attribute:endLine>
                <subNode:vars>
                 <scalar:array>
                  <node:Expr_ArrayDimFetch>
                   <attribute:startLine>
                    <scalar:int>101</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>101</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>101</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>101</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>arguments</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:dim>
                    <node:Scalar_LNumber>
                     <attribute:startLine>
                      <scalar:int>101</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>101</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:int>2</scalar:int>
                     </subNode:value>
                    </node:Scalar_LNumber>
                   </subNode:dim>
                  </node:Expr_ArrayDimFetch>
                 </scalar:array>
                </subNode:vars>
               </node:Expr_Isset>
              </subNode:cond>
              <subNode:if>
               <node:Expr_ArrayDimFetch>
                <attribute:startLine>
                 <scalar:int>101</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>101</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>101</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>101</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>arguments</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:dim>
                 <node:Scalar_LNumber>
                  <attribute:startLine>
                   <scalar:int>101</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>101</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:int>2</scalar:int>
                  </subNode:value>
                 </node:Scalar_LNumber>
                </subNode:dim>
               </node:Expr_ArrayDimFetch>
              </subNode:if>
              <subNode:else>
               <node:Expr_Array>
                <attribute:startLine>
                 <scalar:int>101</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>101</scalar:int>
                </attribute:endLine>
                <subNode:items>
                 <scalar:array/>
                </subNode:items>
               </node:Expr_Array>
              </subNode:else>
             </node:Expr_Ternary>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>102</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>102</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>102</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>102</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>102</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>102</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>getLink</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>102</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>102</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>102</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>102</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>offset</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>102</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>102</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>102</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>102</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>attribute</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>102</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>102</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>102</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>102</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>params</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Equal>
           <attribute:startLine>
            <scalar:int>98</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>98</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>98</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>98</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>method</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:left>
           <subNode:right>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>98</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>98</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string>getLink</scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:right>
          </node:Expr_Equal>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>104</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>106</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>105</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>105</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>105</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>105</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>105</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>105</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>105</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>105</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>method</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>105</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>105</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>105</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>105</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>call</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>105</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>105</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>105</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>105</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>arguments</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>104</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>104</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>104</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>104</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>method_exists</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>104</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>104</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>104</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>104</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>104</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>104</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>104</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>104</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>method</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>108</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>108</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>108</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>108</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>108</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>108</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>false</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>__call</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="111">/**
     * Proxy to allow use of element names as attribute names
     *
     * For many elements variable-style access will be desirable. This function
     * provides for that.
     *
     * @param   string  $value - the variable required
     * @return  mixed
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>120</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>123</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>120</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>120</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>value</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>122</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>122</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>122</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>122</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>122</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>122</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>__call</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>122</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>122</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>122</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>122</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>value</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>122</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>122</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Array>
                <attribute:startLine>
                 <scalar:int>122</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>122</scalar:int>
                </attribute:endLine>
                <subNode:items>
                 <scalar:array/>
                </subNode:items>
               </node:Expr_Array>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>__get</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="125">/**
     * Utility function to help us resolve xml:base values
     *
     * We have other methods which will traverse the DOM and work out the different
     * xml:base declarations we need to be aware of. We then need to combine them.
     * If a declaration starts with a protocol then we restart the string. If it 
     * starts with a / then we add on to the domain name. Otherwise we simply tag 
     * it on to the end.
     *
     * @param   string  $base - the base to add the link to
     * @param   string  $link
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>137</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>163</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>137</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>137</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>base</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>137</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>137</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>link</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>139</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>162</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>140</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>140</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>140</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>140</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>link</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <node:Stmt_Else>
           <attribute:startLine>
            <scalar:int>141</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>162</scalar:int>
           </attribute:endLine>
           <subNode:stmts>
            <scalar:array>
             <node:Stmt_If>
              <attribute:startLine>
               <scalar:int>141</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>162</scalar:int>
              </attribute:endLine>
              <subNode:stmts>
               <scalar:array>
                <node:Expr_FuncCall>
                 <attribute:comments>
                  <scalar:array>
                   <comment isDocComment="false" line="142">/* Extract domain and suffix link to that */</comment>
                  </scalar:array>
                 </attribute:comments>
                 <attribute:startLine>
                  <scalar:int>143</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>143</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:comments>
                    <scalar:array>
                     <comment isDocComment="false" line="142">/* Extract domain and suffix link to that */</comment>
                    </scalar:array>
                   </attribute:comments>
                   <attribute:startLine>
                    <scalar:int>143</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>143</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>preg_match</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>143</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>143</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Scalar_String>
                      <attribute:startLine>
                       <scalar:int>143</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>143</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <scalar:string>/^([A-Za-z]+:\/\/.*)?\/*/</scalar:string>
                      </subNode:value>
                     </node:Scalar_String>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>143</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>143</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>143</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>143</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>base</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>143</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>143</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>143</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>143</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>results</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_FuncCall>
                <node:Expr_Assign>
                 <attribute:startLine>
                  <scalar:int>144</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>144</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>144</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>144</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>firstLayer</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:expr>
                  <node:Expr_ArrayDimFetch>
                   <attribute:startLine>
                    <scalar:int>144</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>144</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>144</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>144</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>results</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:dim>
                    <node:Scalar_LNumber>
                     <attribute:startLine>
                      <scalar:int>144</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>144</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:int>0</scalar:int>
                     </subNode:value>
                    </node:Scalar_LNumber>
                   </subNode:dim>
                  </node:Expr_ArrayDimFetch>
                 </subNode:expr>
                </node:Expr_Assign>
                <node:Stmt_Return>
                 <attribute:startLine>
                  <scalar:int>145</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>145</scalar:int>
                 </attribute:endLine>
                 <subNode:expr>
                  <node:Expr_Concat>
                   <attribute:startLine>
                    <scalar:int>145</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>145</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Expr_Concat>
                     <attribute:startLine>
                      <scalar:int>145</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>145</scalar:int>
                     </attribute:endLine>
                     <subNode:left>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>145</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>145</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>firstLayer</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:left>
                     <subNode:right>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>145</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>145</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>/</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:right>
                    </node:Expr_Concat>
                   </subNode:left>
                   <subNode:right>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>145</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>145</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>link</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:right>
                  </node:Expr_Concat>
                 </subNode:expr>
                </node:Stmt_Return>
               </scalar:array>
              </subNode:stmts>
              <subNode:elseifs>
               <scalar:array/>
              </subNode:elseifs>
              <subNode:else>
               <node:Stmt_Else>
                <attribute:startLine>
                 <scalar:int>146</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>162</scalar:int>
                </attribute:endLine>
                <subNode:stmts>
                 <scalar:array>
                  <node:Stmt_If>
                   <attribute:startLine>
                    <scalar:int>146</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>162</scalar:int>
                   </attribute:endLine>
                   <subNode:stmts>
                    <scalar:array>
                     <node:Expr_FuncCall>
                      <attribute:comments>
                       <scalar:array>
                        <comment isDocComment="false" line="147">/* Step up link to find place to be */</comment>
                       </scalar:array>
                      </attribute:comments>
                      <attribute:startLine>
                       <scalar:int>148</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>148</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <node:Name>
                        <attribute:comments>
                         <scalar:array>
                          <comment isDocComment="false" line="147">/* Step up link to find place to be */</comment>
                         </scalar:array>
                        </attribute:comments>
                        <attribute:startLine>
                         <scalar:int>148</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>148</scalar:int>
                        </attribute:endLine>
                        <subNode:parts>
                         <scalar:array>
                          <scalar:string>preg_match</scalar:string>
                         </scalar:array>
                        </subNode:parts>
                       </node:Name>
                      </subNode:name>
                      <subNode:args>
                       <scalar:array>
                        <node:Arg>
                         <attribute:startLine>
                          <scalar:int>148</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>148</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <node:Scalar_String>
                           <attribute:startLine>
                            <scalar:int>148</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>148</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <scalar:string>/^((\.\.\/)+)(.*)$/</scalar:string>
                           </subNode:value>
                          </node:Scalar_String>
                         </subNode:value>
                         <subNode:byRef>
                          <scalar:false/>
                         </subNode:byRef>
                        </node:Arg>
                        <node:Arg>
                         <attribute:startLine>
                          <scalar:int>148</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>148</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>148</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>148</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>link</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:value>
                         <subNode:byRef>
                          <scalar:false/>
                         </subNode:byRef>
                        </node:Arg>
                        <node:Arg>
                         <attribute:startLine>
                          <scalar:int>148</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>148</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>148</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>148</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>bases</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:value>
                         <subNode:byRef>
                          <scalar:false/>
                         </subNode:byRef>
                        </node:Arg>
                       </scalar:array>
                      </subNode:args>
                     </node:Expr_FuncCall>
                     <node:Expr_Assign>
                      <attribute:startLine>
                       <scalar:int>149</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>149</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>149</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>149</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>suffix</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:expr>
                       <node:Expr_ArrayDimFetch>
                        <attribute:startLine>
                         <scalar:int>149</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>149</scalar:int>
                        </attribute:endLine>
                        <subNode:var>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>149</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>149</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>bases</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:var>
                        <subNode:dim>
                         <node:Scalar_LNumber>
                          <attribute:startLine>
                           <scalar:int>149</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>149</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <scalar:int>3</scalar:int>
                          </subNode:value>
                         </node:Scalar_LNumber>
                        </subNode:dim>
                       </node:Expr_ArrayDimFetch>
                      </subNode:expr>
                     </node:Expr_Assign>
                     <node:Expr_Assign>
                      <attribute:startLine>
                       <scalar:int>150</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>150</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>150</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>150</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>count</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:expr>
                       <node:Expr_FuncCall>
                        <attribute:startLine>
                         <scalar:int>150</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>150</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <node:Name>
                          <attribute:startLine>
                           <scalar:int>150</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>150</scalar:int>
                          </attribute:endLine>
                          <subNode:parts>
                           <scalar:array>
                            <scalar:string>preg_match_all</scalar:string>
                           </scalar:array>
                          </subNode:parts>
                         </node:Name>
                        </subNode:name>
                        <subNode:args>
                         <scalar:array>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>150</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>150</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Scalar_String>
                             <attribute:startLine>
                              <scalar:int>150</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>150</scalar:int>
                             </attribute:endLine>
                             <subNode:value>
                              <scalar:string>/\.\.\//</scalar:string>
                             </subNode:value>
                            </node:Scalar_String>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>150</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>150</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Expr_ArrayDimFetch>
                             <attribute:startLine>
                              <scalar:int>150</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>150</scalar:int>
                             </attribute:endLine>
                             <subNode:var>
                              <node:Expr_Variable>
                               <attribute:startLine>
                                <scalar:int>150</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>150</scalar:int>
                               </attribute:endLine>
                               <subNode:name>
                                <scalar:string>bases</scalar:string>
                               </subNode:name>
                              </node:Expr_Variable>
                             </subNode:var>
                             <subNode:dim>
                              <node:Scalar_LNumber>
                               <attribute:startLine>
                                <scalar:int>150</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>150</scalar:int>
                               </attribute:endLine>
                               <subNode:value>
                                <scalar:int>1</scalar:int>
                               </subNode:value>
                              </node:Scalar_LNumber>
                             </subNode:dim>
                            </node:Expr_ArrayDimFetch>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>150</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>150</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>150</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>150</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>steps</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                         </scalar:array>
                        </subNode:args>
                       </node:Expr_FuncCall>
                      </subNode:expr>
                     </node:Expr_Assign>
                     <node:Expr_Assign>
                      <attribute:startLine>
                       <scalar:int>151</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>151</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>151</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>151</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>url</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:expr>
                       <node:Expr_FuncCall>
                        <attribute:startLine>
                         <scalar:int>151</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>151</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <node:Name>
                          <attribute:startLine>
                           <scalar:int>151</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>151</scalar:int>
                          </attribute:endLine>
                          <subNode:parts>
                           <scalar:array>
                            <scalar:string>explode</scalar:string>
                           </scalar:array>
                          </subNode:parts>
                         </node:Name>
                        </subNode:name>
                        <subNode:args>
                         <scalar:array>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>151</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>151</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Scalar_String>
                             <attribute:startLine>
                              <scalar:int>151</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>151</scalar:int>
                             </attribute:endLine>
                             <subNode:value>
                              <scalar:string>/</scalar:string>
                             </subNode:value>
                            </node:Scalar_String>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>151</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>151</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>151</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>151</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>base</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                         </scalar:array>
                        </subNode:args>
                       </node:Expr_FuncCall>
                      </subNode:expr>
                     </node:Expr_Assign>
                     <node:Stmt_For>
                      <attribute:startLine>
                       <scalar:int>152</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>154</scalar:int>
                      </attribute:endLine>
                      <subNode:init>
                       <scalar:array>
                        <node:Expr_Assign>
                         <attribute:startLine>
                          <scalar:int>152</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>152</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>152</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>152</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>i</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:var>
                         <subNode:expr>
                          <node:Scalar_LNumber>
                           <attribute:startLine>
                            <scalar:int>152</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>152</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <scalar:int>0</scalar:int>
                           </subNode:value>
                          </node:Scalar_LNumber>
                         </subNode:expr>
                        </node:Expr_Assign>
                       </scalar:array>
                      </subNode:init>
                      <subNode:cond>
                       <scalar:array>
                        <node:Expr_SmallerOrEqual>
                         <attribute:startLine>
                          <scalar:int>152</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>152</scalar:int>
                         </attribute:endLine>
                         <subNode:left>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>152</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>152</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>i</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:left>
                         <subNode:right>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>152</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>152</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>count</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:right>
                        </node:Expr_SmallerOrEqual>
                       </scalar:array>
                      </subNode:cond>
                      <subNode:loop>
                       <scalar:array>
                        <node:Expr_PostInc>
                         <attribute:startLine>
                          <scalar:int>152</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>152</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>152</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>152</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>i</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:var>
                        </node:Expr_PostInc>
                       </scalar:array>
                      </subNode:loop>
                      <subNode:stmts>
                       <scalar:array>
                        <node:Expr_FuncCall>
                         <attribute:startLine>
                          <scalar:int>153</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>153</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <node:Name>
                           <attribute:startLine>
                            <scalar:int>153</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>153</scalar:int>
                           </attribute:endLine>
                           <subNode:parts>
                            <scalar:array>
                             <scalar:string>array_pop</scalar:string>
                            </scalar:array>
                           </subNode:parts>
                          </node:Name>
                         </subNode:name>
                         <subNode:args>
                          <scalar:array>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>153</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>153</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_Variable>
                              <attribute:startLine>
                               <scalar:int>153</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>153</scalar:int>
                              </attribute:endLine>
                              <subNode:name>
                               <scalar:string>url</scalar:string>
                              </subNode:name>
                             </node:Expr_Variable>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                          </scalar:array>
                         </subNode:args>
                        </node:Expr_FuncCall>
                       </scalar:array>
                      </subNode:stmts>
                     </node:Stmt_For>
                     <node:Stmt_Return>
                      <attribute:startLine>
                       <scalar:int>155</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>155</scalar:int>
                      </attribute:endLine>
                      <subNode:expr>
                       <node:Expr_Concat>
                        <attribute:startLine>
                         <scalar:int>155</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>155</scalar:int>
                        </attribute:endLine>
                        <subNode:left>
                         <node:Expr_Concat>
                          <attribute:startLine>
                           <scalar:int>155</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>155</scalar:int>
                          </attribute:endLine>
                          <subNode:left>
                           <node:Expr_FuncCall>
                            <attribute:startLine>
                             <scalar:int>155</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>155</scalar:int>
                            </attribute:endLine>
                            <subNode:name>
                             <node:Name>
                              <attribute:startLine>
                               <scalar:int>155</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>155</scalar:int>
                              </attribute:endLine>
                              <subNode:parts>
                               <scalar:array>
                                <scalar:string>implode</scalar:string>
                               </scalar:array>
                              </subNode:parts>
                             </node:Name>
                            </subNode:name>
                            <subNode:args>
                             <scalar:array>
                              <node:Arg>
                               <attribute:startLine>
                                <scalar:int>155</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>155</scalar:int>
                               </attribute:endLine>
                               <subNode:value>
                                <node:Scalar_String>
                                 <attribute:startLine>
                                  <scalar:int>155</scalar:int>
                                 </attribute:startLine>
                                 <attribute:endLine>
                                  <scalar:int>155</scalar:int>
                                 </attribute:endLine>
                                 <subNode:value>
                                  <scalar:string>/</scalar:string>
                                 </subNode:value>
                                </node:Scalar_String>
                               </subNode:value>
                               <subNode:byRef>
                                <scalar:false/>
                               </subNode:byRef>
                              </node:Arg>
                              <node:Arg>
                               <attribute:startLine>
                                <scalar:int>155</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>155</scalar:int>
                               </attribute:endLine>
                               <subNode:value>
                                <node:Expr_Variable>
                                 <attribute:startLine>
                                  <scalar:int>155</scalar:int>
                                 </attribute:startLine>
                                 <attribute:endLine>
                                  <scalar:int>155</scalar:int>
                                 </attribute:endLine>
                                 <subNode:name>
                                  <scalar:string>url</scalar:string>
                                 </subNode:name>
                                </node:Expr_Variable>
                               </subNode:value>
                               <subNode:byRef>
                                <scalar:false/>
                               </subNode:byRef>
                              </node:Arg>
                             </scalar:array>
                            </subNode:args>
                           </node:Expr_FuncCall>
                          </subNode:left>
                          <subNode:right>
                           <node:Scalar_String>
                            <attribute:startLine>
                             <scalar:int>155</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>155</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <scalar:string>/</scalar:string>
                            </subNode:value>
                           </node:Scalar_String>
                          </subNode:right>
                         </node:Expr_Concat>
                        </subNode:left>
                        <subNode:right>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>155</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>155</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>suffix</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:right>
                       </node:Expr_Concat>
                      </subNode:expr>
                     </node:Stmt_Return>
                    </scalar:array>
                   </subNode:stmts>
                   <subNode:elseifs>
                    <scalar:array/>
                   </subNode:elseifs>
                   <subNode:else>
                    <node:Stmt_Else>
                     <attribute:startLine>
                      <scalar:int>156</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>162</scalar:int>
                     </attribute:endLine>
                     <subNode:stmts>
                      <scalar:array>
                       <node:Stmt_If>
                        <attribute:startLine>
                         <scalar:int>156</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>162</scalar:int>
                        </attribute:endLine>
                        <subNode:stmts>
                         <scalar:array>
                          <node:Expr_Assign>
                           <attribute:startLine>
                            <scalar:int>157</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>157</scalar:int>
                           </attribute:endLine>
                           <subNode:var>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>157</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>157</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>base</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:var>
                           <subNode:expr>
                            <node:Expr_FuncCall>
                             <attribute:startLine>
                              <scalar:int>157</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>157</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <node:Name>
                               <attribute:startLine>
                                <scalar:int>157</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>157</scalar:int>
                               </attribute:endLine>
                               <subNode:parts>
                                <scalar:array>
                                 <scalar:string>preg_replace</scalar:string>
                                </scalar:array>
                               </subNode:parts>
                              </node:Name>
                             </subNode:name>
                             <subNode:args>
                              <scalar:array>
                               <node:Arg>
                                <attribute:startLine>
                                 <scalar:int>157</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>157</scalar:int>
                                </attribute:endLine>
                                <subNode:value>
                                 <node:Scalar_String>
                                  <attribute:startLine>
                                   <scalar:int>157</scalar:int>
                                  </attribute:startLine>
                                  <attribute:endLine>
                                   <scalar:int>157</scalar:int>
                                  </attribute:endLine>
                                  <subNode:value>
                                   <scalar:string>/(.*\/).*$/</scalar:string>
                                  </subNode:value>
                                 </node:Scalar_String>
                                </subNode:value>
                                <subNode:byRef>
                                 <scalar:false/>
                                </subNode:byRef>
                               </node:Arg>
                               <node:Arg>
                                <attribute:startLine>
                                 <scalar:int>157</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>157</scalar:int>
                                </attribute:endLine>
                                <subNode:value>
                                 <node:Scalar_String>
                                  <attribute:startLine>
                                   <scalar:int>157</scalar:int>
                                  </attribute:startLine>
                                  <attribute:endLine>
                                   <scalar:int>157</scalar:int>
                                  </attribute:endLine>
                                  <subNode:value>
                                   <scalar:string>$1</scalar:string>
                                  </subNode:value>
                                 </node:Scalar_String>
                                </subNode:value>
                                <subNode:byRef>
                                 <scalar:false/>
                                </subNode:byRef>
                               </node:Arg>
                               <node:Arg>
                                <attribute:startLine>
                                 <scalar:int>157</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>157</scalar:int>
                                </attribute:endLine>
                                <subNode:value>
                                 <node:Expr_Variable>
                                  <attribute:startLine>
                                   <scalar:int>157</scalar:int>
                                  </attribute:startLine>
                                  <attribute:endLine>
                                   <scalar:int>157</scalar:int>
                                  </attribute:endLine>
                                  <subNode:name>
                                   <scalar:string>base</scalar:string>
                                  </subNode:name>
                                 </node:Expr_Variable>
                                </subNode:value>
                                <subNode:byRef>
                                 <scalar:false/>
                                </subNode:byRef>
                               </node:Arg>
                              </scalar:array>
                             </subNode:args>
                            </node:Expr_FuncCall>
                           </subNode:expr>
                          </node:Expr_Assign>
                          <node:Stmt_Return>
                           <attribute:startLine>
                            <scalar:int>158</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>158</scalar:int>
                           </attribute:endLine>
                           <subNode:expr>
                            <node:Expr_Concat>
                             <attribute:startLine>
                              <scalar:int>158</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>158</scalar:int>
                             </attribute:endLine>
                             <subNode:left>
                              <node:Expr_Variable>
                               <attribute:startLine>
                                <scalar:int>158</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>158</scalar:int>
                               </attribute:endLine>
                               <subNode:name>
                                <scalar:string>base</scalar:string>
                               </subNode:name>
                              </node:Expr_Variable>
                             </subNode:left>
                             <subNode:right>
                              <node:Expr_Variable>
                               <attribute:startLine>
                                <scalar:int>158</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>158</scalar:int>
                               </attribute:endLine>
                               <subNode:name>
                                <scalar:string>link</scalar:string>
                               </subNode:name>
                              </node:Expr_Variable>
                             </subNode:right>
                            </node:Expr_Concat>
                           </subNode:expr>
                          </node:Stmt_Return>
                         </scalar:array>
                        </subNode:stmts>
                        <subNode:elseifs>
                         <scalar:array/>
                        </subNode:elseifs>
                        <subNode:else>
                         <node:Stmt_Else>
                          <attribute:startLine>
                           <scalar:int>159</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>162</scalar:int>
                          </attribute:endLine>
                          <subNode:stmts>
                           <scalar:array>
                            <node:Stmt_Return>
                             <attribute:comments>
                              <scalar:array>
                               <comment isDocComment="false" line="160">/* Just stick it on the end */</comment>
                              </scalar:array>
                             </attribute:comments>
                             <attribute:startLine>
                              <scalar:int>161</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>161</scalar:int>
                             </attribute:endLine>
                             <subNode:expr>
                              <node:Expr_Concat>
                               <attribute:startLine>
                                <scalar:int>161</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>161</scalar:int>
                               </attribute:endLine>
                               <subNode:left>
                                <node:Expr_Variable>
                                 <attribute:startLine>
                                  <scalar:int>161</scalar:int>
                                 </attribute:startLine>
                                 <attribute:endLine>
                                  <scalar:int>161</scalar:int>
                                 </attribute:endLine>
                                 <subNode:name>
                                  <scalar:string>base</scalar:string>
                                 </subNode:name>
                                </node:Expr_Variable>
                               </subNode:left>
                               <subNode:right>
                                <node:Expr_Variable>
                                 <attribute:startLine>
                                  <scalar:int>161</scalar:int>
                                 </attribute:startLine>
                                 <attribute:endLine>
                                  <scalar:int>161</scalar:int>
                                 </attribute:endLine>
                                 <subNode:name>
                                  <scalar:string>link</scalar:string>
                                 </subNode:name>
                                </node:Expr_Variable>
                               </subNode:right>
                              </node:Expr_Concat>
                             </subNode:expr>
                            </node:Stmt_Return>
                           </scalar:array>
                          </subNode:stmts>
                         </node:Stmt_Else>
                        </subNode:else>
                        <subNode:cond>
                         <node:Expr_FuncCall>
                          <attribute:startLine>
                           <scalar:int>156</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>156</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <node:Name>
                            <attribute:startLine>
                             <scalar:int>156</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>156</scalar:int>
                            </attribute:endLine>
                            <subNode:parts>
                             <scalar:array>
                              <scalar:string>preg_match</scalar:string>
                             </scalar:array>
                            </subNode:parts>
                           </node:Name>
                          </subNode:name>
                          <subNode:args>
                           <scalar:array>
                            <node:Arg>
                             <attribute:startLine>
                              <scalar:int>156</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>156</scalar:int>
                             </attribute:endLine>
                             <subNode:value>
                              <node:Scalar_String>
                               <attribute:startLine>
                                <scalar:int>156</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>156</scalar:int>
                               </attribute:endLine>
                               <subNode:value>
                                <scalar:string>/^(?!\/$)/</scalar:string>
                               </subNode:value>
                              </node:Scalar_String>
                             </subNode:value>
                             <subNode:byRef>
                              <scalar:false/>
                             </subNode:byRef>
                            </node:Arg>
                            <node:Arg>
                             <attribute:startLine>
                              <scalar:int>156</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>156</scalar:int>
                             </attribute:endLine>
                             <subNode:value>
                              <node:Expr_Variable>
                               <attribute:startLine>
                                <scalar:int>156</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>156</scalar:int>
                               </attribute:endLine>
                               <subNode:name>
                                <scalar:string>base</scalar:string>
                               </subNode:name>
                              </node:Expr_Variable>
                             </subNode:value>
                             <subNode:byRef>
                              <scalar:false/>
                             </subNode:byRef>
                            </node:Arg>
                           </scalar:array>
                          </subNode:args>
                         </node:Expr_FuncCall>
                        </subNode:cond>
                       </node:Stmt_If>
                      </scalar:array>
                     </subNode:stmts>
                    </node:Stmt_Else>
                   </subNode:else>
                   <subNode:cond>
                    <node:Expr_FuncCall>
                     <attribute:startLine>
                      <scalar:int>146</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>146</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <node:Name>
                       <attribute:startLine>
                        <scalar:int>146</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>146</scalar:int>
                       </attribute:endLine>
                       <subNode:parts>
                        <scalar:array>
                         <scalar:string>preg_match</scalar:string>
                        </scalar:array>
                       </subNode:parts>
                      </node:Name>
                     </subNode:name>
                     <subNode:args>
                      <scalar:array>
                       <node:Arg>
                        <attribute:startLine>
                         <scalar:int>146</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>146</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <node:Scalar_String>
                          <attribute:startLine>
                           <scalar:int>146</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>146</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <scalar:string>/^\.\.\//</scalar:string>
                          </subNode:value>
                         </node:Scalar_String>
                        </subNode:value>
                        <subNode:byRef>
                         <scalar:false/>
                        </subNode:byRef>
                       </node:Arg>
                       <node:Arg>
                        <attribute:startLine>
                         <scalar:int>146</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>146</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>146</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>146</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>base</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:value>
                        <subNode:byRef>
                         <scalar:false/>
                        </subNode:byRef>
                       </node:Arg>
                      </scalar:array>
                     </subNode:args>
                    </node:Expr_FuncCall>
                   </subNode:cond>
                  </node:Stmt_If>
                 </scalar:array>
                </subNode:stmts>
               </node:Stmt_Else>
              </subNode:else>
              <subNode:cond>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>141</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>141</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>141</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>141</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>preg_match</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>141</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>141</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>141</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>141</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>/^\//</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>141</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>141</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>141</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>141</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>link</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:cond>
             </node:Stmt_If>
            </scalar:array>
           </subNode:stmts>
          </node:Stmt_Else>
         </subNode:else>
         <subNode:cond>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>139</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>139</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>139</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>139</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>139</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>139</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>139</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>139</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[A-Za-z]+:\/\//</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>139</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>139</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>139</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>139</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>link</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:cond>
        </node:Stmt_If>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>combineBases</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="165">/**
     * Determine whether we need to apply our xml:base rules
     *
     * Gets us the xml:base data and then processes that with regard
     * to our current link.
     *
     * @param   string
     * @param   DOMElement
     * @return  string
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>175</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>182</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>175</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>175</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>link</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>175</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>175</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>element</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>177</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>179</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>178</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>178</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>178</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>178</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>link</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>177</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>177</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>177</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>177</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>preg_match</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>177</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>177</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>177</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>177</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>/^[A-Za-z]+:\/\//</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>177</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>177</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>177</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>177</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>link</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>181</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>181</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>181</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>181</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>181</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>181</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>combineBases</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>181</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>181</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>181</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>181</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>181</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>181</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>element</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>baseURI</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>181</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>181</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>181</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>181</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>link</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>addBase</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="184">/**
     * Get an entry by its position in the feed, starting from zero
     *
     * As well as allowing the items to be iterated over we want to allow
     * users to be able to access a specific entry. This is one of two ways of
     * doing that, the other being by ID.
     * 
     * @param   int $offset
     * @return  XML_Feed_Parser_RSS1Element
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>194</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>211</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>194</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>194</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>offset</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>196</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>208</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>197</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>197</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>197</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>197</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>entries</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>197</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>197</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>197</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>197</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>197</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>197</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>model</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:var>
              <subNode:name>
               <scalar:string>getElementsByTagName</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>197</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>197</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_PropertyFetch>
                   <attribute:startLine>
                    <scalar:int>197</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>197</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>197</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>197</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>itemElement</scalar:string>
                   </subNode:name>
                  </node:Expr_PropertyFetch>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>198</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>207</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>199</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>199</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>199</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>199</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>xmlBase</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:expr>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>199</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>199</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_MethodCall>
                   <attribute:startLine>
                    <scalar:int>199</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>199</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>199</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>199</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>entries</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>item</scalar:string>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>199</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>199</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>199</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>199</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>offset</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                    </scalar:array>
                   </subNode:args>
                  </node:Expr_MethodCall>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>baseURI</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:expr>
              </node:Expr_Assign>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>200</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>201</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_ArrayDimFetch>
                 <attribute:startLine>
                  <scalar:int>200</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>200</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_PropertyFetch>
                   <attribute:startLine>
                    <scalar:int>200</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>200</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>200</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>200</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>entries</scalar:string>
                   </subNode:name>
                  </node:Expr_PropertyFetch>
                 </subNode:var>
                 <subNode:dim>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>200</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>200</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>offset</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:dim>
                </node:Expr_ArrayDimFetch>
               </subNode:var>
               <subNode:expr>
                <node:Expr_New>
                 <attribute:startLine>
                  <scalar:int>200</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>201</scalar:int>
                 </attribute:endLine>
                 <subNode:class>
                  <node:Expr_PropertyFetch>
                   <attribute:startLine>
                    <scalar:int>200</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>200</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>200</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>200</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>itemClass</scalar:string>
                   </subNode:name>
                  </node:Expr_PropertyFetch>
                 </subNode:class>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>201</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>201</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_MethodCall>
                      <attribute:startLine>
                       <scalar:int>201</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>201</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>201</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>201</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>entries</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>item</scalar:string>
                      </subNode:name>
                      <subNode:args>
                       <scalar:array>
                        <node:Arg>
                         <attribute:startLine>
                          <scalar:int>201</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>201</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>201</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>201</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>offset</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:value>
                         <subNode:byRef>
                          <scalar:false/>
                         </subNode:byRef>
                        </node:Arg>
                       </scalar:array>
                      </subNode:args>
                     </node:Expr_MethodCall>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>201</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>201</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>201</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>201</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>this</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>201</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>201</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>201</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>201</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>xmlBase</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_New>
               </subNode:expr>
              </node:Expr_Assign>
              <node:Stmt_If>
               <attribute:startLine>
                <scalar:int>202</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>204</scalar:int>
               </attribute:endLine>
               <subNode:stmts>
                <scalar:array>
                 <node:Expr_Assign>
                  <attribute:startLine>
                   <scalar:int>203</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>203</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_ArrayDimFetch>
                    <attribute:startLine>
                     <scalar:int>203</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>203</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_PropertyFetch>
                      <attribute:startLine>
                       <scalar:int>203</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>203</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>203</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>203</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>this</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>idMappings</scalar:string>
                      </subNode:name>
                     </node:Expr_PropertyFetch>
                    </subNode:var>
                    <subNode:dim>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>203</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>203</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>id</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:dim>
                   </node:Expr_ArrayDimFetch>
                  </subNode:var>
                  <subNode:expr>
                   <node:Expr_ArrayDimFetch>
                    <attribute:startLine>
                     <scalar:int>203</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>203</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_PropertyFetch>
                      <attribute:startLine>
                       <scalar:int>203</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>203</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>203</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>203</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>this</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>entries</scalar:string>
                      </subNode:name>
                     </node:Expr_PropertyFetch>
                    </subNode:var>
                    <subNode:dim>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>203</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>203</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>offset</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:dim>
                   </node:Expr_ArrayDimFetch>
                  </subNode:expr>
                 </node:Expr_Assign>
                </scalar:array>
               </subNode:stmts>
               <subNode:elseifs>
                <scalar:array/>
               </subNode:elseifs>
               <subNode:else>
                <scalar:null/>
               </subNode:else>
               <subNode:cond>
                <node:Expr_Assign>
                 <attribute:startLine>
                  <scalar:int>202</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>202</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>202</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>202</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>id</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:expr>
                  <node:Expr_PropertyFetch>
                   <attribute:startLine>
                    <scalar:int>202</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>202</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_ArrayDimFetch>
                     <attribute:startLine>
                      <scalar:int>202</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>202</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_PropertyFetch>
                       <attribute:startLine>
                        <scalar:int>202</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>202</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>202</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>202</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>this</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:name>
                        <scalar:string>entries</scalar:string>
                       </subNode:name>
                      </node:Expr_PropertyFetch>
                     </subNode:var>
                     <subNode:dim>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>202</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>202</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>offset</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:dim>
                    </node:Expr_ArrayDimFetch>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>id</scalar:string>
                   </subNode:name>
                  </node:Expr_PropertyFetch>
                 </subNode:expr>
                </node:Expr_Assign>
               </subNode:cond>
              </node:Stmt_If>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <node:Stmt_Else>
              <attribute:startLine>
               <scalar:int>205</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>207</scalar:int>
              </attribute:endLine>
              <subNode:stmts>
               <scalar:array>
                <node:Stmt_Throw>
                 <attribute:startLine>
                  <scalar:int>206</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>206</scalar:int>
                 </attribute:endLine>
                 <subNode:expr>
                  <node:Expr_New>
                   <attribute:startLine>
                    <scalar:int>206</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>206</scalar:int>
                   </attribute:endLine>
                   <subNode:class>
                    <node:Name_FullyQualified>
                     <attribute:startLine>
                      <scalar:int>206</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>206</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>XML_Feed_Parser_Exception</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name_FullyQualified>
                   </subNode:class>
                   <subNode:args>
                    <scalar:array>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>206</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>206</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Scalar_String>
                        <attribute:startLine>
                         <scalar:int>206</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>206</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <scalar:string>No entries found</scalar:string>
                        </subNode:value>
                       </node:Scalar_String>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                    </scalar:array>
                   </subNode:args>
                  </node:Expr_New>
                 </subNode:expr>
                </node:Stmt_Throw>
               </scalar:array>
              </subNode:stmts>
             </node:Stmt_Else>
            </subNode:else>
            <subNode:cond>
             <node:Expr_Greater>
              <attribute:startLine>
               <scalar:int>198</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>198</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>198</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>198</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>198</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>198</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>entries</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>length</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:left>
              <subNode:right>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>198</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>198</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>offset</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:right>
             </node:Expr_Greater>
            </subNode:cond>
           </node:Stmt_If>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>196</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>196</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Isset>
             <attribute:startLine>
              <scalar:int>196</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>196</scalar:int>
             </attribute:endLine>
             <subNode:vars>
              <scalar:array>
               <node:Expr_ArrayDimFetch>
                <attribute:startLine>
                 <scalar:int>196</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>196</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_PropertyFetch>
                  <attribute:startLine>
                   <scalar:int>196</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>196</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>196</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>196</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>this</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>entries</scalar:string>
                  </subNode:name>
                 </node:Expr_PropertyFetch>
                </subNode:var>
                <subNode:dim>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>196</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>196</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>offset</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:dim>
               </node:Expr_ArrayDimFetch>
              </scalar:array>
             </subNode:vars>
            </node:Expr_Isset>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>210</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>210</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_ArrayDimFetch>
           <attribute:startLine>
            <scalar:int>210</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>210</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>210</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>210</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>210</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>210</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>entries</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:var>
           <subNode:dim>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>210</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>210</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>offset</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:dim>
          </node:Expr_ArrayDimFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getEntryByOffset</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="213">/**
     * Return a date in seconds since epoch.
     *
     * Get a date construct. We use PHP's strtotime to return it as a unix datetime, which
     * is the number of seconds since 1970-01-01 00:00:00.
     * 
     * @link    http://php.net/strtotime
     * @param    string    $method        The name of the date construct we want
     * @param    array     $arguments    Included for compatibility with our __call usage
     * @return    int|false datetime
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>224</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>231</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>224</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>224</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>method</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>224</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>224</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>arguments</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>226</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>226</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>226</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>226</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>time</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>226</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>226</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>226</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>226</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>226</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>226</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>model</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:var>
           <subNode:name>
            <scalar:string>getElementsByTagName</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>226</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>226</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>226</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>226</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>method</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>227</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>229</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>228</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>228</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_ConstFetch>
              <attribute:startLine>
               <scalar:int>228</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>228</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>228</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>228</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>false</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
             </node:Expr_ConstFetch>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanOr>
           <attribute:startLine>
            <scalar:int>227</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>227</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Equal>
             <attribute:startLine>
              <scalar:int>227</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>227</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_PropertyFetch>
               <attribute:startLine>
                <scalar:int>227</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>227</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>227</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>227</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>time</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>length</scalar:string>
               </subNode:name>
              </node:Expr_PropertyFetch>
             </subNode:left>
             <subNode:right>
              <node:Scalar_LNumber>
               <attribute:startLine>
                <scalar:int>227</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>227</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <scalar:int>0</scalar:int>
               </subNode:value>
              </node:Scalar_LNumber>
             </subNode:right>
            </node:Expr_Equal>
           </subNode:left>
           <subNode:right>
            <node:Expr_Empty>
             <attribute:startLine>
              <scalar:int>227</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>227</scalar:int>
             </attribute:endLine>
             <subNode:expr>
              <node:Expr_PropertyFetch>
               <attribute:startLine>
                <scalar:int>227</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>227</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_MethodCall>
                 <attribute:startLine>
                  <scalar:int>227</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>227</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>227</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>227</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>time</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>item</scalar:string>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>227</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>227</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Scalar_LNumber>
                      <attribute:startLine>
                       <scalar:int>227</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>227</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <scalar:int>0</scalar:int>
                      </subNode:value>
                     </node:Scalar_LNumber>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_MethodCall>
               </subNode:var>
               <subNode:name>
                <scalar:string>nodeValue</scalar:string>
               </subNode:name>
              </node:Expr_PropertyFetch>
             </subNode:expr>
            </node:Expr_Empty>
           </subNode:right>
          </node:Expr_BooleanOr>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>230</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>230</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>230</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>230</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>230</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>230</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>strtotime</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>230</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>230</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>230</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>230</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_MethodCall>
                  <attribute:startLine>
                   <scalar:int>230</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>230</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>230</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>230</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>time</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>item</scalar:string>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>230</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>230</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Scalar_LNumber>
                       <attribute:startLine>
                        <scalar:int>230</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>230</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:int>0</scalar:int>
                       </subNode:value>
                      </node:Scalar_LNumber>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_MethodCall>
                </subNode:var>
                <subNode:name>
                 <scalar:string>nodeValue</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getDate</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="233">/**
     * Get a text construct. 
     *
     * @param    string    $method    The name of the text construct we want
     * @param    array     $arguments    Included for compatibility with our __call usage
     * @return    string
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>240</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>248</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>240</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>240</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>method</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>240</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>240</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>arguments</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_Array>
           <attribute:startLine>
            <scalar:int>240</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>240</scalar:int>
           </attribute:endLine>
           <subNode:items>
            <scalar:array/>
           </subNode:items>
          </node:Expr_Array>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>242</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>242</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>242</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>242</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>tags</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>242</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>242</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>242</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>242</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>242</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>242</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>model</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:var>
           <subNode:name>
            <scalar:string>getElementsByTagName</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>242</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>242</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>242</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>242</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>method</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>243</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>246</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>244</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>244</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>244</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>244</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>value</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>244</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>244</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_MethodCall>
                <attribute:startLine>
                 <scalar:int>244</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>244</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>244</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>244</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>tags</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>item</scalar:string>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>244</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>244</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Scalar_LNumber>
                     <attribute:startLine>
                      <scalar:int>244</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>244</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:int>0</scalar:int>
                     </subNode:value>
                    </node:Scalar_LNumber>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_MethodCall>
              </subNode:var>
              <subNode:name>
               <scalar:string>nodeValue</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>245</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>245</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>245</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>245</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>value</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Greater>
           <attribute:startLine>
            <scalar:int>243</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>243</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>243</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>243</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>243</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>243</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>tags</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>length</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:left>
           <subNode:right>
            <node:Scalar_LNumber>
             <attribute:startLine>
              <scalar:int>243</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>243</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:int>0</scalar:int>
             </subNode:value>
            </node:Scalar_LNumber>
           </subNode:right>
          </node:Expr_Greater>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>247</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>247</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>247</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>247</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>247</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>247</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>false</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getText</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="250">/**
     * Apply various rules to retrieve category data.
     *
     * There is no single way of declaring a category in RSS1/1.1 as there is in RSS2 
     * and  Atom. Instead the usual approach is to use the dublin core namespace to 
     * declare  categories. For example delicious use both: 
     * &lt;dc:subject&gt;PEAR&lt;/dc:subject&gt; and: &lt;taxo:topics&gt;&lt;rdf:Bag&gt;
     * &lt;rdf:li resource=&quot;http://del.icio.us/tag/PEAR&quot; /&gt;&lt;/rdf:Bag&gt;&lt;/taxo:topics&gt;
     * to declare a categorisation of 'PEAR'.
     *
     * We need to be sensitive to this where possible.
     *
     * @param    string    $call    for compatibility with our overloading
     * @param   array $arguments - arg 0 is the offset, arg 1 is whether to return as array
     * @return  string|array|false
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>266</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>282</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>266</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>266</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>call</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>266</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>266</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>arguments</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>268</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>268</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>268</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>268</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>categories</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>268</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>268</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>268</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>268</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>268</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>268</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>model</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:var>
           <subNode:name>
            <scalar:string>getElementsByTagName</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>268</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>268</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>268</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>268</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>subject</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>269</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>269</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>269</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>269</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>offset</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Ternary>
           <attribute:startLine>
            <scalar:int>269</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>269</scalar:int>
           </attribute:endLine>
           <subNode:cond>
            <node:Expr_Empty>
             <attribute:startLine>
              <scalar:int>269</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>269</scalar:int>
             </attribute:endLine>
             <subNode:expr>
              <node:Expr_ArrayDimFetch>
               <attribute:startLine>
                <scalar:int>269</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>269</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>269</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>269</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>arguments</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:dim>
                <node:Scalar_LNumber>
                 <attribute:startLine>
                  <scalar:int>269</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>269</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:int>0</scalar:int>
                 </subNode:value>
                </node:Scalar_LNumber>
               </subNode:dim>
              </node:Expr_ArrayDimFetch>
             </subNode:expr>
            </node:Expr_Empty>
           </subNode:cond>
           <subNode:if>
            <node:Scalar_LNumber>
             <attribute:startLine>
              <scalar:int>269</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>269</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:int>0</scalar:int>
             </subNode:value>
            </node:Scalar_LNumber>
           </subNode:if>
           <subNode:else>
            <node:Expr_ArrayDimFetch>
             <attribute:startLine>
              <scalar:int>269</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>269</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>269</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>269</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>arguments</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:dim>
              <node:Scalar_LNumber>
               <attribute:startLine>
                <scalar:int>269</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>269</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <scalar:int>0</scalar:int>
               </subNode:value>
              </node:Scalar_LNumber>
             </subNode:dim>
            </node:Expr_ArrayDimFetch>
           </subNode:else>
          </node:Expr_Ternary>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>270</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>270</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>270</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>270</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>array</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Ternary>
           <attribute:startLine>
            <scalar:int>270</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>270</scalar:int>
           </attribute:endLine>
           <subNode:cond>
            <node:Expr_Empty>
             <attribute:startLine>
              <scalar:int>270</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>270</scalar:int>
             </attribute:endLine>
             <subNode:expr>
              <node:Expr_ArrayDimFetch>
               <attribute:startLine>
                <scalar:int>270</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>270</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>270</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>270</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>arguments</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:dim>
                <node:Scalar_LNumber>
                 <attribute:startLine>
                  <scalar:int>270</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>270</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:int>1</scalar:int>
                 </subNode:value>
                </node:Scalar_LNumber>
               </subNode:dim>
              </node:Expr_ArrayDimFetch>
             </subNode:expr>
            </node:Expr_Empty>
           </subNode:cond>
           <subNode:if>
            <node:Expr_ConstFetch>
             <attribute:startLine>
              <scalar:int>270</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>270</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>270</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>270</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>false</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
            </node:Expr_ConstFetch>
           </subNode:if>
           <subNode:else>
            <node:Expr_ConstFetch>
             <attribute:startLine>
              <scalar:int>270</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>270</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>270</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>270</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>true</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
            </node:Expr_ConstFetch>
           </subNode:else>
          </node:Expr_Ternary>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>271</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>273</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>272</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>272</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_ConstFetch>
              <attribute:startLine>
               <scalar:int>272</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>272</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>272</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>272</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>false</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
             </node:Expr_ConstFetch>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_SmallerOrEqual>
           <attribute:startLine>
            <scalar:int>271</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>271</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>271</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>271</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>271</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>271</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>categories</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>length</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:left>
           <subNode:right>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>271</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>271</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>offset</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:right>
          </node:Expr_SmallerOrEqual>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>274</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>280</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>275</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>275</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>275</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>275</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>list</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Array>
              <attribute:startLine>
               <scalar:int>275</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>275</scalar:int>
              </attribute:endLine>
              <subNode:items>
               <scalar:array/>
              </subNode:items>
             </node:Expr_Array>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Stmt_Foreach>
            <attribute:startLine>
             <scalar:int>276</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>278</scalar:int>
            </attribute:endLine>
            <subNode:keyVar>
             <scalar:null/>
            </subNode:keyVar>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_FuncCall>
               <attribute:startLine>
                <scalar:int>277</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>277</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>277</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>277</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>array_push</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>277</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>277</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>277</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>277</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>list</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>277</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>277</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_PropertyFetch>
                    <attribute:startLine>
                     <scalar:int>277</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>277</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>277</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>277</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>category</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>nodeValue</scalar:string>
                    </subNode:name>
                   </node:Expr_PropertyFetch>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_FuncCall>
             </scalar:array>
            </subNode:stmts>
            <subNode:expr>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>276</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>276</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>categories</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:expr>
            <subNode:valueVar>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>276</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>276</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>category</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:valueVar>
           </node:Stmt_Foreach>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>279</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>279</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>279</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>279</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>list</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>274</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>274</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>array</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>281</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>281</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>281</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>281</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_MethodCall>
             <attribute:startLine>
              <scalar:int>281</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>281</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>281</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>281</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>categories</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>item</scalar:string>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>281</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>281</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>281</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>281</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>offset</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_MethodCall>
           </subNode:var>
           <subNode:name>
            <scalar:string>nodeValue</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getCategory</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="284">/**
     * Count occurrences of an element
     *
     * This function will tell us how many times the element $type
     * appears at this level of the feed.
     * 
     * @param    string    $type    the element we want to get a count of
     * @return    int
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>293</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>299</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>293</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>293</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>type</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>295</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>297</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>296</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>296</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>296</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>296</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>296</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>296</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>tags</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>length</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Assign>
           <attribute:startLine>
            <scalar:int>295</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>295</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>295</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>295</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>tags</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:expr>
            <node:Expr_MethodCall>
             <attribute:startLine>
              <scalar:int>295</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>295</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_PropertyFetch>
               <attribute:startLine>
                <scalar:int>295</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>295</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>295</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>295</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>this</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>model</scalar:string>
               </subNode:name>
              </node:Expr_PropertyFetch>
             </subNode:var>
             <subNode:name>
              <scalar:string>getElementsByTagName</scalar:string>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>295</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>295</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>295</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>295</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>type</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_MethodCall>
           </subNode:expr>
          </node:Expr_Assign>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>298</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>298</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>298</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>298</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>0</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>count</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="301">/**
     * Part of our xml:base processing code
     *
     * We need a couple of methods to access XHTML content stored in feeds. 
     * This is because we dereference all xml:base references before returning
     * the element. This method handles the attributes.
     *
     * @param   DOMElement $node    The DOM node we are iterating over
     * @return  string
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>311</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>326</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>311</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>311</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>node</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>312</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>312</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>312</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>312</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>return</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>312</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>312</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string></scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_Foreach>
         <attribute:startLine>
          <scalar:int>313</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>321</scalar:int>
         </attribute:endLine>
         <subNode:keyVar>
          <scalar:null/>
         </subNode:keyVar>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>314</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>316</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>315</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>315</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>315</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>315</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>315</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>315</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>attribute</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>value</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:var>
               <subNode:expr>
                <node:Expr_MethodCall>
                 <attribute:startLine>
                  <scalar:int>315</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>315</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>315</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>315</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>addBase</scalar:string>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>315</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>315</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_FuncCall>
                      <attribute:startLine>
                       <scalar:int>315</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>315</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <node:Name>
                        <attribute:startLine>
                         <scalar:int>315</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>315</scalar:int>
                        </attribute:endLine>
                        <subNode:parts>
                         <scalar:array>
                          <scalar:string>htmlentities</scalar:string>
                         </scalar:array>
                        </subNode:parts>
                       </node:Name>
                      </subNode:name>
                      <subNode:args>
                       <scalar:array>
                        <node:Arg>
                         <attribute:startLine>
                          <scalar:int>315</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>315</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <node:Expr_PropertyFetch>
                           <attribute:startLine>
                            <scalar:int>315</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>315</scalar:int>
                           </attribute:endLine>
                           <subNode:var>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>315</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>315</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>attribute</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:var>
                           <subNode:name>
                            <scalar:string>value</scalar:string>
                           </subNode:name>
                          </node:Expr_PropertyFetch>
                         </subNode:value>
                         <subNode:byRef>
                          <scalar:false/>
                         </subNode:byRef>
                        </node:Arg>
                        <node:Arg>
                         <attribute:startLine>
                          <scalar:int>315</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>315</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <node:Expr_ConstFetch>
                           <attribute:startLine>
                            <scalar:int>315</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>315</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <node:Name>
                             <attribute:startLine>
                              <scalar:int>315</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>315</scalar:int>
                             </attribute:endLine>
                             <subNode:parts>
                              <scalar:array>
                               <scalar:string>NULL</scalar:string>
                              </scalar:array>
                             </subNode:parts>
                            </node:Name>
                           </subNode:name>
                          </node:Expr_ConstFetch>
                         </subNode:value>
                         <subNode:byRef>
                          <scalar:false/>
                         </subNode:byRef>
                        </node:Arg>
                        <node:Arg>
                         <attribute:startLine>
                          <scalar:int>315</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>315</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <node:Scalar_String>
                           <attribute:startLine>
                            <scalar:int>315</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>315</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <scalar:string>utf-8</scalar:string>
                           </subNode:value>
                          </node:Scalar_String>
                         </subNode:value>
                         <subNode:byRef>
                          <scalar:false/>
                         </subNode:byRef>
                        </node:Arg>
                       </scalar:array>
                      </subNode:args>
                     </node:Expr_FuncCall>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>315</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>315</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>315</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>315</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>attribute</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_MethodCall>
               </subNode:expr>
              </node:Expr_Assign>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_LogicalOr>
              <attribute:startLine>
               <scalar:int>314</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>314</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_Equal>
                <attribute:startLine>
                 <scalar:int>314</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>314</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Expr_PropertyFetch>
                  <attribute:startLine>
                   <scalar:int>314</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>314</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>314</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>314</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>attribute</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>name</scalar:string>
                  </subNode:name>
                 </node:Expr_PropertyFetch>
                </subNode:left>
                <subNode:right>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>314</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>314</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>src</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:right>
               </node:Expr_Equal>
              </subNode:left>
              <subNode:right>
               <node:Expr_Equal>
                <attribute:startLine>
                 <scalar:int>314</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>314</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Expr_PropertyFetch>
                  <attribute:startLine>
                   <scalar:int>314</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>314</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>314</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>314</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>attribute</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>name</scalar:string>
                  </subNode:name>
                 </node:Expr_PropertyFetch>
                </subNode:left>
                <subNode:right>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>314</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>314</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>href</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:right>
               </node:Expr_Equal>
              </subNode:right>
             </node:Expr_LogicalOr>
            </subNode:cond>
           </node:Stmt_If>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>317</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>319</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_Continue>
               <attribute:startLine>
                <scalar:int>318</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>318</scalar:int>
               </attribute:endLine>
               <subNode:num>
                <scalar:null/>
               </subNode:num>
              </node:Stmt_Continue>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_Equal>
              <attribute:startLine>
               <scalar:int>317</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>317</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>317</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>317</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>317</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>317</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>attribute</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>name</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:left>
              <subNode:right>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>317</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>317</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>base</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:right>
             </node:Expr_Equal>
            </subNode:cond>
           </node:Stmt_If>
           <node:Expr_AssignConcat>
            <attribute:startLine>
             <scalar:int>320</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>320</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>320</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>320</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>return</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Concat>
              <attribute:startLine>
               <scalar:int>320</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>320</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_Concat>
                <attribute:startLine>
                 <scalar:int>320</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>320</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Expr_Concat>
                  <attribute:startLine>
                   <scalar:int>320</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>320</scalar:int>
                  </attribute:endLine>
                  <subNode:left>
                   <node:Expr_PropertyFetch>
                    <attribute:startLine>
                     <scalar:int>320</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>320</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>320</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>320</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>attribute</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>name</scalar:string>
                    </subNode:name>
                   </node:Expr_PropertyFetch>
                  </subNode:left>
                  <subNode:right>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>320</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>320</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>=&quot;</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:right>
                 </node:Expr_Concat>
                </subNode:left>
                <subNode:right>
                 <node:Expr_FuncCall>
                  <attribute:startLine>
                   <scalar:int>320</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>320</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <node:Name>
                    <attribute:startLine>
                     <scalar:int>320</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>320</scalar:int>
                    </attribute:endLine>
                    <subNode:parts>
                     <scalar:array>
                      <scalar:string>htmlentities</scalar:string>
                     </scalar:array>
                    </subNode:parts>
                   </node:Name>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>320</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>320</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Expr_PropertyFetch>
                       <attribute:startLine>
                        <scalar:int>320</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>320</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>320</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>320</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>attribute</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:name>
                        <scalar:string>value</scalar:string>
                       </subNode:name>
                      </node:Expr_PropertyFetch>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>320</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>320</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Expr_ConstFetch>
                       <attribute:startLine>
                        <scalar:int>320</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>320</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <node:Name>
                         <attribute:startLine>
                          <scalar:int>320</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>320</scalar:int>
                         </attribute:endLine>
                         <subNode:parts>
                          <scalar:array>
                           <scalar:string>NULL</scalar:string>
                          </scalar:array>
                         </subNode:parts>
                        </node:Name>
                       </subNode:name>
                      </node:Expr_ConstFetch>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>320</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>320</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>320</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>320</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>utf-8</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_FuncCall>
                </subNode:right>
               </node:Expr_Concat>
              </subNode:left>
              <subNode:right>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>320</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>320</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>&quot; </scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:right>
             </node:Expr_Concat>
            </subNode:expr>
           </node:Expr_AssignConcat>
          </scalar:array>
         </subNode:stmts>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>313</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>313</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>313</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>313</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>node</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>attributes</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
         <subNode:valueVar>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>313</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>313</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>attribute</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:valueVar>
        </node:Stmt_Foreach>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>322</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>324</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>323</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>323</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_Concat>
              <attribute:startLine>
               <scalar:int>323</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>323</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>323</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>323</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string> </scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:left>
              <subNode:right>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>323</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>323</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>323</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>323</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>trim</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>323</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>323</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>323</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>323</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>return</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:right>
             </node:Expr_Concat>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>322</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>322</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Empty>
             <attribute:startLine>
              <scalar:int>322</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>322</scalar:int>
             </attribute:endLine>
             <subNode:expr>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>322</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>322</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>return</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:expr>
            </node:Expr_Empty>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>325</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>325</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>325</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>325</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string></scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>processXHTMLAttributes</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="328">/**
     * Convert HTML entities based on the current character set.
     * 
     * @param String
     * @return String
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>334</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>347</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>334</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>334</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>node</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>336</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>343</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>337</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>337</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>337</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>337</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>current_encoding</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>337</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>337</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>337</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>337</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>337</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>337</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>node</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>ownerDocument</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:var>
              <subNode:name>
               <scalar:string>encoding</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>338</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>338</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>338</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>338</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>value</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>338</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>338</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>338</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>338</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>iconv</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>338</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>338</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>338</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>338</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>current_encoding</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>338</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>338</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>338</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>338</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>UTF-8</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>338</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>338</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_PropertyFetch>
                   <attribute:startLine>
                    <scalar:int>338</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>338</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>338</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>338</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>node</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>nodeValue</scalar:string>
                   </subNode:name>
                  </node:Expr_PropertyFetch>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <node:Stmt_Else>
           <attribute:startLine>
            <scalar:int>339</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>343</scalar:int>
           </attribute:endLine>
           <subNode:stmts>
            <scalar:array>
             <node:Stmt_If>
              <attribute:startLine>
               <scalar:int>339</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>343</scalar:int>
              </attribute:endLine>
              <subNode:stmts>
               <scalar:array>
                <node:Expr_Assign>
                 <attribute:startLine>
                  <scalar:int>340</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>340</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>340</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>340</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>value</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:expr>
                  <node:Expr_FuncCall>
                   <attribute:startLine>
                    <scalar:int>340</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>340</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <node:Name>
                     <attribute:startLine>
                      <scalar:int>340</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>340</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>utf8_encode</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>340</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>340</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_PropertyFetch>
                        <attribute:startLine>
                         <scalar:int>340</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>340</scalar:int>
                        </attribute:endLine>
                        <subNode:var>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>340</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>340</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>node</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:var>
                        <subNode:name>
                         <scalar:string>nodeValue</scalar:string>
                        </subNode:name>
                       </node:Expr_PropertyFetch>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                    </scalar:array>
                   </subNode:args>
                  </node:Expr_FuncCall>
                 </subNode:expr>
                </node:Expr_Assign>
               </scalar:array>
              </subNode:stmts>
              <subNode:elseifs>
               <scalar:array/>
              </subNode:elseifs>
              <subNode:else>
               <node:Stmt_Else>
                <attribute:startLine>
                 <scalar:int>341</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>343</scalar:int>
                </attribute:endLine>
                <subNode:stmts>
                 <scalar:array>
                  <node:Expr_Assign>
                   <attribute:startLine>
                    <scalar:int>342</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>342</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>342</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>342</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>value</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:expr>
                    <node:Expr_PropertyFetch>
                     <attribute:startLine>
                      <scalar:int>342</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>342</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>342</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>342</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>node</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>nodeValue</scalar:string>
                     </subNode:name>
                    </node:Expr_PropertyFetch>
                   </subNode:expr>
                  </node:Expr_Assign>
                 </scalar:array>
                </subNode:stmts>
               </node:Stmt_Else>
              </subNode:else>
              <subNode:cond>
               <node:Expr_Equal>
                <attribute:startLine>
                 <scalar:int>339</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>339</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>339</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>339</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>current_encoding</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:left>
                <subNode:right>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>339</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>339</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>iso-8859-1</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:right>
               </node:Expr_Equal>
              </subNode:cond>
             </node:Stmt_If>
            </scalar:array>
           </subNode:stmts>
          </node:Stmt_Else>
         </subNode:else>
         <subNode:cond>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>336</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>336</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>336</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>336</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>function_exists</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>336</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>336</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>336</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>336</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>iconv</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>345</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>345</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>345</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>345</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>decoded</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>345</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>345</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>345</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>345</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>html_entity_decode</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>345</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>345</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>345</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>345</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>value</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>345</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>345</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_ConstFetch>
                <attribute:startLine>
                 <scalar:int>345</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>345</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>345</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>345</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>NULL</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
               </node:Expr_ConstFetch>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>345</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>345</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>345</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>345</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>UTF-8</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>346</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>346</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>346</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>346</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>346</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>346</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>htmlentities</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>346</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>346</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>346</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>346</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>decoded</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>346</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>346</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_ConstFetch>
                <attribute:startLine>
                 <scalar:int>346</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>346</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>346</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>346</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>NULL</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
               </node:Expr_ConstFetch>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>346</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>346</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>346</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>346</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>UTF-8</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>processEntitiesForNodeValue</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="349">/**
     * Part of our xml:base processing code
     *
     * We need a couple of methods to access XHTML content stored in feeds. 
     * This is because we dereference all xml:base references before returning
     * the element. This method recurs through the tree descending from the node
     * and builds our string.
     *
     * @param   DOMElement $node    The DOM node we are processing
     * @return   string
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>360</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>387</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>360</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>360</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>node</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>362</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>362</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>362</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>362</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>content</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>362</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>362</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string></scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:comments>
          <scalar:array>
           <comment isDocComment="false" line="364">/* Add the opening of this node to the content */</comment>
          </scalar:array>
         </attribute:comments>
         <attribute:startLine>
          <scalar:int>365</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>368</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_AssignConcat>
            <attribute:startLine>
             <scalar:int>366</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>367</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>366</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>366</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>content</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Concat>
              <attribute:startLine>
               <scalar:int>366</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>367</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_Concat>
                <attribute:startLine>
                 <scalar:int>366</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>367</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Expr_Concat>
                  <attribute:startLine>
                   <scalar:int>366</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>366</scalar:int>
                  </attribute:endLine>
                  <subNode:left>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>366</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>366</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>&lt;</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:left>
                  <subNode:right>
                   <node:Expr_PropertyFetch>
                    <attribute:startLine>
                     <scalar:int>366</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>366</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>366</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>366</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>node</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>tagName</scalar:string>
                    </subNode:name>
                   </node:Expr_PropertyFetch>
                  </subNode:right>
                 </node:Expr_Concat>
                </subNode:left>
                <subNode:right>
                 <node:Expr_MethodCall>
                  <attribute:startLine>
                   <scalar:int>367</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>367</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>367</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>367</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>this</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>processXHTMLAttributes</scalar:string>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>367</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>367</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>367</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>367</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>node</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_MethodCall>
                </subNode:right>
               </node:Expr_Concat>
              </subNode:left>
              <subNode:right>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>367</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>367</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>&gt;</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:right>
             </node:Expr_Concat>
            </subNode:expr>
           </node:Expr_AssignConcat>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Instanceof>
           <attribute:startLine>
            <scalar:int>365</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>365</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>365</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>365</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>node</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:expr>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>365</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>365</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>DOMElement</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
          </node:Expr_Instanceof>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_If>
         <attribute:comments>
          <scalar:array>
           <comment isDocComment="false" line="370">/* Process children */</comment>
          </scalar:array>
         </attribute:comments>
         <attribute:startLine>
          <scalar:int>371</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>375</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Foreach>
            <attribute:startLine>
             <scalar:int>372</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>374</scalar:int>
            </attribute:endLine>
            <subNode:keyVar>
             <scalar:null/>
            </subNode:keyVar>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_AssignConcat>
               <attribute:startLine>
                <scalar:int>373</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>373</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>373</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>373</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>content</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:expr>
                <node:Expr_MethodCall>
                 <attribute:startLine>
                  <scalar:int>373</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>373</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>373</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>373</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>traverseNode</scalar:string>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>373</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>373</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>373</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>373</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>child</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_MethodCall>
               </subNode:expr>
              </node:Expr_AssignConcat>
             </scalar:array>
            </subNode:stmts>
            <subNode:expr>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>372</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>372</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>372</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>372</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>node</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>childNodes</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:expr>
            <subNode:valueVar>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>372</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>372</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>child</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:valueVar>
           </node:Stmt_Foreach>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>371</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>371</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>371</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>371</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>node</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>hasChildNodes</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>377</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>379</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_AssignConcat>
            <attribute:startLine>
             <scalar:int>378</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>378</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>378</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>378</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>content</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>378</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>378</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>378</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>378</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>processEntitiesForNodeValue</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>378</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>378</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>378</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>378</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>node</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:expr>
           </node:Expr_AssignConcat>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Instanceof>
           <attribute:startLine>
            <scalar:int>377</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>377</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>377</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>377</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>node</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:expr>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>377</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>377</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>DOMText</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
          </node:Expr_Instanceof>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_If>
         <attribute:comments>
          <scalar:array>
           <comment isDocComment="false" line="381">/* Add the closing of this node to the content */</comment>
          </scalar:array>
         </attribute:comments>
         <attribute:startLine>
          <scalar:int>382</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>384</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_AssignConcat>
            <attribute:startLine>
             <scalar:int>383</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>383</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>383</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>383</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>content</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Concat>
              <attribute:startLine>
               <scalar:int>383</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>383</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_Concat>
                <attribute:startLine>
                 <scalar:int>383</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>383</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>383</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>383</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>&lt;/</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:left>
                <subNode:right>
                 <node:Expr_PropertyFetch>
                  <attribute:startLine>
                   <scalar:int>383</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>383</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>383</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>383</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>node</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>tagName</scalar:string>
                  </subNode:name>
                 </node:Expr_PropertyFetch>
                </subNode:right>
               </node:Expr_Concat>
              </subNode:left>
              <subNode:right>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>383</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>383</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>&gt;</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:right>
             </node:Expr_Concat>
            </subNode:expr>
           </node:Expr_AssignConcat>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Instanceof>
           <attribute:startLine>
            <scalar:int>382</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>382</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>382</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>382</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>node</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:expr>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>382</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>382</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>DOMElement</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
          </node:Expr_Instanceof>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>386</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>386</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>386</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>386</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>content</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>traverseNode</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="389">/**
     * Get content from RSS feeds (atom has its own implementation)
     *
     * The official way to include full content in an RSS1 entry is to use
     * the content module's element 'encoded', and RSS2 feeds often duplicate that.
     * Often, however, the 'description' element is used instead. We will offer that 
     * as a fallback. Atom uses its own approach and overrides this method.
     *
     * @return  string|false
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>399</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>423</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>401</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>401</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>401</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>401</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>options</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Array>
           <attribute:startLine>
            <scalar:int>401</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>401</scalar:int>
           </attribute:endLine>
           <subNode:items>
            <scalar:array>
             <node:Expr_ArrayItem>
              <attribute:startLine>
               <scalar:int>401</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>401</scalar:int>
              </attribute:endLine>
              <subNode:key>
               <scalar:null/>
              </subNode:key>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>401</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>401</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>encoded</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Expr_ArrayItem>
             <node:Expr_ArrayItem>
              <attribute:startLine>
               <scalar:int>401</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>401</scalar:int>
              </attribute:endLine>
              <subNode:key>
               <scalar:null/>
              </subNode:key>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>401</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>401</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>description</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Expr_ArrayItem>
            </scalar:array>
           </subNode:items>
          </node:Expr_Array>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_Foreach>
         <attribute:startLine>
          <scalar:int>402</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>421</scalar:int>
         </attribute:endLine>
         <subNode:keyVar>
          <scalar:null/>
         </subNode:keyVar>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>403</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>403</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>403</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>403</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>test</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>403</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>403</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>403</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>403</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>403</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>403</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>model</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:var>
              <subNode:name>
               <scalar:string>getElementsByTagName</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>403</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>403</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>403</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>403</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>element</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>404</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>406</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_Continue>
               <attribute:startLine>
                <scalar:int>405</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>405</scalar:int>
               </attribute:endLine>
               <subNode:num>
                <scalar:null/>
               </subNode:num>
              </node:Stmt_Continue>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_Equal>
              <attribute:startLine>
               <scalar:int>404</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>404</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>404</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>404</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>404</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>404</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>test</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>length</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:left>
              <subNode:right>
               <node:Scalar_LNumber>
                <attribute:startLine>
                 <scalar:int>404</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>404</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:int>0</scalar:int>
                </subNode:value>
               </node:Scalar_LNumber>
              </subNode:right>
             </node:Expr_Equal>
            </subNode:cond>
           </node:Stmt_If>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>407</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>420</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>408</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>408</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>408</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>408</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>value</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:expr>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>408</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>408</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string></scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:expr>
              </node:Expr_Assign>
              <node:Stmt_Foreach>
               <attribute:startLine>
                <scalar:int>409</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>416</scalar:int>
               </attribute:endLine>
               <subNode:keyVar>
                <scalar:null/>
               </subNode:keyVar>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
               <subNode:stmts>
                <scalar:array>
                 <node:Stmt_If>
                  <attribute:startLine>
                   <scalar:int>410</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>415</scalar:int>
                  </attribute:endLine>
                  <subNode:stmts>
                   <scalar:array>
                    <node:Expr_AssignConcat>
                     <attribute:startLine>
                      <scalar:int>411</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>411</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>411</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>411</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>value</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:expr>
                      <node:Expr_PropertyFetch>
                       <attribute:startLine>
                        <scalar:int>411</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>411</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>411</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>411</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>child</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:name>
                        <scalar:string>nodeValue</scalar:string>
                       </subNode:name>
                      </node:Expr_PropertyFetch>
                     </subNode:expr>
                    </node:Expr_AssignConcat>
                   </scalar:array>
                  </subNode:stmts>
                  <subNode:elseifs>
                   <scalar:array/>
                  </subNode:elseifs>
                  <subNode:else>
                   <node:Stmt_Else>
                    <attribute:startLine>
                     <scalar:int>412</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>415</scalar:int>
                    </attribute:endLine>
                    <subNode:stmts>
                     <scalar:array>
                      <node:Expr_Assign>
                       <attribute:startLine>
                        <scalar:int>413</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>413</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>413</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>413</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>simple</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:expr>
                        <node:Expr_FuncCall>
                         <attribute:startLine>
                          <scalar:int>413</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>413</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <node:Name>
                           <attribute:startLine>
                            <scalar:int>413</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>413</scalar:int>
                           </attribute:endLine>
                           <subNode:parts>
                            <scalar:array>
                             <scalar:string>simplexml_import_dom</scalar:string>
                            </scalar:array>
                           </subNode:parts>
                          </node:Name>
                         </subNode:name>
                         <subNode:args>
                          <scalar:array>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>413</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>413</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_Variable>
                              <attribute:startLine>
                               <scalar:int>413</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>413</scalar:int>
                              </attribute:endLine>
                              <subNode:name>
                               <scalar:string>child</scalar:string>
                              </subNode:name>
                             </node:Expr_Variable>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                          </scalar:array>
                         </subNode:args>
                        </node:Expr_FuncCall>
                       </subNode:expr>
                      </node:Expr_Assign>
                      <node:Expr_AssignConcat>
                       <attribute:startLine>
                        <scalar:int>414</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>414</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>414</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>414</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>value</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:expr>
                        <node:Expr_MethodCall>
                         <attribute:startLine>
                          <scalar:int>414</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>414</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>414</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>414</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>simple</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>asXML</scalar:string>
                         </subNode:name>
                         <subNode:args>
                          <scalar:array/>
                         </subNode:args>
                        </node:Expr_MethodCall>
                       </subNode:expr>
                      </node:Expr_AssignConcat>
                     </scalar:array>
                    </subNode:stmts>
                   </node:Stmt_Else>
                  </subNode:else>
                  <subNode:cond>
                   <node:Expr_Instanceof>
                    <attribute:startLine>
                     <scalar:int>410</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>410</scalar:int>
                    </attribute:endLine>
                    <subNode:expr>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>410</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>410</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>child</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:expr>
                    <subNode:class>
                     <node:Name_FullyQualified>
                      <attribute:startLine>
                       <scalar:int>410</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>410</scalar:int>
                      </attribute:endLine>
                      <subNode:parts>
                       <scalar:array>
                        <scalar:string>DOMText</scalar:string>
                       </scalar:array>
                      </subNode:parts>
                     </node:Name_FullyQualified>
                    </subNode:class>
                   </node:Expr_Instanceof>
                  </subNode:cond>
                 </node:Stmt_If>
                </scalar:array>
               </subNode:stmts>
               <subNode:expr>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>409</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>409</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_MethodCall>
                   <attribute:startLine>
                    <scalar:int>409</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>409</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>409</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>409</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>test</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>item</scalar:string>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>409</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>409</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Scalar_LNumber>
                        <attribute:startLine>
                         <scalar:int>409</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>409</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <scalar:int>0</scalar:int>
                        </subNode:value>
                       </node:Scalar_LNumber>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                    </scalar:array>
                   </subNode:args>
                  </node:Expr_MethodCall>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>childNodes</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:expr>
               <subNode:valueVar>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>409</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>409</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>child</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:valueVar>
              </node:Stmt_Foreach>
              <node:Stmt_Return>
               <attribute:startLine>
                <scalar:int>417</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>417</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>417</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>417</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>value</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:expr>
              </node:Stmt_Return>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <node:Stmt_Else>
              <attribute:startLine>
               <scalar:int>418</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>420</scalar:int>
              </attribute:endLine>
              <subNode:stmts>
               <scalar:array>
                <node:Stmt_If>
                 <attribute:startLine>
                  <scalar:int>418</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>420</scalar:int>
                 </attribute:endLine>
                 <subNode:stmts>
                  <scalar:array>
                   <node:Stmt_Return>
                    <attribute:startLine>
                     <scalar:int>419</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>419</scalar:int>
                    </attribute:endLine>
                    <subNode:expr>
                     <node:Expr_PropertyFetch>
                      <attribute:startLine>
                       <scalar:int>419</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>419</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_MethodCall>
                        <attribute:startLine>
                         <scalar:int>419</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>419</scalar:int>
                        </attribute:endLine>
                        <subNode:var>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>419</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>419</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>test</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:var>
                        <subNode:name>
                         <scalar:string>item</scalar:string>
                        </subNode:name>
                        <subNode:args>
                         <scalar:array>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>419</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>419</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Scalar_LNumber>
                             <attribute:startLine>
                              <scalar:int>419</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>419</scalar:int>
                             </attribute:endLine>
                             <subNode:value>
                              <scalar:int>0</scalar:int>
                             </subNode:value>
                            </node:Scalar_LNumber>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                         </scalar:array>
                        </subNode:args>
                       </node:Expr_MethodCall>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>nodeValue</scalar:string>
                      </subNode:name>
                     </node:Expr_PropertyFetch>
                    </subNode:expr>
                   </node:Stmt_Return>
                  </scalar:array>
                 </subNode:stmts>
                 <subNode:elseifs>
                  <scalar:array/>
                 </subNode:elseifs>
                 <subNode:else>
                  <scalar:null/>
                 </subNode:else>
                 <subNode:cond>
                  <node:Expr_Greater>
                   <attribute:startLine>
                    <scalar:int>418</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>418</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Expr_PropertyFetch>
                     <attribute:startLine>
                      <scalar:int>418</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>418</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>418</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>418</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>test</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>length</scalar:string>
                     </subNode:name>
                    </node:Expr_PropertyFetch>
                   </subNode:left>
                   <subNode:right>
                    <node:Scalar_LNumber>
                     <attribute:startLine>
                      <scalar:int>418</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>418</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:int>0</scalar:int>
                     </subNode:value>
                    </node:Scalar_LNumber>
                   </subNode:right>
                  </node:Expr_Greater>
                 </subNode:cond>
                </node:Stmt_If>
               </scalar:array>
              </subNode:stmts>
             </node:Stmt_Else>
            </subNode:else>
            <subNode:cond>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>407</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>407</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_MethodCall>
                <attribute:startLine>
                 <scalar:int>407</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>407</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>407</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>407</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>test</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>item</scalar:string>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>407</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>407</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Scalar_LNumber>
                     <attribute:startLine>
                      <scalar:int>407</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>407</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:int>0</scalar:int>
                     </subNode:value>
                    </node:Scalar_LNumber>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_MethodCall>
              </subNode:var>
              <subNode:name>
               <scalar:string>hasChildNodes</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array/>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:cond>
           </node:Stmt_If>
          </scalar:array>
         </subNode:stmts>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>402</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>402</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>options</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
         <subNode:valueVar>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>402</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>402</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>element</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:valueVar>
        </node:Stmt_Foreach>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>422</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>422</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>422</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>422</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>422</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>422</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>false</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getContent</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="425">/**
     * Checks if this element has a particular child element.
     *
     * @param   String
     * @param   Integer
     * @return  bool
     **/</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>432</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>436</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>432</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>432</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>name</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>432</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>432</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>offset</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>432</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>432</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>0</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>434</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>434</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>434</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>434</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>search</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>434</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>434</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>434</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>434</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>434</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>434</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>model</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:var>
           <subNode:name>
            <scalar:string>getElementsByTagName</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>434</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>434</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>434</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>434</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>name</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>435</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>435</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Greater>
           <attribute:startLine>
            <scalar:int>435</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>435</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>435</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>435</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>435</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>435</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>search</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>length</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:left>
           <subNode:right>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>435</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>435</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>offset</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:right>
          </node:Expr_Greater>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>hasKey</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="438">/**
     * Return an XML serialization of the feed, should it be required. Most 
     * users however, will already have a serialization that they used when 
     * instantiating the object.
     *
     * @return    string    XML serialization of element
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>445</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>449</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>447</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>447</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>447</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>447</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>simple</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>447</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>447</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>447</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>447</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>simplexml_import_dom</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>447</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>447</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>447</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>447</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>447</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>447</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>model</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>448</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>448</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>448</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>448</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>448</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>448</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>simple</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>asXML</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>__toString</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="451">/**
     * Get directory holding RNG schemas. Method is based on that 
     * found in Contact_AddressBook.
     *
     * @return string PEAR data directory.
     * @access public
     * @static
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>459</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>464</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>8</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Include>
         <attribute:startLine>
          <scalar:int>461</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>461</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>461</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>461</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>PEAR/Config.php</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:expr>
         <subNode:type>
          <scalar:int>4</scalar:int>
         </subNode:type>
        </node:Expr_Include>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>462</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>462</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>462</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>462</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>config</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_New>
           <attribute:startLine>
            <scalar:int>462</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>462</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>462</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>462</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>PEAR_Config</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_New>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>463</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>463</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Concat>
           <attribute:startLine>
            <scalar:int>463</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>463</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_MethodCall>
             <attribute:startLine>
              <scalar:int>463</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>463</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>463</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>463</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>config</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>get</scalar:string>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>463</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>463</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>463</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>463</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>data_dir</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_MethodCall>
           </subNode:left>
           <subNode:right>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>463</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>463</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string>/XML_Feed_Parser/schemas</scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:right>
          </node:Expr_Concat>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getSchemaDir</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:startLine>
       <scalar:int>466</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>472</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>467</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>467</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>467</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>467</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>dir</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_StaticCall>
           <attribute:startLine>
            <scalar:int>467</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>467</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name>
             <attribute:startLine>
              <scalar:int>467</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>467</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>self</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:class>
           <subNode:name>
            <scalar:string>getSchemaDir</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_StaticCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>469</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>469</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>469</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>469</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>path</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Concat>
           <attribute:startLine>
            <scalar:int>469</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>469</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Concat>
             <attribute:startLine>
              <scalar:int>469</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>469</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>469</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>469</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>dir</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:left>
             <subNode:right>
              <node:Scalar_String>
               <attribute:startLine>
                <scalar:int>469</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>469</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <scalar:string>/</scalar:string>
               </subNode:value>
              </node:Scalar_String>
             </subNode:right>
            </node:Expr_Concat>
           </subNode:left>
           <subNode:right>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>469</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>469</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>469</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>469</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>relax</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:right>
          </node:Expr_Concat>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>471</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>471</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>471</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>471</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>471</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>471</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>471</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>471</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>model</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:var>
           <subNode:name>
            <scalar:string>relaxNGValidate</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>471</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>471</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>471</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>471</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>path</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>relaxNGValidate</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
    </scalar:array>
   </subNode:stmts>
   <subNode:name>
    <scalar:string>XML_Feed_Parser_Type</scalar:string>
   </subNode:name>
   <subNode:namespacedName>
    <node:Name>
     <attribute:comments>
      <scalar:array>
       <comment isDocComment="false" line="2">/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */</comment>
       <comment isDocComment="true" line="4">/**
 * Abstract class providing common methods for XML_Feed_Parser feeds.
 *
 * PHP versions 5
 *
 * LICENSE: This source file is subject to version 3.0 of the PHP license
 * that is available through the world-wide-web at the following URI:
 * http://www.php.net/license/3_0.txt.  If you did not receive a copy of
 * the PHP License and are unable to obtain it through the web, please
 * send a note to license@php.net so we can mail you a copy immediately.
 *
 * @category   XML
 * @package    XML_Feed_Parser
 * @author     James Stewart &lt;james@jystewart.net&gt;
 * @copyright  2005 James Stewart &lt;james@jystewart.net&gt;
 * @license    http://www.gnu.org/copyleft/lesser.html  GNU LGPL 2.1
 * @version    CVS: $Id: Type.php 6844 2011-06-03 14:46:51Z dMetzger $
 * @link       http://pear.php.net/package/XML_Feed_Parser/
 */</comment>
       <comment isDocComment="true" line="24">/**
 * This abstract class provides some general methods that are likely to be
 * implemented exactly the same way for all feed types.
 *
 * @package XML_Feed_Parser
 * @author  James Stewart &lt;james@jystewart.net&gt;
 * @version Release: @package_version@
 */</comment>
      </scalar:array>
     </attribute:comments>
     <attribute:startLine>
      <scalar:int>32</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>473</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>XML_Feed_Parser_Type</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name>
   </subNode:namespacedName>
  </node:Stmt_Class>
 </scalar:array>
</AST>
