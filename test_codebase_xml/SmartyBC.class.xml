<?xml version="1.0" encoding="UTF-8"?>
<AST xmlns:node="http://nikic.github.com/PHPParser/XML/node" xmlns:subNode="http://nikic.github.com/PHPParser/XML/subNode" xmlns:attribute="http://nikic.github.com/PHPParser/XML/attribute" xmlns:scalar="http://nikic.github.com/PHPParser/XML/scalar">
 <scalar:array>
  <node:Expr_Include>
   <attribute:comments>
    <scalar:array>
     <comment isDocComment="true" line="2">/**
 * Project:     Smarty: the PHP compiling template engine
 * File:        SmartyBC.class.php
 * SVN:         $Id: $
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * For questions, help, comments, discussion, etc., please join the
 * Smarty mailing list. Send a blank e-mail to
 * smarty-discussion-subscribe@googlegroups.com
 *
 * @link http://www.smarty.net/
 * @copyright 2008 New Digital Group, Inc.
 * @author Monte Ohrt &lt;monte at ohrt dot com&gt;
 * @author Uwe Tews
 * @author Rodney Rehm
 * @package Smarty
 */</comment>
     <comment isDocComment="true" line="32">/**
 * @ignore
 */</comment>
    </scalar:array>
   </attribute:comments>
   <attribute:startLine>
    <scalar:int>35</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>35</scalar:int>
   </attribute:endLine>
   <subNode:expr>
    <node:Expr_Concat>
     <attribute:startLine>
      <scalar:int>35</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>35</scalar:int>
     </attribute:endLine>
     <subNode:left>
      <node:Expr_FuncCall>
       <attribute:startLine>
        <scalar:int>35</scalar:int>
       </attribute:startLine>
       <attribute:endLine>
        <scalar:int>35</scalar:int>
       </attribute:endLine>
       <subNode:name>
        <node:Name>
         <attribute:startLine>
          <scalar:int>35</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>35</scalar:int>
         </attribute:endLine>
         <subNode:parts>
          <scalar:array>
           <scalar:string>dirname</scalar:string>
          </scalar:array>
         </subNode:parts>
        </node:Name>
       </subNode:name>
       <subNode:args>
        <scalar:array>
         <node:Arg>
          <attribute:startLine>
           <scalar:int>35</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>35</scalar:int>
          </attribute:endLine>
          <subNode:value>
           <node:Scalar_FileConst>
            <attribute:startLine>
             <scalar:int>35</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>35</scalar:int>
            </attribute:endLine>
           </node:Scalar_FileConst>
          </subNode:value>
          <subNode:byRef>
           <scalar:false/>
          </subNode:byRef>
         </node:Arg>
        </scalar:array>
       </subNode:args>
      </node:Expr_FuncCall>
     </subNode:left>
     <subNode:right>
      <node:Scalar_String>
       <attribute:startLine>
        <scalar:int>35</scalar:int>
       </attribute:startLine>
       <attribute:endLine>
        <scalar:int>35</scalar:int>
       </attribute:endLine>
       <subNode:value>
        <scalar:string>/Smarty.class.php</scalar:string>
       </subNode:value>
      </node:Scalar_String>
     </subNode:right>
    </node:Expr_Concat>
   </subNode:expr>
   <subNode:type>
    <scalar:int>3</scalar:int>
   </subNode:type>
  </node:Expr_Include>
  <node:Stmt_Class>
   <attribute:comments>
    <scalar:array>
     <comment isDocComment="true" line="37">/**
 * Smarty Backward Compatability Wrapper Class
 *
 * @package Smarty
 */</comment>
    </scalar:array>
   </attribute:comments>
   <attribute:startLine>
    <scalar:int>42</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>443</scalar:int>
   </attribute:endLine>
   <subNode:type>
    <scalar:int>0</scalar:int>
   </subNode:type>
   <subNode:extends>
    <node:Name_FullyQualified>
     <attribute:startLine>
      <scalar:int>42</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>42</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Smarty</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name_FullyQualified>
   </subNode:extends>
   <subNode:implements>
    <scalar:array/>
   </subNode:implements>
   <subNode:stmts>
    <scalar:array>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="44">/**
     * Smarty 2 BC
     * @var string
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>48</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>48</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>48</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>48</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>_version</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ClassConstFetch>
           <attribute:startLine>
            <scalar:int>48</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>48</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name>
             <attribute:startLine>
              <scalar:int>48</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>48</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>self</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:class>
           <subNode:name>
            <scalar:string>SMARTY_VERSION</scalar:string>
           </subNode:name>
          </node:Expr_ClassConstFetch>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="50">/**
     * Initialize new SmartyBC object
     *
     * @param array $options options to set during initialization, e.g. array( 'forceCompile' =&gt; false )
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>55</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>60</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>55</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>55</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>options</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_Array>
           <attribute:startLine>
            <scalar:int>55</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>55</scalar:int>
           </attribute:endLine>
           <subNode:items>
            <scalar:array/>
           </subNode:items>
          </node:Expr_Array>
         </subNode:default>
         <subNode:type>
          <scalar:string>array</scalar:string>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_StaticCall>
         <attribute:startLine>
          <scalar:int>57</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>57</scalar:int>
         </attribute:endLine>
         <subNode:class>
          <node:Name>
           <attribute:startLine>
            <scalar:int>57</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>57</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>parent</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name>
         </subNode:class>
         <subNode:name>
          <scalar:string>__construct</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>57</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>57</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>57</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>57</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>options</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_StaticCall>
        <node:Expr_MethodCall>
         <attribute:comments>
          <scalar:array>
           <comment isDocComment="false" line="58">// register {php} tag
</comment>
          </scalar:array>
         </attribute:comments>
         <attribute:startLine>
          <scalar:int>59</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>59</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:comments>
            <scalar:array>
             <comment isDocComment="false" line="58">// register {php} tag
</comment>
            </scalar:array>
           </attribute:comments>
           <attribute:startLine>
            <scalar:int>59</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>59</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>registerPlugin</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>59</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>59</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>59</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>59</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>block</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>59</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>59</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>59</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>59</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>php</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>59</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>59</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>59</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>59</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>smarty_php_tag</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>__construct</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="62">/**
     * wrapper for assign_by_ref
     *
     * @param string $tpl_var the template variable name
     * @param mixed  &amp;$value  the referenced value to assign
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>68</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>71</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>68</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>68</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>tpl_var</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>68</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>68</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>value</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:true/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>70</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>70</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>70</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>70</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>assignByRef</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>70</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>70</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>70</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>70</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>tpl_var</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>70</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>70</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>70</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>70</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>value</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>assign_by_ref</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="73">/**
     * wrapper for append_by_ref
     *
     * @param string  $tpl_var the template variable name
     * @param mixed   &amp;$value  the referenced value to append
     * @param boolean $merge   flag if array elements shall be merged
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>80</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>83</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>80</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>80</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>tpl_var</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>80</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>80</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>value</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:true/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>80</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>80</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>merge</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>80</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>80</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>80</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>80</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>false</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>82</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>82</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>82</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>82</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>appendByRef</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>82</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>82</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>82</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>82</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>tpl_var</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>82</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>82</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>82</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>82</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>value</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>82</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>82</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>82</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>82</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>merge</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>append_by_ref</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="85">/**
     * clear the given assigned template variable.
     *
     * @param string $tpl_var the template variable to clear
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>90</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>93</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>90</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>90</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>tpl_var</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>92</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>92</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>92</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>92</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>clearAssign</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>92</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>92</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>92</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>92</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>tpl_var</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>clear_assign</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="95">/**
     * Registers custom function to be used in templates
     *
     * @param string $function      the name of the template function
     * @param string $function_impl the name of the PHP function to register
     * @param bool   $cacheable
     * @param mixed  $cache_attrs
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>103</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>106</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>103</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>103</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>function</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>103</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>103</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>function_impl</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>103</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>103</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>cacheable</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>103</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>103</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>103</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>103</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>true</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>103</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>103</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>cache_attrs</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>103</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>103</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>103</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>103</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>105</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>105</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>105</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>105</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>registerPlugin</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>105</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>105</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>105</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>105</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>function</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>105</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>105</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>105</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>105</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>function</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>105</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>105</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>105</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>105</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>function_impl</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>105</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>105</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>105</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>105</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>cacheable</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>105</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>105</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>105</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>105</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>cache_attrs</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>register_function</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="108">/**
     * Unregisters custom function
     *
     * @param string $function name of template function
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>113</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>116</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>113</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>113</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>function</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>115</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>115</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>115</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>115</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>unregisterPlugin</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>115</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>115</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>115</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>115</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>function</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>115</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>115</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>115</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>115</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>function</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>unregister_function</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="118">/**
     * Registers object to be used in templates
     *
     * @param string  $object      name of template object
     * @param object  $object_impl the referenced PHP object to register
     * @param array   $allowed     list of allowed methods (empty = all)
     * @param boolean $smarty_args smarty argument format, else traditional
     * @param array   $block_functs list of methods that are block format
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>127</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>132</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>127</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>127</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>object</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>127</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>127</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>object_impl</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>127</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>127</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>allowed</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_Array>
           <attribute:startLine>
            <scalar:int>127</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>127</scalar:int>
           </attribute:endLine>
           <subNode:items>
            <scalar:array/>
           </subNode:items>
          </node:Expr_Array>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>127</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>127</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>smarty_args</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>127</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>127</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>127</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>127</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>true</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>127</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>127</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>block_methods</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_Array>
           <attribute:startLine>
            <scalar:int>127</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>127</scalar:int>
           </attribute:endLine>
           <subNode:items>
            <scalar:array/>
           </subNode:items>
          </node:Expr_Array>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_FuncCall>
         <attribute:startLine>
          <scalar:int>129</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>129</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <node:Name>
           <attribute:startLine>
            <scalar:int>129</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>129</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>settype</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>129</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>129</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>129</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>129</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>allowed</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>129</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>129</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>129</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>129</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>array</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_FuncCall>
        <node:Expr_FuncCall>
         <attribute:startLine>
          <scalar:int>130</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>130</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <node:Name>
           <attribute:startLine>
            <scalar:int>130</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>130</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>settype</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>130</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>130</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>130</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>130</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>smarty_args</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>130</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>130</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>130</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>130</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>boolean</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_FuncCall>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>131</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>131</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>131</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>131</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>registerObject</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>131</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>131</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>131</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>131</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>object</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>131</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>131</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>131</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>131</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>object_impl</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>131</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>131</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>131</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>131</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>allowed</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>131</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>131</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>131</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>131</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>smarty_args</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>131</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>131</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>131</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>131</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>block_methods</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>register_object</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="134">/**
     * Unregisters object
     *
     * @param string $object name of template object
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>139</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>142</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>139</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>139</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>object</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>141</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>141</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>141</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>141</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>unregisterObject</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>141</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>141</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>141</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>141</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>object</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>unregister_object</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="144">/**
     * Registers block function to be used in templates
     *
     * @param string $block      name of template block
     * @param string $block_impl PHP function to register
     * @param bool   $cacheable
     * @param mixed  $cache_attrs
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>152</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>155</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>152</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>152</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>block</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>152</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>152</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>block_impl</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>152</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>152</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>cacheable</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>152</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>152</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>152</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>152</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>true</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>152</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>152</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>cache_attrs</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>152</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>152</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>152</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>152</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>154</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>154</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>154</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>154</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>registerPlugin</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>154</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>154</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>154</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>154</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>block</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>154</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>154</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>154</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>154</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>block</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>154</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>154</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>154</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>154</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>block_impl</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>154</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>154</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>154</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>154</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>cacheable</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>154</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>154</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>154</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>154</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>cache_attrs</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>register_block</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="157">/**
     * Unregisters block function
     *
     * @param string $block name of template function
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>162</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>165</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>162</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>162</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>block</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>164</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>164</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>164</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>164</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>unregisterPlugin</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>164</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>164</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>164</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>164</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>block</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>164</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>164</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>164</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>164</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>block</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>unregister_block</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="167">/**
     * Registers compiler function
     *
     * @param string $function      name of template function
     * @param string $function_impl name of PHP function to register
     * @param bool   $cacheable
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>174</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>177</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>174</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>174</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>function</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>174</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>174</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>function_impl</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>174</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>174</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>cacheable</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>174</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>174</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>174</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>174</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>true</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>176</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>176</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>176</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>176</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>registerPlugin</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>176</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>176</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>176</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>176</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>compiler</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>176</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>176</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>176</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>176</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>function</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>176</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>176</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>176</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>176</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>function_impl</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>176</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>176</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>176</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>176</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>cacheable</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>register_compiler_function</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="179">/**
     * Unregisters compiler function
     *
     * @param string $function name of template function
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>184</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>187</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>184</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>184</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>function</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>186</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>186</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>186</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>186</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>unregisterPlugin</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>186</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>186</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>186</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>186</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>compiler</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>186</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>186</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>186</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>186</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>function</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>unregister_compiler_function</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="189">/**
     * Registers modifier to be used in templates
     *
     * @param string $modifier name of template modifier
     * @param string $modifier_impl name of PHP function to register
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>195</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>198</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>195</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>195</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>modifier</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>195</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>195</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>modifier_impl</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>197</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>197</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>197</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>197</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>registerPlugin</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>197</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>197</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>197</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>197</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>modifier</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>197</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>197</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>197</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>197</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>modifier</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>197</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>197</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>197</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>197</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>modifier_impl</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>register_modifier</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="200">/**
     * Unregisters modifier
     *
     * @param string $modifier name of template modifier
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>205</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>208</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>205</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>205</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>modifier</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>207</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>207</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>207</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>207</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>unregisterPlugin</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>207</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>207</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>207</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>207</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>modifier</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>207</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>207</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>207</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>207</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>modifier</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>unregister_modifier</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="210">/**
     * Registers a resource to fetch a template
     *
     * @param string $type      name of resource
     * @param array  $functions array of functions to handle resource
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>216</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>219</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>216</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>216</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>type</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>216</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>216</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>functions</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>218</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>218</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>218</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>218</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>registerResource</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>218</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>218</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>218</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>218</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>type</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>218</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>218</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>218</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>218</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>functions</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>register_resource</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="221">/**
     * Unregisters a resource
     *
     * @param string $type name of resource
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>226</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>229</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>226</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>226</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>type</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>228</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>228</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>228</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>228</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>unregisterResource</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>228</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>228</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>228</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>228</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>type</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>unregister_resource</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="231">/**
     * Registers a prefilter function to apply
     * to a template before compiling
     *
     * @param callable $function
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>237</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>240</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>237</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>237</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>function</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>239</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>239</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>239</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>239</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>registerFilter</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>239</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>239</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>239</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>239</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>pre</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>239</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>239</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>239</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>239</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>function</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>register_prefilter</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="242">/**
     * Unregisters a prefilter function
     *
     * @param callable $function
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>247</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>250</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>247</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>247</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>function</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>249</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>249</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>249</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>249</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>unregisterFilter</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>249</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>249</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>249</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>249</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>pre</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>249</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>249</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>249</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>249</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>function</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>unregister_prefilter</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="252">/**
     * Registers a postfilter function to apply
     * to a compiled template after compilation
     *
     * @param callable $function
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>258</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>261</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>258</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>258</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>function</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>260</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>260</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>260</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>260</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>registerFilter</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>260</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>260</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>260</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>260</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>post</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>260</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>260</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>260</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>260</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>function</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>register_postfilter</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="263">/**
     * Unregisters a postfilter function
     *
     * @param callable $function
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>268</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>271</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>268</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>268</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>function</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>270</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>270</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>270</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>270</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>unregisterFilter</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>270</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>270</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>270</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>270</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>post</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>270</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>270</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>270</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>270</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>function</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>unregister_postfilter</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="273">/**
     * Registers an output filter function to apply
     * to a template output
     *
     * @param callable $function
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>279</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>282</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>279</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>279</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>function</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>281</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>281</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>281</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>281</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>registerFilter</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>281</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>281</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>281</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>281</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>output</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>281</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>281</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>281</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>281</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>function</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>register_outputfilter</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="284">/**
     * Unregisters an outputfilter function
     *
     * @param callable $function
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>289</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>292</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>289</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>289</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>function</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>291</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>291</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>291</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>291</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>unregisterFilter</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>291</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>291</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>291</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>291</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>output</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>291</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>291</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>291</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>291</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>function</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>unregister_outputfilter</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="294">/**
     * load a filter of specified type and name
     *
     * @param string $type filter type
     * @param string $name filter name
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>300</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>303</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>300</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>300</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>type</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>300</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>300</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>name</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>302</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>302</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>302</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>302</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>loadFilter</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>302</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>302</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>302</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>302</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>type</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>302</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>302</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>302</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>302</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>name</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>load_filter</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="305">/**
     * clear cached content for the given template and cache id
     *
     * @param string $tpl_file   name of template file
     * @param string $cache_id   name of cache_id
     * @param string $compile_id name of compile_id
     * @param string $exp_time   expiration time
     * @return boolean
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>314</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>317</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>314</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>314</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>tpl_file</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>314</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>314</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>314</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>314</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>314</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>314</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>cache_id</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>314</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>314</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>314</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>314</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>314</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>314</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>compile_id</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>314</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>314</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>314</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>314</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>314</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>314</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>exp_time</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>314</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>314</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>314</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>314</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>316</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>316</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>316</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>316</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>316</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>316</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>clearCache</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>316</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>316</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>316</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>316</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>tpl_file</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>316</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>316</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>316</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>316</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>cache_id</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>316</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>316</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>316</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>316</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>compile_id</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>316</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>316</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>316</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>316</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>exp_time</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>clear_cache</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="319">/**
     * clear the entire contents of cache (all templates)
     *
     * @param string $exp_time expire time
     * @return boolean
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>325</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>328</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>325</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>325</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>exp_time</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>325</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>325</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>325</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>325</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>327</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>327</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>327</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>327</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>327</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>327</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>clearCache</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>327</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>327</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_ConstFetch>
                <attribute:startLine>
                 <scalar:int>327</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>327</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>327</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>327</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>null</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
               </node:Expr_ConstFetch>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>327</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>327</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_ConstFetch>
                <attribute:startLine>
                 <scalar:int>327</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>327</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>327</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>327</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>null</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
               </node:Expr_ConstFetch>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>327</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>327</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_ConstFetch>
                <attribute:startLine>
                 <scalar:int>327</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>327</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>327</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>327</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>null</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
               </node:Expr_ConstFetch>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>327</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>327</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>327</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>327</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>exp_time</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>clear_all_cache</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="330">/**
     * test to see if valid cache exists for this template
     *
     * @param string $tpl_file name of template file
     * @param string $cache_id
     * @param string $compile_id
     * @return boolean
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>338</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>341</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>338</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>338</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>tpl_file</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>338</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>338</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>cache_id</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>338</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>338</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>338</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>338</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>338</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>338</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>compile_id</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>338</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>338</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>338</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>338</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>340</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>340</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>340</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>340</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>340</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>340</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>isCached</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>340</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>340</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>340</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>340</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>tpl_file</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>340</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>340</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>340</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>340</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>cache_id</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>340</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>340</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>340</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>340</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>compile_id</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>is_cached</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="343">/**
     * clear all the assigned template variables.
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>346</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>349</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>348</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>348</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>348</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>348</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>clearAllAssign</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array/>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>clear_all_assign</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="351">/**
     * clears compiled version of specified template resource,
     * or all compiled template files if one is not specified.
     * This function is for advanced use only, not normally needed.
     *
     * @param string $tpl_file
     * @param string $compile_id
     * @param string $exp_time
     * @return boolean results of {@link smarty_core_rm_auto()}
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>361</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>364</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>361</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>361</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>tpl_file</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>361</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>361</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>361</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>361</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>361</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>361</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>compile_id</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>361</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>361</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>361</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>361</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>361</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>361</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>exp_time</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>361</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>361</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>361</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>361</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>363</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>363</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>363</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>363</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>363</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>363</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>clearCompiledTemplate</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>363</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>363</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>363</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>363</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>tpl_file</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>363</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>363</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>363</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>363</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>compile_id</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>363</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>363</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>363</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>363</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>exp_time</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>clear_compiled_tpl</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="366">/**
     * Checks whether requested template exists.
     *
     * @param string $tpl_file
     * @return boolean
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>372</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>375</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>372</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>372</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>tpl_file</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>374</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>374</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>374</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>374</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>374</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>374</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>templateExists</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>374</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>374</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>374</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>374</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>tpl_file</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>template_exists</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="377">/**
     * Returns an array containing template variables
     *
     * @param string $name
     * @return array
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>383</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>386</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>383</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>383</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>name</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>383</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>383</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>383</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>383</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>385</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>385</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>385</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>385</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>385</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>385</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>getTemplateVars</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>385</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>385</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>385</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>385</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>name</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>get_template_vars</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="388">/**
     * Returns an array containing config variables
     *
     * @param string $name
     * @return array
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>394</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>397</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>394</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>394</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>name</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>394</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>394</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>394</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>394</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>396</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>396</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>396</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>396</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>396</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>396</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>getConfigVars</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>396</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>396</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>396</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>396</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>name</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>get_config_vars</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="399">/**
     * load configuration values
     *
     * @param string $file
     * @param string $section
     * @param string $scope
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>406</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>409</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>406</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>406</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>file</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>406</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>406</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>section</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>406</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>406</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>406</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>406</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>406</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>406</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>scope</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>406</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>406</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>global</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>408</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>408</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>408</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>408</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>ConfigLoad</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>408</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>408</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>408</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>408</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>file</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>408</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>408</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>408</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>408</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>section</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>408</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>408</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>408</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>408</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>scope</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>config_load</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="411">/**
     * return a reference to a registered object
     *
     * @param string $name
     * @return object
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>417</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>420</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>417</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>417</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>name</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>419</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>419</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>419</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>419</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>419</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>419</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>getRegisteredObject</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>419</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>419</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>419</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>419</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>name</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>get_registered_object</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="422">/**
     * clear configuration values
     *
     * @param string $var
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>427</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>430</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>427</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>427</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>var</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>427</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>427</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>427</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>427</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>429</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>429</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>429</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>429</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>clearConfig</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>429</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>429</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>429</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>429</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>var</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>clear_config</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="432">/**
     * trigger Smarty error
     *
     * @param string $error_msg
     * @param integer $error_type
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>438</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>441</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>438</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>438</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>error_msg</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>438</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>438</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>error_type</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>438</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>438</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>438</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>438</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>E_USER_WARNING</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_FuncCall>
         <attribute:startLine>
          <scalar:int>440</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>440</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <node:Name>
           <attribute:startLine>
            <scalar:int>440</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>440</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>trigger_error</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>440</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>440</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Scalar_Encapsed>
              <attribute:startLine>
               <scalar:int>440</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>440</scalar:int>
              </attribute:endLine>
              <subNode:parts>
               <scalar:array>
                <scalar:string>Smarty error: </scalar:string>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>440</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>440</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>error_msg</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </scalar:array>
              </subNode:parts>
             </node:Scalar_Encapsed>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>440</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>440</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>440</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>440</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>error_type</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_FuncCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>trigger_error</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
    </scalar:array>
   </subNode:stmts>
   <subNode:name>
    <scalar:string>SmartyBC</scalar:string>
   </subNode:name>
   <subNode:namespacedName>
    <node:Name>
     <attribute:comments>
      <scalar:array>
       <comment isDocComment="true" line="37">/**
 * Smarty Backward Compatability Wrapper Class
 *
 * @package Smarty
 */</comment>
      </scalar:array>
     </attribute:comments>
     <attribute:startLine>
      <scalar:int>42</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>443</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>SmartyBC</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name>
   </subNode:namespacedName>
  </node:Stmt_Class>
  <node:Stmt_Function>
   <attribute:comments>
    <scalar:array>
     <comment isDocComment="true" line="445">/**
 * Smarty {php}{/php} block function
 *
 * @param array   $params   parameter list
 * @param string  $content  contents of the block
 * @param object  $template template object
 * @param boolean &amp;$repeat  repeat flag
 * @return string content re-formatted
 */</comment>
    </scalar:array>
   </attribute:comments>
   <attribute:startLine>
    <scalar:int>454</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>458</scalar:int>
   </attribute:endLine>
   <subNode:byRef>
    <scalar:false/>
   </subNode:byRef>
   <subNode:params>
    <scalar:array>
     <node:Param>
      <attribute:startLine>
       <scalar:int>454</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>454</scalar:int>
      </attribute:endLine>
      <subNode:name>
       <scalar:string>params</scalar:string>
      </subNode:name>
      <subNode:default>
       <scalar:null/>
      </subNode:default>
      <subNode:type>
       <scalar:null/>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
     </node:Param>
     <node:Param>
      <attribute:startLine>
       <scalar:int>454</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>454</scalar:int>
      </attribute:endLine>
      <subNode:name>
       <scalar:string>content</scalar:string>
      </subNode:name>
      <subNode:default>
       <scalar:null/>
      </subNode:default>
      <subNode:type>
       <scalar:null/>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
     </node:Param>
     <node:Param>
      <attribute:startLine>
       <scalar:int>454</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>454</scalar:int>
      </attribute:endLine>
      <subNode:name>
       <scalar:string>template</scalar:string>
      </subNode:name>
      <subNode:default>
       <scalar:null/>
      </subNode:default>
      <subNode:type>
       <scalar:null/>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
     </node:Param>
     <node:Param>
      <attribute:startLine>
       <scalar:int>454</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>454</scalar:int>
      </attribute:endLine>
      <subNode:name>
       <scalar:string>repeat</scalar:string>
      </subNode:name>
      <subNode:default>
       <scalar:null/>
      </subNode:default>
      <subNode:type>
       <scalar:null/>
      </subNode:type>
      <subNode:byRef>
       <scalar:true/>
      </subNode:byRef>
     </node:Param>
    </scalar:array>
   </subNode:params>
   <subNode:stmts>
    <scalar:array>
     <node:Expr_Eval>
      <attribute:startLine>
       <scalar:int>456</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>456</scalar:int>
      </attribute:endLine>
      <subNode:expr>
       <node:Expr_Variable>
        <attribute:startLine>
         <scalar:int>456</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>456</scalar:int>
        </attribute:endLine>
        <subNode:name>
         <scalar:string>content</scalar:string>
        </subNode:name>
       </node:Expr_Variable>
      </subNode:expr>
     </node:Expr_Eval>
     <node:Stmt_Return>
      <attribute:startLine>
       <scalar:int>457</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>457</scalar:int>
      </attribute:endLine>
      <subNode:expr>
       <node:Scalar_String>
        <attribute:startLine>
         <scalar:int>457</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>457</scalar:int>
        </attribute:endLine>
        <subNode:value>
         <scalar:string></scalar:string>
        </subNode:value>
       </node:Scalar_String>
      </subNode:expr>
     </node:Stmt_Return>
    </scalar:array>
   </subNode:stmts>
   <subNode:name>
    <scalar:string>smarty_php_tag</scalar:string>
   </subNode:name>
   <subNode:namespacedName>
    <node:Name>
     <attribute:comments>
      <scalar:array>
       <comment isDocComment="true" line="445">/**
 * Smarty {php}{/php} block function
 *
 * @param array   $params   parameter list
 * @param string  $content  contents of the block
 * @param object  $template template object
 * @param boolean &amp;$repeat  repeat flag
 * @return string content re-formatted
 */</comment>
      </scalar:array>
     </attribute:comments>
     <attribute:startLine>
      <scalar:int>454</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>458</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>smarty_php_tag</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name>
   </subNode:namespacedName>
  </node:Stmt_Function>
 </scalar:array>
</AST>
