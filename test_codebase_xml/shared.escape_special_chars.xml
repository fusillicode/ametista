<?xml version="1.0" encoding="UTF-8"?>
<AST xmlns:node="http://nikic.github.com/PHPParser/XML/node" xmlns:subNode="http://nikic.github.com/PHPParser/XML/subNode" xmlns:attribute="http://nikic.github.com/PHPParser/XML/attribute" xmlns:scalar="http://nikic.github.com/PHPParser/XML/scalar">
 <scalar:array>
  <node:Stmt_If>
   <attribute:comments>
    <scalar:array>
     <comment isDocComment="true" line="2">/**
 * Smarty shared plugin
 *
 * @package Smarty
 * @subpackage PluginsShared
 */</comment>
    </scalar:array>
   </attribute:comments>
   <attribute:startLine>
    <scalar:int>9</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>49</scalar:int>
   </attribute:endLine>
   <subNode:stmts>
    <scalar:array>
     <node:Stmt_Function>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="10">/**
     * escape_special_chars common function
     *
     * Function: smarty_function_escape_special_chars&lt;br&gt;
     * Purpose:  used by other smarty functions to escape
     *           special chars except for already escaped ones
     *
     * @author   Monte Ohrt &lt;monte at ohrt dot com&gt;
     * @param string $string text that should by escaped
     * @return string
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>21</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>27</scalar:int>
      </attribute:endLine>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>21</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>21</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>string</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>23</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>25</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>24</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>24</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>24</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>24</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>string</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>24</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>24</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>24</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>24</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>htmlspecialchars</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>24</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>24</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>24</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>24</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>string</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>24</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>24</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_ConstFetch>
                   <attribute:startLine>
                    <scalar:int>24</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>24</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <node:Name>
                     <attribute:startLine>
                      <scalar:int>24</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>24</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>ENT_COMPAT</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name>
                   </subNode:name>
                  </node:Expr_ConstFetch>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>24</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>24</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_StaticPropertyFetch>
                   <attribute:startLine>
                    <scalar:int>24</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>24</scalar:int>
                   </attribute:endLine>
                   <subNode:class>
                    <node:Name_FullyQualified>
                     <attribute:startLine>
                      <scalar:int>24</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>24</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>Smarty</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name_FullyQualified>
                   </subNode:class>
                   <subNode:name>
                    <scalar:string>_CHARSET</scalar:string>
                   </subNode:name>
                  </node:Expr_StaticPropertyFetch>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>24</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>24</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_ConstFetch>
                   <attribute:startLine>
                    <scalar:int>24</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>24</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <node:Name>
                     <attribute:startLine>
                      <scalar:int>24</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>24</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>false</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name>
                   </subNode:name>
                  </node:Expr_ConstFetch>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>23</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>23</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>23</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>23</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>23</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>23</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>is_array</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>23</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>23</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>23</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>23</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>string</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>26</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>26</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>26</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>26</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>string</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>smarty_function_escape_special_chars</scalar:string>
      </subNode:name>
      <subNode:namespacedName>
       <node:Name>
        <attribute:comments>
         <scalar:array>
          <comment isDocComment="true" line="10">/**
     * escape_special_chars common function
     *
     * Function: smarty_function_escape_special_chars&lt;br&gt;
     * Purpose:  used by other smarty functions to escape
     *           special chars except for already escaped ones
     *
     * @author   Monte Ohrt &lt;monte at ohrt dot com&gt;
     * @param string $string text that should by escaped
     * @return string
     */</comment>
         </scalar:array>
        </attribute:comments>
        <attribute:startLine>
         <scalar:int>21</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>27</scalar:int>
        </attribute:endLine>
        <subNode:parts>
         <scalar:array>
          <scalar:string>smarty_function_escape_special_chars</scalar:string>
         </scalar:array>
        </subNode:parts>
       </node:Name>
      </subNode:namespacedName>
     </node:Stmt_Function>
    </scalar:array>
   </subNode:stmts>
   <subNode:elseifs>
    <scalar:array/>
   </subNode:elseifs>
   <subNode:else>
    <node:Stmt_Else>
     <attribute:startLine>
      <scalar:int>28</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>49</scalar:int>
     </attribute:endLine>
     <subNode:stmts>
      <scalar:array>
       <node:Stmt_Function>
        <attribute:comments>
         <scalar:array>
          <comment isDocComment="true" line="29">/**
     * escape_special_chars common function
     *
     * Function: smarty_function_escape_special_chars&lt;br&gt;
     * Purpose:  used by other smarty functions to escape
     *           special chars except for already escaped ones
     *
     * @author   Monte Ohrt &lt;monte at ohrt dot com&gt;
     * @param string $string text that should by escaped
     * @return string
     */</comment>
         </scalar:array>
        </attribute:comments>
        <attribute:startLine>
         <scalar:int>40</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>48</scalar:int>
        </attribute:endLine>
        <subNode:byRef>
         <scalar:false/>
        </subNode:byRef>
        <subNode:params>
         <scalar:array>
          <node:Param>
           <attribute:startLine>
            <scalar:int>40</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>40</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>string</scalar:string>
           </subNode:name>
           <subNode:default>
            <scalar:null/>
           </subNode:default>
           <subNode:type>
            <scalar:null/>
           </subNode:type>
           <subNode:byRef>
            <scalar:false/>
           </subNode:byRef>
          </node:Param>
         </scalar:array>
        </subNode:params>
        <subNode:stmts>
         <scalar:array>
          <node:Stmt_If>
           <attribute:startLine>
            <scalar:int>42</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>46</scalar:int>
           </attribute:endLine>
           <subNode:stmts>
            <scalar:array>
             <node:Expr_Assign>
              <attribute:startLine>
               <scalar:int>43</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>43</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>43</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>43</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>string</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:expr>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>43</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>43</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>43</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>43</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>preg_replace</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>43</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>43</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>43</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>43</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>!&amp;(#?\w+);!</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>43</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>43</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>43</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>43</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>%%%SMARTY_START%%%\1%%%SMARTY_END%%%</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>43</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>43</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>43</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>43</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>string</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:expr>
             </node:Expr_Assign>
             <node:Expr_Assign>
              <attribute:startLine>
               <scalar:int>44</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>44</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>44</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>44</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>string</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:expr>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>44</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>44</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>44</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>44</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>htmlspecialchars</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>44</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>44</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>44</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>44</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>string</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:expr>
             </node:Expr_Assign>
             <node:Expr_Assign>
              <attribute:startLine>
               <scalar:int>45</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>45</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>45</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>45</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>string</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:expr>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>45</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>45</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>45</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>45</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>str_replace</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>45</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>45</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Array>
                     <attribute:startLine>
                      <scalar:int>45</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>45</scalar:int>
                     </attribute:endLine>
                     <subNode:items>
                      <scalar:array>
                       <node:Expr_ArrayItem>
                        <attribute:startLine>
                         <scalar:int>45</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>45</scalar:int>
                        </attribute:endLine>
                        <subNode:key>
                         <scalar:null/>
                        </subNode:key>
                        <subNode:value>
                         <node:Scalar_String>
                          <attribute:startLine>
                           <scalar:int>45</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>45</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <scalar:string>%%%SMARTY_START%%%</scalar:string>
                          </subNode:value>
                         </node:Scalar_String>
                        </subNode:value>
                        <subNode:byRef>
                         <scalar:false/>
                        </subNode:byRef>
                       </node:Expr_ArrayItem>
                       <node:Expr_ArrayItem>
                        <attribute:startLine>
                         <scalar:int>45</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>45</scalar:int>
                        </attribute:endLine>
                        <subNode:key>
                         <scalar:null/>
                        </subNode:key>
                        <subNode:value>
                         <node:Scalar_String>
                          <attribute:startLine>
                           <scalar:int>45</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>45</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <scalar:string>%%%SMARTY_END%%%</scalar:string>
                          </subNode:value>
                         </node:Scalar_String>
                        </subNode:value>
                        <subNode:byRef>
                         <scalar:false/>
                        </subNode:byRef>
                       </node:Expr_ArrayItem>
                      </scalar:array>
                     </subNode:items>
                    </node:Expr_Array>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>45</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>45</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Array>
                     <attribute:startLine>
                      <scalar:int>45</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>45</scalar:int>
                     </attribute:endLine>
                     <subNode:items>
                      <scalar:array>
                       <node:Expr_ArrayItem>
                        <attribute:startLine>
                         <scalar:int>45</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>45</scalar:int>
                        </attribute:endLine>
                        <subNode:key>
                         <scalar:null/>
                        </subNode:key>
                        <subNode:value>
                         <node:Scalar_String>
                          <attribute:startLine>
                           <scalar:int>45</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>45</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <scalar:string>&amp;</scalar:string>
                          </subNode:value>
                         </node:Scalar_String>
                        </subNode:value>
                        <subNode:byRef>
                         <scalar:false/>
                        </subNode:byRef>
                       </node:Expr_ArrayItem>
                       <node:Expr_ArrayItem>
                        <attribute:startLine>
                         <scalar:int>45</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>45</scalar:int>
                        </attribute:endLine>
                        <subNode:key>
                         <scalar:null/>
                        </subNode:key>
                        <subNode:value>
                         <node:Scalar_String>
                          <attribute:startLine>
                           <scalar:int>45</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>45</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <scalar:string>;</scalar:string>
                          </subNode:value>
                         </node:Scalar_String>
                        </subNode:value>
                        <subNode:byRef>
                         <scalar:false/>
                        </subNode:byRef>
                       </node:Expr_ArrayItem>
                      </scalar:array>
                     </subNode:items>
                    </node:Expr_Array>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>45</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>45</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>45</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>45</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>string</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:expr>
             </node:Expr_Assign>
            </scalar:array>
           </subNode:stmts>
           <subNode:elseifs>
            <scalar:array/>
           </subNode:elseifs>
           <subNode:else>
            <scalar:null/>
           </subNode:else>
           <subNode:cond>
            <node:Expr_BooleanNot>
             <attribute:startLine>
              <scalar:int>42</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>42</scalar:int>
             </attribute:endLine>
             <subNode:expr>
              <node:Expr_FuncCall>
               <attribute:startLine>
                <scalar:int>42</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>42</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>42</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>42</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>is_array</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>42</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>42</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>42</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>42</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>string</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_FuncCall>
             </subNode:expr>
            </node:Expr_BooleanNot>
           </subNode:cond>
          </node:Stmt_If>
          <node:Stmt_Return>
           <attribute:startLine>
            <scalar:int>47</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>47</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>47</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>47</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>string</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:expr>
          </node:Stmt_Return>
         </scalar:array>
        </subNode:stmts>
        <subNode:name>
         <scalar:string>smarty_function_escape_special_chars</scalar:string>
        </subNode:name>
        <subNode:namespacedName>
         <node:Name>
          <attribute:comments>
           <scalar:array>
            <comment isDocComment="true" line="29">/**
     * escape_special_chars common function
     *
     * Function: smarty_function_escape_special_chars&lt;br&gt;
     * Purpose:  used by other smarty functions to escape
     *           special chars except for already escaped ones
     *
     * @author   Monte Ohrt &lt;monte at ohrt dot com&gt;
     * @param string $string text that should by escaped
     * @return string
     */</comment>
           </scalar:array>
          </attribute:comments>
          <attribute:startLine>
           <scalar:int>40</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>48</scalar:int>
          </attribute:endLine>
          <subNode:parts>
           <scalar:array>
            <scalar:string>smarty_function_escape_special_chars</scalar:string>
           </scalar:array>
          </subNode:parts>
         </node:Name>
        </subNode:namespacedName>
       </node:Stmt_Function>
      </scalar:array>
     </subNode:stmts>
    </node:Stmt_Else>
   </subNode:else>
   <subNode:cond>
    <node:Expr_FuncCall>
     <attribute:startLine>
      <scalar:int>9</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>9</scalar:int>
     </attribute:endLine>
     <subNode:name>
      <node:Name>
       <attribute:startLine>
        <scalar:int>9</scalar:int>
       </attribute:startLine>
       <attribute:endLine>
        <scalar:int>9</scalar:int>
       </attribute:endLine>
       <subNode:parts>
        <scalar:array>
         <scalar:string>version_compare</scalar:string>
        </scalar:array>
       </subNode:parts>
      </node:Name>
     </subNode:name>
     <subNode:args>
      <scalar:array>
       <node:Arg>
        <attribute:startLine>
         <scalar:int>9</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>9</scalar:int>
        </attribute:endLine>
        <subNode:value>
         <node:Expr_ConstFetch>
          <attribute:startLine>
           <scalar:int>9</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>9</scalar:int>
          </attribute:endLine>
          <subNode:name>
           <node:Name>
            <attribute:startLine>
             <scalar:int>9</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>9</scalar:int>
            </attribute:endLine>
            <subNode:parts>
             <scalar:array>
              <scalar:string>PHP_VERSION</scalar:string>
             </scalar:array>
            </subNode:parts>
           </node:Name>
          </subNode:name>
         </node:Expr_ConstFetch>
        </subNode:value>
        <subNode:byRef>
         <scalar:false/>
        </subNode:byRef>
       </node:Arg>
       <node:Arg>
        <attribute:startLine>
         <scalar:int>9</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>9</scalar:int>
        </attribute:endLine>
        <subNode:value>
         <node:Scalar_String>
          <attribute:startLine>
           <scalar:int>9</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>9</scalar:int>
          </attribute:endLine>
          <subNode:value>
           <scalar:string>5.2.3</scalar:string>
          </subNode:value>
         </node:Scalar_String>
        </subNode:value>
        <subNode:byRef>
         <scalar:false/>
        </subNode:byRef>
       </node:Arg>
       <node:Arg>
        <attribute:startLine>
         <scalar:int>9</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>9</scalar:int>
        </attribute:endLine>
        <subNode:value>
         <node:Scalar_String>
          <attribute:startLine>
           <scalar:int>9</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>9</scalar:int>
          </attribute:endLine>
          <subNode:value>
           <scalar:string>&gt;=</scalar:string>
          </subNode:value>
         </node:Scalar_String>
        </subNode:value>
        <subNode:byRef>
         <scalar:false/>
        </subNode:byRef>
       </node:Arg>
      </scalar:array>
     </subNode:args>
    </node:Expr_FuncCall>
   </subNode:cond>
  </node:Stmt_If>
 </scalar:array>
</AST>
