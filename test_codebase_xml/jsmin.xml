<?xml version="1.0" encoding="UTF-8"?>
<AST xmlns:node="http://nikic.github.com/PHPParser/XML/node" xmlns:subNode="http://nikic.github.com/PHPParser/XML/subNode" xmlns:attribute="http://nikic.github.com/PHPParser/XML/attribute" xmlns:scalar="http://nikic.github.com/PHPParser/XML/scalar">
 <scalar:array>
  <node:Stmt_Class>
   <attribute:comments>
    <scalar:array>
     <comment isDocComment="true" line="2">/**
 * JSMin.php - modified PHP implementation of Douglas Crockford's JSMin.
 *
 * &lt;code&gt;
 * $minifiedJs = JSMin::minify($js);
 * &lt;/code&gt;
 *
 * This is a modified port of jsmin.c. Improvements:
 * 
 * Does not choke on some regexp literals containing quote characters. E.g. /'/
 * 
 * Spaces are preserved after some add/sub operators, so they are not mistakenly 
 * converted to post-inc/dec. E.g. a + ++b -&gt; a+ ++b
 *
 * Preserves multi-line comments that begin with /*!
 * 
 * PHP 5 or higher is required.
 *
 * Permission is hereby granted to use this version of the library under the
 * same terms as jsmin.c, which has the following license:
 *
 * --
 * Copyright (c) 2002 Douglas Crockford  (www.crockford.com)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the &quot;Software&quot;), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
 * of the Software, and to permit persons to whom the Software is furnished to do
 * so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * The Software shall be used for Good, not Evil.
 *
 * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 * --
 *
 * @package JSMin
 * @author Ryan Grove &lt;ryan@wonko.com&gt; (PHP port)
 * @author Steve Clay &lt;steve@mrclay.org&gt; (modifications + cleanup)
 * @author Andrea Giammarchi &lt;http://www.3site.eu&gt; (spaceBeforeRegExp)
 * @copyright 2002 Douglas Crockford &lt;douglas@crockford.com&gt; (jsmin.c)
 * @copyright 2008 Ryan Grove &lt;ryan@wonko.com&gt; (PHP port)
 * @license http://opensource.org/licenses/mit-license.php MIT License
 * @link http://code.google.com/p/jsmin-php/
 */</comment>
    </scalar:array>
   </attribute:comments>
   <attribute:startLine>
    <scalar:int>57</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>381</scalar:int>
   </attribute:endLine>
   <subNode:type>
    <scalar:int>0</scalar:int>
   </subNode:type>
   <subNode:extends>
    <scalar:null/>
   </subNode:extends>
   <subNode:implements>
    <scalar:array/>
   </subNode:implements>
   <subNode:stmts>
    <scalar:array>
     <node:Stmt_ClassConst>
      <attribute:startLine>
       <scalar:int>58</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>58</scalar:int>
      </attribute:endLine>
      <subNode:consts>
       <scalar:array>
        <node:Const>
         <attribute:startLine>
          <scalar:int>58</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>58</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>ORD_LF</scalar:string>
         </subNode:name>
         <subNode:value>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>58</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>58</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>10</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:value>
        </node:Const>
       </scalar:array>
      </subNode:consts>
     </node:Stmt_ClassConst>
     <node:Stmt_ClassConst>
      <attribute:startLine>
       <scalar:int>59</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>59</scalar:int>
      </attribute:endLine>
      <subNode:consts>
       <scalar:array>
        <node:Const>
         <attribute:startLine>
          <scalar:int>59</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>59</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>ORD_SPACE</scalar:string>
         </subNode:name>
         <subNode:value>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>59</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>59</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>32</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:value>
        </node:Const>
       </scalar:array>
      </subNode:consts>
     </node:Stmt_ClassConst>
     <node:Stmt_ClassConst>
      <attribute:startLine>
       <scalar:int>60</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>60</scalar:int>
      </attribute:endLine>
      <subNode:consts>
       <scalar:array>
        <node:Const>
         <attribute:startLine>
          <scalar:int>60</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>60</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>ACTION_KEEP_A</scalar:string>
         </subNode:name>
         <subNode:value>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>60</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>60</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>1</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:value>
        </node:Const>
       </scalar:array>
      </subNode:consts>
     </node:Stmt_ClassConst>
     <node:Stmt_ClassConst>
      <attribute:startLine>
       <scalar:int>61</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>61</scalar:int>
      </attribute:endLine>
      <subNode:consts>
       <scalar:array>
        <node:Const>
         <attribute:startLine>
          <scalar:int>61</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>61</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>ACTION_DELETE_A</scalar:string>
         </subNode:name>
         <subNode:value>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>61</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>61</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>2</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:value>
        </node:Const>
       </scalar:array>
      </subNode:consts>
     </node:Stmt_ClassConst>
     <node:Stmt_ClassConst>
      <attribute:startLine>
       <scalar:int>62</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>62</scalar:int>
      </attribute:endLine>
      <subNode:consts>
       <scalar:array>
        <node:Const>
         <attribute:startLine>
          <scalar:int>62</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>62</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>ACTION_DELETE_A_B</scalar:string>
         </subNode:name>
         <subNode:value>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>62</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>62</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>3</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:value>
        </node:Const>
       </scalar:array>
      </subNode:consts>
     </node:Stmt_ClassConst>
     <node:Stmt_Property>
      <attribute:startLine>
       <scalar:int>64</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>64</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>64</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>64</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>a</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>64</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>64</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>
</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:startLine>
       <scalar:int>65</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>65</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>65</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>65</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>b</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>65</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>65</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string></scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:startLine>
       <scalar:int>66</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>66</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>66</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>66</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>input</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>66</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>66</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string></scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:startLine>
       <scalar:int>67</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>67</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>67</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>67</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>inputIndex</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>67</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>67</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>0</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:startLine>
       <scalar:int>68</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>68</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>68</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>68</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>inputLength</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>68</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>68</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>0</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:startLine>
       <scalar:int>69</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>69</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>69</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>69</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>lookAhead</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>69</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>69</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>69</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>69</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:startLine>
       <scalar:int>70</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>70</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>70</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>70</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>output</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>70</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>70</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string></scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:startLine>
       <scalar:int>71</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>71</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>71</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>71</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>lastByteOut</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>71</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>71</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string></scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="73">/**
     * Minify Javascript.
     *
     * @param string $js Javascript to be minified
     *
     * @return string
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>80</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>84</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>9</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>80</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>80</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>js</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>82</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>82</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>82</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>82</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>jsmin</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_New>
           <attribute:startLine>
            <scalar:int>82</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>82</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>82</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>82</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>JSMin</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>82</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>82</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>82</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>82</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>js</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_New>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>83</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>83</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>83</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>83</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>83</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>83</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>jsmin</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>min</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>minify</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="86">/**
     * @param string $input
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>89</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>92</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>89</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>89</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>input</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>91</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>91</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>91</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>91</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>91</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>91</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>input</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>91</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>91</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>input</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Expr_Assign>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>__construct</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="94">/**
     * Perform minification, return result
     *
     * @return string
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>99</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>151</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>101</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>103</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:comments>
             <scalar:array>
              <comment isDocComment="false" line="101">// min already run
</comment>
             </scalar:array>
            </attribute:comments>
            <attribute:startLine>
             <scalar:int>102</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>102</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>102</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>102</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>102</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>102</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>output</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_NotIdentical>
           <attribute:startLine>
            <scalar:int>101</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>101</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>101</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>101</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>101</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>101</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>output</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:left>
           <subNode:right>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>101</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>101</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string></scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:right>
          </node:Expr_NotIdentical>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>105</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>105</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>105</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>105</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>mbIntEnc</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>105</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>105</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>105</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>105</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>106</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>109</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>107</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>107</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>107</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>107</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>mbIntEnc</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>107</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>107</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>107</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>107</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>mb_internal_encoding</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array/>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_FuncCall>
            <attribute:startLine>
             <scalar:int>108</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>108</scalar:int>
            </attribute:endLine>
            <subNode:name>
             <node:Name>
              <attribute:startLine>
               <scalar:int>108</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>108</scalar:int>
              </attribute:endLine>
              <subNode:parts>
               <scalar:array>
                <scalar:string>mb_internal_encoding</scalar:string>
               </scalar:array>
              </subNode:parts>
             </node:Name>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>108</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>108</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>108</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>108</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>8bit</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_FuncCall>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanAnd>
           <attribute:startLine>
            <scalar:int>106</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>106</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>106</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>106</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>106</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>106</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>function_exists</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>106</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>106</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>106</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>106</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>mb_strlen</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:left>
           <subNode:right>
            <node:Expr_BitwiseAnd>
             <attribute:startLine>
              <scalar:int>106</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>106</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_Cast_Int>
               <attribute:startLine>
                <scalar:int>106</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>106</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_FuncCall>
                 <attribute:startLine>
                  <scalar:int>106</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>106</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>106</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>106</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>ini_get</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>106</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>106</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Scalar_String>
                      <attribute:startLine>
                       <scalar:int>106</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>106</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <scalar:string>mbstring.func_overload</scalar:string>
                      </subNode:value>
                     </node:Scalar_String>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_FuncCall>
               </subNode:expr>
              </node:Expr_Cast_Int>
             </subNode:left>
             <subNode:right>
              <node:Scalar_LNumber>
               <attribute:startLine>
                <scalar:int>106</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>106</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <scalar:int>2</scalar:int>
               </subNode:value>
              </node:Scalar_LNumber>
             </subNode:right>
            </node:Expr_BitwiseAnd>
           </subNode:right>
          </node:Expr_BooleanAnd>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>110</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>110</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>110</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>110</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>110</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>110</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>input</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>110</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>110</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>110</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>110</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>str_replace</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>110</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>110</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>110</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>110</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>&#13;
</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>110</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>110</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>110</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>110</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>
</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>110</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>110</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>110</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>110</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>110</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>110</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>input</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>111</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>111</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>111</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>111</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>111</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>111</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>inputLength</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>111</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>111</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>111</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>111</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>strlen</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>111</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>111</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>111</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>111</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>111</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>111</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>input</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>113</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>113</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>113</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>113</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>action</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>113</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>113</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_ClassConstFetch>
              <attribute:startLine>
               <scalar:int>113</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>113</scalar:int>
              </attribute:endLine>
              <subNode:class>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>113</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>113</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>self</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:class>
              <subNode:name>
               <scalar:string>ACTION_DELETE_A_B</scalar:string>
              </subNode:name>
             </node:Expr_ClassConstFetch>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Stmt_While>
         <attribute:startLine>
          <scalar:int>115</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>144</scalar:int>
         </attribute:endLine>
         <subNode:cond>
          <node:Expr_NotIdentical>
           <attribute:startLine>
            <scalar:int>115</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>115</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>115</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>115</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>115</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>115</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>a</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:left>
           <subNode:right>
            <node:Expr_ConstFetch>
             <attribute:startLine>
              <scalar:int>115</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>115</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>115</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>115</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>null</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
            </node:Expr_ConstFetch>
           </subNode:right>
          </node:Expr_NotIdentical>
         </subNode:cond>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:comments>
             <scalar:array>
              <comment isDocComment="false" line="116">// determine next command
</comment>
             </scalar:array>
            </attribute:comments>
            <attribute:startLine>
             <scalar:int>117</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>117</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:comments>
               <scalar:array>
                <comment isDocComment="false" line="116">// determine next command
</comment>
               </scalar:array>
              </attribute:comments>
              <attribute:startLine>
               <scalar:int>117</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>117</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>command</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_ClassConstFetch>
              <attribute:startLine>
               <scalar:int>117</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>117</scalar:int>
              </attribute:endLine>
              <subNode:class>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>117</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>117</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>self</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:class>
              <subNode:name>
               <scalar:string>ACTION_KEEP_A</scalar:string>
              </subNode:name>
             </node:Expr_ClassConstFetch>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Stmt_If>
            <attribute:comments>
             <scalar:array>
              <comment isDocComment="false" line="117">// default
</comment>
             </scalar:array>
            </attribute:comments>
            <attribute:startLine>
             <scalar:int>118</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>142</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_If>
               <attribute:startLine>
                <scalar:int>119</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>125</scalar:int>
               </attribute:endLine>
               <subNode:stmts>
                <scalar:array/>
               </subNode:stmts>
               <subNode:elseifs>
                <scalar:array>
                 <node:Stmt_ElseIf>
                  <attribute:startLine>
                   <scalar:int>123</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>125</scalar:int>
                  </attribute:endLine>
                  <subNode:cond>
                   <node:Expr_BooleanNot>
                    <attribute:startLine>
                     <scalar:int>123</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>123</scalar:int>
                    </attribute:endLine>
                    <subNode:expr>
                     <node:Expr_MethodCall>
                      <attribute:startLine>
                       <scalar:int>123</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>123</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>123</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>123</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>this</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>isAlphaNum</scalar:string>
                      </subNode:name>
                      <subNode:args>
                       <scalar:array>
                        <node:Arg>
                         <attribute:startLine>
                          <scalar:int>123</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>123</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <node:Expr_PropertyFetch>
                           <attribute:startLine>
                            <scalar:int>123</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>123</scalar:int>
                           </attribute:endLine>
                           <subNode:var>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>123</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>123</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>this</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:var>
                           <subNode:name>
                            <scalar:string>b</scalar:string>
                           </subNode:name>
                          </node:Expr_PropertyFetch>
                         </subNode:value>
                         <subNode:byRef>
                          <scalar:false/>
                         </subNode:byRef>
                        </node:Arg>
                       </scalar:array>
                      </subNode:args>
                     </node:Expr_MethodCall>
                    </subNode:expr>
                   </node:Expr_BooleanNot>
                  </subNode:cond>
                  <subNode:stmts>
                   <scalar:array>
                    <node:Expr_Assign>
                     <attribute:startLine>
                      <scalar:int>124</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>124</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>124</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>124</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>command</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:expr>
                      <node:Expr_ClassConstFetch>
                       <attribute:startLine>
                        <scalar:int>124</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>124</scalar:int>
                       </attribute:endLine>
                       <subNode:class>
                        <node:Name>
                         <attribute:startLine>
                          <scalar:int>124</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>124</scalar:int>
                         </attribute:endLine>
                         <subNode:parts>
                          <scalar:array>
                           <scalar:string>self</scalar:string>
                          </scalar:array>
                         </subNode:parts>
                        </node:Name>
                       </subNode:class>
                       <subNode:name>
                        <scalar:string>ACTION_DELETE_A</scalar:string>
                       </subNode:name>
                      </node:Expr_ClassConstFetch>
                     </subNode:expr>
                    </node:Expr_Assign>
                   </scalar:array>
                  </subNode:stmts>
                 </node:Stmt_ElseIf>
                </scalar:array>
               </subNode:elseifs>
               <subNode:else>
                <scalar:null/>
               </subNode:else>
               <subNode:cond>
                <node:Expr_BooleanAnd>
                 <attribute:startLine>
                  <scalar:int>119</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>120</scalar:int>
                 </attribute:endLine>
                 <subNode:left>
                  <node:Expr_BooleanOr>
                   <attribute:startLine>
                    <scalar:int>119</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>119</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Expr_Identical>
                     <attribute:startLine>
                      <scalar:int>119</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>119</scalar:int>
                     </attribute:endLine>
                     <subNode:left>
                      <node:Expr_PropertyFetch>
                       <attribute:startLine>
                        <scalar:int>119</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>119</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>119</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>119</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>this</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:name>
                        <scalar:string>lastByteOut</scalar:string>
                       </subNode:name>
                      </node:Expr_PropertyFetch>
                     </subNode:left>
                     <subNode:right>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>119</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>119</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>+</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:right>
                    </node:Expr_Identical>
                   </subNode:left>
                   <subNode:right>
                    <node:Expr_Identical>
                     <attribute:startLine>
                      <scalar:int>119</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>119</scalar:int>
                     </attribute:endLine>
                     <subNode:left>
                      <node:Expr_PropertyFetch>
                       <attribute:startLine>
                        <scalar:int>119</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>119</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>119</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>119</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>this</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:name>
                        <scalar:string>lastByteOut</scalar:string>
                       </subNode:name>
                      </node:Expr_PropertyFetch>
                     </subNode:left>
                     <subNode:right>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>119</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>119</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>-</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:right>
                    </node:Expr_Identical>
                   </subNode:right>
                  </node:Expr_BooleanOr>
                 </subNode:left>
                 <subNode:right>
                  <node:Expr_Identical>
                   <attribute:startLine>
                    <scalar:int>120</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>120</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Expr_PropertyFetch>
                     <attribute:startLine>
                      <scalar:int>120</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>120</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>120</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>120</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>this</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>b</scalar:string>
                     </subNode:name>
                    </node:Expr_PropertyFetch>
                   </subNode:left>
                   <subNode:right>
                    <node:Expr_PropertyFetch>
                     <attribute:startLine>
                      <scalar:int>120</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>120</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>120</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>120</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>this</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>lastByteOut</scalar:string>
                     </subNode:name>
                    </node:Expr_PropertyFetch>
                   </subNode:right>
                  </node:Expr_Identical>
                 </subNode:right>
                </node:Expr_BooleanAnd>
               </subNode:cond>
              </node:Stmt_If>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array>
              <node:Stmt_ElseIf>
               <attribute:startLine>
                <scalar:int>126</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>136</scalar:int>
               </attribute:endLine>
               <subNode:cond>
                <node:Expr_Identical>
                 <attribute:startLine>
                  <scalar:int>126</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>126</scalar:int>
                 </attribute:endLine>
                 <subNode:left>
                  <node:Expr_PropertyFetch>
                   <attribute:startLine>
                    <scalar:int>126</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>126</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>126</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>126</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>a</scalar:string>
                   </subNode:name>
                  </node:Expr_PropertyFetch>
                 </subNode:left>
                 <subNode:right>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>126</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>126</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>
</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:right>
                </node:Expr_Identical>
               </subNode:cond>
               <subNode:stmts>
                <scalar:array>
                 <node:Stmt_If>
                  <attribute:startLine>
                   <scalar:int>127</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>135</scalar:int>
                  </attribute:endLine>
                  <subNode:stmts>
                   <scalar:array>
                    <node:Expr_Assign>
                     <attribute:startLine>
                      <scalar:int>128</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>128</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>128</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>128</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>command</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:expr>
                      <node:Expr_ClassConstFetch>
                       <attribute:startLine>
                        <scalar:int>128</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>128</scalar:int>
                       </attribute:endLine>
                       <subNode:class>
                        <node:Name>
                         <attribute:startLine>
                          <scalar:int>128</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>128</scalar:int>
                         </attribute:endLine>
                         <subNode:parts>
                          <scalar:array>
                           <scalar:string>self</scalar:string>
                          </scalar:array>
                         </subNode:parts>
                        </node:Name>
                       </subNode:class>
                       <subNode:name>
                        <scalar:string>ACTION_DELETE_A_B</scalar:string>
                       </subNode:name>
                      </node:Expr_ClassConstFetch>
                     </subNode:expr>
                    </node:Expr_Assign>
                   </scalar:array>
                  </subNode:stmts>
                  <subNode:elseifs>
                   <scalar:array>
                    <node:Stmt_ElseIf>
                     <attribute:startLine>
                      <scalar:int>131</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>135</scalar:int>
                     </attribute:endLine>
                     <subNode:cond>
                      <node:Expr_BooleanOr>
                       <attribute:startLine>
                        <scalar:int>131</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>133</scalar:int>
                       </attribute:endLine>
                       <subNode:left>
                        <node:Expr_Identical>
                         <attribute:startLine>
                          <scalar:int>131</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>131</scalar:int>
                         </attribute:endLine>
                         <subNode:left>
                          <node:Expr_PropertyFetch>
                           <attribute:startLine>
                            <scalar:int>131</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>131</scalar:int>
                           </attribute:endLine>
                           <subNode:var>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>131</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>131</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>this</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:var>
                           <subNode:name>
                            <scalar:string>b</scalar:string>
                           </subNode:name>
                          </node:Expr_PropertyFetch>
                         </subNode:left>
                         <subNode:right>
                          <node:Expr_ConstFetch>
                           <attribute:startLine>
                            <scalar:int>131</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>131</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <node:Name>
                             <attribute:startLine>
                              <scalar:int>131</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>131</scalar:int>
                             </attribute:endLine>
                             <subNode:parts>
                              <scalar:array>
                               <scalar:string>null</scalar:string>
                              </scalar:array>
                             </subNode:parts>
                            </node:Name>
                           </subNode:name>
                          </node:Expr_ConstFetch>
                         </subNode:right>
                        </node:Expr_Identical>
                       </subNode:left>
                       <subNode:right>
                        <node:Expr_BooleanAnd>
                         <attribute:startLine>
                          <scalar:int>132</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>133</scalar:int>
                         </attribute:endLine>
                         <subNode:left>
                          <node:Expr_Identical>
                           <attribute:startLine>
                            <scalar:int>132</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>132</scalar:int>
                           </attribute:endLine>
                           <subNode:left>
                            <node:Expr_ConstFetch>
                             <attribute:startLine>
                              <scalar:int>132</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>132</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <node:Name>
                               <attribute:startLine>
                                <scalar:int>132</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>132</scalar:int>
                               </attribute:endLine>
                               <subNode:parts>
                                <scalar:array>
                                 <scalar:string>false</scalar:string>
                                </scalar:array>
                               </subNode:parts>
                              </node:Name>
                             </subNode:name>
                            </node:Expr_ConstFetch>
                           </subNode:left>
                           <subNode:right>
                            <node:Expr_FuncCall>
                             <attribute:startLine>
                              <scalar:int>132</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>132</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <node:Name>
                               <attribute:startLine>
                                <scalar:int>132</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>132</scalar:int>
                               </attribute:endLine>
                               <subNode:parts>
                                <scalar:array>
                                 <scalar:string>strpos</scalar:string>
                                </scalar:array>
                               </subNode:parts>
                              </node:Name>
                             </subNode:name>
                             <subNode:args>
                              <scalar:array>
                               <node:Arg>
                                <attribute:startLine>
                                 <scalar:int>132</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>132</scalar:int>
                                </attribute:endLine>
                                <subNode:value>
                                 <node:Scalar_String>
                                  <attribute:startLine>
                                   <scalar:int>132</scalar:int>
                                  </attribute:startLine>
                                  <attribute:endLine>
                                   <scalar:int>132</scalar:int>
                                  </attribute:endLine>
                                  <subNode:value>
                                   <scalar:string>{[(+-</scalar:string>
                                  </subNode:value>
                                 </node:Scalar_String>
                                </subNode:value>
                                <subNode:byRef>
                                 <scalar:false/>
                                </subNode:byRef>
                               </node:Arg>
                               <node:Arg>
                                <attribute:startLine>
                                 <scalar:int>132</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>132</scalar:int>
                                </attribute:endLine>
                                <subNode:value>
                                 <node:Expr_PropertyFetch>
                                  <attribute:startLine>
                                   <scalar:int>132</scalar:int>
                                  </attribute:startLine>
                                  <attribute:endLine>
                                   <scalar:int>132</scalar:int>
                                  </attribute:endLine>
                                  <subNode:var>
                                   <node:Expr_Variable>
                                    <attribute:startLine>
                                     <scalar:int>132</scalar:int>
                                    </attribute:startLine>
                                    <attribute:endLine>
                                     <scalar:int>132</scalar:int>
                                    </attribute:endLine>
                                    <subNode:name>
                                     <scalar:string>this</scalar:string>
                                    </subNode:name>
                                   </node:Expr_Variable>
                                  </subNode:var>
                                  <subNode:name>
                                   <scalar:string>b</scalar:string>
                                  </subNode:name>
                                 </node:Expr_PropertyFetch>
                                </subNode:value>
                                <subNode:byRef>
                                 <scalar:false/>
                                </subNode:byRef>
                               </node:Arg>
                              </scalar:array>
                             </subNode:args>
                            </node:Expr_FuncCall>
                           </subNode:right>
                          </node:Expr_Identical>
                         </subNode:left>
                         <subNode:right>
                          <node:Expr_BooleanNot>
                           <attribute:startLine>
                            <scalar:int>133</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>133</scalar:int>
                           </attribute:endLine>
                           <subNode:expr>
                            <node:Expr_MethodCall>
                             <attribute:startLine>
                              <scalar:int>133</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>133</scalar:int>
                             </attribute:endLine>
                             <subNode:var>
                              <node:Expr_Variable>
                               <attribute:startLine>
                                <scalar:int>133</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>133</scalar:int>
                               </attribute:endLine>
                               <subNode:name>
                                <scalar:string>this</scalar:string>
                               </subNode:name>
                              </node:Expr_Variable>
                             </subNode:var>
                             <subNode:name>
                              <scalar:string>isAlphaNum</scalar:string>
                             </subNode:name>
                             <subNode:args>
                              <scalar:array>
                               <node:Arg>
                                <attribute:startLine>
                                 <scalar:int>133</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>133</scalar:int>
                                </attribute:endLine>
                                <subNode:value>
                                 <node:Expr_PropertyFetch>
                                  <attribute:startLine>
                                   <scalar:int>133</scalar:int>
                                  </attribute:startLine>
                                  <attribute:endLine>
                                   <scalar:int>133</scalar:int>
                                  </attribute:endLine>
                                  <subNode:var>
                                   <node:Expr_Variable>
                                    <attribute:startLine>
                                     <scalar:int>133</scalar:int>
                                    </attribute:startLine>
                                    <attribute:endLine>
                                     <scalar:int>133</scalar:int>
                                    </attribute:endLine>
                                    <subNode:name>
                                     <scalar:string>this</scalar:string>
                                    </subNode:name>
                                   </node:Expr_Variable>
                                  </subNode:var>
                                  <subNode:name>
                                   <scalar:string>b</scalar:string>
                                  </subNode:name>
                                 </node:Expr_PropertyFetch>
                                </subNode:value>
                                <subNode:byRef>
                                 <scalar:false/>
                                </subNode:byRef>
                               </node:Arg>
                              </scalar:array>
                             </subNode:args>
                            </node:Expr_MethodCall>
                           </subNode:expr>
                          </node:Expr_BooleanNot>
                         </subNode:right>
                        </node:Expr_BooleanAnd>
                       </subNode:right>
                      </node:Expr_BooleanOr>
                     </subNode:cond>
                     <subNode:stmts>
                      <scalar:array>
                       <node:Expr_Assign>
                        <attribute:startLine>
                         <scalar:int>134</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>134</scalar:int>
                        </attribute:endLine>
                        <subNode:var>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>134</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>134</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>command</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:var>
                        <subNode:expr>
                         <node:Expr_ClassConstFetch>
                          <attribute:startLine>
                           <scalar:int>134</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>134</scalar:int>
                          </attribute:endLine>
                          <subNode:class>
                           <node:Name>
                            <attribute:startLine>
                             <scalar:int>134</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>134</scalar:int>
                            </attribute:endLine>
                            <subNode:parts>
                             <scalar:array>
                              <scalar:string>self</scalar:string>
                             </scalar:array>
                            </subNode:parts>
                           </node:Name>
                          </subNode:class>
                          <subNode:name>
                           <scalar:string>ACTION_DELETE_A</scalar:string>
                          </subNode:name>
                         </node:Expr_ClassConstFetch>
                        </subNode:expr>
                       </node:Expr_Assign>
                      </scalar:array>
                     </subNode:stmts>
                    </node:Stmt_ElseIf>
                   </scalar:array>
                  </subNode:elseifs>
                  <subNode:else>
                   <scalar:null/>
                  </subNode:else>
                  <subNode:cond>
                   <node:Expr_Identical>
                    <attribute:startLine>
                     <scalar:int>127</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>127</scalar:int>
                    </attribute:endLine>
                    <subNode:left>
                     <node:Expr_PropertyFetch>
                      <attribute:startLine>
                       <scalar:int>127</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>127</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>127</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>127</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>this</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>b</scalar:string>
                      </subNode:name>
                     </node:Expr_PropertyFetch>
                    </subNode:left>
                    <subNode:right>
                     <node:Scalar_String>
                      <attribute:startLine>
                       <scalar:int>127</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>127</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <scalar:string> </scalar:string>
                      </subNode:value>
                     </node:Scalar_String>
                    </subNode:right>
                   </node:Expr_Identical>
                  </subNode:cond>
                 </node:Stmt_If>
                </scalar:array>
               </subNode:stmts>
              </node:Stmt_ElseIf>
              <node:Stmt_ElseIf>
               <attribute:startLine>
                <scalar:int>136</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>142</scalar:int>
               </attribute:endLine>
               <subNode:cond>
                <node:Expr_BooleanNot>
                 <attribute:startLine>
                  <scalar:int>136</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>136</scalar:int>
                 </attribute:endLine>
                 <subNode:expr>
                  <node:Expr_MethodCall>
                   <attribute:startLine>
                    <scalar:int>136</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>136</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>136</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>136</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>isAlphaNum</scalar:string>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>136</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>136</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_PropertyFetch>
                        <attribute:startLine>
                         <scalar:int>136</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>136</scalar:int>
                        </attribute:endLine>
                        <subNode:var>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>136</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>136</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>this</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:var>
                        <subNode:name>
                         <scalar:string>a</scalar:string>
                        </subNode:name>
                       </node:Expr_PropertyFetch>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                    </scalar:array>
                   </subNode:args>
                  </node:Expr_MethodCall>
                 </subNode:expr>
                </node:Expr_BooleanNot>
               </subNode:cond>
               <subNode:stmts>
                <scalar:array>
                 <node:Stmt_If>
                  <attribute:startLine>
                   <scalar:int>137</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>141</scalar:int>
                  </attribute:endLine>
                  <subNode:stmts>
                   <scalar:array>
                    <node:Expr_Assign>
                     <attribute:startLine>
                      <scalar:int>140</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>140</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>140</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>140</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>command</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:expr>
                      <node:Expr_ClassConstFetch>
                       <attribute:startLine>
                        <scalar:int>140</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>140</scalar:int>
                       </attribute:endLine>
                       <subNode:class>
                        <node:Name>
                         <attribute:startLine>
                          <scalar:int>140</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>140</scalar:int>
                         </attribute:endLine>
                         <subNode:parts>
                          <scalar:array>
                           <scalar:string>self</scalar:string>
                          </scalar:array>
                         </subNode:parts>
                        </node:Name>
                       </subNode:class>
                       <subNode:name>
                        <scalar:string>ACTION_DELETE_A_B</scalar:string>
                       </subNode:name>
                      </node:Expr_ClassConstFetch>
                     </subNode:expr>
                    </node:Expr_Assign>
                   </scalar:array>
                  </subNode:stmts>
                  <subNode:elseifs>
                   <scalar:array/>
                  </subNode:elseifs>
                  <subNode:else>
                   <scalar:null/>
                  </subNode:else>
                  <subNode:cond>
                   <node:Expr_BooleanOr>
                    <attribute:startLine>
                     <scalar:int>137</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>139</scalar:int>
                    </attribute:endLine>
                    <subNode:left>
                     <node:Expr_Identical>
                      <attribute:startLine>
                       <scalar:int>137</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>137</scalar:int>
                      </attribute:endLine>
                      <subNode:left>
                       <node:Expr_PropertyFetch>
                        <attribute:startLine>
                         <scalar:int>137</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>137</scalar:int>
                        </attribute:endLine>
                        <subNode:var>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>137</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>137</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>this</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:var>
                        <subNode:name>
                         <scalar:string>b</scalar:string>
                        </subNode:name>
                       </node:Expr_PropertyFetch>
                      </subNode:left>
                      <subNode:right>
                       <node:Scalar_String>
                        <attribute:startLine>
                         <scalar:int>137</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>137</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <scalar:string> </scalar:string>
                        </subNode:value>
                       </node:Scalar_String>
                      </subNode:right>
                     </node:Expr_Identical>
                    </subNode:left>
                    <subNode:right>
                     <node:Expr_BooleanAnd>
                      <attribute:startLine>
                       <scalar:int>138</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>139</scalar:int>
                      </attribute:endLine>
                      <subNode:left>
                       <node:Expr_Identical>
                        <attribute:startLine>
                         <scalar:int>138</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>138</scalar:int>
                        </attribute:endLine>
                        <subNode:left>
                         <node:Expr_PropertyFetch>
                          <attribute:startLine>
                           <scalar:int>138</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>138</scalar:int>
                          </attribute:endLine>
                          <subNode:var>
                           <node:Expr_Variable>
                            <attribute:startLine>
                             <scalar:int>138</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>138</scalar:int>
                            </attribute:endLine>
                            <subNode:name>
                             <scalar:string>this</scalar:string>
                            </subNode:name>
                           </node:Expr_Variable>
                          </subNode:var>
                          <subNode:name>
                           <scalar:string>b</scalar:string>
                          </subNode:name>
                         </node:Expr_PropertyFetch>
                        </subNode:left>
                        <subNode:right>
                         <node:Scalar_String>
                          <attribute:startLine>
                           <scalar:int>138</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>138</scalar:int>
                          </attribute:endLine>
                          <subNode:value>
                           <scalar:string>
</scalar:string>
                          </subNode:value>
                         </node:Scalar_String>
                        </subNode:right>
                       </node:Expr_Identical>
                      </subNode:left>
                      <subNode:right>
                       <node:Expr_Identical>
                        <attribute:startLine>
                         <scalar:int>139</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>139</scalar:int>
                        </attribute:endLine>
                        <subNode:left>
                         <node:Expr_ConstFetch>
                          <attribute:startLine>
                           <scalar:int>139</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>139</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <node:Name>
                            <attribute:startLine>
                             <scalar:int>139</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>139</scalar:int>
                            </attribute:endLine>
                            <subNode:parts>
                             <scalar:array>
                              <scalar:string>false</scalar:string>
                             </scalar:array>
                            </subNode:parts>
                           </node:Name>
                          </subNode:name>
                         </node:Expr_ConstFetch>
                        </subNode:left>
                        <subNode:right>
                         <node:Expr_FuncCall>
                          <attribute:startLine>
                           <scalar:int>139</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>139</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <node:Name>
                            <attribute:startLine>
                             <scalar:int>139</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>139</scalar:int>
                            </attribute:endLine>
                            <subNode:parts>
                             <scalar:array>
                              <scalar:string>strpos</scalar:string>
                             </scalar:array>
                            </subNode:parts>
                           </node:Name>
                          </subNode:name>
                          <subNode:args>
                           <scalar:array>
                            <node:Arg>
                             <attribute:startLine>
                              <scalar:int>139</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>139</scalar:int>
                             </attribute:endLine>
                             <subNode:value>
                              <node:Scalar_String>
                               <attribute:startLine>
                                <scalar:int>139</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>139</scalar:int>
                               </attribute:endLine>
                               <subNode:value>
                                <scalar:string>}])+-&quot;'</scalar:string>
                               </subNode:value>
                              </node:Scalar_String>
                             </subNode:value>
                             <subNode:byRef>
                              <scalar:false/>
                             </subNode:byRef>
                            </node:Arg>
                            <node:Arg>
                             <attribute:startLine>
                              <scalar:int>139</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>139</scalar:int>
                             </attribute:endLine>
                             <subNode:value>
                              <node:Expr_PropertyFetch>
                               <attribute:startLine>
                                <scalar:int>139</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>139</scalar:int>
                               </attribute:endLine>
                               <subNode:var>
                                <node:Expr_Variable>
                                 <attribute:startLine>
                                  <scalar:int>139</scalar:int>
                                 </attribute:startLine>
                                 <attribute:endLine>
                                  <scalar:int>139</scalar:int>
                                 </attribute:endLine>
                                 <subNode:name>
                                  <scalar:string>this</scalar:string>
                                 </subNode:name>
                                </node:Expr_Variable>
                               </subNode:var>
                               <subNode:name>
                                <scalar:string>a</scalar:string>
                               </subNode:name>
                              </node:Expr_PropertyFetch>
                             </subNode:value>
                             <subNode:byRef>
                              <scalar:false/>
                             </subNode:byRef>
                            </node:Arg>
                           </scalar:array>
                          </subNode:args>
                         </node:Expr_FuncCall>
                        </subNode:right>
                       </node:Expr_Identical>
                      </subNode:right>
                     </node:Expr_BooleanAnd>
                    </subNode:right>
                   </node:Expr_BooleanOr>
                  </subNode:cond>
                 </node:Stmt_If>
                </scalar:array>
               </subNode:stmts>
              </node:Stmt_ElseIf>
             </scalar:array>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_Identical>
              <attribute:startLine>
               <scalar:int>118</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>118</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>118</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>118</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>118</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>118</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>a</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:left>
              <subNode:right>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>118</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>118</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string> </scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:right>
             </node:Expr_Identical>
            </subNode:cond>
           </node:Stmt_If>
           <node:Expr_MethodCall>
            <attribute:startLine>
             <scalar:int>143</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>143</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>143</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>143</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>this</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:name>
             <scalar:string>action</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>143</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>143</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>143</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>143</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>command</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_MethodCall>
          </scalar:array>
         </subNode:stmts>
        </node:Stmt_While>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>145</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>145</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>145</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>145</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>145</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>145</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>output</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>145</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>145</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>145</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>145</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>trim</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>145</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>145</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>145</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>145</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>145</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>145</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>output</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>147</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>149</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_FuncCall>
            <attribute:startLine>
             <scalar:int>148</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>148</scalar:int>
            </attribute:endLine>
            <subNode:name>
             <node:Name>
              <attribute:startLine>
               <scalar:int>148</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>148</scalar:int>
              </attribute:endLine>
              <subNode:parts>
               <scalar:array>
                <scalar:string>mb_internal_encoding</scalar:string>
               </scalar:array>
              </subNode:parts>
             </node:Name>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>148</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>148</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>148</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>148</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>mbIntEnc</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_FuncCall>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_NotIdentical>
           <attribute:startLine>
            <scalar:int>147</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>147</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>147</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>147</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>mbIntEnc</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:left>
           <subNode:right>
            <node:Expr_ConstFetch>
             <attribute:startLine>
              <scalar:int>147</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>147</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>147</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>147</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>null</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
            </node:Expr_ConstFetch>
           </subNode:right>
          </node:Expr_NotIdentical>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>150</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>150</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>150</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>150</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>150</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>150</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>output</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>min</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="153">/**
     * ACTION_KEEP_A = Output A. Copy B to A. Get the next B.
     * ACTION_DELETE_A = Copy B to A. Get the next B.
     * ACTION_DELETE_A_B = Get the next B.
     *
     * @param int $command
     * @throws JSMin_UnterminatedRegExpException|JSMin_UnterminatedStringException
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>161</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>233</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>161</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>161</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>command</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>163</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>172</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_If>
            <attribute:comments>
             <scalar:array>
              <comment isDocComment="false" line="166">// Note: we're at an addition/substraction operator; the inputIndex
</comment>
              <comment isDocComment="false" line="167">// will certainly be a valid index
</comment>
             </scalar:array>
            </attribute:comments>
            <attribute:startLine>
             <scalar:int>168</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>171</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_Assign>
               <attribute:comments>
                <scalar:array>
                 <comment isDocComment="false" line="169">// This is &quot;+ +&quot; or &quot;- -&quot;. Don't delete the space.
</comment>
                </scalar:array>
               </attribute:comments>
               <attribute:startLine>
                <scalar:int>170</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>170</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:comments>
                  <scalar:array>
                   <comment isDocComment="false" line="169">// This is &quot;+ +&quot; or &quot;- -&quot;. Don't delete the space.
</comment>
                  </scalar:array>
                 </attribute:comments>
                 <attribute:startLine>
                  <scalar:int>170</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>170</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>command</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:expr>
                <node:Expr_ClassConstFetch>
                 <attribute:startLine>
                  <scalar:int>170</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>170</scalar:int>
                 </attribute:endLine>
                 <subNode:class>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>170</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>170</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>self</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:class>
                 <subNode:name>
                  <scalar:string>ACTION_KEEP_A</scalar:string>
                 </subNode:name>
                </node:Expr_ClassConstFetch>
               </subNode:expr>
              </node:Expr_Assign>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_Identical>
              <attribute:startLine>
               <scalar:int>168</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>168</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_ArrayDimFetch>
                <attribute:startLine>
                 <scalar:int>168</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>168</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_PropertyFetch>
                  <attribute:startLine>
                   <scalar:int>168</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>168</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>168</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>168</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>this</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>input</scalar:string>
                  </subNode:name>
                 </node:Expr_PropertyFetch>
                </subNode:var>
                <subNode:dim>
                 <node:Expr_PropertyFetch>
                  <attribute:startLine>
                   <scalar:int>168</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>168</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>168</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>168</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>this</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>inputIndex</scalar:string>
                  </subNode:name>
                 </node:Expr_PropertyFetch>
                </subNode:dim>
               </node:Expr_ArrayDimFetch>
              </subNode:left>
              <subNode:right>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>168</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>168</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>168</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>168</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>a</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:right>
             </node:Expr_Identical>
            </subNode:cond>
           </node:Stmt_If>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanAnd>
           <attribute:startLine>
            <scalar:int>163</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>165</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_BooleanAnd>
             <attribute:startLine>
              <scalar:int>163</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>164</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_Identical>
               <attribute:startLine>
                <scalar:int>163</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>163</scalar:int>
               </attribute:endLine>
               <subNode:left>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>163</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>163</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>command</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:left>
               <subNode:right>
                <node:Expr_ClassConstFetch>
                 <attribute:startLine>
                  <scalar:int>163</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>163</scalar:int>
                 </attribute:endLine>
                 <subNode:class>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>163</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>163</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>self</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:class>
                 <subNode:name>
                  <scalar:string>ACTION_DELETE_A_B</scalar:string>
                 </subNode:name>
                </node:Expr_ClassConstFetch>
               </subNode:right>
              </node:Expr_Identical>
             </subNode:left>
             <subNode:right>
              <node:Expr_Identical>
               <attribute:startLine>
                <scalar:int>164</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>164</scalar:int>
               </attribute:endLine>
               <subNode:left>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>164</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>164</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>164</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>164</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>b</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:left>
               <subNode:right>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>164</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>164</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string> </scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:right>
              </node:Expr_Identical>
             </subNode:right>
            </node:Expr_BooleanAnd>
           </subNode:left>
           <subNode:right>
            <node:Expr_BooleanOr>
             <attribute:startLine>
              <scalar:int>165</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>165</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_Identical>
               <attribute:startLine>
                <scalar:int>165</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>165</scalar:int>
               </attribute:endLine>
               <subNode:left>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>165</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>165</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>165</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>165</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>a</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:left>
               <subNode:right>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>165</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>165</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>+</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:right>
              </node:Expr_Identical>
             </subNode:left>
             <subNode:right>
              <node:Expr_Identical>
               <attribute:startLine>
                <scalar:int>165</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>165</scalar:int>
               </attribute:endLine>
               <subNode:left>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>165</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>165</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>165</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>165</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>a</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:left>
               <subNode:right>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>165</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>165</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>-</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:right>
              </node:Expr_Identical>
             </subNode:right>
            </node:Expr_BooleanOr>
           </subNode:right>
          </node:Expr_BooleanAnd>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Switch>
         <attribute:startLine>
          <scalar:int>173</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>232</scalar:int>
         </attribute:endLine>
         <subNode:cond>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>173</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>173</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>command</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:cond>
         <subNode:cases>
          <scalar:array>
           <node:Stmt_Case>
            <attribute:startLine>
             <scalar:int>174</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>176</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Expr_ClassConstFetch>
              <attribute:startLine>
               <scalar:int>174</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>174</scalar:int>
              </attribute:endLine>
              <subNode:class>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>174</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>174</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>self</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:class>
              <subNode:name>
               <scalar:string>ACTION_KEEP_A</scalar:string>
              </subNode:name>
             </node:Expr_ClassConstFetch>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_AssignConcat>
               <attribute:startLine>
                <scalar:int>175</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>175</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>175</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>175</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>175</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>175</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>output</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:var>
               <subNode:expr>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>175</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>175</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>175</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>175</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>a</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:expr>
              </node:Expr_AssignConcat>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>176</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>176</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>176</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>176</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>176</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>176</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>lastByteOut</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:var>
               <subNode:expr>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>176</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>176</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>176</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>176</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>a</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:expr>
              </node:Expr_Assign>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_Case>
           <node:Stmt_Case>
            <attribute:comments>
             <scalar:array>
              <comment isDocComment="false" line="178">// fallthrough
</comment>
             </scalar:array>
            </attribute:comments>
            <attribute:startLine>
             <scalar:int>179</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>205</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Expr_ClassConstFetch>
              <attribute:startLine>
               <scalar:int>179</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>179</scalar:int>
              </attribute:endLine>
              <subNode:class>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>179</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>179</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>self</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:class>
              <subNode:name>
               <scalar:string>ACTION_DELETE_A</scalar:string>
              </subNode:name>
             </node:Expr_ClassConstFetch>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>180</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>180</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>180</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>180</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>180</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>180</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>a</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:var>
               <subNode:expr>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>180</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>180</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>180</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>180</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>b</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:expr>
              </node:Expr_Assign>
              <node:Stmt_If>
               <attribute:startLine>
                <scalar:int>181</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>205</scalar:int>
               </attribute:endLine>
               <subNode:stmts>
                <scalar:array>
                 <node:Expr_Assign>
                  <attribute:comments>
                   <scalar:array>
                    <comment isDocComment="false" line="181">// string literal
</comment>
                   </scalar:array>
                  </attribute:comments>
                  <attribute:startLine>
                   <scalar:int>182</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>182</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:comments>
                     <scalar:array>
                      <comment isDocComment="false" line="181">// string literal
</comment>
                     </scalar:array>
                    </attribute:comments>
                    <attribute:startLine>
                     <scalar:int>182</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>182</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>str</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:expr>
                   <node:Expr_PropertyFetch>
                    <attribute:startLine>
                     <scalar:int>182</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>182</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>182</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>182</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>this</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>a</scalar:string>
                    </subNode:name>
                   </node:Expr_PropertyFetch>
                  </subNode:expr>
                 </node:Expr_Assign>
                 <node:Stmt_While>
                  <attribute:comments>
                   <scalar:array>
                    <comment isDocComment="false" line="182">// in case needed for exception
</comment>
                   </scalar:array>
                  </attribute:comments>
                  <attribute:startLine>
                   <scalar:int>183</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>204</scalar:int>
                  </attribute:endLine>
                  <subNode:cond>
                   <node:Expr_ConstFetch>
                    <attribute:startLine>
                     <scalar:int>183</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>183</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <node:Name>
                      <attribute:startLine>
                       <scalar:int>183</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>183</scalar:int>
                      </attribute:endLine>
                      <subNode:parts>
                       <scalar:array>
                        <scalar:string>true</scalar:string>
                       </scalar:array>
                      </subNode:parts>
                     </node:Name>
                    </subNode:name>
                   </node:Expr_ConstFetch>
                  </subNode:cond>
                  <subNode:stmts>
                   <scalar:array>
                    <node:Expr_AssignConcat>
                     <attribute:startLine>
                      <scalar:int>184</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>184</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_PropertyFetch>
                       <attribute:startLine>
                        <scalar:int>184</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>184</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>184</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>184</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>this</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:name>
                        <scalar:string>output</scalar:string>
                       </subNode:name>
                      </node:Expr_PropertyFetch>
                     </subNode:var>
                     <subNode:expr>
                      <node:Expr_PropertyFetch>
                       <attribute:startLine>
                        <scalar:int>184</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>184</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>184</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>184</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>this</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:name>
                        <scalar:string>a</scalar:string>
                       </subNode:name>
                      </node:Expr_PropertyFetch>
                     </subNode:expr>
                    </node:Expr_AssignConcat>
                    <node:Expr_Assign>
                     <attribute:startLine>
                      <scalar:int>185</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>185</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_PropertyFetch>
                       <attribute:startLine>
                        <scalar:int>185</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>185</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>185</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>185</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>this</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:name>
                        <scalar:string>lastByteOut</scalar:string>
                       </subNode:name>
                      </node:Expr_PropertyFetch>
                     </subNode:var>
                     <subNode:expr>
                      <node:Expr_PropertyFetch>
                       <attribute:startLine>
                        <scalar:int>185</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>185</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>185</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>185</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>this</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:name>
                        <scalar:string>a</scalar:string>
                       </subNode:name>
                      </node:Expr_PropertyFetch>
                     </subNode:expr>
                    </node:Expr_Assign>
                    <node:Expr_Assign>
                     <attribute:startLine>
                      <scalar:int>187</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>187</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_PropertyFetch>
                       <attribute:startLine>
                        <scalar:int>187</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>187</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>187</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>187</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>this</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:name>
                        <scalar:string>a</scalar:string>
                       </subNode:name>
                      </node:Expr_PropertyFetch>
                     </subNode:var>
                     <subNode:expr>
                      <node:Expr_MethodCall>
                       <attribute:startLine>
                        <scalar:int>187</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>187</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>187</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>187</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>this</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:name>
                        <scalar:string>get</scalar:string>
                       </subNode:name>
                       <subNode:args>
                        <scalar:array/>
                       </subNode:args>
                      </node:Expr_MethodCall>
                     </subNode:expr>
                    </node:Expr_Assign>
                    <node:Stmt_If>
                     <attribute:startLine>
                      <scalar:int>188</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>190</scalar:int>
                     </attribute:endLine>
                     <subNode:stmts>
                      <scalar:array>
                       <node:Stmt_Break>
                        <attribute:comments>
                         <scalar:array>
                          <comment isDocComment="false" line="188">// end quote
</comment>
                         </scalar:array>
                        </attribute:comments>
                        <attribute:startLine>
                         <scalar:int>189</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>189</scalar:int>
                        </attribute:endLine>
                        <subNode:num>
                         <scalar:null/>
                        </subNode:num>
                       </node:Stmt_Break>
                      </scalar:array>
                     </subNode:stmts>
                     <subNode:elseifs>
                      <scalar:array/>
                     </subNode:elseifs>
                     <subNode:else>
                      <scalar:null/>
                     </subNode:else>
                     <subNode:cond>
                      <node:Expr_Identical>
                       <attribute:startLine>
                        <scalar:int>188</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>188</scalar:int>
                       </attribute:endLine>
                       <subNode:left>
                        <node:Expr_PropertyFetch>
                         <attribute:startLine>
                          <scalar:int>188</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>188</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>188</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>188</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>this</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>a</scalar:string>
                         </subNode:name>
                        </node:Expr_PropertyFetch>
                       </subNode:left>
                       <subNode:right>
                        <node:Expr_PropertyFetch>
                         <attribute:startLine>
                          <scalar:int>188</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>188</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>188</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>188</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>this</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>b</scalar:string>
                         </subNode:name>
                        </node:Expr_PropertyFetch>
                       </subNode:right>
                      </node:Expr_Identical>
                     </subNode:cond>
                    </node:Stmt_If>
                    <node:Stmt_If>
                     <attribute:startLine>
                      <scalar:int>191</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>195</scalar:int>
                     </attribute:endLine>
                     <subNode:stmts>
                      <scalar:array>
                       <node:Stmt_Throw>
                        <attribute:startLine>
                         <scalar:int>192</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>194</scalar:int>
                        </attribute:endLine>
                        <subNode:expr>
                         <node:Expr_New>
                          <attribute:startLine>
                           <scalar:int>192</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>194</scalar:int>
                          </attribute:endLine>
                          <subNode:class>
                           <node:Name_FullyQualified>
                            <attribute:startLine>
                             <scalar:int>192</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>192</scalar:int>
                            </attribute:endLine>
                            <subNode:parts>
                             <scalar:array>
                              <scalar:string>JSMin_UnterminatedStringException</scalar:string>
                             </scalar:array>
                            </subNode:parts>
                           </node:Name_FullyQualified>
                          </subNode:class>
                          <subNode:args>
                           <scalar:array>
                            <node:Arg>
                             <attribute:startLine>
                              <scalar:int>193</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>194</scalar:int>
                             </attribute:endLine>
                             <subNode:value>
                              <node:Expr_Concat>
                               <attribute:startLine>
                                <scalar:int>193</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>194</scalar:int>
                               </attribute:endLine>
                               <subNode:left>
                                <node:Expr_Concat>
                                 <attribute:startLine>
                                  <scalar:int>193</scalar:int>
                                 </attribute:startLine>
                                 <attribute:endLine>
                                  <scalar:int>194</scalar:int>
                                 </attribute:endLine>
                                 <subNode:left>
                                  <node:Scalar_String>
                                   <attribute:startLine>
                                    <scalar:int>193</scalar:int>
                                   </attribute:startLine>
                                   <attribute:endLine>
                                    <scalar:int>193</scalar:int>
                                   </attribute:endLine>
                                   <subNode:value>
                                    <scalar:string>JSMin: Unterminated String at byte </scalar:string>
                                   </subNode:value>
                                  </node:Scalar_String>
                                 </subNode:left>
                                 <subNode:right>
                                  <node:Expr_PropertyFetch>
                                   <attribute:startLine>
                                    <scalar:int>194</scalar:int>
                                   </attribute:startLine>
                                   <attribute:endLine>
                                    <scalar:int>194</scalar:int>
                                   </attribute:endLine>
                                   <subNode:var>
                                    <node:Expr_Variable>
                                     <attribute:startLine>
                                      <scalar:int>194</scalar:int>
                                     </attribute:startLine>
                                     <attribute:endLine>
                                      <scalar:int>194</scalar:int>
                                     </attribute:endLine>
                                     <subNode:name>
                                      <scalar:string>this</scalar:string>
                                     </subNode:name>
                                    </node:Expr_Variable>
                                   </subNode:var>
                                   <subNode:name>
                                    <scalar:string>inputIndex</scalar:string>
                                   </subNode:name>
                                  </node:Expr_PropertyFetch>
                                 </subNode:right>
                                </node:Expr_Concat>
                               </subNode:left>
                               <subNode:right>
                                <node:Scalar_Encapsed>
                                 <attribute:startLine>
                                  <scalar:int>194</scalar:int>
                                 </attribute:startLine>
                                 <attribute:endLine>
                                  <scalar:int>194</scalar:int>
                                 </attribute:endLine>
                                 <subNode:parts>
                                  <scalar:array>
                                   <scalar:string>: </scalar:string>
                                   <node:Expr_Variable>
                                    <attribute:startLine>
                                     <scalar:int>194</scalar:int>
                                    </attribute:startLine>
                                    <attribute:endLine>
                                     <scalar:int>194</scalar:int>
                                    </attribute:endLine>
                                    <subNode:name>
                                     <scalar:string>str</scalar:string>
                                    </subNode:name>
                                   </node:Expr_Variable>
                                  </scalar:array>
                                 </subNode:parts>
                                </node:Scalar_Encapsed>
                               </subNode:right>
                              </node:Expr_Concat>
                             </subNode:value>
                             <subNode:byRef>
                              <scalar:false/>
                             </subNode:byRef>
                            </node:Arg>
                           </scalar:array>
                          </subNode:args>
                         </node:Expr_New>
                        </subNode:expr>
                       </node:Stmt_Throw>
                      </scalar:array>
                     </subNode:stmts>
                     <subNode:elseifs>
                      <scalar:array/>
                     </subNode:elseifs>
                     <subNode:else>
                      <scalar:null/>
                     </subNode:else>
                     <subNode:cond>
                      <node:Expr_SmallerOrEqual>
                       <attribute:startLine>
                        <scalar:int>191</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>191</scalar:int>
                       </attribute:endLine>
                       <subNode:left>
                        <node:Expr_FuncCall>
                         <attribute:startLine>
                          <scalar:int>191</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>191</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <node:Name>
                           <attribute:startLine>
                            <scalar:int>191</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>191</scalar:int>
                           </attribute:endLine>
                           <subNode:parts>
                            <scalar:array>
                             <scalar:string>ord</scalar:string>
                            </scalar:array>
                           </subNode:parts>
                          </node:Name>
                         </subNode:name>
                         <subNode:args>
                          <scalar:array>
                           <node:Arg>
                            <attribute:startLine>
                             <scalar:int>191</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>191</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <node:Expr_PropertyFetch>
                              <attribute:startLine>
                               <scalar:int>191</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>191</scalar:int>
                              </attribute:endLine>
                              <subNode:var>
                               <node:Expr_Variable>
                                <attribute:startLine>
                                 <scalar:int>191</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>191</scalar:int>
                                </attribute:endLine>
                                <subNode:name>
                                 <scalar:string>this</scalar:string>
                                </subNode:name>
                               </node:Expr_Variable>
                              </subNode:var>
                              <subNode:name>
                               <scalar:string>a</scalar:string>
                              </subNode:name>
                             </node:Expr_PropertyFetch>
                            </subNode:value>
                            <subNode:byRef>
                             <scalar:false/>
                            </subNode:byRef>
                           </node:Arg>
                          </scalar:array>
                         </subNode:args>
                        </node:Expr_FuncCall>
                       </subNode:left>
                       <subNode:right>
                        <node:Expr_ClassConstFetch>
                         <attribute:startLine>
                          <scalar:int>191</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>191</scalar:int>
                         </attribute:endLine>
                         <subNode:class>
                          <node:Name>
                           <attribute:startLine>
                            <scalar:int>191</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>191</scalar:int>
                           </attribute:endLine>
                           <subNode:parts>
                            <scalar:array>
                             <scalar:string>self</scalar:string>
                            </scalar:array>
                           </subNode:parts>
                          </node:Name>
                         </subNode:class>
                         <subNode:name>
                          <scalar:string>ORD_LF</scalar:string>
                         </subNode:name>
                        </node:Expr_ClassConstFetch>
                       </subNode:right>
                      </node:Expr_SmallerOrEqual>
                     </subNode:cond>
                    </node:Stmt_If>
                    <node:Expr_AssignConcat>
                     <attribute:startLine>
                      <scalar:int>196</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>196</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>196</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>196</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>str</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:expr>
                      <node:Expr_PropertyFetch>
                       <attribute:startLine>
                        <scalar:int>196</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>196</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>196</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>196</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>this</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:name>
                        <scalar:string>a</scalar:string>
                       </subNode:name>
                      </node:Expr_PropertyFetch>
                     </subNode:expr>
                    </node:Expr_AssignConcat>
                    <node:Stmt_If>
                     <attribute:startLine>
                      <scalar:int>197</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>203</scalar:int>
                     </attribute:endLine>
                     <subNode:stmts>
                      <scalar:array>
                       <node:Expr_AssignConcat>
                        <attribute:startLine>
                         <scalar:int>198</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>198</scalar:int>
                        </attribute:endLine>
                        <subNode:var>
                         <node:Expr_PropertyFetch>
                          <attribute:startLine>
                           <scalar:int>198</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>198</scalar:int>
                          </attribute:endLine>
                          <subNode:var>
                           <node:Expr_Variable>
                            <attribute:startLine>
                             <scalar:int>198</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>198</scalar:int>
                            </attribute:endLine>
                            <subNode:name>
                             <scalar:string>this</scalar:string>
                            </subNode:name>
                           </node:Expr_Variable>
                          </subNode:var>
                          <subNode:name>
                           <scalar:string>output</scalar:string>
                          </subNode:name>
                         </node:Expr_PropertyFetch>
                        </subNode:var>
                        <subNode:expr>
                         <node:Expr_PropertyFetch>
                          <attribute:startLine>
                           <scalar:int>198</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>198</scalar:int>
                          </attribute:endLine>
                          <subNode:var>
                           <node:Expr_Variable>
                            <attribute:startLine>
                             <scalar:int>198</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>198</scalar:int>
                            </attribute:endLine>
                            <subNode:name>
                             <scalar:string>this</scalar:string>
                            </subNode:name>
                           </node:Expr_Variable>
                          </subNode:var>
                          <subNode:name>
                           <scalar:string>a</scalar:string>
                          </subNode:name>
                         </node:Expr_PropertyFetch>
                        </subNode:expr>
                       </node:Expr_AssignConcat>
                       <node:Expr_Assign>
                        <attribute:startLine>
                         <scalar:int>199</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>199</scalar:int>
                        </attribute:endLine>
                        <subNode:var>
                         <node:Expr_PropertyFetch>
                          <attribute:startLine>
                           <scalar:int>199</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>199</scalar:int>
                          </attribute:endLine>
                          <subNode:var>
                           <node:Expr_Variable>
                            <attribute:startLine>
                             <scalar:int>199</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>199</scalar:int>
                            </attribute:endLine>
                            <subNode:name>
                             <scalar:string>this</scalar:string>
                            </subNode:name>
                           </node:Expr_Variable>
                          </subNode:var>
                          <subNode:name>
                           <scalar:string>lastByteOut</scalar:string>
                          </subNode:name>
                         </node:Expr_PropertyFetch>
                        </subNode:var>
                        <subNode:expr>
                         <node:Expr_PropertyFetch>
                          <attribute:startLine>
                           <scalar:int>199</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>199</scalar:int>
                          </attribute:endLine>
                          <subNode:var>
                           <node:Expr_Variable>
                            <attribute:startLine>
                             <scalar:int>199</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>199</scalar:int>
                            </attribute:endLine>
                            <subNode:name>
                             <scalar:string>this</scalar:string>
                            </subNode:name>
                           </node:Expr_Variable>
                          </subNode:var>
                          <subNode:name>
                           <scalar:string>a</scalar:string>
                          </subNode:name>
                         </node:Expr_PropertyFetch>
                        </subNode:expr>
                       </node:Expr_Assign>
                       <node:Expr_Assign>
                        <attribute:startLine>
                         <scalar:int>201</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>201</scalar:int>
                        </attribute:endLine>
                        <subNode:var>
                         <node:Expr_PropertyFetch>
                          <attribute:startLine>
                           <scalar:int>201</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>201</scalar:int>
                          </attribute:endLine>
                          <subNode:var>
                           <node:Expr_Variable>
                            <attribute:startLine>
                             <scalar:int>201</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>201</scalar:int>
                            </attribute:endLine>
                            <subNode:name>
                             <scalar:string>this</scalar:string>
                            </subNode:name>
                           </node:Expr_Variable>
                          </subNode:var>
                          <subNode:name>
                           <scalar:string>a</scalar:string>
                          </subNode:name>
                         </node:Expr_PropertyFetch>
                        </subNode:var>
                        <subNode:expr>
                         <node:Expr_MethodCall>
                          <attribute:startLine>
                           <scalar:int>201</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>201</scalar:int>
                          </attribute:endLine>
                          <subNode:var>
                           <node:Expr_Variable>
                            <attribute:startLine>
                             <scalar:int>201</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>201</scalar:int>
                            </attribute:endLine>
                            <subNode:name>
                             <scalar:string>this</scalar:string>
                            </subNode:name>
                           </node:Expr_Variable>
                          </subNode:var>
                          <subNode:name>
                           <scalar:string>get</scalar:string>
                          </subNode:name>
                          <subNode:args>
                           <scalar:array/>
                          </subNode:args>
                         </node:Expr_MethodCall>
                        </subNode:expr>
                       </node:Expr_Assign>
                       <node:Expr_AssignConcat>
                        <attribute:startLine>
                         <scalar:int>202</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>202</scalar:int>
                        </attribute:endLine>
                        <subNode:var>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>202</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>202</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>str</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:var>
                        <subNode:expr>
                         <node:Expr_PropertyFetch>
                          <attribute:startLine>
                           <scalar:int>202</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>202</scalar:int>
                          </attribute:endLine>
                          <subNode:var>
                           <node:Expr_Variable>
                            <attribute:startLine>
                             <scalar:int>202</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>202</scalar:int>
                            </attribute:endLine>
                            <subNode:name>
                             <scalar:string>this</scalar:string>
                            </subNode:name>
                           </node:Expr_Variable>
                          </subNode:var>
                          <subNode:name>
                           <scalar:string>a</scalar:string>
                          </subNode:name>
                         </node:Expr_PropertyFetch>
                        </subNode:expr>
                       </node:Expr_AssignConcat>
                      </scalar:array>
                     </subNode:stmts>
                     <subNode:elseifs>
                      <scalar:array/>
                     </subNode:elseifs>
                     <subNode:else>
                      <scalar:null/>
                     </subNode:else>
                     <subNode:cond>
                      <node:Expr_Identical>
                       <attribute:startLine>
                        <scalar:int>197</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>197</scalar:int>
                       </attribute:endLine>
                       <subNode:left>
                        <node:Expr_PropertyFetch>
                         <attribute:startLine>
                          <scalar:int>197</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>197</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>197</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>197</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>this</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>a</scalar:string>
                         </subNode:name>
                        </node:Expr_PropertyFetch>
                       </subNode:left>
                       <subNode:right>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>197</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>197</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>\</scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:right>
                      </node:Expr_Identical>
                     </subNode:cond>
                    </node:Stmt_If>
                   </scalar:array>
                  </subNode:stmts>
                 </node:Stmt_While>
                </scalar:array>
               </subNode:stmts>
               <subNode:elseifs>
                <scalar:array/>
               </subNode:elseifs>
               <subNode:else>
                <scalar:null/>
               </subNode:else>
               <subNode:cond>
                <node:Expr_BooleanOr>
                 <attribute:startLine>
                  <scalar:int>181</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>181</scalar:int>
                 </attribute:endLine>
                 <subNode:left>
                  <node:Expr_Identical>
                   <attribute:startLine>
                    <scalar:int>181</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>181</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Expr_PropertyFetch>
                     <attribute:startLine>
                      <scalar:int>181</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>181</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>181</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>181</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>this</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>a</scalar:string>
                     </subNode:name>
                    </node:Expr_PropertyFetch>
                   </subNode:left>
                   <subNode:right>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>181</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>181</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>'</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:right>
                  </node:Expr_Identical>
                 </subNode:left>
                 <subNode:right>
                  <node:Expr_Identical>
                   <attribute:startLine>
                    <scalar:int>181</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>181</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Expr_PropertyFetch>
                     <attribute:startLine>
                      <scalar:int>181</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>181</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>181</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>181</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>this</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>a</scalar:string>
                     </subNode:name>
                    </node:Expr_PropertyFetch>
                   </subNode:left>
                   <subNode:right>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>181</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>181</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>&quot;</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:right>
                  </node:Expr_Identical>
                 </subNode:right>
                </node:Expr_BooleanOr>
               </subNode:cond>
              </node:Stmt_If>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_Case>
           <node:Stmt_Case>
            <attribute:comments>
             <scalar:array>
              <comment isDocComment="false" line="206">// fallthrough
</comment>
             </scalar:array>
            </attribute:comments>
            <attribute:startLine>
             <scalar:int>207</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>230</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Expr_ClassConstFetch>
              <attribute:startLine>
               <scalar:int>207</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>207</scalar:int>
              </attribute:endLine>
              <subNode:class>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>207</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>207</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>self</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:class>
              <subNode:name>
               <scalar:string>ACTION_DELETE_A_B</scalar:string>
              </subNode:name>
             </node:Expr_ClassConstFetch>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>208</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>208</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>208</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>208</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>208</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>208</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>b</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:var>
               <subNode:expr>
                <node:Expr_MethodCall>
                 <attribute:startLine>
                  <scalar:int>208</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>208</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>208</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>208</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>next</scalar:string>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array/>
                 </subNode:args>
                </node:Expr_MethodCall>
               </subNode:expr>
              </node:Expr_Assign>
              <node:Stmt_If>
               <attribute:startLine>
                <scalar:int>209</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>230</scalar:int>
               </attribute:endLine>
               <subNode:stmts>
                <scalar:array>
                 <node:Expr_AssignConcat>
                  <attribute:comments>
                   <scalar:array>
                    <comment isDocComment="false" line="209">// RegExp literal
</comment>
                   </scalar:array>
                  </attribute:comments>
                  <attribute:startLine>
                   <scalar:int>210</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>210</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_PropertyFetch>
                    <attribute:comments>
                     <scalar:array>
                      <comment isDocComment="false" line="209">// RegExp literal
</comment>
                     </scalar:array>
                    </attribute:comments>
                    <attribute:startLine>
                     <scalar:int>210</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>210</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:comments>
                       <scalar:array>
                        <comment isDocComment="false" line="209">// RegExp literal
</comment>
                       </scalar:array>
                      </attribute:comments>
                      <attribute:startLine>
                       <scalar:int>210</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>210</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>this</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>output</scalar:string>
                    </subNode:name>
                   </node:Expr_PropertyFetch>
                  </subNode:var>
                  <subNode:expr>
                   <node:Expr_Concat>
                    <attribute:startLine>
                     <scalar:int>210</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>210</scalar:int>
                    </attribute:endLine>
                    <subNode:left>
                     <node:Expr_PropertyFetch>
                      <attribute:startLine>
                       <scalar:int>210</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>210</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>210</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>210</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>this</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>a</scalar:string>
                      </subNode:name>
                     </node:Expr_PropertyFetch>
                    </subNode:left>
                    <subNode:right>
                     <node:Expr_PropertyFetch>
                      <attribute:startLine>
                       <scalar:int>210</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>210</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>210</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>210</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>this</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>b</scalar:string>
                      </subNode:name>
                     </node:Expr_PropertyFetch>
                    </subNode:right>
                   </node:Expr_Concat>
                  </subNode:expr>
                 </node:Expr_AssignConcat>
                 <node:Expr_Assign>
                  <attribute:startLine>
                   <scalar:int>211</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>211</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>211</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>211</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>pattern</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:expr>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>211</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>211</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>/</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:expr>
                 </node:Expr_Assign>
                 <node:Stmt_While>
                  <attribute:comments>
                   <scalar:array>
                    <comment isDocComment="false" line="211">// in case needed for exception
</comment>
                   </scalar:array>
                  </attribute:comments>
                  <attribute:startLine>
                   <scalar:int>212</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>228</scalar:int>
                  </attribute:endLine>
                  <subNode:cond>
                   <node:Expr_ConstFetch>
                    <attribute:startLine>
                     <scalar:int>212</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>212</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <node:Name>
                      <attribute:startLine>
                       <scalar:int>212</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>212</scalar:int>
                      </attribute:endLine>
                      <subNode:parts>
                       <scalar:array>
                        <scalar:string>true</scalar:string>
                       </scalar:array>
                      </subNode:parts>
                     </node:Name>
                    </subNode:name>
                   </node:Expr_ConstFetch>
                  </subNode:cond>
                  <subNode:stmts>
                   <scalar:array>
                    <node:Expr_Assign>
                     <attribute:startLine>
                      <scalar:int>213</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>213</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_PropertyFetch>
                       <attribute:startLine>
                        <scalar:int>213</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>213</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>213</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>213</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>this</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:name>
                        <scalar:string>a</scalar:string>
                       </subNode:name>
                      </node:Expr_PropertyFetch>
                     </subNode:var>
                     <subNode:expr>
                      <node:Expr_MethodCall>
                       <attribute:startLine>
                        <scalar:int>213</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>213</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>213</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>213</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>this</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:name>
                        <scalar:string>get</scalar:string>
                       </subNode:name>
                       <subNode:args>
                        <scalar:array/>
                       </subNode:args>
                      </node:Expr_MethodCall>
                     </subNode:expr>
                    </node:Expr_Assign>
                    <node:Expr_AssignConcat>
                     <attribute:startLine>
                      <scalar:int>214</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>214</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>214</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>214</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>pattern</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:expr>
                      <node:Expr_PropertyFetch>
                       <attribute:startLine>
                        <scalar:int>214</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>214</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>214</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>214</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>this</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:name>
                        <scalar:string>a</scalar:string>
                       </subNode:name>
                      </node:Expr_PropertyFetch>
                     </subNode:expr>
                    </node:Expr_AssignConcat>
                    <node:Stmt_If>
                     <attribute:startLine>
                      <scalar:int>215</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>225</scalar:int>
                     </attribute:endLine>
                     <subNode:stmts>
                      <scalar:array>
                       <node:Stmt_Break>
                        <attribute:comments>
                         <scalar:array>
                          <comment isDocComment="false" line="215">// end pattern
</comment>
                         </scalar:array>
                        </attribute:comments>
                        <attribute:startLine>
                         <scalar:int>216</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>216</scalar:int>
                        </attribute:endLine>
                        <subNode:num>
                         <scalar:null/>
                        </subNode:num>
                       </node:Stmt_Break>
                      </scalar:array>
                     </subNode:stmts>
                     <subNode:elseifs>
                      <scalar:array>
                       <node:Stmt_ElseIf>
                        <attribute:startLine>
                         <scalar:int>217</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>221</scalar:int>
                        </attribute:endLine>
                        <subNode:cond>
                         <node:Expr_Identical>
                          <attribute:startLine>
                           <scalar:int>217</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>217</scalar:int>
                          </attribute:endLine>
                          <subNode:left>
                           <node:Expr_PropertyFetch>
                            <attribute:startLine>
                             <scalar:int>217</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>217</scalar:int>
                            </attribute:endLine>
                            <subNode:var>
                             <node:Expr_Variable>
                              <attribute:startLine>
                               <scalar:int>217</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>217</scalar:int>
                              </attribute:endLine>
                              <subNode:name>
                               <scalar:string>this</scalar:string>
                              </subNode:name>
                             </node:Expr_Variable>
                            </subNode:var>
                            <subNode:name>
                             <scalar:string>a</scalar:string>
                            </subNode:name>
                           </node:Expr_PropertyFetch>
                          </subNode:left>
                          <subNode:right>
                           <node:Scalar_String>
                            <attribute:startLine>
                             <scalar:int>217</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>217</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <scalar:string>\</scalar:string>
                            </subNode:value>
                           </node:Scalar_String>
                          </subNode:right>
                         </node:Expr_Identical>
                        </subNode:cond>
                        <subNode:stmts>
                         <scalar:array>
                          <node:Expr_AssignConcat>
                           <attribute:startLine>
                            <scalar:int>218</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>218</scalar:int>
                           </attribute:endLine>
                           <subNode:var>
                            <node:Expr_PropertyFetch>
                             <attribute:startLine>
                              <scalar:int>218</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>218</scalar:int>
                             </attribute:endLine>
                             <subNode:var>
                              <node:Expr_Variable>
                               <attribute:startLine>
                                <scalar:int>218</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>218</scalar:int>
                               </attribute:endLine>
                               <subNode:name>
                                <scalar:string>this</scalar:string>
                               </subNode:name>
                              </node:Expr_Variable>
                             </subNode:var>
                             <subNode:name>
                              <scalar:string>output</scalar:string>
                             </subNode:name>
                            </node:Expr_PropertyFetch>
                           </subNode:var>
                           <subNode:expr>
                            <node:Expr_PropertyFetch>
                             <attribute:startLine>
                              <scalar:int>218</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>218</scalar:int>
                             </attribute:endLine>
                             <subNode:var>
                              <node:Expr_Variable>
                               <attribute:startLine>
                                <scalar:int>218</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>218</scalar:int>
                               </attribute:endLine>
                               <subNode:name>
                                <scalar:string>this</scalar:string>
                               </subNode:name>
                              </node:Expr_Variable>
                             </subNode:var>
                             <subNode:name>
                              <scalar:string>a</scalar:string>
                             </subNode:name>
                            </node:Expr_PropertyFetch>
                           </subNode:expr>
                          </node:Expr_AssignConcat>
                          <node:Expr_Assign>
                           <attribute:startLine>
                            <scalar:int>219</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>219</scalar:int>
                           </attribute:endLine>
                           <subNode:var>
                            <node:Expr_PropertyFetch>
                             <attribute:startLine>
                              <scalar:int>219</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>219</scalar:int>
                             </attribute:endLine>
                             <subNode:var>
                              <node:Expr_Variable>
                               <attribute:startLine>
                                <scalar:int>219</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>219</scalar:int>
                               </attribute:endLine>
                               <subNode:name>
                                <scalar:string>this</scalar:string>
                               </subNode:name>
                              </node:Expr_Variable>
                             </subNode:var>
                             <subNode:name>
                              <scalar:string>a</scalar:string>
                             </subNode:name>
                            </node:Expr_PropertyFetch>
                           </subNode:var>
                           <subNode:expr>
                            <node:Expr_MethodCall>
                             <attribute:startLine>
                              <scalar:int>219</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>219</scalar:int>
                             </attribute:endLine>
                             <subNode:var>
                              <node:Expr_Variable>
                               <attribute:startLine>
                                <scalar:int>219</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>219</scalar:int>
                               </attribute:endLine>
                               <subNode:name>
                                <scalar:string>this</scalar:string>
                               </subNode:name>
                              </node:Expr_Variable>
                             </subNode:var>
                             <subNode:name>
                              <scalar:string>get</scalar:string>
                             </subNode:name>
                             <subNode:args>
                              <scalar:array/>
                             </subNode:args>
                            </node:Expr_MethodCall>
                           </subNode:expr>
                          </node:Expr_Assign>
                          <node:Expr_AssignConcat>
                           <attribute:startLine>
                            <scalar:int>220</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>220</scalar:int>
                           </attribute:endLine>
                           <subNode:var>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>220</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>220</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>pattern</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:var>
                           <subNode:expr>
                            <node:Expr_PropertyFetch>
                             <attribute:startLine>
                              <scalar:int>220</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>220</scalar:int>
                             </attribute:endLine>
                             <subNode:var>
                              <node:Expr_Variable>
                               <attribute:startLine>
                                <scalar:int>220</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>220</scalar:int>
                               </attribute:endLine>
                               <subNode:name>
                                <scalar:string>this</scalar:string>
                               </subNode:name>
                              </node:Expr_Variable>
                             </subNode:var>
                             <subNode:name>
                              <scalar:string>a</scalar:string>
                             </subNode:name>
                            </node:Expr_PropertyFetch>
                           </subNode:expr>
                          </node:Expr_AssignConcat>
                         </scalar:array>
                        </subNode:stmts>
                       </node:Stmt_ElseIf>
                       <node:Stmt_ElseIf>
                        <attribute:startLine>
                         <scalar:int>221</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>225</scalar:int>
                        </attribute:endLine>
                        <subNode:cond>
                         <node:Expr_SmallerOrEqual>
                          <attribute:startLine>
                           <scalar:int>221</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>221</scalar:int>
                          </attribute:endLine>
                          <subNode:left>
                           <node:Expr_FuncCall>
                            <attribute:startLine>
                             <scalar:int>221</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>221</scalar:int>
                            </attribute:endLine>
                            <subNode:name>
                             <node:Name>
                              <attribute:startLine>
                               <scalar:int>221</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>221</scalar:int>
                              </attribute:endLine>
                              <subNode:parts>
                               <scalar:array>
                                <scalar:string>ord</scalar:string>
                               </scalar:array>
                              </subNode:parts>
                             </node:Name>
                            </subNode:name>
                            <subNode:args>
                             <scalar:array>
                              <node:Arg>
                               <attribute:startLine>
                                <scalar:int>221</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>221</scalar:int>
                               </attribute:endLine>
                               <subNode:value>
                                <node:Expr_PropertyFetch>
                                 <attribute:startLine>
                                  <scalar:int>221</scalar:int>
                                 </attribute:startLine>
                                 <attribute:endLine>
                                  <scalar:int>221</scalar:int>
                                 </attribute:endLine>
                                 <subNode:var>
                                  <node:Expr_Variable>
                                   <attribute:startLine>
                                    <scalar:int>221</scalar:int>
                                   </attribute:startLine>
                                   <attribute:endLine>
                                    <scalar:int>221</scalar:int>
                                   </attribute:endLine>
                                   <subNode:name>
                                    <scalar:string>this</scalar:string>
                                   </subNode:name>
                                  </node:Expr_Variable>
                                 </subNode:var>
                                 <subNode:name>
                                  <scalar:string>a</scalar:string>
                                 </subNode:name>
                                </node:Expr_PropertyFetch>
                               </subNode:value>
                               <subNode:byRef>
                                <scalar:false/>
                               </subNode:byRef>
                              </node:Arg>
                             </scalar:array>
                            </subNode:args>
                           </node:Expr_FuncCall>
                          </subNode:left>
                          <subNode:right>
                           <node:Expr_ClassConstFetch>
                            <attribute:startLine>
                             <scalar:int>221</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>221</scalar:int>
                            </attribute:endLine>
                            <subNode:class>
                             <node:Name>
                              <attribute:startLine>
                               <scalar:int>221</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>221</scalar:int>
                              </attribute:endLine>
                              <subNode:parts>
                               <scalar:array>
                                <scalar:string>self</scalar:string>
                               </scalar:array>
                              </subNode:parts>
                             </node:Name>
                            </subNode:class>
                            <subNode:name>
                             <scalar:string>ORD_LF</scalar:string>
                            </subNode:name>
                           </node:Expr_ClassConstFetch>
                          </subNode:right>
                         </node:Expr_SmallerOrEqual>
                        </subNode:cond>
                        <subNode:stmts>
                         <scalar:array>
                          <node:Stmt_Throw>
                           <attribute:startLine>
                            <scalar:int>222</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>224</scalar:int>
                           </attribute:endLine>
                           <subNode:expr>
                            <node:Expr_New>
                             <attribute:startLine>
                              <scalar:int>222</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>224</scalar:int>
                             </attribute:endLine>
                             <subNode:class>
                              <node:Name_FullyQualified>
                               <attribute:startLine>
                                <scalar:int>222</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>222</scalar:int>
                               </attribute:endLine>
                               <subNode:parts>
                                <scalar:array>
                                 <scalar:string>JSMin_UnterminatedRegExpException</scalar:string>
                                </scalar:array>
                               </subNode:parts>
                              </node:Name_FullyQualified>
                             </subNode:class>
                             <subNode:args>
                              <scalar:array>
                               <node:Arg>
                                <attribute:startLine>
                                 <scalar:int>223</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>224</scalar:int>
                                </attribute:endLine>
                                <subNode:value>
                                 <node:Expr_Concat>
                                  <attribute:startLine>
                                   <scalar:int>223</scalar:int>
                                  </attribute:startLine>
                                  <attribute:endLine>
                                   <scalar:int>224</scalar:int>
                                  </attribute:endLine>
                                  <subNode:left>
                                   <node:Expr_Concat>
                                    <attribute:startLine>
                                     <scalar:int>223</scalar:int>
                                    </attribute:startLine>
                                    <attribute:endLine>
                                     <scalar:int>224</scalar:int>
                                    </attribute:endLine>
                                    <subNode:left>
                                     <node:Scalar_String>
                                      <attribute:startLine>
                                       <scalar:int>223</scalar:int>
                                      </attribute:startLine>
                                      <attribute:endLine>
                                       <scalar:int>223</scalar:int>
                                      </attribute:endLine>
                                      <subNode:value>
                                       <scalar:string>JSMin: Unterminated RegExp at byte </scalar:string>
                                      </subNode:value>
                                     </node:Scalar_String>
                                    </subNode:left>
                                    <subNode:right>
                                     <node:Expr_PropertyFetch>
                                      <attribute:startLine>
                                       <scalar:int>224</scalar:int>
                                      </attribute:startLine>
                                      <attribute:endLine>
                                       <scalar:int>224</scalar:int>
                                      </attribute:endLine>
                                      <subNode:var>
                                       <node:Expr_Variable>
                                        <attribute:startLine>
                                         <scalar:int>224</scalar:int>
                                        </attribute:startLine>
                                        <attribute:endLine>
                                         <scalar:int>224</scalar:int>
                                        </attribute:endLine>
                                        <subNode:name>
                                         <scalar:string>this</scalar:string>
                                        </subNode:name>
                                       </node:Expr_Variable>
                                      </subNode:var>
                                      <subNode:name>
                                       <scalar:string>inputIndex</scalar:string>
                                      </subNode:name>
                                     </node:Expr_PropertyFetch>
                                    </subNode:right>
                                   </node:Expr_Concat>
                                  </subNode:left>
                                  <subNode:right>
                                   <node:Scalar_Encapsed>
                                    <attribute:startLine>
                                     <scalar:int>224</scalar:int>
                                    </attribute:startLine>
                                    <attribute:endLine>
                                     <scalar:int>224</scalar:int>
                                    </attribute:endLine>
                                    <subNode:parts>
                                     <scalar:array>
                                      <scalar:string>: </scalar:string>
                                      <node:Expr_Variable>
                                       <attribute:startLine>
                                        <scalar:int>224</scalar:int>
                                       </attribute:startLine>
                                       <attribute:endLine>
                                        <scalar:int>224</scalar:int>
                                       </attribute:endLine>
                                       <subNode:name>
                                        <scalar:string>pattern</scalar:string>
                                       </subNode:name>
                                      </node:Expr_Variable>
                                     </scalar:array>
                                    </subNode:parts>
                                   </node:Scalar_Encapsed>
                                  </subNode:right>
                                 </node:Expr_Concat>
                                </subNode:value>
                                <subNode:byRef>
                                 <scalar:false/>
                                </subNode:byRef>
                               </node:Arg>
                              </scalar:array>
                             </subNode:args>
                            </node:Expr_New>
                           </subNode:expr>
                          </node:Stmt_Throw>
                         </scalar:array>
                        </subNode:stmts>
                       </node:Stmt_ElseIf>
                      </scalar:array>
                     </subNode:elseifs>
                     <subNode:else>
                      <scalar:null/>
                     </subNode:else>
                     <subNode:cond>
                      <node:Expr_Identical>
                       <attribute:startLine>
                        <scalar:int>215</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>215</scalar:int>
                       </attribute:endLine>
                       <subNode:left>
                        <node:Expr_PropertyFetch>
                         <attribute:startLine>
                          <scalar:int>215</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>215</scalar:int>
                         </attribute:endLine>
                         <subNode:var>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>215</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>215</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>this</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:var>
                         <subNode:name>
                          <scalar:string>a</scalar:string>
                         </subNode:name>
                        </node:Expr_PropertyFetch>
                       </subNode:left>
                       <subNode:right>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>215</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>215</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>/</scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:right>
                      </node:Expr_Identical>
                     </subNode:cond>
                    </node:Stmt_If>
                    <node:Expr_AssignConcat>
                     <attribute:startLine>
                      <scalar:int>226</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>226</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_PropertyFetch>
                       <attribute:startLine>
                        <scalar:int>226</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>226</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>226</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>226</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>this</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:name>
                        <scalar:string>output</scalar:string>
                       </subNode:name>
                      </node:Expr_PropertyFetch>
                     </subNode:var>
                     <subNode:expr>
                      <node:Expr_PropertyFetch>
                       <attribute:startLine>
                        <scalar:int>226</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>226</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>226</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>226</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>this</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:name>
                        <scalar:string>a</scalar:string>
                       </subNode:name>
                      </node:Expr_PropertyFetch>
                     </subNode:expr>
                    </node:Expr_AssignConcat>
                    <node:Expr_Assign>
                     <attribute:startLine>
                      <scalar:int>227</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>227</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_PropertyFetch>
                       <attribute:startLine>
                        <scalar:int>227</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>227</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>227</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>227</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>this</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:name>
                        <scalar:string>lastByteOut</scalar:string>
                       </subNode:name>
                      </node:Expr_PropertyFetch>
                     </subNode:var>
                     <subNode:expr>
                      <node:Expr_PropertyFetch>
                       <attribute:startLine>
                        <scalar:int>227</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>227</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>227</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>227</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>this</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:name>
                        <scalar:string>a</scalar:string>
                       </subNode:name>
                      </node:Expr_PropertyFetch>
                     </subNode:expr>
                    </node:Expr_Assign>
                   </scalar:array>
                  </subNode:stmts>
                 </node:Stmt_While>
                 <node:Expr_Assign>
                  <attribute:startLine>
                   <scalar:int>229</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>229</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_PropertyFetch>
                    <attribute:startLine>
                     <scalar:int>229</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>229</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>229</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>229</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>this</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>b</scalar:string>
                    </subNode:name>
                   </node:Expr_PropertyFetch>
                  </subNode:var>
                  <subNode:expr>
                   <node:Expr_MethodCall>
                    <attribute:startLine>
                     <scalar:int>229</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>229</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>229</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>229</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>this</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>next</scalar:string>
                    </subNode:name>
                    <subNode:args>
                     <scalar:array/>
                    </subNode:args>
                   </node:Expr_MethodCall>
                  </subNode:expr>
                 </node:Expr_Assign>
                </scalar:array>
               </subNode:stmts>
               <subNode:elseifs>
                <scalar:array/>
               </subNode:elseifs>
               <subNode:else>
                <scalar:null/>
               </subNode:else>
               <subNode:cond>
                <node:Expr_BooleanAnd>
                 <attribute:startLine>
                  <scalar:int>209</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>209</scalar:int>
                 </attribute:endLine>
                 <subNode:left>
                  <node:Expr_Identical>
                   <attribute:startLine>
                    <scalar:int>209</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>209</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Expr_PropertyFetch>
                     <attribute:startLine>
                      <scalar:int>209</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>209</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>209</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>209</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>this</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>b</scalar:string>
                     </subNode:name>
                    </node:Expr_PropertyFetch>
                   </subNode:left>
                   <subNode:right>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>209</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>209</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>/</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:right>
                  </node:Expr_Identical>
                 </subNode:left>
                 <subNode:right>
                  <node:Expr_MethodCall>
                   <attribute:startLine>
                    <scalar:int>209</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>209</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>209</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>209</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>isRegexpLiteral</scalar:string>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array/>
                   </subNode:args>
                  </node:Expr_MethodCall>
                 </subNode:right>
                </node:Expr_BooleanAnd>
               </subNode:cond>
              </node:Stmt_If>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_Case>
          </scalar:array>
         </subNode:cases>
        </node:Stmt_Switch>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>action</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="235">/**
     * @return bool
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>238</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>261</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>240</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>242</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:comments>
             <scalar:array>
              <comment isDocComment="false" line="240">// we aren't dividing
</comment>
             </scalar:array>
            </attribute:comments>
            <attribute:startLine>
             <scalar:int>241</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>241</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_ConstFetch>
              <attribute:startLine>
               <scalar:int>241</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>241</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>241</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>241</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>true</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
             </node:Expr_ConstFetch>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_NotIdentical>
           <attribute:startLine>
            <scalar:int>240</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>240</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_ConstFetch>
             <attribute:startLine>
              <scalar:int>240</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>240</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>240</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>240</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>false</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
            </node:Expr_ConstFetch>
           </subNode:left>
           <subNode:right>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>240</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>240</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>240</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>240</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>strpos</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>240</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>240</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>240</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>240</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>
{;(,=:[!&amp;|?</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>240</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>240</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_PropertyFetch>
                  <attribute:startLine>
                   <scalar:int>240</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>240</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>240</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>240</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>this</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>a</scalar:string>
                  </subNode:name>
                 </node:Expr_PropertyFetch>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:right>
          </node:Expr_NotIdentical>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>243</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>259</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>244</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>244</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>244</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>244</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>length</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>244</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>244</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>244</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>244</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>strlen</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>244</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>244</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_PropertyFetch>
                   <attribute:startLine>
                    <scalar:int>244</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>244</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>244</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>244</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>output</scalar:string>
                   </subNode:name>
                  </node:Expr_PropertyFetch>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>245</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>247</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_Return>
               <attribute:comments>
                <scalar:array>
                 <comment isDocComment="false" line="245">// weird edge case
</comment>
                </scalar:array>
               </attribute:comments>
               <attribute:startLine>
                <scalar:int>246</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>246</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_ConstFetch>
                 <attribute:startLine>
                  <scalar:int>246</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>246</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>246</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>246</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>true</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                </node:Expr_ConstFetch>
               </subNode:expr>
              </node:Stmt_Return>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_Smaller>
              <attribute:startLine>
               <scalar:int>245</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>245</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>245</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>245</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>length</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:left>
              <subNode:right>
               <node:Scalar_LNumber>
                <attribute:startLine>
                 <scalar:int>245</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>245</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:int>2</scalar:int>
                </subNode:value>
               </node:Scalar_LNumber>
              </subNode:right>
             </node:Expr_Smaller>
            </subNode:cond>
           </node:Stmt_If>
           <node:Stmt_If>
            <attribute:comments>
             <scalar:array>
              <comment isDocComment="false" line="248">// you can't divide a keyword
</comment>
             </scalar:array>
            </attribute:comments>
            <attribute:startLine>
             <scalar:int>249</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>258</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_If>
               <attribute:startLine>
                <scalar:int>250</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>252</scalar:int>
               </attribute:endLine>
               <subNode:stmts>
                <scalar:array>
                 <node:Stmt_Return>
                  <attribute:comments>
                   <scalar:array>
                    <comment isDocComment="false" line="250">// odd but could happen
</comment>
                   </scalar:array>
                  </attribute:comments>
                  <attribute:startLine>
                   <scalar:int>251</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>251</scalar:int>
                  </attribute:endLine>
                  <subNode:expr>
                   <node:Expr_ConstFetch>
                    <attribute:startLine>
                     <scalar:int>251</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>251</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <node:Name>
                      <attribute:startLine>
                       <scalar:int>251</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>251</scalar:int>
                      </attribute:endLine>
                      <subNode:parts>
                       <scalar:array>
                        <scalar:string>true</scalar:string>
                       </scalar:array>
                      </subNode:parts>
                     </node:Name>
                    </subNode:name>
                   </node:Expr_ConstFetch>
                  </subNode:expr>
                 </node:Stmt_Return>
                </scalar:array>
               </subNode:stmts>
               <subNode:elseifs>
                <scalar:array/>
               </subNode:elseifs>
               <subNode:else>
                <scalar:null/>
               </subNode:else>
               <subNode:cond>
                <node:Expr_Identical>
                 <attribute:startLine>
                  <scalar:int>250</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>250</scalar:int>
                 </attribute:endLine>
                 <subNode:left>
                  <node:Expr_PropertyFetch>
                   <attribute:startLine>
                    <scalar:int>250</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>250</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>250</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>250</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>output</scalar:string>
                   </subNode:name>
                  </node:Expr_PropertyFetch>
                 </subNode:left>
                 <subNode:right>
                  <node:Expr_ArrayDimFetch>
                   <attribute:startLine>
                    <scalar:int>250</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>250</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>250</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>250</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>m</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:dim>
                    <node:Scalar_LNumber>
                     <attribute:startLine>
                      <scalar:int>250</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>250</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:int>0</scalar:int>
                     </subNode:value>
                    </node:Scalar_LNumber>
                   </subNode:dim>
                  </node:Expr_ArrayDimFetch>
                 </subNode:right>
                </node:Expr_Identical>
               </subNode:cond>
              </node:Stmt_If>
              <node:Expr_Assign>
               <attribute:comments>
                <scalar:array>
                 <comment isDocComment="false" line="253">// make sure it's a keyword, not end of an identifier
</comment>
                </scalar:array>
               </attribute:comments>
               <attribute:startLine>
                <scalar:int>254</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>254</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:comments>
                  <scalar:array>
                   <comment isDocComment="false" line="253">// make sure it's a keyword, not end of an identifier
</comment>
                  </scalar:array>
                 </attribute:comments>
                 <attribute:startLine>
                  <scalar:int>254</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>254</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>charBeforeKeyword</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:expr>
                <node:Expr_FuncCall>
                 <attribute:startLine>
                  <scalar:int>254</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>254</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>254</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>254</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>substr</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>254</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>254</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_PropertyFetch>
                      <attribute:startLine>
                       <scalar:int>254</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>254</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>254</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>254</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>this</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>output</scalar:string>
                      </subNode:name>
                     </node:Expr_PropertyFetch>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>254</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>254</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Minus>
                      <attribute:startLine>
                       <scalar:int>254</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>254</scalar:int>
                      </attribute:endLine>
                      <subNode:left>
                       <node:Expr_Minus>
                        <attribute:startLine>
                         <scalar:int>254</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>254</scalar:int>
                        </attribute:endLine>
                        <subNode:left>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>254</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>254</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>length</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:left>
                        <subNode:right>
                         <node:Expr_FuncCall>
                          <attribute:startLine>
                           <scalar:int>254</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>254</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <node:Name>
                            <attribute:startLine>
                             <scalar:int>254</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>254</scalar:int>
                            </attribute:endLine>
                            <subNode:parts>
                             <scalar:array>
                              <scalar:string>strlen</scalar:string>
                             </scalar:array>
                            </subNode:parts>
                           </node:Name>
                          </subNode:name>
                          <subNode:args>
                           <scalar:array>
                            <node:Arg>
                             <attribute:startLine>
                              <scalar:int>254</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>254</scalar:int>
                             </attribute:endLine>
                             <subNode:value>
                              <node:Expr_ArrayDimFetch>
                               <attribute:startLine>
                                <scalar:int>254</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>254</scalar:int>
                               </attribute:endLine>
                               <subNode:var>
                                <node:Expr_Variable>
                                 <attribute:startLine>
                                  <scalar:int>254</scalar:int>
                                 </attribute:startLine>
                                 <attribute:endLine>
                                  <scalar:int>254</scalar:int>
                                 </attribute:endLine>
                                 <subNode:name>
                                  <scalar:string>m</scalar:string>
                                 </subNode:name>
                                </node:Expr_Variable>
                               </subNode:var>
                               <subNode:dim>
                                <node:Scalar_LNumber>
                                 <attribute:startLine>
                                  <scalar:int>254</scalar:int>
                                 </attribute:startLine>
                                 <attribute:endLine>
                                  <scalar:int>254</scalar:int>
                                 </attribute:endLine>
                                 <subNode:value>
                                  <scalar:int>0</scalar:int>
                                 </subNode:value>
                                </node:Scalar_LNumber>
                               </subNode:dim>
                              </node:Expr_ArrayDimFetch>
                             </subNode:value>
                             <subNode:byRef>
                              <scalar:false/>
                             </subNode:byRef>
                            </node:Arg>
                           </scalar:array>
                          </subNode:args>
                         </node:Expr_FuncCall>
                        </subNode:right>
                       </node:Expr_Minus>
                      </subNode:left>
                      <subNode:right>
                       <node:Scalar_LNumber>
                        <attribute:startLine>
                         <scalar:int>254</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>254</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <scalar:int>1</scalar:int>
                        </subNode:value>
                       </node:Scalar_LNumber>
                      </subNode:right>
                     </node:Expr_Minus>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>254</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>254</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Scalar_LNumber>
                      <attribute:startLine>
                       <scalar:int>254</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>254</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <scalar:int>1</scalar:int>
                      </subNode:value>
                     </node:Scalar_LNumber>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_FuncCall>
               </subNode:expr>
              </node:Expr_Assign>
              <node:Stmt_If>
               <attribute:startLine>
                <scalar:int>255</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>257</scalar:int>
               </attribute:endLine>
               <subNode:stmts>
                <scalar:array>
                 <node:Stmt_Return>
                  <attribute:startLine>
                   <scalar:int>256</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>256</scalar:int>
                  </attribute:endLine>
                  <subNode:expr>
                   <node:Expr_ConstFetch>
                    <attribute:startLine>
                     <scalar:int>256</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>256</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <node:Name>
                      <attribute:startLine>
                       <scalar:int>256</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>256</scalar:int>
                      </attribute:endLine>
                      <subNode:parts>
                       <scalar:array>
                        <scalar:string>true</scalar:string>
                       </scalar:array>
                      </subNode:parts>
                     </node:Name>
                    </subNode:name>
                   </node:Expr_ConstFetch>
                  </subNode:expr>
                 </node:Stmt_Return>
                </scalar:array>
               </subNode:stmts>
               <subNode:elseifs>
                <scalar:array/>
               </subNode:elseifs>
               <subNode:else>
                <scalar:null/>
               </subNode:else>
               <subNode:cond>
                <node:Expr_BooleanNot>
                 <attribute:startLine>
                  <scalar:int>255</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>255</scalar:int>
                 </attribute:endLine>
                 <subNode:expr>
                  <node:Expr_MethodCall>
                   <attribute:startLine>
                    <scalar:int>255</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>255</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>255</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>255</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>isAlphaNum</scalar:string>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>255</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>255</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>255</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>255</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>charBeforeKeyword</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                    </scalar:array>
                   </subNode:args>
                  </node:Expr_MethodCall>
                 </subNode:expr>
                </node:Expr_BooleanNot>
               </subNode:cond>
              </node:Stmt_If>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>249</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>249</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>249</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>249</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>preg_match</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>249</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>249</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>249</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>249</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>/(?:case|else|in|return|typeof)$/</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>249</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>249</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_PropertyFetch>
                   <attribute:startLine>
                    <scalar:int>249</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>249</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>249</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>249</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>output</scalar:string>
                   </subNode:name>
                  </node:Expr_PropertyFetch>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>249</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>249</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>249</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>249</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>m</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:cond>
           </node:Stmt_If>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Identical>
           <attribute:startLine>
            <scalar:int>243</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>243</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>243</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>243</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string> </scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:left>
           <subNode:right>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>243</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>243</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>243</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>243</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>a</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:right>
          </node:Expr_Identical>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>260</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>260</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>260</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>260</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>260</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>260</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>false</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isRegexpLiteral</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="263">/**
     * Get next char. Convert ctrl char to space.
     *
     * @return string
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>268</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>287</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>270</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>270</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>270</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>270</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>c</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>270</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>270</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>270</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>270</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>lookAhead</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>271</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>271</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>271</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>271</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>271</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>271</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>lookAhead</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>271</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>271</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>271</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>271</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>272</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>279</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>273</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>278</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>274</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>274</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>274</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>274</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>c</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:expr>
                <node:Expr_ArrayDimFetch>
                 <attribute:startLine>
                  <scalar:int>274</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>274</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_PropertyFetch>
                   <attribute:startLine>
                    <scalar:int>274</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>274</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>274</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>274</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>input</scalar:string>
                   </subNode:name>
                  </node:Expr_PropertyFetch>
                 </subNode:var>
                 <subNode:dim>
                  <node:Expr_PropertyFetch>
                   <attribute:startLine>
                    <scalar:int>274</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>274</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>274</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>274</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>inputIndex</scalar:string>
                   </subNode:name>
                  </node:Expr_PropertyFetch>
                 </subNode:dim>
                </node:Expr_ArrayDimFetch>
               </subNode:expr>
              </node:Expr_Assign>
              <node:Expr_AssignPlus>
               <attribute:startLine>
                <scalar:int>275</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>275</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>275</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>275</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>275</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>275</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>inputIndex</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:var>
               <subNode:expr>
                <node:Scalar_LNumber>
                 <attribute:startLine>
                  <scalar:int>275</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>275</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:int>1</scalar:int>
                 </subNode:value>
                </node:Scalar_LNumber>
               </subNode:expr>
              </node:Expr_AssignPlus>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <node:Stmt_Else>
              <attribute:startLine>
               <scalar:int>276</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>278</scalar:int>
              </attribute:endLine>
              <subNode:stmts>
               <scalar:array>
                <node:Stmt_Return>
                 <attribute:startLine>
                  <scalar:int>277</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>277</scalar:int>
                 </attribute:endLine>
                 <subNode:expr>
                  <node:Expr_ConstFetch>
                   <attribute:startLine>
                    <scalar:int>277</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>277</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <node:Name>
                     <attribute:startLine>
                      <scalar:int>277</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>277</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>null</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name>
                   </subNode:name>
                  </node:Expr_ConstFetch>
                 </subNode:expr>
                </node:Stmt_Return>
               </scalar:array>
              </subNode:stmts>
             </node:Stmt_Else>
            </subNode:else>
            <subNode:cond>
             <node:Expr_Smaller>
              <attribute:startLine>
               <scalar:int>273</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>273</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>273</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>273</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>273</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>273</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>inputIndex</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:left>
              <subNode:right>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>273</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>273</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>273</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>273</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>inputLength</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:right>
             </node:Expr_Smaller>
            </subNode:cond>
           </node:Stmt_If>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Identical>
           <attribute:startLine>
            <scalar:int>272</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>272</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>272</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>272</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>c</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:left>
           <subNode:right>
            <node:Expr_ConstFetch>
             <attribute:startLine>
              <scalar:int>272</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>272</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>272</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>272</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>null</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
            </node:Expr_ConstFetch>
           </subNode:right>
          </node:Expr_Identical>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>280</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>282</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>281</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>281</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>281</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>281</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>
</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanOr>
           <attribute:startLine>
            <scalar:int>280</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>280</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Identical>
             <attribute:startLine>
              <scalar:int>280</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>280</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>280</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>280</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>c</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:left>
             <subNode:right>
              <node:Scalar_String>
               <attribute:startLine>
                <scalar:int>280</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>280</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <scalar:string>&#13;</scalar:string>
               </subNode:value>
              </node:Scalar_String>
             </subNode:right>
            </node:Expr_Identical>
           </subNode:left>
           <subNode:right>
            <node:Expr_Identical>
             <attribute:startLine>
              <scalar:int>280</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>280</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>280</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>280</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>c</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:left>
             <subNode:right>
              <node:Scalar_String>
               <attribute:startLine>
                <scalar:int>280</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>280</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <scalar:string>
</scalar:string>
               </subNode:value>
              </node:Scalar_String>
             </subNode:right>
            </node:Expr_Identical>
           </subNode:right>
          </node:Expr_BooleanOr>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>283</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>285</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:comments>
             <scalar:array>
              <comment isDocComment="false" line="283">// control char
</comment>
             </scalar:array>
            </attribute:comments>
            <attribute:startLine>
             <scalar:int>284</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>284</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>284</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>284</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string> </scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Smaller>
           <attribute:startLine>
            <scalar:int>283</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>283</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>283</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>283</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>283</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>283</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>ord</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>283</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>283</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>283</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>283</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>c</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:left>
           <subNode:right>
            <node:Expr_ClassConstFetch>
             <attribute:startLine>
              <scalar:int>283</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>283</scalar:int>
             </attribute:endLine>
             <subNode:class>
              <node:Name>
               <attribute:startLine>
                <scalar:int>283</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>283</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>self</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:class>
             <subNode:name>
              <scalar:string>ORD_SPACE</scalar:string>
             </subNode:name>
            </node:Expr_ClassConstFetch>
           </subNode:right>
          </node:Expr_Smaller>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>286</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>286</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>286</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>286</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>c</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>get</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="289">/**
     * Get next char. If is ctrl character, translate to a space or newline.
     *
     * @return string
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>294</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>298</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>296</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>296</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>296</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>296</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>296</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>296</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>lookAhead</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>296</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>296</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>296</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>296</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>get</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>297</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>297</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>297</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>297</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>297</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>297</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>lookAhead</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>peek</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="300">/**
     * Is $c a letter, digit, underscore, dollar sign, escape, or non-ASCII?
     *
     * @param string $c
     *
     * @return bool
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>307</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>310</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>307</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>307</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>c</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>309</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>309</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanOr>
           <attribute:startLine>
            <scalar:int>309</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>309</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>309</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>309</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>309</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>309</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>preg_match</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>309</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>309</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>309</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>309</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>/^[0-9a-zA-Z_\$\\]$/</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>309</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>309</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>309</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>309</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>c</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:left>
           <subNode:right>
            <node:Expr_Greater>
             <attribute:startLine>
              <scalar:int>309</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>309</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_FuncCall>
               <attribute:startLine>
                <scalar:int>309</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>309</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>309</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>309</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>ord</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>309</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>309</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>309</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>309</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>c</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_FuncCall>
             </subNode:left>
             <subNode:right>
              <node:Scalar_LNumber>
               <attribute:startLine>
                <scalar:int>309</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>309</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <scalar:int>126</scalar:int>
               </subNode:value>
              </node:Scalar_LNumber>
             </subNode:right>
            </node:Expr_Greater>
           </subNode:right>
          </node:Expr_BooleanOr>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isAlphaNum</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="312">/**
     * @return string
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>315</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>329</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>317</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>317</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>317</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>317</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>comment</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>317</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>317</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string></scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_While>
         <attribute:startLine>
          <scalar:int>318</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>328</scalar:int>
         </attribute:endLine>
         <subNode:cond>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>318</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>318</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>318</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>318</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>true</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:cond>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>319</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>319</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>319</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>319</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>get</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>319</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>319</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>319</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>319</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>get</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array/>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_AssignConcat>
            <attribute:startLine>
             <scalar:int>320</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>320</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>320</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>320</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>comment</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>320</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>320</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>get</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:expr>
           </node:Expr_AssignConcat>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>321</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>327</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_If>
               <attribute:comments>
                <scalar:array>
                 <comment isDocComment="false" line="321">// EOL reached
</comment>
                 <comment isDocComment="false" line="322">// if IE conditional comment
</comment>
                </scalar:array>
               </attribute:comments>
               <attribute:startLine>
                <scalar:int>323</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>325</scalar:int>
               </attribute:endLine>
               <subNode:stmts>
                <scalar:array>
                 <node:Stmt_Return>
                  <attribute:startLine>
                   <scalar:int>324</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>324</scalar:int>
                  </attribute:endLine>
                  <subNode:expr>
                   <node:Scalar_Encapsed>
                    <attribute:startLine>
                     <scalar:int>324</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>324</scalar:int>
                    </attribute:endLine>
                    <subNode:parts>
                     <scalar:array>
                      <scalar:string>/</scalar:string>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>324</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>324</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>comment</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </scalar:array>
                    </subNode:parts>
                   </node:Scalar_Encapsed>
                  </subNode:expr>
                 </node:Stmt_Return>
                </scalar:array>
               </subNode:stmts>
               <subNode:elseifs>
                <scalar:array/>
               </subNode:elseifs>
               <subNode:else>
                <scalar:null/>
               </subNode:else>
               <subNode:cond>
                <node:Expr_FuncCall>
                 <attribute:startLine>
                  <scalar:int>323</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>323</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>323</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>323</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>preg_match</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>323</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>323</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Scalar_String>
                      <attribute:startLine>
                       <scalar:int>323</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>323</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <scalar:string>/^\/@(?:cc_on|if|elif|else|end)\b/</scalar:string>
                      </subNode:value>
                     </node:Scalar_String>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>323</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>323</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>323</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>323</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>comment</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_FuncCall>
               </subNode:cond>
              </node:Stmt_If>
              <node:Stmt_Return>
               <attribute:startLine>
                <scalar:int>326</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>326</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>326</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>326</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>get</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:expr>
              </node:Stmt_Return>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_SmallerOrEqual>
              <attribute:startLine>
               <scalar:int>321</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>321</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>321</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>321</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>321</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>321</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>ord</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>321</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>321</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>321</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>321</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>get</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:left>
              <subNode:right>
               <node:Expr_ClassConstFetch>
                <attribute:startLine>
                 <scalar:int>321</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>321</scalar:int>
                </attribute:endLine>
                <subNode:class>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>321</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>321</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>self</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:class>
                <subNode:name>
                 <scalar:string>ORD_LF</scalar:string>
                </subNode:name>
               </node:Expr_ClassConstFetch>
              </subNode:right>
             </node:Expr_SmallerOrEqual>
            </subNode:cond>
           </node:Stmt_If>
          </scalar:array>
         </subNode:stmts>
        </node:Stmt_While>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>singleLineComment</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="331">/**
     * @return string
     * @throws JSMin_UnterminatedCommentException
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>335</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>361</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>337</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>337</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>337</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>337</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>get</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array/>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>338</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>338</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>338</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>338</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>comment</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>338</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>338</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string></scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_While>
         <attribute:startLine>
          <scalar:int>339</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>360</scalar:int>
         </attribute:endLine>
         <subNode:cond>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>339</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>339</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>339</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>339</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>true</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:cond>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>340</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>340</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>340</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>340</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>get</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>340</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>340</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>340</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>340</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>get</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array/>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>341</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>358</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_If>
               <attribute:startLine>
                <scalar:int>342</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>353</scalar:int>
               </attribute:endLine>
               <subNode:stmts>
                <scalar:array>
                 <node:Expr_MethodCall>
                  <attribute:comments>
                   <scalar:array>
                    <comment isDocComment="false" line="342">// end of comment reached
</comment>
                   </scalar:array>
                  </attribute:comments>
                  <attribute:startLine>
                   <scalar:int>343</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>343</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:comments>
                     <scalar:array>
                      <comment isDocComment="false" line="342">// end of comment reached
</comment>
                     </scalar:array>
                    </attribute:comments>
                    <attribute:startLine>
                     <scalar:int>343</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>343</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>this</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>get</scalar:string>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array/>
                  </subNode:args>
                 </node:Expr_MethodCall>
                 <node:Stmt_If>
                  <attribute:comments>
                   <scalar:array>
                    <comment isDocComment="false" line="344">// if comment preserved by YUI Compressor
</comment>
                   </scalar:array>
                  </attribute:comments>
                  <attribute:startLine>
                   <scalar:int>345</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>347</scalar:int>
                  </attribute:endLine>
                  <subNode:stmts>
                   <scalar:array>
                    <node:Stmt_Return>
                     <attribute:startLine>
                      <scalar:int>346</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>346</scalar:int>
                     </attribute:endLine>
                     <subNode:expr>
                      <node:Expr_Concat>
                       <attribute:startLine>
                        <scalar:int>346</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>346</scalar:int>
                       </attribute:endLine>
                       <subNode:left>
                        <node:Expr_Concat>
                         <attribute:startLine>
                          <scalar:int>346</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>346</scalar:int>
                         </attribute:endLine>
                         <subNode:left>
                          <node:Scalar_String>
                           <attribute:startLine>
                            <scalar:int>346</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>346</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <scalar:string>
/*!</scalar:string>
                           </subNode:value>
                          </node:Scalar_String>
                         </subNode:left>
                         <subNode:right>
                          <node:Expr_FuncCall>
                           <attribute:startLine>
                            <scalar:int>346</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>346</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <node:Name>
                             <attribute:startLine>
                              <scalar:int>346</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>346</scalar:int>
                             </attribute:endLine>
                             <subNode:parts>
                              <scalar:array>
                               <scalar:string>substr</scalar:string>
                              </scalar:array>
                             </subNode:parts>
                            </node:Name>
                           </subNode:name>
                           <subNode:args>
                            <scalar:array>
                             <node:Arg>
                              <attribute:startLine>
                               <scalar:int>346</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>346</scalar:int>
                              </attribute:endLine>
                              <subNode:value>
                               <node:Expr_Variable>
                                <attribute:startLine>
                                 <scalar:int>346</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>346</scalar:int>
                                </attribute:endLine>
                                <subNode:name>
                                 <scalar:string>comment</scalar:string>
                                </subNode:name>
                               </node:Expr_Variable>
                              </subNode:value>
                              <subNode:byRef>
                               <scalar:false/>
                              </subNode:byRef>
                             </node:Arg>
                             <node:Arg>
                              <attribute:startLine>
                               <scalar:int>346</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>346</scalar:int>
                              </attribute:endLine>
                              <subNode:value>
                               <node:Scalar_LNumber>
                                <attribute:startLine>
                                 <scalar:int>346</scalar:int>
                                </attribute:startLine>
                                <attribute:endLine>
                                 <scalar:int>346</scalar:int>
                                </attribute:endLine>
                                <subNode:value>
                                 <scalar:int>1</scalar:int>
                                </subNode:value>
                               </node:Scalar_LNumber>
                              </subNode:value>
                              <subNode:byRef>
                               <scalar:false/>
                              </subNode:byRef>
                             </node:Arg>
                            </scalar:array>
                           </subNode:args>
                          </node:Expr_FuncCall>
                         </subNode:right>
                        </node:Expr_Concat>
                       </subNode:left>
                       <subNode:right>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>346</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>346</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>*/
</scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:right>
                      </node:Expr_Concat>
                     </subNode:expr>
                    </node:Stmt_Return>
                   </scalar:array>
                  </subNode:stmts>
                  <subNode:elseifs>
                   <scalar:array/>
                  </subNode:elseifs>
                  <subNode:else>
                   <scalar:null/>
                  </subNode:else>
                  <subNode:cond>
                   <node:Expr_Identical>
                    <attribute:startLine>
                     <scalar:int>345</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>345</scalar:int>
                    </attribute:endLine>
                    <subNode:left>
                     <node:Scalar_LNumber>
                      <attribute:startLine>
                       <scalar:int>345</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>345</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <scalar:int>0</scalar:int>
                      </subNode:value>
                     </node:Scalar_LNumber>
                    </subNode:left>
                    <subNode:right>
                     <node:Expr_FuncCall>
                      <attribute:startLine>
                       <scalar:int>345</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>345</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <node:Name>
                        <attribute:startLine>
                         <scalar:int>345</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>345</scalar:int>
                        </attribute:endLine>
                        <subNode:parts>
                         <scalar:array>
                          <scalar:string>strpos</scalar:string>
                         </scalar:array>
                        </subNode:parts>
                       </node:Name>
                      </subNode:name>
                      <subNode:args>
                       <scalar:array>
                        <node:Arg>
                         <attribute:startLine>
                          <scalar:int>345</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>345</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <node:Expr_Variable>
                           <attribute:startLine>
                            <scalar:int>345</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>345</scalar:int>
                           </attribute:endLine>
                           <subNode:name>
                            <scalar:string>comment</scalar:string>
                           </subNode:name>
                          </node:Expr_Variable>
                         </subNode:value>
                         <subNode:byRef>
                          <scalar:false/>
                         </subNode:byRef>
                        </node:Arg>
                        <node:Arg>
                         <attribute:startLine>
                          <scalar:int>345</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>345</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <node:Scalar_String>
                           <attribute:startLine>
                            <scalar:int>345</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>345</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <scalar:string>!</scalar:string>
                           </subNode:value>
                          </node:Scalar_String>
                         </subNode:value>
                         <subNode:byRef>
                          <scalar:false/>
                         </subNode:byRef>
                        </node:Arg>
                       </scalar:array>
                      </subNode:args>
                     </node:Expr_FuncCall>
                    </subNode:right>
                   </node:Expr_Identical>
                  </subNode:cond>
                 </node:Stmt_If>
                 <node:Stmt_If>
                  <attribute:comments>
                   <scalar:array>
                    <comment isDocComment="false" line="348">// if IE conditional comment
</comment>
                   </scalar:array>
                  </attribute:comments>
                  <attribute:startLine>
                   <scalar:int>349</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>351</scalar:int>
                  </attribute:endLine>
                  <subNode:stmts>
                   <scalar:array>
                    <node:Stmt_Return>
                     <attribute:startLine>
                      <scalar:int>350</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>350</scalar:int>
                     </attribute:endLine>
                     <subNode:expr>
                      <node:Scalar_Encapsed>
                       <attribute:startLine>
                        <scalar:int>350</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>350</scalar:int>
                       </attribute:endLine>
                       <subNode:parts>
                        <scalar:array>
                         <scalar:string>/*</scalar:string>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>350</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>350</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>comment</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                         <scalar:string>*/</scalar:string>
                        </scalar:array>
                       </subNode:parts>
                      </node:Scalar_Encapsed>
                     </subNode:expr>
                    </node:Stmt_Return>
                   </scalar:array>
                  </subNode:stmts>
                  <subNode:elseifs>
                   <scalar:array/>
                  </subNode:elseifs>
                  <subNode:else>
                   <scalar:null/>
                  </subNode:else>
                  <subNode:cond>
                   <node:Expr_FuncCall>
                    <attribute:startLine>
                     <scalar:int>349</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>349</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <node:Name>
                      <attribute:startLine>
                       <scalar:int>349</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>349</scalar:int>
                      </attribute:endLine>
                      <subNode:parts>
                       <scalar:array>
                        <scalar:string>preg_match</scalar:string>
                       </scalar:array>
                      </subNode:parts>
                     </node:Name>
                    </subNode:name>
                    <subNode:args>
                     <scalar:array>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>349</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>349</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Scalar_String>
                         <attribute:startLine>
                          <scalar:int>349</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>349</scalar:int>
                         </attribute:endLine>
                         <subNode:value>
                          <scalar:string>/^@(?:cc_on|if|elif|else|end)\b/</scalar:string>
                         </subNode:value>
                        </node:Scalar_String>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>349</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>349</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>349</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>349</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>comment</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                     </scalar:array>
                    </subNode:args>
                   </node:Expr_FuncCall>
                  </subNode:cond>
                 </node:Stmt_If>
                 <node:Stmt_Return>
                  <attribute:startLine>
                   <scalar:int>352</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>352</scalar:int>
                  </attribute:endLine>
                  <subNode:expr>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>352</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>352</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string> </scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:expr>
                 </node:Stmt_Return>
                </scalar:array>
               </subNode:stmts>
               <subNode:elseifs>
                <scalar:array/>
               </subNode:elseifs>
               <subNode:else>
                <scalar:null/>
               </subNode:else>
               <subNode:cond>
                <node:Expr_Identical>
                 <attribute:startLine>
                  <scalar:int>342</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>342</scalar:int>
                 </attribute:endLine>
                 <subNode:left>
                  <node:Expr_MethodCall>
                   <attribute:startLine>
                    <scalar:int>342</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>342</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>342</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>342</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>peek</scalar:string>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array/>
                   </subNode:args>
                  </node:Expr_MethodCall>
                 </subNode:left>
                 <subNode:right>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>342</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>342</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>/</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:right>
                </node:Expr_Identical>
               </subNode:cond>
              </node:Stmt_If>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array>
              <node:Stmt_ElseIf>
               <attribute:startLine>
                <scalar:int>354</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>358</scalar:int>
               </attribute:endLine>
               <subNode:cond>
                <node:Expr_Identical>
                 <attribute:startLine>
                  <scalar:int>354</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>354</scalar:int>
                 </attribute:endLine>
                 <subNode:left>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>354</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>354</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>get</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:left>
                 <subNode:right>
                  <node:Expr_ConstFetch>
                   <attribute:startLine>
                    <scalar:int>354</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>354</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <node:Name>
                     <attribute:startLine>
                      <scalar:int>354</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>354</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>null</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name>
                   </subNode:name>
                  </node:Expr_ConstFetch>
                 </subNode:right>
                </node:Expr_Identical>
               </subNode:cond>
               <subNode:stmts>
                <scalar:array>
                 <node:Stmt_Throw>
                  <attribute:startLine>
                   <scalar:int>355</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>357</scalar:int>
                  </attribute:endLine>
                  <subNode:expr>
                   <node:Expr_New>
                    <attribute:startLine>
                     <scalar:int>355</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>357</scalar:int>
                    </attribute:endLine>
                    <subNode:class>
                     <node:Name_FullyQualified>
                      <attribute:startLine>
                       <scalar:int>355</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>355</scalar:int>
                      </attribute:endLine>
                      <subNode:parts>
                       <scalar:array>
                        <scalar:string>JSMin_UnterminatedCommentException</scalar:string>
                       </scalar:array>
                      </subNode:parts>
                     </node:Name_FullyQualified>
                    </subNode:class>
                    <subNode:args>
                     <scalar:array>
                      <node:Arg>
                       <attribute:startLine>
                        <scalar:int>356</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>357</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <node:Expr_Concat>
                         <attribute:startLine>
                          <scalar:int>356</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>357</scalar:int>
                         </attribute:endLine>
                         <subNode:left>
                          <node:Expr_Concat>
                           <attribute:startLine>
                            <scalar:int>356</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>357</scalar:int>
                           </attribute:endLine>
                           <subNode:left>
                            <node:Scalar_String>
                             <attribute:startLine>
                              <scalar:int>356</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>356</scalar:int>
                             </attribute:endLine>
                             <subNode:value>
                              <scalar:string>JSMin: Unterminated comment at byte </scalar:string>
                             </subNode:value>
                            </node:Scalar_String>
                           </subNode:left>
                           <subNode:right>
                            <node:Expr_PropertyFetch>
                             <attribute:startLine>
                              <scalar:int>357</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>357</scalar:int>
                             </attribute:endLine>
                             <subNode:var>
                              <node:Expr_Variable>
                               <attribute:startLine>
                                <scalar:int>357</scalar:int>
                               </attribute:startLine>
                               <attribute:endLine>
                                <scalar:int>357</scalar:int>
                               </attribute:endLine>
                               <subNode:name>
                                <scalar:string>this</scalar:string>
                               </subNode:name>
                              </node:Expr_Variable>
                             </subNode:var>
                             <subNode:name>
                              <scalar:string>inputIndex</scalar:string>
                             </subNode:name>
                            </node:Expr_PropertyFetch>
                           </subNode:right>
                          </node:Expr_Concat>
                         </subNode:left>
                         <subNode:right>
                          <node:Scalar_Encapsed>
                           <attribute:startLine>
                            <scalar:int>357</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>357</scalar:int>
                           </attribute:endLine>
                           <subNode:parts>
                            <scalar:array>
                             <scalar:string>: /*</scalar:string>
                             <node:Expr_Variable>
                              <attribute:startLine>
                               <scalar:int>357</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>357</scalar:int>
                              </attribute:endLine>
                              <subNode:name>
                               <scalar:string>comment</scalar:string>
                              </subNode:name>
                             </node:Expr_Variable>
                            </scalar:array>
                           </subNode:parts>
                          </node:Scalar_Encapsed>
                         </subNode:right>
                        </node:Expr_Concat>
                       </subNode:value>
                       <subNode:byRef>
                        <scalar:false/>
                       </subNode:byRef>
                      </node:Arg>
                     </scalar:array>
                    </subNode:args>
                   </node:Expr_New>
                  </subNode:expr>
                 </node:Stmt_Throw>
                </scalar:array>
               </subNode:stmts>
              </node:Stmt_ElseIf>
             </scalar:array>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_Identical>
              <attribute:startLine>
               <scalar:int>341</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>341</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>341</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>341</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>get</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:left>
              <subNode:right>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>341</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>341</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>*</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:right>
             </node:Expr_Identical>
            </subNode:cond>
           </node:Stmt_If>
           <node:Expr_AssignConcat>
            <attribute:startLine>
             <scalar:int>359</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>359</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>359</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>359</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>comment</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>359</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>359</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>get</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:expr>
           </node:Expr_AssignConcat>
          </scalar:array>
         </subNode:stmts>
        </node:Stmt_While>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>multipleLineComment</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="363">/**
     * Get the next character, skipping over comments.
     * Some comments may be preserved.
     *
     * @return string
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>369</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>380</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>371</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>371</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>371</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>371</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>get</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>371</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>371</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>371</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>371</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>get</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>372</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>374</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>373</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>373</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>373</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>373</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>get</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_NotIdentical>
           <attribute:startLine>
            <scalar:int>372</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>372</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>372</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>372</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>get</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:left>
           <subNode:right>
            <node:Scalar_String>
             <attribute:startLine>
              <scalar:int>372</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>372</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:string>/</scalar:string>
             </subNode:value>
            </node:Scalar_String>
           </subNode:right>
          </node:Expr_NotIdentical>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Switch>
         <attribute:startLine>
          <scalar:int>375</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>379</scalar:int>
         </attribute:endLine>
         <subNode:cond>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>375</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>375</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>375</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>375</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>peek</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:cond>
         <subNode:cases>
          <scalar:array>
           <node:Stmt_Case>
            <attribute:startLine>
             <scalar:int>376</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>376</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>376</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>376</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>/</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_Return>
               <attribute:startLine>
                <scalar:int>376</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>376</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_MethodCall>
                 <attribute:startLine>
                  <scalar:int>376</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>376</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>376</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>376</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>singleLineComment</scalar:string>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array/>
                 </subNode:args>
                </node:Expr_MethodCall>
               </subNode:expr>
              </node:Stmt_Return>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_Case>
           <node:Stmt_Case>
            <attribute:startLine>
             <scalar:int>377</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>377</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>377</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>377</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>*</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_Return>
               <attribute:startLine>
                <scalar:int>377</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>377</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_MethodCall>
                 <attribute:startLine>
                  <scalar:int>377</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>377</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>377</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>377</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>multipleLineComment</scalar:string>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array/>
                 </subNode:args>
                </node:Expr_MethodCall>
               </subNode:expr>
              </node:Stmt_Return>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_Case>
           <node:Stmt_Case>
            <attribute:startLine>
             <scalar:int>378</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>378</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <scalar:null/>
            </subNode:cond>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_Return>
               <attribute:startLine>
                <scalar:int>378</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>378</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>378</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>378</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>get</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:expr>
              </node:Stmt_Return>
             </scalar:array>
            </subNode:stmts>
           </node:Stmt_Case>
          </scalar:array>
         </subNode:cases>
        </node:Stmt_Switch>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>next</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
    </scalar:array>
   </subNode:stmts>
   <subNode:name>
    <scalar:string>JSMin</scalar:string>
   </subNode:name>
   <subNode:namespacedName>
    <node:Name>
     <attribute:comments>
      <scalar:array>
       <comment isDocComment="true" line="2">/**
 * JSMin.php - modified PHP implementation of Douglas Crockford's JSMin.
 *
 * &lt;code&gt;
 * $minifiedJs = JSMin::minify($js);
 * &lt;/code&gt;
 *
 * This is a modified port of jsmin.c. Improvements:
 * 
 * Does not choke on some regexp literals containing quote characters. E.g. /'/
 * 
 * Spaces are preserved after some add/sub operators, so they are not mistakenly 
 * converted to post-inc/dec. E.g. a + ++b -&gt; a+ ++b
 *
 * Preserves multi-line comments that begin with /*!
 * 
 * PHP 5 or higher is required.
 *
 * Permission is hereby granted to use this version of the library under the
 * same terms as jsmin.c, which has the following license:
 *
 * --
 * Copyright (c) 2002 Douglas Crockford  (www.crockford.com)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the &quot;Software&quot;), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
 * of the Software, and to permit persons to whom the Software is furnished to do
 * so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * The Software shall be used for Good, not Evil.
 *
 * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 * --
 *
 * @package JSMin
 * @author Ryan Grove &lt;ryan@wonko.com&gt; (PHP port)
 * @author Steve Clay &lt;steve@mrclay.org&gt; (modifications + cleanup)
 * @author Andrea Giammarchi &lt;http://www.3site.eu&gt; (spaceBeforeRegExp)
 * @copyright 2002 Douglas Crockford &lt;douglas@crockford.com&gt; (jsmin.c)
 * @copyright 2008 Ryan Grove &lt;ryan@wonko.com&gt; (PHP port)
 * @license http://opensource.org/licenses/mit-license.php MIT License
 * @link http://code.google.com/p/jsmin-php/
 */</comment>
      </scalar:array>
     </attribute:comments>
     <attribute:startLine>
      <scalar:int>57</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>381</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>JSMin</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name>
   </subNode:namespacedName>
  </node:Stmt_Class>
  <node:Stmt_Class>
   <attribute:startLine>
    <scalar:int>383</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>383</scalar:int>
   </attribute:endLine>
   <subNode:type>
    <scalar:int>0</scalar:int>
   </subNode:type>
   <subNode:extends>
    <node:Name_FullyQualified>
     <attribute:startLine>
      <scalar:int>383</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>383</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Exception</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name_FullyQualified>
   </subNode:extends>
   <subNode:implements>
    <scalar:array/>
   </subNode:implements>
   <subNode:stmts>
    <scalar:array/>
   </subNode:stmts>
   <subNode:name>
    <scalar:string>JSMin_UnterminatedStringException</scalar:string>
   </subNode:name>
   <subNode:namespacedName>
    <node:Name>
     <attribute:startLine>
      <scalar:int>383</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>383</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>JSMin_UnterminatedStringException</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name>
   </subNode:namespacedName>
  </node:Stmt_Class>
  <node:Stmt_Class>
   <attribute:startLine>
    <scalar:int>384</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>384</scalar:int>
   </attribute:endLine>
   <subNode:type>
    <scalar:int>0</scalar:int>
   </subNode:type>
   <subNode:extends>
    <node:Name_FullyQualified>
     <attribute:startLine>
      <scalar:int>384</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>384</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Exception</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name_FullyQualified>
   </subNode:extends>
   <subNode:implements>
    <scalar:array/>
   </subNode:implements>
   <subNode:stmts>
    <scalar:array/>
   </subNode:stmts>
   <subNode:name>
    <scalar:string>JSMin_UnterminatedCommentException</scalar:string>
   </subNode:name>
   <subNode:namespacedName>
    <node:Name>
     <attribute:startLine>
      <scalar:int>384</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>384</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>JSMin_UnterminatedCommentException</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name>
   </subNode:namespacedName>
  </node:Stmt_Class>
  <node:Stmt_Class>
   <attribute:startLine>
    <scalar:int>385</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>385</scalar:int>
   </attribute:endLine>
   <subNode:type>
    <scalar:int>0</scalar:int>
   </subNode:type>
   <subNode:extends>
    <node:Name_FullyQualified>
     <attribute:startLine>
      <scalar:int>385</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>385</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Exception</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name_FullyQualified>
   </subNode:extends>
   <subNode:implements>
    <scalar:array/>
   </subNode:implements>
   <subNode:stmts>
    <scalar:array/>
   </subNode:stmts>
   <subNode:name>
    <scalar:string>JSMin_UnterminatedRegExpException</scalar:string>
   </subNode:name>
   <subNode:namespacedName>
    <node:Name>
     <attribute:startLine>
      <scalar:int>385</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>385</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>JSMin_UnterminatedRegExpException</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name>
   </subNode:namespacedName>
  </node:Stmt_Class>
 </scalar:array>
</AST>
