<?xml version="1.0" encoding="UTF-8"?>
<AST xmlns:node="http://nikic.github.com/PHPParser/XML/node" xmlns:subNode="http://nikic.github.com/PHPParser/XML/subNode" xmlns:attribute="http://nikic.github.com/PHPParser/XML/attribute" xmlns:scalar="http://nikic.github.com/PHPParser/XML/scalar">
 <scalar:array>
  <node:Stmt_Class>
   <attribute:comments>
    <scalar:array>
     <comment isDocComment="true" line="2">/**
 * Smarty Internal Plugin Compile Debug
 *
 * Compiles the {debug} tag.
 * It opens a window the the Smarty Debugging Console.
 *
 * @package Smarty
 * @subpackage Compiler
 * @author Uwe Tews
 */</comment>
     <comment isDocComment="true" line="13">/**
 * Smarty Internal Plugin Compile Debug Class
 *
 * @package Smarty
 * @subpackage Compiler
 */</comment>
    </scalar:array>
   </attribute:comments>
   <attribute:startLine>
    <scalar:int>19</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>41</scalar:int>
   </attribute:endLine>
   <subNode:type>
    <scalar:int>0</scalar:int>
   </subNode:type>
   <subNode:extends>
    <node:Name_FullyQualified>
     <attribute:startLine>
      <scalar:int>19</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>19</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Smarty_Internal_CompileBase</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name_FullyQualified>
   </subNode:extends>
   <subNode:implements>
    <scalar:array/>
   </subNode:implements>
   <subNode:stmts>
    <scalar:array>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="21">/**
     * Compiles code for the {debug} tag
     *
     * @param array  $args     array with attributes from parser
     * @param object $compiler compiler object
     * @return string compiled code
     */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>28</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>39</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>28</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>28</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>args</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>28</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>28</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>compiler</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:comments>
          <scalar:array>
           <comment isDocComment="false" line="30">// check and get attributes
</comment>
          </scalar:array>
         </attribute:comments>
         <attribute:startLine>
          <scalar:int>31</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>31</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:comments>
            <scalar:array>
             <comment isDocComment="false" line="30">// check and get attributes
</comment>
            </scalar:array>
           </attribute:comments>
           <attribute:startLine>
            <scalar:int>31</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>31</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>_attr</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>31</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>31</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>31</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>31</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>getAttributes</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>31</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>31</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>31</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>31</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>compiler</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>31</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>31</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>31</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>31</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>args</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:comments>
          <scalar:array>
           <comment isDocComment="false" line="33">// compile always as nocache
</comment>
          </scalar:array>
         </attribute:comments>
         <attribute:startLine>
          <scalar:int>34</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>34</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:comments>
            <scalar:array>
             <comment isDocComment="false" line="33">// compile always as nocache
</comment>
            </scalar:array>
           </attribute:comments>
           <attribute:startLine>
            <scalar:int>34</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>34</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:comments>
              <scalar:array>
               <comment isDocComment="false" line="33">// compile always as nocache
</comment>
              </scalar:array>
             </attribute:comments>
             <attribute:startLine>
              <scalar:int>34</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>34</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>compiler</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>tag_nocache</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>34</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>34</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>34</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>34</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>true</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:comments>
          <scalar:array>
           <comment isDocComment="false" line="36">// display debug template
</comment>
          </scalar:array>
         </attribute:comments>
         <attribute:startLine>
          <scalar:int>37</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>37</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:comments>
            <scalar:array>
             <comment isDocComment="false" line="36">// display debug template
</comment>
            </scalar:array>
           </attribute:comments>
           <attribute:startLine>
            <scalar:int>37</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>37</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>_output</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>37</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>37</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>&lt;?php $_smarty_tpl-&gt;smarty-&gt;loadPlugin('Smarty_Internal_Debug'); Smarty_Internal_Debug::display_debug($_smarty_tpl); ?&gt;</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>38</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>38</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>38</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>38</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>_output</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>compile</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
    </scalar:array>
   </subNode:stmts>
   <subNode:name>
    <scalar:string>Smarty_Internal_Compile_Debug</scalar:string>
   </subNode:name>
   <subNode:namespacedName>
    <node:Name>
     <attribute:comments>
      <scalar:array>
       <comment isDocComment="true" line="2">/**
 * Smarty Internal Plugin Compile Debug
 *
 * Compiles the {debug} tag.
 * It opens a window the the Smarty Debugging Console.
 *
 * @package Smarty
 * @subpackage Compiler
 * @author Uwe Tews
 */</comment>
       <comment isDocComment="true" line="13">/**
 * Smarty Internal Plugin Compile Debug Class
 *
 * @package Smarty
 * @subpackage Compiler
 */</comment>
      </scalar:array>
     </attribute:comments>
     <attribute:startLine>
      <scalar:int>19</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>41</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Smarty_Internal_Compile_Debug</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name>
   </subNode:namespacedName>
  </node:Stmt_Class>
 </scalar:array>
</AST>
