<?xml version="1.0" encoding="UTF-8"?>
<AST xmlns:node="http://nikic.github.com/PHPParser/XML/node" xmlns:subNode="http://nikic.github.com/PHPParser/XML/subNode" xmlns:attribute="http://nikic.github.com/PHPParser/XML/attribute" xmlns:scalar="http://nikic.github.com/PHPParser/XML/scalar">
 <scalar:array>
  <node:Expr_Include>
   <attribute:comments>
    <scalar:array>
     <comment isDocComment="true" line="3">/**
 * Swift Mailer Native memory runtime cache
 * Please read the LICENSE file
 * @author Chris Corbyn &lt;chris@w3style.co.uk&gt;
 * @package Swift_Cache
 * @license GNU Lesser General Public License
 */</comment>
    </scalar:array>
   </attribute:comments>
   <attribute:startLine>
    <scalar:int>11</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>11</scalar:int>
   </attribute:endLine>
   <subNode:expr>
    <node:Expr_Concat>
     <attribute:startLine>
      <scalar:int>11</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>11</scalar:int>
     </attribute:endLine>
     <subNode:left>
      <node:Expr_FuncCall>
       <attribute:startLine>
        <scalar:int>11</scalar:int>
       </attribute:startLine>
       <attribute:endLine>
        <scalar:int>11</scalar:int>
       </attribute:endLine>
       <subNode:name>
        <node:Name>
         <attribute:startLine>
          <scalar:int>11</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>11</scalar:int>
         </attribute:endLine>
         <subNode:parts>
          <scalar:array>
           <scalar:string>dirname</scalar:string>
          </scalar:array>
         </subNode:parts>
        </node:Name>
       </subNode:name>
       <subNode:args>
        <scalar:array>
         <node:Arg>
          <attribute:startLine>
           <scalar:int>11</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>11</scalar:int>
          </attribute:endLine>
          <subNode:value>
           <node:Scalar_FileConst>
            <attribute:startLine>
             <scalar:int>11</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>11</scalar:int>
            </attribute:endLine>
           </node:Scalar_FileConst>
          </subNode:value>
          <subNode:byRef>
           <scalar:false/>
          </subNode:byRef>
         </node:Arg>
        </scalar:array>
       </subNode:args>
      </node:Expr_FuncCall>
     </subNode:left>
     <subNode:right>
      <node:Scalar_String>
       <attribute:startLine>
        <scalar:int>11</scalar:int>
       </attribute:startLine>
       <attribute:endLine>
        <scalar:int>11</scalar:int>
       </attribute:endLine>
       <subNode:value>
        <scalar:string>/../ClassLoader.php</scalar:string>
       </subNode:value>
      </node:Scalar_String>
     </subNode:right>
    </node:Expr_Concat>
   </subNode:expr>
   <subNode:type>
    <scalar:int>4</scalar:int>
   </subNode:type>
  </node:Expr_Include>
  <node:Expr_StaticCall>
   <attribute:startLine>
    <scalar:int>12</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>12</scalar:int>
   </attribute:endLine>
   <subNode:class>
    <node:Name_FullyQualified>
     <attribute:startLine>
      <scalar:int>12</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>12</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Swift_ClassLoader</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name_FullyQualified>
   </subNode:class>
   <subNode:name>
    <scalar:string>load</scalar:string>
   </subNode:name>
   <subNode:args>
    <scalar:array>
     <node:Arg>
      <attribute:startLine>
       <scalar:int>12</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>12</scalar:int>
      </attribute:endLine>
      <subNode:value>
       <node:Scalar_String>
        <attribute:startLine>
         <scalar:int>12</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>12</scalar:int>
        </attribute:endLine>
        <subNode:value>
         <scalar:string>Swift_Cache</scalar:string>
        </subNode:value>
       </node:Scalar_String>
      </subNode:value>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
     </node:Arg>
    </scalar:array>
   </subNode:args>
  </node:Expr_StaticCall>
  <node:Stmt_Class>
   <attribute:comments>
    <scalar:array>
     <comment isDocComment="true" line="14">/**
 * Caches data in variables - uses memory!
 * @package Swift_Cache
 * @author Chris Corbyn &lt;chris@w3style.co.uk&gt;
 */</comment>
    </scalar:array>
   </attribute:comments>
   <attribute:startLine>
    <scalar:int>19</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>78</scalar:int>
   </attribute:endLine>
   <subNode:type>
    <scalar:int>0</scalar:int>
   </subNode:type>
   <subNode:extends>
    <node:Name_FullyQualified>
     <attribute:startLine>
      <scalar:int>19</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>19</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Swift_Cache</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name_FullyQualified>
   </subNode:extends>
   <subNode:implements>
    <scalar:array/>
   </subNode:implements>
   <subNode:stmts>
    <scalar:array>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="21">/**
   * The storage container for this cache
   * @var array
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>25</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>25</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>25</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>25</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>store</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_Array>
           <attribute:startLine>
            <scalar:int>25</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>25</scalar:int>
           </attribute:endLine>
           <subNode:items>
            <scalar:array/>
           </subNode:items>
          </node:Expr_Array>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="26">/**
   * The key which was last requested
   * @var string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>30</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>30</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>30</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>30</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>requested</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="32">/**
   * Write data to the cache
   * @param string The cache key
   * @param string The data to write
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>37</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>41</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>37</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>37</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>key</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>37</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>37</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>data</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>39</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>40</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>39</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>39</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_ArrayDimFetch>
              <attribute:startLine>
               <scalar:int>39</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>39</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>39</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>39</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>39</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>39</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>store</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:var>
              <subNode:dim>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>39</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>39</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>key</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:dim>
             </node:Expr_ArrayDimFetch>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>39</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>39</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>data</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <node:Stmt_Else>
           <attribute:startLine>
            <scalar:int>40</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>40</scalar:int>
           </attribute:endLine>
           <subNode:stmts>
            <scalar:array>
             <node:Expr_AssignConcat>
              <attribute:startLine>
               <scalar:int>40</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>40</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_ArrayDimFetch>
                <attribute:startLine>
                 <scalar:int>40</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>40</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_PropertyFetch>
                  <attribute:startLine>
                   <scalar:int>40</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>40</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>40</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>40</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>this</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>store</scalar:string>
                  </subNode:name>
                 </node:Expr_PropertyFetch>
                </subNode:var>
                <subNode:dim>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>40</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>40</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>key</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:dim>
               </node:Expr_ArrayDimFetch>
              </subNode:var>
              <subNode:expr>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>40</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>40</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>data</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:expr>
             </node:Expr_AssignConcat>
            </scalar:array>
           </subNode:stmts>
          </node:Stmt_Else>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>39</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>39</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Isset>
             <attribute:startLine>
              <scalar:int>39</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>39</scalar:int>
             </attribute:endLine>
             <subNode:vars>
              <scalar:array>
               <node:Expr_ArrayDimFetch>
                <attribute:startLine>
                 <scalar:int>39</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>39</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_PropertyFetch>
                  <attribute:startLine>
                   <scalar:int>39</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>39</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>39</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>39</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>this</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>store</scalar:string>
                  </subNode:name>
                 </node:Expr_PropertyFetch>
                </subNode:var>
                <subNode:dim>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>39</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>39</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>key</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:dim>
               </node:Expr_ArrayDimFetch>
              </scalar:array>
             </subNode:vars>
            </node:Expr_Isset>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>write</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="42">/**
   * Clear the cached data (unset)
   * @param string The cache key
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>46</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>50</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>46</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>46</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>key</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>48</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>48</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_ArrayDimFetch>
           <attribute:startLine>
            <scalar:int>48</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>48</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>48</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>48</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>48</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>48</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>store</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:var>
           <subNode:dim>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>48</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>48</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>key</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:dim>
          </node:Expr_ArrayDimFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>48</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>48</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>48</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>48</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_Unset>
         <attribute:startLine>
          <scalar:int>49</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>49</scalar:int>
         </attribute:endLine>
         <subNode:vars>
          <scalar:array>
           <node:Expr_ArrayDimFetch>
            <attribute:startLine>
             <scalar:int>49</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>49</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>49</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>49</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>49</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>49</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>store</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:var>
            <subNode:dim>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>49</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>49</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>key</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:dim>
           </node:Expr_ArrayDimFetch>
          </scalar:array>
         </subNode:vars>
        </node:Stmt_Unset>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>clear</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="51">/**
   * Check if data is cached for $key
   * @param string The cache key
   * @return boolean
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>56</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>59</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>56</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>56</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>key</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>58</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>58</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>58</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>58</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>58</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>58</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>array_key_exists</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>58</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>58</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>58</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>58</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>key</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>58</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>58</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>58</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>58</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>58</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>58</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>store</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>has</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="60">/**
   * Read data from the cache for $key
   * It makes no difference to memory/speed if data is read in chunks so arguments are ignored
   * @param string The cache key
   * @return string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>66</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>77</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>66</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>66</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>key</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>66</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>66</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>size</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>66</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>66</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>66</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>66</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>68</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>68</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>68</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>68</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_ConstFetch>
              <attribute:startLine>
               <scalar:int>68</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>68</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>68</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>68</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>false</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
             </node:Expr_ConstFetch>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>68</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>68</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_MethodCall>
             <attribute:startLine>
              <scalar:int>68</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>68</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>68</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>68</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>has</scalar:string>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>68</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>68</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>68</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>68</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>key</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_MethodCall>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>70</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>74</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>72</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>72</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>72</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>72</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>72</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>72</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>requested</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:var>
            <subNode:expr>
             <node:Expr_ConstFetch>
              <attribute:startLine>
               <scalar:int>72</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>72</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>72</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>72</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>null</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
             </node:Expr_ConstFetch>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>73</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>73</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_ConstFetch>
              <attribute:startLine>
               <scalar:int>73</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>73</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>73</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>73</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>false</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
             </node:Expr_ConstFetch>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Equal>
           <attribute:startLine>
            <scalar:int>70</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>70</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>70</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>70</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>70</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>70</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>requested</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:left>
           <subNode:right>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>70</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>70</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>key</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:right>
          </node:Expr_Equal>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>75</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>75</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>75</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>75</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>75</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>75</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>requested</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>75</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>75</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>key</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>76</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>76</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_ArrayDimFetch>
           <attribute:startLine>
            <scalar:int>76</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>76</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>76</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>76</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>76</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>76</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>store</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:var>
           <subNode:dim>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>76</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>76</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>key</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:dim>
          </node:Expr_ArrayDimFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>read</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
    </scalar:array>
   </subNode:stmts>
   <subNode:name>
    <scalar:string>Swift_Cache_Memory</scalar:string>
   </subNode:name>
   <subNode:namespacedName>
    <node:Name>
     <attribute:comments>
      <scalar:array>
       <comment isDocComment="true" line="14">/**
 * Caches data in variables - uses memory!
 * @package Swift_Cache
 * @author Chris Corbyn &lt;chris@w3style.co.uk&gt;
 */</comment>
      </scalar:array>
     </attribute:comments>
     <attribute:startLine>
      <scalar:int>19</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>78</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Swift_Cache_Memory</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name>
   </subNode:namespacedName>
  </node:Stmt_Class>
 </scalar:array>
</AST>
