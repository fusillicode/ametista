<?xml version="1.0" encoding="UTF-8"?>
<AST xmlns:node="http://nikic.github.com/PHPParser/XML/node" xmlns:subNode="http://nikic.github.com/PHPParser/XML/subNode" xmlns:attribute="http://nikic.github.com/PHPParser/XML/attribute" xmlns:scalar="http://nikic.github.com/PHPParser/XML/scalar">
 <scalar:array>
  <node:Expr_Include>
   <attribute:comments>
    <scalar:array>
     <comment isDocComment="true" line="3">/**
 * Swift Mailer Sendmail Connection component.
 * Please read the LICENSE file
 * @author Chris Corbyn &lt;chris@w3style.co.uk&gt;
 * @package Swift_Connection
 * @license GNU Lesser General Public License
 */</comment>
    </scalar:array>
   </attribute:comments>
   <attribute:startLine>
    <scalar:int>11</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>11</scalar:int>
   </attribute:endLine>
   <subNode:expr>
    <node:Expr_Concat>
     <attribute:startLine>
      <scalar:int>11</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>11</scalar:int>
     </attribute:endLine>
     <subNode:left>
      <node:Expr_FuncCall>
       <attribute:startLine>
        <scalar:int>11</scalar:int>
       </attribute:startLine>
       <attribute:endLine>
        <scalar:int>11</scalar:int>
       </attribute:endLine>
       <subNode:name>
        <node:Name>
         <attribute:startLine>
          <scalar:int>11</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>11</scalar:int>
         </attribute:endLine>
         <subNode:parts>
          <scalar:array>
           <scalar:string>dirname</scalar:string>
          </scalar:array>
         </subNode:parts>
        </node:Name>
       </subNode:name>
       <subNode:args>
        <scalar:array>
         <node:Arg>
          <attribute:startLine>
           <scalar:int>11</scalar:int>
          </attribute:startLine>
          <attribute:endLine>
           <scalar:int>11</scalar:int>
          </attribute:endLine>
          <subNode:value>
           <node:Scalar_FileConst>
            <attribute:startLine>
             <scalar:int>11</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>11</scalar:int>
            </attribute:endLine>
           </node:Scalar_FileConst>
          </subNode:value>
          <subNode:byRef>
           <scalar:false/>
          </subNode:byRef>
         </node:Arg>
        </scalar:array>
       </subNode:args>
      </node:Expr_FuncCall>
     </subNode:left>
     <subNode:right>
      <node:Scalar_String>
       <attribute:startLine>
        <scalar:int>11</scalar:int>
       </attribute:startLine>
       <attribute:endLine>
        <scalar:int>11</scalar:int>
       </attribute:endLine>
       <subNode:value>
        <scalar:string>/../ClassLoader.php</scalar:string>
       </subNode:value>
      </node:Scalar_String>
     </subNode:right>
    </node:Expr_Concat>
   </subNode:expr>
   <subNode:type>
    <scalar:int>4</scalar:int>
   </subNode:type>
  </node:Expr_Include>
  <node:Expr_StaticCall>
   <attribute:startLine>
    <scalar:int>12</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>12</scalar:int>
   </attribute:endLine>
   <subNode:class>
    <node:Name_FullyQualified>
     <attribute:startLine>
      <scalar:int>12</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>12</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Swift_ClassLoader</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name_FullyQualified>
   </subNode:class>
   <subNode:name>
    <scalar:string>load</scalar:string>
   </subNode:name>
   <subNode:args>
    <scalar:array>
     <node:Arg>
      <attribute:startLine>
       <scalar:int>12</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>12</scalar:int>
      </attribute:endLine>
      <subNode:value>
       <node:Scalar_String>
        <attribute:startLine>
         <scalar:int>12</scalar:int>
        </attribute:startLine>
        <attribute:endLine>
         <scalar:int>12</scalar:int>
        </attribute:endLine>
        <subNode:value>
         <scalar:string>Swift_ConnectionBase</scalar:string>
        </subNode:value>
       </node:Scalar_String>
      </subNode:value>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
     </node:Arg>
    </scalar:array>
   </subNode:args>
  </node:Expr_StaticCall>
  <node:Stmt_Class>
   <attribute:comments>
    <scalar:array>
     <comment isDocComment="true" line="14">/**
 * Swift Sendmail Connection
 * @package Swift_Connection
 * @author Chris Corbyn &lt;chris@w3style.co.uk&gt;
 */</comment>
    </scalar:array>
   </attribute:comments>
   <attribute:startLine>
    <scalar:int>19</scalar:int>
   </attribute:startLine>
   <attribute:endLine>
    <scalar:int>352</scalar:int>
   </attribute:endLine>
   <subNode:type>
    <scalar:int>0</scalar:int>
   </subNode:type>
   <subNode:extends>
    <node:Name_FullyQualified>
     <attribute:startLine>
      <scalar:int>19</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>19</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Swift_ConnectionBase</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name_FullyQualified>
   </subNode:extends>
   <subNode:implements>
    <scalar:array/>
   </subNode:implements>
   <subNode:stmts>
    <scalar:array>
     <node:Stmt_ClassConst>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="21">/**
   * Constant for auto-detection of paths
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>24</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>24</scalar:int>
      </attribute:endLine>
      <subNode:consts>
       <scalar:array>
        <node:Const>
         <attribute:startLine>
          <scalar:int>24</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>24</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>AUTO_DETECT</scalar:string>
         </subNode:name>
         <subNode:value>
          <node:Expr_UnaryMinus>
           <attribute:startLine>
            <scalar:int>24</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>24</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Scalar_LNumber>
             <attribute:startLine>
              <scalar:int>24</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>24</scalar:int>
             </attribute:endLine>
             <subNode:value>
              <scalar:int>2</scalar:int>
             </subNode:value>
            </node:Scalar_LNumber>
           </subNode:expr>
          </node:Expr_UnaryMinus>
         </subNode:value>
        </node:Const>
       </scalar:array>
      </subNode:consts>
     </node:Stmt_ClassConst>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="25">/**
   * Flags for the MTA (options such as bs or t)
   * @var string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>29</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>29</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>29</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>29</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>flags</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>29</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>29</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>29</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>29</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="30">/**
   * The full path to the MTA
   * @var string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>34</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>34</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>34</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>34</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>path</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>34</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>34</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>34</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>34</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="35">/**
   * The type of last request sent
   * For example MAIL, RCPT, DATA
   * @var string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>40</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>40</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>40</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>40</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>request</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>40</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>40</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>40</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>40</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>null</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="41">/**
   * The process handle
   * @var resource
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>45</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>45</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>45</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>45</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>proc</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="46">/**
   * I/O pipes for the process
   * @var array
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>50</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>50</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>50</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>50</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>pipes</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="51">/**
   * Switches to true for just one command when DATA has been issued
   * @var boolean
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>55</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>55</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>55</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>55</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>send</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>55</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>55</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>55</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>55</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>false</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_Property>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="56">/**
   * The timeout in seconds before giving up
   * @var int Seconds
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>60</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>60</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:props>
       <scalar:array>
        <node:Stmt_PropertyProperty>
         <attribute:startLine>
          <scalar:int>60</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>60</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>timeout</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>60</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>60</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>10</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:default>
        </node:Stmt_PropertyProperty>
       </scalar:array>
      </subNode:props>
     </node:Stmt_Property>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="62">/**
   * Constructor
   * @param string The command to execute
   * @param int The timeout in seconds before giving up
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>67</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>71</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>67</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>67</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>command</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>67</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>67</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>/usr/sbin/sendmail -bs</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>67</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>67</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>timeout</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>67</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>67</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>10</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>69</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>69</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>69</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>69</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>setCommand</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>69</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>69</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>69</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>69</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>command</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>70</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>70</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>70</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>70</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>setTimeout</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>70</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>70</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>70</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>70</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>timeout</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>__construct</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="72">/**
   * Set the timeout on the process
   * @param int The number of seconds
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>76</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>79</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>76</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>76</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>secs</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>78</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>78</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>78</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>78</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>78</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>78</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>timeout</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Cast_Int>
           <attribute:startLine>
            <scalar:int>78</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>78</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>78</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>78</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>secs</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:expr>
          </node:Expr_Cast_Int>
         </subNode:expr>
        </node:Expr_Assign>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>setTimeout</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="80">/**
   * Get the timeout on the process
   * @return int
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>84</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>87</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>86</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>86</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>86</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>86</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>86</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>86</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>timeout</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getTimeout</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="88">/**
   * Set the operating flags for the MTA
   * @param string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>92</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>95</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>92</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>92</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>flags</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>94</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>94</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>94</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>94</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>94</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>94</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>flags</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>94</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>94</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>flags</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Expr_Assign>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>setFlags</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="96">/**
   * Get the operating flags for the MTA
   * @return string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>100</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>103</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>102</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>102</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>102</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>102</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>102</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>102</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>flags</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getFlags</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="104">/**
   * Set the path to the binary
   * @param string The path (must be absolute!)
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>108</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>112</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>108</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>108</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>path</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>110</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>110</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>110</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>110</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>110</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>110</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>path</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>110</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>110</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>110</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>110</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>findSendmail</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array/>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Equal>
           <attribute:startLine>
            <scalar:int>110</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>110</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>110</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>110</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>path</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:left>
           <subNode:right>
            <node:Expr_ClassConstFetch>
             <attribute:startLine>
              <scalar:int>110</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>110</scalar:int>
             </attribute:endLine>
             <subNode:class>
              <node:Name>
               <attribute:startLine>
                <scalar:int>110</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>110</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>self</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:class>
             <subNode:name>
              <scalar:string>AUTO_DETECT</scalar:string>
             </subNode:name>
            </node:Expr_ClassConstFetch>
           </subNode:right>
          </node:Expr_Equal>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>111</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>111</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>111</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>111</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>111</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>111</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>path</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>111</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>111</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>path</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:expr>
        </node:Expr_Assign>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>setPath</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="113">/**
   * Get the path to the binary
   * @return string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>117</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>120</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>119</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>119</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>119</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>119</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>119</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>119</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>path</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getPath</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="121">/**
   * For auto-detection of sendmail path
   * Thanks to &quot;Joe Cotroneo&quot; for providing the enhancement
   * @return string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>126</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>160</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>128</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>128</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>128</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>128</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>log</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_StaticCall>
           <attribute:startLine>
            <scalar:int>128</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>128</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>128</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>128</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Swift_LogContainer</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
           <subNode:name>
            <scalar:string>getLog</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_StaticCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>129</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>132</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_MethodCall>
            <attribute:startLine>
             <scalar:int>131</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>131</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>131</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>131</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>log</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:name>
             <scalar:string>add</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>131</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>131</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>131</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>131</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>Sendmail path auto-detection in progress.  Trying `which sendmail`</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_MethodCall>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>129</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>129</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>129</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>129</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>log</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>hasLevel</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>129</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>129</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_ClassConstFetch>
                <attribute:startLine>
                 <scalar:int>129</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>129</scalar:int>
                </attribute:endLine>
                <subNode:class>
                 <node:Name_FullyQualified>
                  <attribute:startLine>
                   <scalar:int>129</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>129</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>Swift_Log</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name_FullyQualified>
                </subNode:class>
                <subNode:name>
                 <scalar:string>LOG_EVERYTHING</scalar:string>
                </subNode:name>
               </node:Expr_ClassConstFetch>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>133</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>133</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>133</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>133</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>path</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_ErrorSuppress>
           <attribute:startLine>
            <scalar:int>133</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>133</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>133</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>133</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>133</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>133</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>trim</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>133</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>133</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_FuncCall>
                  <attribute:startLine>
                   <scalar:int>133</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>133</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <node:Name>
                    <attribute:startLine>
                     <scalar:int>133</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>133</scalar:int>
                    </attribute:endLine>
                    <subNode:parts>
                     <scalar:array>
                      <scalar:string>shell_exec</scalar:string>
                     </scalar:array>
                    </subNode:parts>
                   </node:Name>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>133</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>133</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>133</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>133</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>which sendmail</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_FuncCall>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:expr>
          </node:Expr_ErrorSuppress>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>134</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>159</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>136</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>139</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>138</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>138</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>138</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>138</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>log</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>add</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>138</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>138</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>138</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>138</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>No luck so far, trying some common paths...</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_MethodCall>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>136</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>136</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>136</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>136</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>log</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>hasLevel</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>136</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>136</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_ClassConstFetch>
                   <attribute:startLine>
                    <scalar:int>136</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>136</scalar:int>
                   </attribute:endLine>
                   <subNode:class>
                    <node:Name_FullyQualified>
                     <attribute:startLine>
                      <scalar:int>136</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>136</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>Swift_Log</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name_FullyQualified>
                   </subNode:class>
                   <subNode:name>
                    <scalar:string>LOG_EVERYTHING</scalar:string>
                   </subNode:name>
                  </node:Expr_ClassConstFetch>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:cond>
           </node:Stmt_If>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>140</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>147</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>140</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>140</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>common_locations</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Array>
              <attribute:startLine>
               <scalar:int>140</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>147</scalar:int>
              </attribute:endLine>
              <subNode:items>
               <scalar:array>
                <node:Expr_ArrayItem>
                 <attribute:startLine>
                  <scalar:int>141</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>141</scalar:int>
                 </attribute:endLine>
                 <subNode:key>
                  <scalar:null/>
                 </subNode:key>
                 <subNode:value>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>141</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>141</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>/usr/bin/sendmail</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Expr_ArrayItem>
                <node:Expr_ArrayItem>
                 <attribute:startLine>
                  <scalar:int>142</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>142</scalar:int>
                 </attribute:endLine>
                 <subNode:key>
                  <scalar:null/>
                 </subNode:key>
                 <subNode:value>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>142</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>142</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>/usr/lib/sendmail</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Expr_ArrayItem>
                <node:Expr_ArrayItem>
                 <attribute:startLine>
                  <scalar:int>143</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>143</scalar:int>
                 </attribute:endLine>
                 <subNode:key>
                  <scalar:null/>
                 </subNode:key>
                 <subNode:value>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>143</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>143</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>/var/qmail/bin/sendmail</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Expr_ArrayItem>
                <node:Expr_ArrayItem>
                 <attribute:startLine>
                  <scalar:int>144</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>144</scalar:int>
                 </attribute:endLine>
                 <subNode:key>
                  <scalar:null/>
                 </subNode:key>
                 <subNode:value>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>144</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>144</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>/bin/sendmail</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Expr_ArrayItem>
                <node:Expr_ArrayItem>
                 <attribute:startLine>
                  <scalar:int>145</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>145</scalar:int>
                 </attribute:endLine>
                 <subNode:key>
                  <scalar:null/>
                 </subNode:key>
                 <subNode:value>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>145</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>145</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>/usr/sbin/sendmail</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Expr_ArrayItem>
                <node:Expr_ArrayItem>
                 <attribute:startLine>
                  <scalar:int>146</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>146</scalar:int>
                 </attribute:endLine>
                 <subNode:key>
                  <scalar:null/>
                 </subNode:key>
                 <subNode:value>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>146</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>146</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>/sbin/sendmail</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Expr_ArrayItem>
               </scalar:array>
              </subNode:items>
             </node:Expr_Array>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Stmt_Foreach>
            <attribute:startLine>
             <scalar:int>148</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>151</scalar:int>
            </attribute:endLine>
            <subNode:keyVar>
             <scalar:null/>
            </subNode:keyVar>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_If>
               <attribute:startLine>
                <scalar:int>150</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>150</scalar:int>
               </attribute:endLine>
               <subNode:stmts>
                <scalar:array>
                 <node:Stmt_Return>
                  <attribute:startLine>
                   <scalar:int>150</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>150</scalar:int>
                  </attribute:endLine>
                  <subNode:expr>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>150</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>150</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>path</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:expr>
                 </node:Stmt_Return>
                </scalar:array>
               </subNode:stmts>
               <subNode:elseifs>
                <scalar:array/>
               </subNode:elseifs>
               <subNode:else>
                <scalar:null/>
               </subNode:else>
               <subNode:cond>
                <node:Expr_FuncCall>
                 <attribute:startLine>
                  <scalar:int>150</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>150</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>150</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>150</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>is_executable</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>150</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>150</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>150</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>150</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>path</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_FuncCall>
               </subNode:cond>
              </node:Stmt_If>
             </scalar:array>
            </subNode:stmts>
            <subNode:expr>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>148</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>148</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>common_locations</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:expr>
            <subNode:valueVar>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>148</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>148</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>path</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:valueVar>
           </node:Stmt_Foreach>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>152</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>155</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>154</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>154</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>154</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>154</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>log</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>add</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>154</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>154</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>154</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>154</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>Falling back to /usr/sbin/sendmail (but it doesn't look good)!</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_MethodCall>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>152</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>152</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>152</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>152</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>log</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>hasLevel</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>152</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>152</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_ClassConstFetch>
                   <attribute:startLine>
                    <scalar:int>152</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>152</scalar:int>
                   </attribute:endLine>
                   <subNode:class>
                    <node:Name_FullyQualified>
                     <attribute:startLine>
                      <scalar:int>152</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>152</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>Swift_Log</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name_FullyQualified>
                   </subNode:class>
                   <subNode:name>
                    <scalar:string>LOG_EVERYTHING</scalar:string>
                   </subNode:name>
                  </node:Expr_ClassConstFetch>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_MethodCall>
            </subNode:cond>
           </node:Stmt_If>
           <node:Stmt_Return>
            <attribute:comments>
             <scalar:array>
              <comment isDocComment="false" line="156">//Fallback (swift will still throw an error)
</comment>
             </scalar:array>
            </attribute:comments>
            <attribute:startLine>
             <scalar:int>157</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>157</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Scalar_String>
              <attribute:startLine>
               <scalar:int>157</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>157</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <scalar:string>/usr/sbin/sendmail</scalar:string>
              </subNode:value>
             </node:Scalar_String>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <node:Stmt_Else>
           <attribute:startLine>
            <scalar:int>159</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>159</scalar:int>
           </attribute:endLine>
           <subNode:stmts>
            <scalar:array>
             <node:Stmt_Return>
              <attribute:startLine>
               <scalar:int>159</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>159</scalar:int>
              </attribute:endLine>
              <subNode:expr>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>159</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>159</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>path</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:expr>
             </node:Stmt_Return>
            </scalar:array>
           </subNode:stmts>
          </node:Stmt_Else>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>134</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>134</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>134</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>134</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>134</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>134</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>is_executable</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>134</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>134</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>134</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>134</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>path</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>findSendmail</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="161">/**
   * Set the sendmail command (path + flags)
   * @param string Command
   * @throws Swift_ConnectionException If the command is not correctly structured
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>166</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>178</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>166</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>166</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>command</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>168</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>168</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>168</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>168</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>168</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>168</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>command</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Concat>
              <attribute:startLine>
               <scalar:int>168</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>168</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_MethodCall>
                <attribute:startLine>
                 <scalar:int>168</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>168</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>168</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>168</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>findSendmail</scalar:string>
                </subNode:name>
                <subNode:args>
                 <scalar:array/>
                </subNode:args>
               </node:Expr_MethodCall>
              </subNode:left>
              <subNode:right>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>168</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>168</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string> -bs</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:right>
             </node:Expr_Concat>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_Equal>
           <attribute:startLine>
            <scalar:int>168</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>168</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>168</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>168</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>command</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:left>
           <subNode:right>
            <node:Expr_ClassConstFetch>
             <attribute:startLine>
              <scalar:int>168</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>168</scalar:int>
             </attribute:endLine>
             <subNode:class>
              <node:Name>
               <attribute:startLine>
                <scalar:int>168</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>168</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>self</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:class>
             <subNode:name>
              <scalar:string>AUTO_DETECT</scalar:string>
             </subNode:name>
            </node:Expr_ClassConstFetch>
           </subNode:right>
          </node:Expr_Equal>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>170</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>173</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Throw>
            <attribute:startLine>
             <scalar:int>172</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>172</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_New>
              <attribute:startLine>
               <scalar:int>172</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>172</scalar:int>
              </attribute:endLine>
              <subNode:class>
               <node:Name_FullyQualified>
                <attribute:startLine>
                 <scalar:int>172</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>172</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>Swift_ConnectionException</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name_FullyQualified>
              </subNode:class>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>172</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>172</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>172</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>172</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>Cannot set sendmail command with no command line flags. e.g. /usr/sbin/sendmail -t</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_New>
            </subNode:expr>
           </node:Stmt_Throw>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>170</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>170</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>170</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>170</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>170</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>170</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>strrpos</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>170</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>170</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>170</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>170</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>command</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>170</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>170</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>170</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>170</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string> -</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>174</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>174</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>174</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>174</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>path</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>174</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>174</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>174</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>174</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>substr</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>174</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>174</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>174</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>174</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>command</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>174</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>174</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Scalar_LNumber>
                <attribute:startLine>
                 <scalar:int>174</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>174</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:int>0</scalar:int>
                </subNode:value>
               </node:Scalar_LNumber>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>174</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>174</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>174</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>174</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>174</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>174</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>strrpos</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>174</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>174</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>174</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>174</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>command</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>174</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>174</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>174</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>174</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string> -</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>175</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>175</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>175</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>175</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>flags</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>175</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>175</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>175</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>175</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>substr</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>175</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>175</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>175</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>175</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>command</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>175</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>175</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Plus>
                <attribute:startLine>
                 <scalar:int>175</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>175</scalar:int>
                </attribute:endLine>
                <subNode:left>
                 <node:Expr_FuncCall>
                  <attribute:startLine>
                   <scalar:int>175</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>175</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <node:Name>
                    <attribute:startLine>
                     <scalar:int>175</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>175</scalar:int>
                    </attribute:endLine>
                    <subNode:parts>
                     <scalar:array>
                      <scalar:string>strrpos</scalar:string>
                     </scalar:array>
                    </subNode:parts>
                   </node:Name>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>175</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>175</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>175</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>175</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>command</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>175</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>175</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>175</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>175</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string> -</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_FuncCall>
                </subNode:left>
                <subNode:right>
                 <node:Scalar_LNumber>
                  <attribute:startLine>
                   <scalar:int>175</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>175</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:int>2</scalar:int>
                  </subNode:value>
                 </node:Scalar_LNumber>
                </subNode:right>
               </node:Expr_Plus>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>176</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>176</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>176</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>176</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>setPath</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>176</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>176</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>176</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>176</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>path</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>177</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>177</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>177</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>177</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>setFlags</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>177</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>177</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>177</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>177</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>flags</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>setCommand</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="179">/**
   * Get the sendmail command (path + flags)
   * @return string
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>183</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>186</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>185</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>185</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Concat>
           <attribute:startLine>
            <scalar:int>185</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>185</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_Concat>
             <attribute:startLine>
              <scalar:int>185</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>185</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>185</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>185</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>185</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>185</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>this</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>getPath</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array/>
               </subNode:args>
              </node:Expr_MethodCall>
             </subNode:left>
             <subNode:right>
              <node:Scalar_String>
               <attribute:startLine>
                <scalar:int>185</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>185</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <scalar:string> -</scalar:string>
               </subNode:value>
              </node:Scalar_String>
             </subNode:right>
            </node:Expr_Concat>
           </subNode:left>
           <subNode:right>
            <node:Expr_MethodCall>
             <attribute:startLine>
              <scalar:int>185</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>185</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>185</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>185</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>getFlags</scalar:string>
             </subNode:name>
             <subNode:args>
              <scalar:array/>
             </subNode:args>
            </node:Expr_MethodCall>
           </subNode:right>
          </node:Expr_Concat>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>getCommand</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="187">/**
   * Write a command to the open pipe
   * @param string The command to write
   * @throws Swift_ConnectionException If the pipe cannot be written to
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>192</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>197</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>192</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>192</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>command</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>192</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>192</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>end</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>192</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>192</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>&#13;
</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>194</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>194</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Throw>
            <attribute:startLine>
             <scalar:int>194</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>194</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_New>
              <attribute:startLine>
               <scalar:int>194</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>194</scalar:int>
              </attribute:endLine>
              <subNode:class>
               <node:Name_FullyQualified>
                <attribute:startLine>
                 <scalar:int>194</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>194</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>Swift_ConnectionException</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name_FullyQualified>
              </subNode:class>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>194</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>194</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>194</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>194</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>The sendmail process is not alive and cannot be written to.</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_New>
            </subNode:expr>
           </node:Stmt_Throw>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>194</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>194</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_MethodCall>
             <attribute:startLine>
              <scalar:int>194</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>194</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>194</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>194</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>isAlive</scalar:string>
             </subNode:name>
             <subNode:args>
              <scalar:array/>
             </subNode:args>
            </node:Expr_MethodCall>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>195</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>195</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Throw>
            <attribute:startLine>
             <scalar:int>195</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>195</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_New>
              <attribute:startLine>
               <scalar:int>195</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>195</scalar:int>
              </attribute:endLine>
              <subNode:class>
               <node:Name_FullyQualified>
                <attribute:startLine>
                 <scalar:int>195</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>195</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>Swift_ConnectionException</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name_FullyQualified>
              </subNode:class>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>195</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>195</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Concat>
                   <attribute:startLine>
                    <scalar:int>195</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>195</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Expr_Concat>
                     <attribute:startLine>
                      <scalar:int>195</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>195</scalar:int>
                     </attribute:endLine>
                     <subNode:left>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>195</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>195</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>The sendmail process did not allow the command '</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:left>
                     <subNode:right>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>195</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>195</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>command</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:right>
                    </node:Expr_Concat>
                   </subNode:left>
                   <subNode:right>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>195</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>195</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>' to be sent.</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:right>
                  </node:Expr_Concat>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_New>
            </subNode:expr>
           </node:Stmt_Throw>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanAnd>
           <attribute:startLine>
            <scalar:int>195</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>195</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_BooleanNot>
             <attribute:startLine>
              <scalar:int>195</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>195</scalar:int>
             </attribute:endLine>
             <subNode:expr>
              <node:Expr_ErrorSuppress>
               <attribute:startLine>
                <scalar:int>195</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>195</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_FuncCall>
                 <attribute:startLine>
                  <scalar:int>195</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>195</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>195</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>195</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>fwrite</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>195</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>195</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_ArrayDimFetch>
                      <attribute:startLine>
                       <scalar:int>195</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>195</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_PropertyFetch>
                        <attribute:startLine>
                         <scalar:int>195</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>195</scalar:int>
                        </attribute:endLine>
                        <subNode:var>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>195</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>195</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>this</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:var>
                        <subNode:name>
                         <scalar:string>pipes</scalar:string>
                        </subNode:name>
                       </node:Expr_PropertyFetch>
                      </subNode:var>
                      <subNode:dim>
                       <node:Scalar_LNumber>
                        <attribute:startLine>
                         <scalar:int>195</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>195</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <scalar:int>0</scalar:int>
                        </subNode:value>
                       </node:Scalar_LNumber>
                      </subNode:dim>
                     </node:Expr_ArrayDimFetch>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>195</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>195</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Concat>
                      <attribute:startLine>
                       <scalar:int>195</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>195</scalar:int>
                      </attribute:endLine>
                      <subNode:left>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>195</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>195</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>command</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:left>
                      <subNode:right>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>195</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>195</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>end</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:right>
                     </node:Expr_Concat>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_FuncCall>
               </subNode:expr>
              </node:Expr_ErrorSuppress>
             </subNode:expr>
            </node:Expr_BooleanNot>
           </subNode:left>
           <subNode:right>
            <node:Expr_BooleanNot>
             <attribute:startLine>
              <scalar:int>195</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>195</scalar:int>
             </attribute:endLine>
             <subNode:expr>
              <node:Expr_Empty>
               <attribute:startLine>
                <scalar:int>195</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>195</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>195</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>195</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>command</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:expr>
              </node:Expr_Empty>
             </subNode:expr>
            </node:Expr_BooleanNot>
           </subNode:right>
          </node:Expr_BooleanAnd>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_FuncCall>
         <attribute:startLine>
          <scalar:int>196</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>196</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <node:Name>
           <attribute:startLine>
            <scalar:int>196</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>196</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>fflush</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>196</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>196</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_ArrayDimFetch>
              <attribute:startLine>
               <scalar:int>196</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>196</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>196</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>196</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>196</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>196</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>pipes</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:var>
              <subNode:dim>
               <node:Scalar_LNumber>
                <attribute:startLine>
                 <scalar:int>196</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>196</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:int>0</scalar:int>
                </subNode:value>
               </node:Scalar_LNumber>
              </subNode:dim>
             </node:Expr_ArrayDimFetch>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_FuncCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>pipeIn</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="198">/**
   * Read data from the open pipe
   * @return string
   * @throws Swift_ConnectionException If the pipe is not operating as expected
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>203</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>223</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>2</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>205</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>205</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Return>
            <attribute:startLine>
             <scalar:int>205</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>205</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <scalar:null/>
            </subNode:expr>
           </node:Stmt_Return>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_NotIdentical>
           <attribute:startLine>
            <scalar:int>205</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>205</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>205</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>205</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>205</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>205</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>strpos</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>205</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>205</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_MethodCall>
                  <attribute:startLine>
                   <scalar:int>205</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>205</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>205</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>205</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>this</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>getFlags</scalar:string>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array/>
                  </subNode:args>
                 </node:Expr_MethodCall>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>205</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>205</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>205</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>205</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>t</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:left>
           <subNode:right>
            <node:Expr_ConstFetch>
             <attribute:startLine>
              <scalar:int>205</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>205</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>205</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>205</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>false</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
            </node:Expr_ConstFetch>
           </subNode:right>
          </node:Expr_NotIdentical>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>206</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>206</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Throw>
            <attribute:startLine>
             <scalar:int>206</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>206</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_New>
              <attribute:startLine>
               <scalar:int>206</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>206</scalar:int>
              </attribute:endLine>
              <subNode:class>
               <node:Name_FullyQualified>
                <attribute:startLine>
                 <scalar:int>206</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>206</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>Swift_ConnectionException</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name_FullyQualified>
              </subNode:class>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>206</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>206</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>206</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>206</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>The sendmail process is not alive and cannot be read from.</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_New>
            </subNode:expr>
           </node:Stmt_Throw>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>206</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>206</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_MethodCall>
             <attribute:startLine>
              <scalar:int>206</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>206</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>206</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>206</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>isAlive</scalar:string>
             </subNode:name>
             <subNode:args>
              <scalar:array/>
             </subNode:args>
            </node:Expr_MethodCall>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>207</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>207</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>207</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>207</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>ret</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>207</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>207</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string></scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>208</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>208</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>208</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>208</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>line</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Scalar_LNumber>
           <attribute:startLine>
            <scalar:int>208</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>208</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:int>0</scalar:int>
           </subNode:value>
          </node:Scalar_LNumber>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_While>
         <attribute:startLine>
          <scalar:int>209</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>220</scalar:int>
         </attribute:endLine>
         <subNode:cond>
          <node:Expr_ConstFetch>
           <attribute:startLine>
            <scalar:int>209</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>209</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>209</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>209</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>true</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
          </node:Expr_ConstFetch>
         </subNode:cond>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_PostInc>
            <attribute:startLine>
             <scalar:int>211</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>211</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>211</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>211</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>line</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
           </node:Expr_PostInc>
           <node:Expr_FuncCall>
            <attribute:startLine>
             <scalar:int>212</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>212</scalar:int>
            </attribute:endLine>
            <subNode:name>
             <node:Name>
              <attribute:startLine>
               <scalar:int>212</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>212</scalar:int>
              </attribute:endLine>
              <subNode:parts>
               <scalar:array>
                <scalar:string>stream_set_timeout</scalar:string>
               </scalar:array>
              </subNode:parts>
             </node:Name>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>212</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>212</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_ArrayDimFetch>
                 <attribute:startLine>
                  <scalar:int>212</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>212</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_PropertyFetch>
                   <attribute:startLine>
                    <scalar:int>212</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>212</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>212</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>212</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>pipes</scalar:string>
                   </subNode:name>
                  </node:Expr_PropertyFetch>
                 </subNode:var>
                 <subNode:dim>
                  <node:Scalar_LNumber>
                   <attribute:startLine>
                    <scalar:int>212</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>212</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:int>1</scalar:int>
                   </subNode:value>
                  </node:Scalar_LNumber>
                 </subNode:dim>
                </node:Expr_ArrayDimFetch>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>212</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>212</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>212</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>212</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>212</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>212</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>timeout</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_FuncCall>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>213</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>213</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>213</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>213</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>tmp</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_ErrorSuppress>
              <attribute:startLine>
               <scalar:int>213</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>213</scalar:int>
              </attribute:endLine>
              <subNode:expr>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>213</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>213</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>213</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>213</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>fgets</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>213</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>213</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_ArrayDimFetch>
                     <attribute:startLine>
                      <scalar:int>213</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>213</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_PropertyFetch>
                       <attribute:startLine>
                        <scalar:int>213</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>213</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>213</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>213</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>this</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:name>
                        <scalar:string>pipes</scalar:string>
                       </subNode:name>
                      </node:Expr_PropertyFetch>
                     </subNode:var>
                     <subNode:dim>
                      <node:Scalar_LNumber>
                       <attribute:startLine>
                        <scalar:int>213</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>213</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:int>1</scalar:int>
                       </subNode:value>
                      </node:Scalar_LNumber>
                     </subNode:dim>
                    </node:Expr_ArrayDimFetch>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:expr>
             </node:Expr_ErrorSuppress>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>214</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>217</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_Throw>
               <attribute:startLine>
                <scalar:int>216</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>216</scalar:int>
               </attribute:endLine>
               <subNode:expr>
                <node:Expr_New>
                 <attribute:startLine>
                  <scalar:int>216</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>216</scalar:int>
                 </attribute:endLine>
                 <subNode:class>
                  <node:Name_FullyQualified>
                   <attribute:startLine>
                    <scalar:int>216</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>216</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>Swift_ConnectionException</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name_FullyQualified>
                 </subNode:class>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>216</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>216</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Concat>
                      <attribute:startLine>
                       <scalar:int>216</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>216</scalar:int>
                      </attribute:endLine>
                      <subNode:left>
                       <node:Expr_Concat>
                        <attribute:startLine>
                         <scalar:int>216</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>216</scalar:int>
                        </attribute:endLine>
                        <subNode:left>
                         <node:Expr_Concat>
                          <attribute:startLine>
                           <scalar:int>216</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>216</scalar:int>
                          </attribute:endLine>
                          <subNode:left>
                           <node:Expr_Concat>
                            <attribute:startLine>
                             <scalar:int>216</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>216</scalar:int>
                            </attribute:endLine>
                            <subNode:left>
                             <node:Scalar_String>
                              <attribute:startLine>
                               <scalar:int>216</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>216</scalar:int>
                              </attribute:endLine>
                              <subNode:value>
                               <scalar:string>There was a problem reading line </scalar:string>
                              </subNode:value>
                             </node:Scalar_String>
                            </subNode:left>
                            <subNode:right>
                             <node:Expr_Variable>
                              <attribute:startLine>
                               <scalar:int>216</scalar:int>
                              </attribute:startLine>
                              <attribute:endLine>
                               <scalar:int>216</scalar:int>
                              </attribute:endLine>
                              <subNode:name>
                               <scalar:string>line</scalar:string>
                              </subNode:name>
                             </node:Expr_Variable>
                            </subNode:right>
                           </node:Expr_Concat>
                          </subNode:left>
                          <subNode:right>
                           <node:Scalar_String>
                            <attribute:startLine>
                             <scalar:int>216</scalar:int>
                            </attribute:startLine>
                            <attribute:endLine>
                             <scalar:int>216</scalar:int>
                            </attribute:endLine>
                            <subNode:value>
                             <scalar:string> of a sendmail SMTP response. The response so far was:&lt;br /&gt;[</scalar:string>
                            </subNode:value>
                           </node:Scalar_String>
                          </subNode:right>
                         </node:Expr_Concat>
                        </subNode:left>
                        <subNode:right>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>216</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>216</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>ret</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:right>
                       </node:Expr_Concat>
                      </subNode:left>
                      <subNode:right>
                       <node:Scalar_String>
                        <attribute:startLine>
                         <scalar:int>216</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>216</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <scalar:string>].  It appears the process has died.</scalar:string>
                        </subNode:value>
                       </node:Scalar_String>
                      </subNode:right>
                     </node:Expr_Concat>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_New>
               </subNode:expr>
              </node:Stmt_Throw>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_Identical>
              <attribute:startLine>
               <scalar:int>214</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>214</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>214</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>214</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>tmp</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:left>
              <subNode:right>
               <node:Expr_ConstFetch>
                <attribute:startLine>
                 <scalar:int>214</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>214</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>214</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>214</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>false</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
               </node:Expr_ConstFetch>
              </subNode:right>
             </node:Expr_Identical>
            </subNode:cond>
           </node:Stmt_If>
           <node:Expr_AssignConcat>
            <attribute:startLine>
             <scalar:int>218</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>218</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>218</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>218</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>ret</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Concat>
              <attribute:startLine>
               <scalar:int>218</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>218</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>218</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>218</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>218</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>218</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>trim</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>218</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>218</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>218</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>218</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>tmp</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:left>
              <subNode:right>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>218</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>218</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>&#13;
</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:right>
             </node:Expr_Concat>
            </subNode:expr>
           </node:Expr_AssignConcat>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>219</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>219</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Stmt_Break>
               <attribute:startLine>
                <scalar:int>219</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>219</scalar:int>
               </attribute:endLine>
               <subNode:num>
                <scalar:null/>
               </subNode:num>
              </node:Stmt_Break>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array/>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_Equal>
              <attribute:startLine>
               <scalar:int>219</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>219</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_ArrayDimFetch>
                <attribute:startLine>
                 <scalar:int>219</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>219</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>219</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>219</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>tmp</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:dim>
                 <node:Scalar_LNumber>
                  <attribute:startLine>
                   <scalar:int>219</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>219</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:int>3</scalar:int>
                  </subNode:value>
                 </node:Scalar_LNumber>
                </subNode:dim>
               </node:Expr_ArrayDimFetch>
              </subNode:left>
              <subNode:right>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>219</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>219</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string> </scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:right>
             </node:Expr_Equal>
            </subNode:cond>
           </node:Stmt_If>
          </scalar:array>
         </subNode:stmts>
        </node:Stmt_While>
        <node:Expr_FuncCall>
         <attribute:startLine>
          <scalar:int>221</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>221</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <node:Name>
           <attribute:startLine>
            <scalar:int>221</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>221</scalar:int>
           </attribute:endLine>
           <subNode:parts>
            <scalar:array>
             <scalar:string>fflush</scalar:string>
            </scalar:array>
           </subNode:parts>
          </node:Name>
         </subNode:name>
         <subNode:args>
          <scalar:array>
           <node:Arg>
            <attribute:startLine>
             <scalar:int>221</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>221</scalar:int>
            </attribute:endLine>
            <subNode:value>
             <node:Expr_ArrayDimFetch>
              <attribute:startLine>
               <scalar:int>221</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>221</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>221</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>221</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>221</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>221</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>pipes</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:var>
              <subNode:dim>
               <node:Scalar_LNumber>
                <attribute:startLine>
                 <scalar:int>221</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>221</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:int>1</scalar:int>
                </subNode:value>
               </node:Scalar_LNumber>
              </subNode:dim>
             </node:Expr_ArrayDimFetch>
            </subNode:value>
            <subNode:byRef>
             <scalar:false/>
            </subNode:byRef>
           </node:Arg>
          </scalar:array>
         </subNode:args>
        </node:Expr_FuncCall>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>222</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>222</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_Assign>
           <attribute:startLine>
            <scalar:int>222</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>222</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>222</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>222</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>ret</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:expr>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>222</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>222</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>222</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>222</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>substr</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>222</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>222</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>222</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>222</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>ret</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>222</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>222</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_LNumber>
                  <attribute:startLine>
                   <scalar:int>222</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>222</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:int>0</scalar:int>
                  </subNode:value>
                 </node:Scalar_LNumber>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>222</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>222</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_UnaryMinus>
                  <attribute:startLine>
                   <scalar:int>222</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>222</scalar:int>
                  </attribute:endLine>
                  <subNode:expr>
                   <node:Scalar_LNumber>
                    <attribute:startLine>
                     <scalar:int>222</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>222</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:int>2</scalar:int>
                    </subNode:value>
                   </node:Scalar_LNumber>
                  </subNode:expr>
                 </node:Expr_UnaryMinus>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:expr>
          </node:Expr_Assign>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>pipeOut</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="224">/**
   * Read a full response from the buffer (this is spoofed if running in -t mode)
   * @return string
   * @throws Swift_ConnectionException Upon failure to read
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>229</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>251</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>231</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>250</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Switch>
            <attribute:startLine>
             <scalar:int>233</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>248</scalar:int>
            </attribute:endLine>
            <subNode:cond>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>233</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>233</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>233</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>233</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>strtolower</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>233</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>233</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_PropertyFetch>
                   <attribute:startLine>
                    <scalar:int>233</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>233</scalar:int>
                   </attribute:endLine>
                   <subNode:var>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>233</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>233</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>this</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:var>
                   <subNode:name>
                    <scalar:string>request</scalar:string>
                   </subNode:name>
                  </node:Expr_PropertyFetch>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:cond>
            <subNode:cases>
             <scalar:array>
              <node:Stmt_Case>
               <attribute:startLine>
                <scalar:int>235</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>236</scalar:int>
               </attribute:endLine>
               <subNode:cond>
                <node:Expr_ConstFetch>
                 <attribute:startLine>
                  <scalar:int>235</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>235</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>235</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>235</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>null</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                </node:Expr_ConstFetch>
               </subNode:cond>
               <subNode:stmts>
                <scalar:array>
                 <node:Stmt_Return>
                  <attribute:startLine>
                   <scalar:int>236</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>236</scalar:int>
                  </attribute:endLine>
                  <subNode:expr>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>236</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>236</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>220 Greetings</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:expr>
                 </node:Stmt_Return>
                </scalar:array>
               </subNode:stmts>
              </node:Stmt_Case>
              <node:Stmt_Case>
               <attribute:startLine>
                <scalar:int>237</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>237</scalar:int>
               </attribute:endLine>
               <subNode:cond>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>237</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>237</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>helo</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:cond>
               <subNode:stmts>
                <scalar:array/>
               </subNode:stmts>
              </node:Stmt_Case>
              <node:Stmt_Case>
               <attribute:startLine>
                <scalar:int>237</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>238</scalar:int>
               </attribute:endLine>
               <subNode:cond>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>237</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>237</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>ehlo</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:cond>
               <subNode:stmts>
                <scalar:array>
                 <node:Stmt_Return>
                  <attribute:startLine>
                   <scalar:int>238</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>238</scalar:int>
                  </attribute:endLine>
                  <subNode:expr>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>238</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>238</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>250 hello</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:expr>
                 </node:Stmt_Return>
                </scalar:array>
               </subNode:stmts>
              </node:Stmt_Case>
              <node:Stmt_Case>
               <attribute:startLine>
                <scalar:int>239</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>239</scalar:int>
               </attribute:endLine>
               <subNode:cond>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>239</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>239</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>mail</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:cond>
               <subNode:stmts>
                <scalar:array/>
               </subNode:stmts>
              </node:Stmt_Case>
              <node:Stmt_Case>
               <attribute:startLine>
                <scalar:int>239</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>239</scalar:int>
               </attribute:endLine>
               <subNode:cond>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>239</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>239</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>rcpt</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:cond>
               <subNode:stmts>
                <scalar:array/>
               </subNode:stmts>
              </node:Stmt_Case>
              <node:Stmt_Case>
               <attribute:startLine>
                <scalar:int>239</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>240</scalar:int>
               </attribute:endLine>
               <subNode:cond>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>239</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>239</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>rset</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:cond>
               <subNode:stmts>
                <scalar:array>
                 <node:Stmt_Return>
                  <attribute:startLine>
                   <scalar:int>240</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>240</scalar:int>
                  </attribute:endLine>
                  <subNode:expr>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>240</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>240</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>250 ok</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:expr>
                 </node:Stmt_Return>
                </scalar:array>
               </subNode:stmts>
              </node:Stmt_Case>
              <node:Stmt_Case>
               <attribute:startLine>
                <scalar:int>241</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>242</scalar:int>
               </attribute:endLine>
               <subNode:cond>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>241</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>241</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>quit</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:cond>
               <subNode:stmts>
                <scalar:array>
                 <node:Stmt_Return>
                  <attribute:startLine>
                   <scalar:int>242</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>242</scalar:int>
                  </attribute:endLine>
                  <subNode:expr>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>242</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>242</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>221 bye</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:expr>
                 </node:Stmt_Return>
                </scalar:array>
               </subNode:stmts>
              </node:Stmt_Case>
              <node:Stmt_Case>
               <attribute:startLine>
                <scalar:int>243</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>245</scalar:int>
               </attribute:endLine>
               <subNode:cond>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>243</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>243</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>data</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:cond>
               <subNode:stmts>
                <scalar:array>
                 <node:Expr_Assign>
                  <attribute:startLine>
                   <scalar:int>244</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>244</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_PropertyFetch>
                    <attribute:startLine>
                     <scalar:int>244</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>244</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>244</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>244</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>this</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>send</scalar:string>
                    </subNode:name>
                   </node:Expr_PropertyFetch>
                  </subNode:var>
                  <subNode:expr>
                   <node:Expr_ConstFetch>
                    <attribute:startLine>
                     <scalar:int>244</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>244</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <node:Name>
                      <attribute:startLine>
                       <scalar:int>244</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>244</scalar:int>
                      </attribute:endLine>
                      <subNode:parts>
                       <scalar:array>
                        <scalar:string>true</scalar:string>
                       </scalar:array>
                      </subNode:parts>
                     </node:Name>
                    </subNode:name>
                   </node:Expr_ConstFetch>
                  </subNode:expr>
                 </node:Expr_Assign>
                 <node:Stmt_Return>
                  <attribute:startLine>
                   <scalar:int>245</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>245</scalar:int>
                  </attribute:endLine>
                  <subNode:expr>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>245</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>245</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>354 go ahead</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:expr>
                 </node:Stmt_Return>
                </scalar:array>
               </subNode:stmts>
              </node:Stmt_Case>
              <node:Stmt_Case>
               <attribute:startLine>
                <scalar:int>246</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>247</scalar:int>
               </attribute:endLine>
               <subNode:cond>
                <scalar:null/>
               </subNode:cond>
               <subNode:stmts>
                <scalar:array>
                 <node:Stmt_Return>
                  <attribute:startLine>
                   <scalar:int>247</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>247</scalar:int>
                  </attribute:endLine>
                  <subNode:expr>
                   <node:Scalar_String>
                    <attribute:startLine>
                     <scalar:int>247</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>247</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <scalar:string>250 ok</scalar:string>
                    </subNode:value>
                   </node:Scalar_String>
                  </subNode:expr>
                 </node:Stmt_Return>
                </scalar:array>
               </subNode:stmts>
              </node:Stmt_Case>
             </scalar:array>
            </subNode:cases>
           </node:Stmt_Switch>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <node:Stmt_Else>
           <attribute:startLine>
            <scalar:int>250</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>250</scalar:int>
           </attribute:endLine>
           <subNode:stmts>
            <scalar:array>
             <node:Stmt_Return>
              <attribute:startLine>
               <scalar:int>250</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>250</scalar:int>
              </attribute:endLine>
              <subNode:expr>
               <node:Expr_MethodCall>
                <attribute:startLine>
                 <scalar:int>250</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>250</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>250</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>250</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>pipeOut</scalar:string>
                </subNode:name>
                <subNode:args>
                 <scalar:array/>
                </subNode:args>
               </node:Expr_MethodCall>
              </subNode:expr>
             </node:Stmt_Return>
            </scalar:array>
           </subNode:stmts>
          </node:Stmt_Else>
         </subNode:else>
         <subNode:cond>
          <node:Expr_NotIdentical>
           <attribute:startLine>
            <scalar:int>231</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>231</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>231</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>231</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>231</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>231</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>strpos</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>231</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>231</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_MethodCall>
                  <attribute:startLine>
                   <scalar:int>231</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>231</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>231</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>231</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>this</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>getFlags</scalar:string>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array/>
                  </subNode:args>
                 </node:Expr_MethodCall>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>231</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>231</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>231</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>231</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>t</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:left>
           <subNode:right>
            <node:Expr_ConstFetch>
             <attribute:startLine>
              <scalar:int>231</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>231</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>231</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>231</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>false</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
            </node:Expr_ConstFetch>
           </subNode:right>
          </node:Expr_NotIdentical>
         </subNode:cond>
        </node:Stmt_If>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>read</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="252">/**
   * Write a command to the process (leave off trailing CRLF)
   * @param string The command to send
   * @throws Swift_ConnectionException Upon failure to write
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>257</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>270</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array>
        <node:Param>
         <attribute:startLine>
          <scalar:int>257</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>257</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>command</scalar:string>
         </subNode:name>
         <subNode:default>
          <scalar:null/>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
        <node:Param>
         <attribute:startLine>
          <scalar:int>257</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>257</scalar:int>
         </attribute:endLine>
         <subNode:name>
          <scalar:string>end</scalar:string>
         </subNode:name>
         <subNode:default>
          <node:Scalar_String>
           <attribute:startLine>
            <scalar:int>257</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>257</scalar:int>
           </attribute:endLine>
           <subNode:value>
            <scalar:string>&#13;
</scalar:string>
           </subNode:value>
          </node:Scalar_String>
         </subNode:default>
         <subNode:type>
          <scalar:null/>
         </subNode:type>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
        </node:Param>
       </scalar:array>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>259</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>269</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_If>
            <attribute:startLine>
             <scalar:int>261</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>265</scalar:int>
            </attribute:endLine>
            <subNode:stmts>
             <scalar:array>
              <node:Expr_Assign>
               <attribute:startLine>
                <scalar:int>261</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>261</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>261</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>261</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>command</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:expr>
                <node:Expr_FuncCall>
                 <attribute:startLine>
                  <scalar:int>261</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>261</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>261</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>261</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>substr</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>261</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>261</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>261</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>261</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>command</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>261</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>261</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_Plus>
                      <attribute:startLine>
                       <scalar:int>261</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>261</scalar:int>
                      </attribute:endLine>
                      <subNode:left>
                       <node:Expr_FuncCall>
                        <attribute:startLine>
                         <scalar:int>261</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>261</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <node:Name>
                          <attribute:startLine>
                           <scalar:int>261</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>261</scalar:int>
                          </attribute:endLine>
                          <subNode:parts>
                           <scalar:array>
                            <scalar:string>strpos</scalar:string>
                           </scalar:array>
                          </subNode:parts>
                         </node:Name>
                        </subNode:name>
                        <subNode:args>
                         <scalar:array>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>261</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>261</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Expr_Variable>
                             <attribute:startLine>
                              <scalar:int>261</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>261</scalar:int>
                             </attribute:endLine>
                             <subNode:name>
                              <scalar:string>command</scalar:string>
                             </subNode:name>
                            </node:Expr_Variable>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                          <node:Arg>
                           <attribute:startLine>
                            <scalar:int>261</scalar:int>
                           </attribute:startLine>
                           <attribute:endLine>
                            <scalar:int>261</scalar:int>
                           </attribute:endLine>
                           <subNode:value>
                            <node:Scalar_String>
                             <attribute:startLine>
                              <scalar:int>261</scalar:int>
                             </attribute:startLine>
                             <attribute:endLine>
                              <scalar:int>261</scalar:int>
                             </attribute:endLine>
                             <subNode:value>
                              <scalar:string> </scalar:string>
                             </subNode:value>
                            </node:Scalar_String>
                           </subNode:value>
                           <subNode:byRef>
                            <scalar:false/>
                           </subNode:byRef>
                          </node:Arg>
                         </scalar:array>
                        </subNode:args>
                       </node:Expr_FuncCall>
                      </subNode:left>
                      <subNode:right>
                       <node:Scalar_LNumber>
                        <attribute:startLine>
                         <scalar:int>261</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>261</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <scalar:int>1</scalar:int>
                        </subNode:value>
                       </node:Scalar_LNumber>
                      </subNode:right>
                     </node:Expr_Plus>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_FuncCall>
               </subNode:expr>
              </node:Expr_Assign>
             </scalar:array>
            </subNode:stmts>
            <subNode:elseifs>
             <scalar:array>
              <node:Stmt_ElseIf>
               <attribute:startLine>
                <scalar:int>262</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>265</scalar:int>
               </attribute:endLine>
               <subNode:cond>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>262</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>262</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>262</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>262</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>send</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:cond>
               <subNode:stmts>
                <scalar:array>
                 <node:Expr_MethodCall>
                  <attribute:startLine>
                   <scalar:int>264</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>264</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>264</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>264</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>this</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>pipeIn</scalar:string>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array>
                    <node:Arg>
                     <attribute:startLine>
                      <scalar:int>264</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>264</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>264</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>264</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>command</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:value>
                     <subNode:byRef>
                      <scalar:false/>
                     </subNode:byRef>
                    </node:Arg>
                   </scalar:array>
                  </subNode:args>
                 </node:Expr_MethodCall>
                </scalar:array>
               </subNode:stmts>
              </node:Stmt_ElseIf>
             </scalar:array>
            </subNode:elseifs>
            <subNode:else>
             <scalar:null/>
            </subNode:else>
            <subNode:cond>
             <node:Expr_BooleanAnd>
              <attribute:startLine>
               <scalar:int>261</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>261</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_BooleanNot>
                <attribute:startLine>
                 <scalar:int>261</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>261</scalar:int>
                </attribute:endLine>
                <subNode:expr>
                 <node:Expr_PropertyFetch>
                  <attribute:startLine>
                   <scalar:int>261</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>261</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>261</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>261</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>this</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>send</scalar:string>
                  </subNode:name>
                 </node:Expr_PropertyFetch>
                </subNode:expr>
               </node:Expr_BooleanNot>
              </subNode:left>
              <subNode:right>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>261</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>261</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>261</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>261</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>strpos</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>261</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>261</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>261</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>261</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>command</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>261</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>261</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>261</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>261</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string> </scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:right>
             </node:Expr_BooleanAnd>
            </subNode:cond>
           </node:Stmt_If>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>266</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>266</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>266</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>266</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>266</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>266</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>request</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>266</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>266</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>command</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>267</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>267</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>267</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>267</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>267</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>267</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>send</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:var>
            <subNode:expr>
             <node:Expr_Equal>
              <attribute:startLine>
               <scalar:int>267</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>267</scalar:int>
              </attribute:endLine>
              <subNode:left>
               <node:Expr_FuncCall>
                <attribute:startLine>
                 <scalar:int>267</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>267</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <node:Name>
                  <attribute:startLine>
                   <scalar:int>267</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>267</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>strtolower</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name>
                </subNode:name>
                <subNode:args>
                 <scalar:array>
                  <node:Arg>
                   <attribute:startLine>
                    <scalar:int>267</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>267</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <node:Expr_Variable>
                     <attribute:startLine>
                      <scalar:int>267</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>267</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <scalar:string>command</scalar:string>
                     </subNode:name>
                    </node:Expr_Variable>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Arg>
                 </scalar:array>
                </subNode:args>
               </node:Expr_FuncCall>
              </subNode:left>
              <subNode:right>
               <node:Scalar_String>
                <attribute:startLine>
                 <scalar:int>267</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>267</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <scalar:string>data</scalar:string>
                </subNode:value>
               </node:Scalar_String>
              </subNode:right>
             </node:Expr_Equal>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <node:Stmt_Else>
           <attribute:startLine>
            <scalar:int>269</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>269</scalar:int>
           </attribute:endLine>
           <subNode:stmts>
            <scalar:array>
             <node:Expr_MethodCall>
              <attribute:startLine>
               <scalar:int>269</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>269</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>269</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>269</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>pipeIn</scalar:string>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>269</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>269</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>269</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>269</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>command</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>269</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>269</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>269</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>269</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>end</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_MethodCall>
            </scalar:array>
           </subNode:stmts>
          </node:Stmt_Else>
         </subNode:else>
         <subNode:cond>
          <node:Expr_NotIdentical>
           <attribute:startLine>
            <scalar:int>259</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>259</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_FuncCall>
             <attribute:startLine>
              <scalar:int>259</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>259</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>259</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>259</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>strpos</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
             <subNode:args>
              <scalar:array>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>259</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>259</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Expr_MethodCall>
                  <attribute:startLine>
                   <scalar:int>259</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>259</scalar:int>
                  </attribute:endLine>
                  <subNode:var>
                   <node:Expr_Variable>
                    <attribute:startLine>
                     <scalar:int>259</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>259</scalar:int>
                    </attribute:endLine>
                    <subNode:name>
                     <scalar:string>this</scalar:string>
                    </subNode:name>
                   </node:Expr_Variable>
                  </subNode:var>
                  <subNode:name>
                   <scalar:string>getFlags</scalar:string>
                  </subNode:name>
                  <subNode:args>
                   <scalar:array/>
                  </subNode:args>
                 </node:Expr_MethodCall>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
               <node:Arg>
                <attribute:startLine>
                 <scalar:int>259</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>259</scalar:int>
                </attribute:endLine>
                <subNode:value>
                 <node:Scalar_String>
                  <attribute:startLine>
                   <scalar:int>259</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>259</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <scalar:string>t</scalar:string>
                  </subNode:value>
                 </node:Scalar_String>
                </subNode:value>
                <subNode:byRef>
                 <scalar:false/>
                </subNode:byRef>
               </node:Arg>
              </scalar:array>
             </subNode:args>
            </node:Expr_FuncCall>
           </subNode:left>
           <subNode:right>
            <node:Expr_ConstFetch>
             <attribute:startLine>
              <scalar:int>259</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>259</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <node:Name>
               <attribute:startLine>
                <scalar:int>259</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>259</scalar:int>
               </attribute:endLine>
               <subNode:parts>
                <scalar:array>
                 <scalar:string>false</scalar:string>
                </scalar:array>
               </subNode:parts>
              </node:Name>
             </subNode:name>
            </node:Expr_ConstFetch>
           </subNode:right>
          </node:Expr_NotIdentical>
         </subNode:cond>
        </node:Stmt_If>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>write</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="271">/**
   * Try to start the connection
   * @throws Swift_ConnectionException Upon failure to start
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>275</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>309</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>277</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>277</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>277</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>277</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>log</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_StaticCall>
           <attribute:startLine>
            <scalar:int>277</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>277</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>277</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>277</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Swift_LogContainer</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
           <subNode:name>
            <scalar:string>getLog</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_StaticCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>278</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>281</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_MethodCall>
            <attribute:startLine>
             <scalar:int>280</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>280</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>280</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>280</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>log</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:name>
             <scalar:string>add</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>280</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>280</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>280</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>280</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>Trying to start a sendmail process.</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_MethodCall>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>278</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>278</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>278</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>278</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>log</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>hasLevel</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>278</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>278</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_ClassConstFetch>
                <attribute:startLine>
                 <scalar:int>278</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>278</scalar:int>
                </attribute:endLine>
                <subNode:class>
                 <node:Name_FullyQualified>
                  <attribute:startLine>
                   <scalar:int>278</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>278</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>Swift_Log</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name_FullyQualified>
                </subNode:class>
                <subNode:name>
                 <scalar:string>LOG_EVERYTHING</scalar:string>
                </subNode:name>
               </node:Expr_ClassConstFetch>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>282</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>285</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Throw>
            <attribute:startLine>
             <scalar:int>284</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>284</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_New>
              <attribute:startLine>
               <scalar:int>284</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>284</scalar:int>
              </attribute:endLine>
              <subNode:class>
               <node:Name_FullyQualified>
                <attribute:startLine>
                 <scalar:int>284</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>284</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>Swift_ConnectionException</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name_FullyQualified>
              </subNode:class>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>284</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>284</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>284</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>284</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>Sendmail cannot be started without a path to the binary including flags.</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_New>
            </subNode:expr>
           </node:Stmt_Throw>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanOr>
           <attribute:startLine>
            <scalar:int>282</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>282</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_BooleanNot>
             <attribute:startLine>
              <scalar:int>282</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>282</scalar:int>
             </attribute:endLine>
             <subNode:expr>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>282</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>282</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>282</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>282</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>this</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>getPath</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array/>
               </subNode:args>
              </node:Expr_MethodCall>
             </subNode:expr>
            </node:Expr_BooleanNot>
           </subNode:left>
           <subNode:right>
            <node:Expr_BooleanNot>
             <attribute:startLine>
              <scalar:int>282</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>282</scalar:int>
             </attribute:endLine>
             <subNode:expr>
              <node:Expr_MethodCall>
               <attribute:startLine>
                <scalar:int>282</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>282</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>282</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>282</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>this</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>getFlags</scalar:string>
               </subNode:name>
               <subNode:args>
                <scalar:array/>
               </subNode:args>
              </node:Expr_MethodCall>
             </subNode:expr>
            </node:Expr_BooleanNot>
           </subNode:right>
          </node:Expr_BooleanOr>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>286</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>289</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_MethodCall>
            <attribute:startLine>
             <scalar:int>288</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>288</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>288</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>288</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>log</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:name>
             <scalar:string>add</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>288</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>288</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_Concat>
                 <attribute:startLine>
                  <scalar:int>288</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>288</scalar:int>
                 </attribute:endLine>
                 <subNode:left>
                  <node:Expr_Concat>
                   <attribute:startLine>
                    <scalar:int>288</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>288</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>288</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>288</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>Trying to stat the executable '</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:left>
                   <subNode:right>
                    <node:Expr_MethodCall>
                     <attribute:startLine>
                      <scalar:int>288</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>288</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>288</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>288</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>this</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>getPath</scalar:string>
                     </subNode:name>
                     <subNode:args>
                      <scalar:array/>
                     </subNode:args>
                    </node:Expr_MethodCall>
                   </subNode:right>
                  </node:Expr_Concat>
                 </subNode:left>
                 <subNode:right>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>288</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>288</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>'.</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:right>
                </node:Expr_Concat>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_MethodCall>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>286</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>286</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>286</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>286</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>log</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>hasLevel</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>286</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>286</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_ClassConstFetch>
                <attribute:startLine>
                 <scalar:int>286</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>286</scalar:int>
                </attribute:endLine>
                <subNode:class>
                 <node:Name_FullyQualified>
                  <attribute:startLine>
                   <scalar:int>286</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>286</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>Swift_Log</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name_FullyQualified>
                </subNode:class>
                <subNode:name>
                 <scalar:string>LOG_EVERYTHING</scalar:string>
                </subNode:name>
               </node:Expr_ClassConstFetch>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>290</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>294</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Throw>
            <attribute:startLine>
             <scalar:int>292</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>293</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_New>
              <attribute:startLine>
               <scalar:int>292</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>293</scalar:int>
              </attribute:endLine>
              <subNode:class>
               <node:Name_FullyQualified>
                <attribute:startLine>
                 <scalar:int>292</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>292</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>Swift_ConnectionException</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name_FullyQualified>
              </subNode:class>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>293</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>293</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Concat>
                   <attribute:startLine>
                    <scalar:int>293</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>293</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Expr_Concat>
                     <attribute:startLine>
                      <scalar:int>293</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>293</scalar:int>
                     </attribute:endLine>
                     <subNode:left>
                      <node:Scalar_String>
                       <attribute:startLine>
                        <scalar:int>293</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>293</scalar:int>
                       </attribute:endLine>
                       <subNode:value>
                        <scalar:string>Sendmail cannot be seen with lstat().  The command given [</scalar:string>
                       </subNode:value>
                      </node:Scalar_String>
                     </subNode:left>
                     <subNode:right>
                      <node:Expr_MethodCall>
                       <attribute:startLine>
                        <scalar:int>293</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>293</scalar:int>
                       </attribute:endLine>
                       <subNode:var>
                        <node:Expr_Variable>
                         <attribute:startLine>
                          <scalar:int>293</scalar:int>
                         </attribute:startLine>
                         <attribute:endLine>
                          <scalar:int>293</scalar:int>
                         </attribute:endLine>
                         <subNode:name>
                          <scalar:string>this</scalar:string>
                         </subNode:name>
                        </node:Expr_Variable>
                       </subNode:var>
                       <subNode:name>
                        <scalar:string>getCommand</scalar:string>
                       </subNode:name>
                       <subNode:args>
                        <scalar:array/>
                       </subNode:args>
                      </node:Expr_MethodCall>
                     </subNode:right>
                    </node:Expr_Concat>
                   </subNode:left>
                   <subNode:right>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>293</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>293</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>] does not appear to be valid.</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:right>
                  </node:Expr_Concat>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_New>
            </subNode:expr>
           </node:Stmt_Throw>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>290</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>290</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_ErrorSuppress>
             <attribute:startLine>
              <scalar:int>290</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>290</scalar:int>
             </attribute:endLine>
             <subNode:expr>
              <node:Expr_FuncCall>
               <attribute:startLine>
                <scalar:int>290</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>290</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>290</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>290</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>lstat</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>290</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>290</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_MethodCall>
                    <attribute:startLine>
                     <scalar:int>290</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>290</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_Variable>
                      <attribute:startLine>
                       <scalar:int>290</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>290</scalar:int>
                      </attribute:endLine>
                      <subNode:name>
                       <scalar:string>this</scalar:string>
                      </subNode:name>
                     </node:Expr_Variable>
                    </subNode:var>
                    <subNode:name>
                     <scalar:string>getPath</scalar:string>
                    </subNode:name>
                    <subNode:args>
                     <scalar:array/>
                    </subNode:args>
                   </node:Expr_MethodCall>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_FuncCall>
             </subNode:expr>
            </node:Expr_ErrorSuppress>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>296</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>300</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>296</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>296</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>pipes_spec</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_Array>
           <attribute:startLine>
            <scalar:int>296</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>300</scalar:int>
           </attribute:endLine>
           <subNode:items>
            <scalar:array>
             <node:Expr_ArrayItem>
              <attribute:startLine>
               <scalar:int>297</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>297</scalar:int>
              </attribute:endLine>
              <subNode:key>
               <scalar:null/>
              </subNode:key>
              <subNode:value>
               <node:Expr_Array>
                <attribute:startLine>
                 <scalar:int>297</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>297</scalar:int>
                </attribute:endLine>
                <subNode:items>
                 <scalar:array>
                  <node:Expr_ArrayItem>
                   <attribute:startLine>
                    <scalar:int>297</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>297</scalar:int>
                   </attribute:endLine>
                   <subNode:key>
                    <scalar:null/>
                   </subNode:key>
                   <subNode:value>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>297</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>297</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>pipe</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Expr_ArrayItem>
                  <node:Expr_ArrayItem>
                   <attribute:startLine>
                    <scalar:int>297</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>297</scalar:int>
                   </attribute:endLine>
                   <subNode:key>
                    <scalar:null/>
                   </subNode:key>
                   <subNode:value>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>297</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>297</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>r</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Expr_ArrayItem>
                 </scalar:array>
                </subNode:items>
               </node:Expr_Array>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Expr_ArrayItem>
             <node:Expr_ArrayItem>
              <attribute:startLine>
               <scalar:int>298</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>298</scalar:int>
              </attribute:endLine>
              <subNode:key>
               <scalar:null/>
              </subNode:key>
              <subNode:value>
               <node:Expr_Array>
                <attribute:startLine>
                 <scalar:int>298</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>298</scalar:int>
                </attribute:endLine>
                <subNode:items>
                 <scalar:array>
                  <node:Expr_ArrayItem>
                   <attribute:startLine>
                    <scalar:int>298</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>298</scalar:int>
                   </attribute:endLine>
                   <subNode:key>
                    <scalar:null/>
                   </subNode:key>
                   <subNode:value>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>298</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>298</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>pipe</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Expr_ArrayItem>
                  <node:Expr_ArrayItem>
                   <attribute:startLine>
                    <scalar:int>298</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>298</scalar:int>
                   </attribute:endLine>
                   <subNode:key>
                    <scalar:null/>
                   </subNode:key>
                   <subNode:value>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>298</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>298</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>w</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Expr_ArrayItem>
                 </scalar:array>
                </subNode:items>
               </node:Expr_Array>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Expr_ArrayItem>
             <node:Expr_ArrayItem>
              <attribute:startLine>
               <scalar:int>299</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>299</scalar:int>
              </attribute:endLine>
              <subNode:key>
               <scalar:null/>
              </subNode:key>
              <subNode:value>
               <node:Expr_Array>
                <attribute:startLine>
                 <scalar:int>299</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>299</scalar:int>
                </attribute:endLine>
                <subNode:items>
                 <scalar:array>
                  <node:Expr_ArrayItem>
                   <attribute:startLine>
                    <scalar:int>299</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>299</scalar:int>
                   </attribute:endLine>
                   <subNode:key>
                    <scalar:null/>
                   </subNode:key>
                   <subNode:value>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>299</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>299</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>pipe</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Expr_ArrayItem>
                  <node:Expr_ArrayItem>
                   <attribute:startLine>
                    <scalar:int>299</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>299</scalar:int>
                   </attribute:endLine>
                   <subNode:key>
                    <scalar:null/>
                   </subNode:key>
                   <subNode:value>
                    <node:Scalar_String>
                     <attribute:startLine>
                      <scalar:int>299</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>299</scalar:int>
                     </attribute:endLine>
                     <subNode:value>
                      <scalar:string>w</scalar:string>
                     </subNode:value>
                    </node:Scalar_String>
                   </subNode:value>
                   <subNode:byRef>
                    <scalar:false/>
                   </subNode:byRef>
                  </node:Expr_ArrayItem>
                 </scalar:array>
                </subNode:items>
               </node:Expr_Array>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Expr_ArrayItem>
            </scalar:array>
           </subNode:items>
          </node:Expr_Array>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>302</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>302</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>302</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>302</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>302</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>302</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>proc</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:var>
         <subNode:expr>
          <node:Expr_FuncCall>
           <attribute:startLine>
            <scalar:int>302</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>302</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <node:Name>
             <attribute:startLine>
              <scalar:int>302</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>302</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>proc_open</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>302</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>302</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_MethodCall>
                <attribute:startLine>
                 <scalar:int>302</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>302</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>302</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>302</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>getCommand</scalar:string>
                </subNode:name>
                <subNode:args>
                 <scalar:array/>
                </subNode:args>
               </node:Expr_MethodCall>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>302</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>302</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>302</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>302</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>pipes_spec</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>302</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>302</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_PropertyFetch>
                <attribute:startLine>
                 <scalar:int>302</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>302</scalar:int>
                </attribute:endLine>
                <subNode:var>
                 <node:Expr_Variable>
                  <attribute:startLine>
                   <scalar:int>302</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>302</scalar:int>
                  </attribute:endLine>
                  <subNode:name>
                   <scalar:string>this</scalar:string>
                  </subNode:name>
                 </node:Expr_Variable>
                </subNode:var>
                <subNode:name>
                 <scalar:string>pipes</scalar:string>
                </subNode:name>
               </node:Expr_PropertyFetch>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_FuncCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>304</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>308</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Stmt_Throw>
            <attribute:startLine>
             <scalar:int>306</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>307</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_New>
              <attribute:startLine>
               <scalar:int>306</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>307</scalar:int>
              </attribute:endLine>
              <subNode:class>
               <node:Name_FullyQualified>
                <attribute:startLine>
                 <scalar:int>306</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>306</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>Swift_ConnectionException</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name_FullyQualified>
              </subNode:class>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>307</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>307</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Scalar_String>
                   <attribute:startLine>
                    <scalar:int>307</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>307</scalar:int>
                   </attribute:endLine>
                   <subNode:value>
                    <scalar:string>The sendmail process failed to start.  Please verify that the path exists and PHP has permission to execute it.</scalar:string>
                   </subNode:value>
                  </node:Scalar_String>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_New>
            </subNode:expr>
           </node:Stmt_Throw>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_BooleanNot>
           <attribute:startLine>
            <scalar:int>304</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>304</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_MethodCall>
             <attribute:startLine>
              <scalar:int>304</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>304</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>304</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>304</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>isAlive</scalar:string>
             </subNode:name>
             <subNode:args>
              <scalar:array/>
             </subNode:args>
            </node:Expr_MethodCall>
           </subNode:expr>
          </node:Expr_BooleanNot>
         </subNode:cond>
        </node:Stmt_If>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>start</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="310">/**
   * Try to close the connection
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>313</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>331</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_Assign>
         <attribute:startLine>
          <scalar:int>315</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>315</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>315</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>315</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>log</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:expr>
          <node:Expr_StaticCall>
           <attribute:startLine>
            <scalar:int>315</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>315</scalar:int>
           </attribute:endLine>
           <subNode:class>
            <node:Name_FullyQualified>
             <attribute:startLine>
              <scalar:int>315</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>315</scalar:int>
             </attribute:endLine>
             <subNode:parts>
              <scalar:array>
               <scalar:string>Swift_LogContainer</scalar:string>
              </scalar:array>
             </subNode:parts>
            </node:Name_FullyQualified>
           </subNode:class>
           <subNode:name>
            <scalar:string>getLog</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array/>
           </subNode:args>
          </node:Expr_StaticCall>
         </subNode:expr>
        </node:Expr_Assign>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>316</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>319</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_MethodCall>
            <attribute:startLine>
             <scalar:int>318</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>318</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_Variable>
              <attribute:startLine>
               <scalar:int>318</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>318</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <scalar:string>log</scalar:string>
              </subNode:name>
             </node:Expr_Variable>
            </subNode:var>
            <subNode:name>
             <scalar:string>add</scalar:string>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>318</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>318</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Scalar_String>
                 <attribute:startLine>
                  <scalar:int>318</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>318</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <scalar:string>Terminating sendmail process.</scalar:string>
                 </subNode:value>
                </node:Scalar_String>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_MethodCall>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_MethodCall>
           <attribute:startLine>
            <scalar:int>316</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>316</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>316</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>316</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>log</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>hasLevel</scalar:string>
           </subNode:name>
           <subNode:args>
            <scalar:array>
             <node:Arg>
              <attribute:startLine>
               <scalar:int>316</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>316</scalar:int>
              </attribute:endLine>
              <subNode:value>
               <node:Expr_ClassConstFetch>
                <attribute:startLine>
                 <scalar:int>316</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>316</scalar:int>
                </attribute:endLine>
                <subNode:class>
                 <node:Name_FullyQualified>
                  <attribute:startLine>
                   <scalar:int>316</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>316</scalar:int>
                  </attribute:endLine>
                  <subNode:parts>
                   <scalar:array>
                    <scalar:string>Swift_Log</scalar:string>
                   </scalar:array>
                  </subNode:parts>
                 </node:Name_FullyQualified>
                </subNode:class>
                <subNode:name>
                 <scalar:string>LOG_EVERYTHING</scalar:string>
                </subNode:name>
               </node:Expr_ClassConstFetch>
              </subNode:value>
              <subNode:byRef>
               <scalar:false/>
              </subNode:byRef>
             </node:Arg>
            </scalar:array>
           </subNode:args>
          </node:Expr_MethodCall>
         </subNode:cond>
        </node:Stmt_If>
        <node:Stmt_Foreach>
         <attribute:startLine>
          <scalar:int>320</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>323</scalar:int>
         </attribute:endLine>
         <subNode:keyVar>
          <scalar:null/>
         </subNode:keyVar>
         <subNode:byRef>
          <scalar:false/>
         </subNode:byRef>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_ErrorSuppress>
            <attribute:startLine>
             <scalar:int>322</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>322</scalar:int>
            </attribute:endLine>
            <subNode:expr>
             <node:Expr_FuncCall>
              <attribute:startLine>
               <scalar:int>322</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>322</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>322</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>322</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>fclose</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
              <subNode:args>
               <scalar:array>
                <node:Arg>
                 <attribute:startLine>
                  <scalar:int>322</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>322</scalar:int>
                 </attribute:endLine>
                 <subNode:value>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>322</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>322</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>pipe</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:value>
                 <subNode:byRef>
                  <scalar:false/>
                 </subNode:byRef>
                </node:Arg>
               </scalar:array>
              </subNode:args>
             </node:Expr_FuncCall>
            </subNode:expr>
           </node:Expr_ErrorSuppress>
          </scalar:array>
         </subNode:stmts>
         <subNode:expr>
          <node:Expr_Cast_Array>
           <attribute:startLine>
            <scalar:int>320</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>320</scalar:int>
           </attribute:endLine>
           <subNode:expr>
            <node:Expr_PropertyFetch>
             <attribute:startLine>
              <scalar:int>320</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>320</scalar:int>
             </attribute:endLine>
             <subNode:var>
              <node:Expr_Variable>
               <attribute:startLine>
                <scalar:int>320</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>320</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <scalar:string>this</scalar:string>
               </subNode:name>
              </node:Expr_Variable>
             </subNode:var>
             <subNode:name>
              <scalar:string>pipes</scalar:string>
             </subNode:name>
            </node:Expr_PropertyFetch>
           </subNode:expr>
          </node:Expr_Cast_Array>
         </subNode:expr>
         <subNode:valueVar>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>320</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>320</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>pipe</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:valueVar>
        </node:Stmt_Foreach>
        <node:Stmt_If>
         <attribute:startLine>
          <scalar:int>325</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>330</scalar:int>
         </attribute:endLine>
         <subNode:stmts>
          <scalar:array>
           <node:Expr_FuncCall>
            <attribute:startLine>
             <scalar:int>327</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>327</scalar:int>
            </attribute:endLine>
            <subNode:name>
             <node:Name>
              <attribute:startLine>
               <scalar:int>327</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>327</scalar:int>
              </attribute:endLine>
              <subNode:parts>
               <scalar:array>
                <scalar:string>proc_close</scalar:string>
               </scalar:array>
              </subNode:parts>
             </node:Name>
            </subNode:name>
            <subNode:args>
             <scalar:array>
              <node:Arg>
               <attribute:startLine>
                <scalar:int>327</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>327</scalar:int>
               </attribute:endLine>
               <subNode:value>
                <node:Expr_PropertyFetch>
                 <attribute:startLine>
                  <scalar:int>327</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>327</scalar:int>
                 </attribute:endLine>
                 <subNode:var>
                  <node:Expr_Variable>
                   <attribute:startLine>
                    <scalar:int>327</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>327</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <scalar:string>this</scalar:string>
                   </subNode:name>
                  </node:Expr_Variable>
                 </subNode:var>
                 <subNode:name>
                  <scalar:string>proc</scalar:string>
                 </subNode:name>
                </node:Expr_PropertyFetch>
               </subNode:value>
               <subNode:byRef>
                <scalar:false/>
               </subNode:byRef>
              </node:Arg>
             </scalar:array>
            </subNode:args>
           </node:Expr_FuncCall>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>328</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>328</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>328</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>328</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>328</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>328</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>pipes</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:var>
            <subNode:expr>
             <node:Expr_ConstFetch>
              <attribute:startLine>
               <scalar:int>328</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>328</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>328</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>328</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>null</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
             </node:Expr_ConstFetch>
            </subNode:expr>
           </node:Expr_Assign>
           <node:Expr_Assign>
            <attribute:startLine>
             <scalar:int>329</scalar:int>
            </attribute:startLine>
            <attribute:endLine>
             <scalar:int>329</scalar:int>
            </attribute:endLine>
            <subNode:var>
             <node:Expr_PropertyFetch>
              <attribute:startLine>
               <scalar:int>329</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>329</scalar:int>
              </attribute:endLine>
              <subNode:var>
               <node:Expr_Variable>
                <attribute:startLine>
                 <scalar:int>329</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>329</scalar:int>
                </attribute:endLine>
                <subNode:name>
                 <scalar:string>this</scalar:string>
                </subNode:name>
               </node:Expr_Variable>
              </subNode:var>
              <subNode:name>
               <scalar:string>proc</scalar:string>
              </subNode:name>
             </node:Expr_PropertyFetch>
            </subNode:var>
            <subNode:expr>
             <node:Expr_ConstFetch>
              <attribute:startLine>
               <scalar:int>329</scalar:int>
              </attribute:startLine>
              <attribute:endLine>
               <scalar:int>329</scalar:int>
              </attribute:endLine>
              <subNode:name>
               <node:Name>
                <attribute:startLine>
                 <scalar:int>329</scalar:int>
                </attribute:startLine>
                <attribute:endLine>
                 <scalar:int>329</scalar:int>
                </attribute:endLine>
                <subNode:parts>
                 <scalar:array>
                  <scalar:string>null</scalar:string>
                 </scalar:array>
                </subNode:parts>
               </node:Name>
              </subNode:name>
             </node:Expr_ConstFetch>
            </subNode:expr>
           </node:Expr_Assign>
          </scalar:array>
         </subNode:stmts>
         <subNode:elseifs>
          <scalar:array/>
         </subNode:elseifs>
         <subNode:else>
          <scalar:null/>
         </subNode:else>
         <subNode:cond>
          <node:Expr_PropertyFetch>
           <attribute:startLine>
            <scalar:int>325</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>325</scalar:int>
           </attribute:endLine>
           <subNode:var>
            <node:Expr_Variable>
             <attribute:startLine>
              <scalar:int>325</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>325</scalar:int>
             </attribute:endLine>
             <subNode:name>
              <scalar:string>this</scalar:string>
             </subNode:name>
            </node:Expr_Variable>
           </subNode:var>
           <subNode:name>
            <scalar:string>proc</scalar:string>
           </subNode:name>
          </node:Expr_PropertyFetch>
         </subNode:cond>
        </node:Stmt_If>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>stop</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="332">/**
   * Check if the process is still alive
   * @return boolean
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>336</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>343</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Stmt_Return>
         <attribute:startLine>
          <scalar:int>338</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>342</scalar:int>
         </attribute:endLine>
         <subNode:expr>
          <node:Expr_BooleanAnd>
           <attribute:startLine>
            <scalar:int>338</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>342</scalar:int>
           </attribute:endLine>
           <subNode:left>
            <node:Expr_BooleanAnd>
             <attribute:startLine>
              <scalar:int>338</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>341</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_BooleanAnd>
               <attribute:startLine>
                <scalar:int>338</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>340</scalar:int>
               </attribute:endLine>
               <subNode:left>
                <node:Expr_BooleanAnd>
                 <attribute:startLine>
                  <scalar:int>338</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>339</scalar:int>
                 </attribute:endLine>
                 <subNode:left>
                  <node:Expr_NotIdentical>
                   <attribute:startLine>
                    <scalar:int>338</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>338</scalar:int>
                   </attribute:endLine>
                   <subNode:left>
                    <node:Expr_PropertyFetch>
                     <attribute:startLine>
                      <scalar:int>338</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>338</scalar:int>
                     </attribute:endLine>
                     <subNode:var>
                      <node:Expr_Variable>
                       <attribute:startLine>
                        <scalar:int>338</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>338</scalar:int>
                       </attribute:endLine>
                       <subNode:name>
                        <scalar:string>this</scalar:string>
                       </subNode:name>
                      </node:Expr_Variable>
                     </subNode:var>
                     <subNode:name>
                      <scalar:string>proc</scalar:string>
                     </subNode:name>
                    </node:Expr_PropertyFetch>
                   </subNode:left>
                   <subNode:right>
                    <node:Expr_ConstFetch>
                     <attribute:startLine>
                      <scalar:int>338</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>338</scalar:int>
                     </attribute:endLine>
                     <subNode:name>
                      <node:Name>
                       <attribute:startLine>
                        <scalar:int>338</scalar:int>
                       </attribute:startLine>
                       <attribute:endLine>
                        <scalar:int>338</scalar:int>
                       </attribute:endLine>
                       <subNode:parts>
                        <scalar:array>
                         <scalar:string>false</scalar:string>
                        </scalar:array>
                       </subNode:parts>
                      </node:Name>
                     </subNode:name>
                    </node:Expr_ConstFetch>
                   </subNode:right>
                  </node:Expr_NotIdentical>
                 </subNode:left>
                 <subNode:right>
                  <node:Expr_FuncCall>
                   <attribute:startLine>
                    <scalar:int>339</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>339</scalar:int>
                   </attribute:endLine>
                   <subNode:name>
                    <node:Name>
                     <attribute:startLine>
                      <scalar:int>339</scalar:int>
                     </attribute:startLine>
                     <attribute:endLine>
                      <scalar:int>339</scalar:int>
                     </attribute:endLine>
                     <subNode:parts>
                      <scalar:array>
                       <scalar:string>is_resource</scalar:string>
                      </scalar:array>
                     </subNode:parts>
                    </node:Name>
                   </subNode:name>
                   <subNode:args>
                    <scalar:array>
                     <node:Arg>
                      <attribute:startLine>
                       <scalar:int>339</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>339</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <node:Expr_PropertyFetch>
                        <attribute:startLine>
                         <scalar:int>339</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>339</scalar:int>
                        </attribute:endLine>
                        <subNode:var>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>339</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>339</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>this</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:var>
                        <subNode:name>
                         <scalar:string>proc</scalar:string>
                        </subNode:name>
                       </node:Expr_PropertyFetch>
                      </subNode:value>
                      <subNode:byRef>
                       <scalar:false/>
                      </subNode:byRef>
                     </node:Arg>
                    </scalar:array>
                   </subNode:args>
                  </node:Expr_FuncCall>
                 </subNode:right>
                </node:Expr_BooleanAnd>
               </subNode:left>
               <subNode:right>
                <node:Expr_FuncCall>
                 <attribute:startLine>
                  <scalar:int>340</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>340</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <node:Name>
                   <attribute:startLine>
                    <scalar:int>340</scalar:int>
                   </attribute:startLine>
                   <attribute:endLine>
                    <scalar:int>340</scalar:int>
                   </attribute:endLine>
                   <subNode:parts>
                    <scalar:array>
                     <scalar:string>is_resource</scalar:string>
                    </scalar:array>
                   </subNode:parts>
                  </node:Name>
                 </subNode:name>
                 <subNode:args>
                  <scalar:array>
                   <node:Arg>
                    <attribute:startLine>
                     <scalar:int>340</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>340</scalar:int>
                    </attribute:endLine>
                    <subNode:value>
                     <node:Expr_ArrayDimFetch>
                      <attribute:startLine>
                       <scalar:int>340</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>340</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_PropertyFetch>
                        <attribute:startLine>
                         <scalar:int>340</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>340</scalar:int>
                        </attribute:endLine>
                        <subNode:var>
                         <node:Expr_Variable>
                          <attribute:startLine>
                           <scalar:int>340</scalar:int>
                          </attribute:startLine>
                          <attribute:endLine>
                           <scalar:int>340</scalar:int>
                          </attribute:endLine>
                          <subNode:name>
                           <scalar:string>this</scalar:string>
                          </subNode:name>
                         </node:Expr_Variable>
                        </subNode:var>
                        <subNode:name>
                         <scalar:string>pipes</scalar:string>
                        </subNode:name>
                       </node:Expr_PropertyFetch>
                      </subNode:var>
                      <subNode:dim>
                       <node:Scalar_LNumber>
                        <attribute:startLine>
                         <scalar:int>340</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>340</scalar:int>
                        </attribute:endLine>
                        <subNode:value>
                         <scalar:int>0</scalar:int>
                        </subNode:value>
                       </node:Scalar_LNumber>
                      </subNode:dim>
                     </node:Expr_ArrayDimFetch>
                    </subNode:value>
                    <subNode:byRef>
                     <scalar:false/>
                    </subNode:byRef>
                   </node:Arg>
                  </scalar:array>
                 </subNode:args>
                </node:Expr_FuncCall>
               </subNode:right>
              </node:Expr_BooleanAnd>
             </subNode:left>
             <subNode:right>
              <node:Expr_FuncCall>
               <attribute:startLine>
                <scalar:int>341</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>341</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>341</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>341</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>is_resource</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
               <subNode:args>
                <scalar:array>
                 <node:Arg>
                  <attribute:startLine>
                   <scalar:int>341</scalar:int>
                  </attribute:startLine>
                  <attribute:endLine>
                   <scalar:int>341</scalar:int>
                  </attribute:endLine>
                  <subNode:value>
                   <node:Expr_ArrayDimFetch>
                    <attribute:startLine>
                     <scalar:int>341</scalar:int>
                    </attribute:startLine>
                    <attribute:endLine>
                     <scalar:int>341</scalar:int>
                    </attribute:endLine>
                    <subNode:var>
                     <node:Expr_PropertyFetch>
                      <attribute:startLine>
                       <scalar:int>341</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>341</scalar:int>
                      </attribute:endLine>
                      <subNode:var>
                       <node:Expr_Variable>
                        <attribute:startLine>
                         <scalar:int>341</scalar:int>
                        </attribute:startLine>
                        <attribute:endLine>
                         <scalar:int>341</scalar:int>
                        </attribute:endLine>
                        <subNode:name>
                         <scalar:string>this</scalar:string>
                        </subNode:name>
                       </node:Expr_Variable>
                      </subNode:var>
                      <subNode:name>
                       <scalar:string>pipes</scalar:string>
                      </subNode:name>
                     </node:Expr_PropertyFetch>
                    </subNode:var>
                    <subNode:dim>
                     <node:Scalar_LNumber>
                      <attribute:startLine>
                       <scalar:int>341</scalar:int>
                      </attribute:startLine>
                      <attribute:endLine>
                       <scalar:int>341</scalar:int>
                      </attribute:endLine>
                      <subNode:value>
                       <scalar:int>1</scalar:int>
                      </subNode:value>
                     </node:Scalar_LNumber>
                    </subNode:dim>
                   </node:Expr_ArrayDimFetch>
                  </subNode:value>
                  <subNode:byRef>
                   <scalar:false/>
                  </subNode:byRef>
                 </node:Arg>
                </scalar:array>
               </subNode:args>
              </node:Expr_FuncCall>
             </subNode:right>
            </node:Expr_BooleanAnd>
           </subNode:left>
           <subNode:right>
            <node:Expr_NotIdentical>
             <attribute:startLine>
              <scalar:int>342</scalar:int>
             </attribute:startLine>
             <attribute:endLine>
              <scalar:int>342</scalar:int>
             </attribute:endLine>
             <subNode:left>
              <node:Expr_PropertyFetch>
               <attribute:startLine>
                <scalar:int>342</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>342</scalar:int>
               </attribute:endLine>
               <subNode:var>
                <node:Expr_Variable>
                 <attribute:startLine>
                  <scalar:int>342</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>342</scalar:int>
                 </attribute:endLine>
                 <subNode:name>
                  <scalar:string>this</scalar:string>
                 </subNode:name>
                </node:Expr_Variable>
               </subNode:var>
               <subNode:name>
                <scalar:string>proc</scalar:string>
               </subNode:name>
              </node:Expr_PropertyFetch>
             </subNode:left>
             <subNode:right>
              <node:Expr_ConstFetch>
               <attribute:startLine>
                <scalar:int>342</scalar:int>
               </attribute:startLine>
               <attribute:endLine>
                <scalar:int>342</scalar:int>
               </attribute:endLine>
               <subNode:name>
                <node:Name>
                 <attribute:startLine>
                  <scalar:int>342</scalar:int>
                 </attribute:startLine>
                 <attribute:endLine>
                  <scalar:int>342</scalar:int>
                 </attribute:endLine>
                 <subNode:parts>
                  <scalar:array>
                   <scalar:string>null</scalar:string>
                  </scalar:array>
                 </subNode:parts>
                </node:Name>
               </subNode:name>
              </node:Expr_ConstFetch>
             </subNode:right>
            </node:Expr_NotIdentical>
           </subNode:right>
          </node:Expr_BooleanAnd>
         </subNode:expr>
        </node:Stmt_Return>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>isAlive</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
     <node:Stmt_ClassMethod>
      <attribute:comments>
       <scalar:array>
        <comment isDocComment="true" line="344">/**
   * Destructor.
   * Cleans up by stopping any running processes.
   */</comment>
       </scalar:array>
      </attribute:comments>
      <attribute:startLine>
       <scalar:int>348</scalar:int>
      </attribute:startLine>
      <attribute:endLine>
       <scalar:int>351</scalar:int>
      </attribute:endLine>
      <subNode:type>
       <scalar:int>1</scalar:int>
      </subNode:type>
      <subNode:byRef>
       <scalar:false/>
      </subNode:byRef>
      <subNode:params>
       <scalar:array/>
      </subNode:params>
      <subNode:stmts>
       <scalar:array>
        <node:Expr_MethodCall>
         <attribute:startLine>
          <scalar:int>350</scalar:int>
         </attribute:startLine>
         <attribute:endLine>
          <scalar:int>350</scalar:int>
         </attribute:endLine>
         <subNode:var>
          <node:Expr_Variable>
           <attribute:startLine>
            <scalar:int>350</scalar:int>
           </attribute:startLine>
           <attribute:endLine>
            <scalar:int>350</scalar:int>
           </attribute:endLine>
           <subNode:name>
            <scalar:string>this</scalar:string>
           </subNode:name>
          </node:Expr_Variable>
         </subNode:var>
         <subNode:name>
          <scalar:string>stop</scalar:string>
         </subNode:name>
         <subNode:args>
          <scalar:array/>
         </subNode:args>
        </node:Expr_MethodCall>
       </scalar:array>
      </subNode:stmts>
      <subNode:name>
       <scalar:string>__destruct</scalar:string>
      </subNode:name>
     </node:Stmt_ClassMethod>
    </scalar:array>
   </subNode:stmts>
   <subNode:name>
    <scalar:string>Swift_Connection_Sendmail</scalar:string>
   </subNode:name>
   <subNode:namespacedName>
    <node:Name>
     <attribute:comments>
      <scalar:array>
       <comment isDocComment="true" line="14">/**
 * Swift Sendmail Connection
 * @package Swift_Connection
 * @author Chris Corbyn &lt;chris@w3style.co.uk&gt;
 */</comment>
      </scalar:array>
     </attribute:comments>
     <attribute:startLine>
      <scalar:int>19</scalar:int>
     </attribute:startLine>
     <attribute:endLine>
      <scalar:int>352</scalar:int>
     </attribute:endLine>
     <subNode:parts>
      <scalar:array>
       <scalar:string>Swift_Connection_Sendmail</scalar:string>
      </scalar:array>
     </subNode:parts>
    </node:Name>
   </subNode:namespacedName>
  </node:Stmt_Class>
 </scalar:array>
</AST>
